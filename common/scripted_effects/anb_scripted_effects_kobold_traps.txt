unlock_kobold_dragon_cult_for_colour_and_level = {
	set_country_flag = unlocked_$COLOUR$_dragon_$LEVEL$

	tooltip = {
		add_country_modifier = {
			name = $COLOUR$_dragon_$LEVEL$
			desc = UNLOCKED_DRAGON_CULT_TOOLTIP
			duration = -1
		}
	}
	
	if = {
		limit = {
			NOT = {
				has_kobold_cult_for_level = {
					LEVEL = $LEVEL$
				}
			}
		}
		add_church_aspect = $COLOUR$_dragon_$LEVEL$
	}
}

kobold_dragon_cult_conquered_province = {
	if = {
		limit = {
			owner = { has_church_aspect = black_dragon_1 }
			is_city = yes
		}
		if = {
			limit = {
				culture_group = kobold
			}
			owner = { add_church_power = 5 }
		}
		owner = { add_church_power = 3 }
	}
}

kobold_dragon_cult_recruited_leader = {
	if = {
		limit = {
			has_church_aspect = blue_dragon_1
		}
		add_church_power = 15
	}
}

kobold_dragon_cult_won_war = {
	if = {
		limit = {
			has_church_aspect = bronze_dragon_1
		}
		add_church_power = 25
	}
}

kobold_dragon_cult_won_battle = {
	if = {
		limit = {
			has_church_aspect = brown_dragon_1
		}
		add_church_power = 5
	}
}

kobold_dragon_cult_won_siege = {
	if = {
		limit = {
			FROM = { fort_level = 1 }
			has_church_aspect = white_dragon_1
		}
		add_church_power = 10
	}
}

kobold_dragon_cult_exploration = {
	FROM = {
		if = {
			limit = {
				has_church_aspect = green_dragon_1
			}
			add_church_power = 4
		}
	}
}

kobold_dragon_cult_conversion = {
	owner = {
		if = {
			limit = {
				has_church_aspect = brass_dragon_1
			}
			add_church_power = 10
		}
	}
}

upgrade_kobold_hoard = {
	hidden_effect = {
		remove_province_modifier = kobold_hoard_1
		remove_province_modifier = kobold_hoard_2
		remove_province_modifier = kobold_hoard_3
		remove_province_modifier = kobold_hoard_4
		remove_province_modifier = kobold_hoard_5
		remove_province_modifier = kobold_hoard_6
		remove_province_modifier = kobold_hoard_7
		remove_province_modifier = kobold_hoard_8
		remove_province_modifier = kobold_hoard_9
		remove_province_modifier = kobold_hoard_10
		remove_province_modifier = kobold_hoard_11
		if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 256000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_11
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 128000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_10
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 64000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_9
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 32000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_8
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 16000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_7
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 8000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_6
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 4000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_5
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 2000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_4
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 1000 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_3
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 500 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_2
				duration = -1
			}
		}
		else_if = {
			limit = { REB = { check_variable = { dragon_cult_hoard = 0 } } }
			add_permanent_province_modifier = {
				name = kobold_hoard_1
				duration = -1
			}
		}
	}
}

create_kobold_traps = {
	# STEP 1. Apply the right modifier
	if = {
		limit = { has_province_modifier = kobold_traps_lvl_3 }
		remove_province_modifier = kobold_traps_lvl_3
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_4
			duration = -1
		}
		change_culture = ROOT
		change_religion = ROOT
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_2 }
		remove_province_modifier = kobold_traps_lvl_2
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_3
			duration = -1
		}		
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
		if = {
			limit = { NOT = { culture_group = kobold } }
			add_kobold_minority_size_effect = yes
		}
	}
	else_if = {
		limit = { has_province_modifier = kobold_traps_lvl_1 }
		remove_province_modifier = kobold_traps_lvl_1
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_2
			duration = -1
		}		
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
		hidden_effect = { set_province_flag = kobold_traps_lvl_2_or_more } #this is relevant for events
		if = {
			limit = { NOT = { culture_group = kobold } }
			add_kobold_minority_size_effect = yes
		}
	}	
	else = {
		add_permanent_province_modifier = {
			name = kobold_traps_lvl_1
			duration = -1
		}
		add_province_modifier = {
			name = kobold_traps_recent_investment
			duration = 1825
		}
	}
	# STEP 2. Activates the local kobold traps flag, for siege and event purposes
	hidden_effect = { set_province_flag = has_kobold_traps } 
	# STEP 3. Handle building construction
	if = {
		limit = { has_fort_building_trigger = no }
		add_building_construction = {
			building = fort_15th
			cost = 0.5
			speed = 0.5
		}
	}
	# STEP 4. Add extra modifier if relevant
	if = {
		limit = { owner = { has_country_flag = code_cracked_mega_trap } }
		add_permanent_province_modifier = {
			name = crypts_and_cryptographies
			duration = -1
		}
		owner = { clr_country_flag = code_cracked_mega_trap }
	}
}

kobold_trap_mastery_effect = {
	# STEP 1. Change the variable counter
	hidden_effect = {
		change_variable = {
			which = trap_mastery_counter
			value = 1
		}
	}
	# STEP 2. Make sure the right country modifier is set
	if = {
		limit = {
			AND = {
				check_variable = {
					which = trap_mastery_counter
					value = 40
				}
				NOT = { has_country_modifier = trap_mastery_lvl_3 }
			}
		}
		remove_country_modifier = trap_mastery_lvl_2
		add_country_modifier = {
			name = trap_mastery_lvl_3
			duration = -1
		}
	}
	else_if = {
		limit = {
			AND = {
				check_variable = {
					which = trap_mastery_counter
					value = 20
				}
				NOT = { 
					OR = {
						has_country_modifier = trap_mastery_lvl_2 
						has_country_modifier = trap_mastery_lvl_3
					}
				}
			}
		}
		remove_country_modifier = trap_mastery_lvl_1
		add_country_modifier = {
			name = trap_mastery_lvl_2
			duration = -1
		}
	}
	else_if = {
		limit = {
			AND = {
				check_variable = {
					which = trap_mastery_counter
					value = 5
				}
				NOT = { 
					OR = {
						has_country_modifier = trap_mastery_lvl_1 
						has_country_modifier = trap_mastery_lvl_2
						has_country_modifier = trap_mastery_lvl_3
					}
				}
			}
		}
		add_country_modifier = {
			name = trap_mastery_lvl_1
			duration = -1
		}
	}
	# STEP 3. Activates the country kobold traps flag, for event purposes
	hidden_effect = {
		set_country_flag = has_kobold_traps # Activate the kobold traps pulse events, just in case you haven't already
	}
	# STEP 4. Clear flags indicating that the decision is being used
	hidden_effect = {
		if = {
			limit = { has_country_flag = free_traps_happening }
			clr_country_flag = free_traps_happening
		}
		else = {
			clr_country_flag = normal_traps_happening
		}
	}
	custom_tooltip = KoboldTrapsDynamicTooltip
}

change_kobold_culture_based_on_fleeing_province = {
	if = {
		limit = { has_global_flag = kobildzan_flag }
		change_culture = kobildzani_kobold
	}
	else_if = { # Changing province culture based on source province
		limit = { 
			event_target:kobolds_fleeing_province = {
				OR = {
					region = alenic_frontier_region
					province_id = 695
				}
			}
		}
		change_culture = greenscale_kobold
	}
	else_if = {
		limit = { 
			event_target:kobolds_fleeing_province = {
				OR = {
					area = dragonmaw_area
					area = dragonspine_area
					area = dragonheights_area
				}
			}
		}
		change_culture = bluescale_kobold				
	}
	else = {
		change_culture = redscale_kobold
	}	
}