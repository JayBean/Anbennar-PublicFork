#Increase size of a refugee settlement
increase_escanni_refugee_settlement_size = { #Debug function for the system, to add in places flags are added to check if things work properly
	if = {
		limit = { has_province_modifier = escanni_refugee_settlement_small }
		remove_province_modifier = escanni_refugee_settlement_small
		add_permanent_province_modifier = { 
			name = escanni_refugee_settlement_large
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = escanni_refugee_settlement_large }
		remove_province_modifier = escanni_refugee_settlement_large
		add_permanent_province_modifier = { 
			name = escanni_refugee_settlement_massive
				duration = -1
		}
	}
	else = {
		add_permanent_province_modifier = { 
			name = escanni_refugee_settlement_small
			duration = -1
		}
	}
}
decrease_escanni_refugee_settlement_size = {
    if = {
		limit = { has_province_modifier = escanni_refugee_settlement_small }
		remove_province_modifier = escanni_refugee_settlement_small
		hidden_effect = {
			245 = { #Freecestir, where the counting var is located
				change_variable = { #This counts the amounts of refugee centers of any size left on the map
					which = NumberOfRefugeesLeft
					value = -1
				}
			}
		}
	}	
	else_if = {
		limit = { has_province_modifier = escanni_refugee_settlement_large }
		remove_province_modifier = escanni_refugee_settlement_large
		add_permanent_province_modifier = { 
			name = escanni_refugee_settlement_small
			duration = -1
		}
	}	
	else_if = {
		limit = { has_province_modifier = escanni_refugee_settlement_massive }
		remove_province_modifier = escanni_refugee_settlement_massive
		add_permanent_province_modifier = { 
			name = escanni_refugee_settlement_large
			duration = -1
		}
	}
}
escanni_refugee_cleanup = {
	set_global_flag = escanni_migration_finished
	every_country = {
		limit = { has_country_flag = escanni_refugees_arrived }
		clr_country_flag = escanni_robbers_event
		clr_country_flag = escanni_artisans_event
		clr_country_flag = escanni_stories_event
		clr_country_flag = escanni_distinguished_event
		clr_country_flag = escanni_exiled_soldiers_event
		clr_country_flag = escanni_foodsupplies_event
		clr_country_flag = escanni_hedgemages_event
		clr_country_flag = escanni_scholars_event
		clr_country_flag = escanni_sickness_event
		clr_country_flag = escanni_corinite_ideas_event
		clr_country_flag = escanni_refugees_arrived
		clr_country_flag = escann_stands_received
		clr_country_flag = escanni_refugees_left
		clr_country_flag = had_escanni_refugee_policy
		remove_country_modifier = escanni_refugee_integration
		remove_country_modifier = escanni_refugee_tolerance
		remove_country_modifier = escanni_refugee_repatriation
	}
	escanni_refugee_centers = {
		type = all
		remove_province_modifier = escanni_refugee_settlement_massive
		remove_province_modifier = escanni_refugee_settlement_large
		remove_province_modifier = escanni_refugee_settlement_small
	}
}
#Scripted effect to decrease the integration level variable and trigger a level change event if it occurs
decrease_escanni_integration_policy = {
	if = {
		limit = { has_country_modifier = escanni_refugee_tolerance }
		remove_country_modifier = escanni_refugee_tolerance
		add_country_modifier = {
			name = escanni_refugee_repatriation
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = escanni_refugee_integration }
		remove_country_modifier = escanni_refugee_integration
		add_country_modifier = {
			name = escanni_refugee_tolerance
			duration = -1
		}
	}
}
increase_escanni_integration_policy = {
	if = {
		limit = { has_country_modifier = escanni_refugee_tolerance }
		remove_country_modifier = escanni_refugee_tolerance
		add_country_modifier = {
			name = escanni_refugee_integration
			duration = -1
		}
	}
	else_if = {
		limit = { has_country_modifier = escanni_refugee_repatriation }
		remove_country_modifier = escanni_refugee_repatriation
		add_country_modifier = {
			name = escanni_refugee_tolerance
			duration = -1
		}
	}
}
# set_flags_escanni_refugees_1_2_no_immediate = {
# 	europe = {
# 		type = random
# 		amount = 2
# 		limit = {
# 			OR = {
# 				region = inner_castanor_region
# 				region = west_castanor_region
# 				region = south_castanor_region
# 				area = cursewood_area
# 				area = whistlevale_area
# 			}
# 			NOT = {
# 				is_empty = yes
# 				has_province_flag = escanni_migration_target
# 			}
# 			owner = {
# 				OR = {
# 					NOT = { is_migratory_tribe = yes }
# 					num_of_cities = 2
# 				}
# 				NOT = { has_country_modifier = monstrous_nation }
# 			}
# 		}
# 		if = {
# 			limit = { has_saved_event_target = escanni_center_target_1 }
# 			set_province_flag = escanni_migration_target
# 		}
# 	}
# }
set_flags_escanni_refugees_escann_side = {
	every_owned_province = {
		limit = { has_province_flag = escanni_migration_target }
		if = {#flee
			limit = {#check availabity of province in Escann
				ROOT = {
					calc_true_if = {
						escann_proper = {
							type = all
							NOT = {
								is_empty = yes
								has_province_flag = escanni_migration_target
							}
							owner = {
								OR = {
									NOT = { is_migratory_tribe = yes }
									num_of_cities = 2
								}
								NOT = { has_country_modifier = monstrous_nation }
							}
						}
						amount = 2
					}
				}
			}
			escann_proper = {#reflag elsewhere
				type = random
				amount = 1
				limit = {
					NOT = {
						is_empty = yes
						has_province_flag = escanni_migration_target
					}
					owner = {
						NOT = { has_country_modifier = monstrous_nation }
						OR = {
							NOT = { is_migratory_tribe = yes }
							num_of_cities = 2
						}
					}
				}
				if = {
					limit = { NOT = { has_province_flag = escanni_migration_target } }
					set_province_flag = escanni_migration_target
				}
			}
			clr_province_flag = escanni_migration_target
		}
		else = {#force settle and convert
			if = {
				limit = { is_city = yes }
				add_random_development = 1
			}
			else = {
				add_colonysize = 100
			}
			add_province_modifier = {
				name = escanni_refugee_discriminate_escann
				duration = 3650
			}
			if = {
				limit = { NOT = { culture_is_human = yes } }
				add_human_minority_size_effect = yes
			}
			if = { #corinite
				limit = {
					is_religion_enabled = corinite
					NOT = { religion = corinite }
				}
				change_religion = corinite
			}
			else_if = { #RC
				limit = {
					NOT = { is_religion_enabled = corinite }
					NOT = { religion = regent_court }
				}
				change_religion = regent_court
			}
		}
		clr_province_flag = escanni_migration_target
	}
}
#Scripted effect to for refugee events affecting 1 center and flagging 2 provinces in Escann
define_event_targets_escanni_refugees_1_center = {
	random_owned_province = {
		limit = { has_escanni_refugees = yes }
		save_event_target_as = escanni_center_target_1
	}
	event_target:escanni_center_target_1 = {
		random_area_province = {
			limit = { owned_by = ROOT }
			save_event_target_as = escanni_effect_target_1
		}
		random_area_province = {
			limit = {
				has_saved_event_target = escanni_effect_target_1
				owned_by = ROOT
				NOT = { province_id = event_target:escanni_effect_target_1 }
			}
			save_event_target_as = escanni_effect_target_2
		}
	}
	escann_proper = {
		type = random
		amount = 2
		limit = {
			NOT = { #NOR
				is_empty = yes
				has_province_flag = escanni_migration_target
			}
			OR = {
				NOT = { has_saved_event_target = escanni_migration_target_1 }
				NOT = { province_id = event_target:escanni_migration_target_1 }
			}
			OR = {
				NOT = { has_saved_event_target = escanni_migration_target_2 }
				NOT = { province_id = event_target:escanni_migration_target_2 }
			}
			owner = {
				NOT = { has_country_modifier = monstrous_nation }
				OR = {
					NOT = { is_migratory_tribe = yes }
					num_of_cities = 2
				}
			}
		}
		if = {
			limit = {
				NOT = { has_saved_event_target = escanni_migration_target_1 } 
				has_saved_event_target = escanni_center_target_1
			}
			save_event_target_as = escanni_migration_target_1
		}
		else_if = {
			limit = {
				has_saved_event_target = escanni_center_target_1
				NOT = { has_saved_event_target = escanni_migration_target_2 } 
			}
			save_event_target_as = escanni_migration_target_2
		}
		set_province_flag = escanni_migration_target
	}
}
define_event_targets_escanni_refugees_2_center = {
	random_owned_province = {
		limit = { has_escanni_refugees = yes }
		save_event_target_as = escanni_center_target_1
	}
	if = {
		limit = { has_saved_event_target = escanni_center_target_1 }
		event_target:escanni_center_target_1 = {
			random_area_province = {
				limit = {
					owned_by = ROOT
				}
				save_event_target_as = escanni_effect_target_1
			}
			random_area_province = {
				limit = {
					owned_by = ROOT
					NOT = { province_id = event_target:escanni_effect_target_1 }
				}
				save_event_target_as = escanni_effect_target_2
			}
		}
	}
	random_owned_province = {
		limit = {
			has_escanni_refugees = yes
			NOT = { province_id = event_target:escanni_center_target_1 }
		}
		save_event_target_as = escanni_center_target_2
	}
	if = {
		limit = { has_saved_event_target = escanni_center_target_2 }
		event_target:escanni_center_target_2 = {
			random_area_province = {
				limit = { owned_by = ROOT }
				save_event_target_as = escanni_effect_target_3
			}
			random_area_province = {
				limit = {
					owned_by = ROOT
					has_saved_event_target = escanni_effect_target_3
					NOT = { province_id = event_target:escanni_effect_target_3 }
				}
				save_event_target_as = escanni_effect_target_4
			}
		}
	}
	escann_proper = {
		type = random
		amount = 4
		limit = {
			NOT = { #NOR
				is_empty = yes
				has_province_flag = escanni_migration_target
			}
			OR = {
				NOT = { has_saved_event_target = escanni_migration_target_1 }
				NOT = { province_id = event_target:escanni_migration_target_1 }
			}
			OR = {
				NOT = { has_saved_event_target = escanni_migration_target_2 }
				NOT = { province_id = event_target:escanni_migration_target_2 }
			}
			OR = {
				NOT = { has_saved_event_target = escanni_migration_target_3 }
				NOT = { province_id = event_target:escanni_migration_target_3 }
			}
			OR = {
				NOT = { has_saved_event_target = escanni_migration_target_4 }
				NOT = { province_id = event_target:escanni_migration_target_4 }
			}
			owner = {
				OR = {
					NOT = { is_migratory_tribe = yes }
					num_of_cities = 2
				}
				NOT = { has_country_modifier = monstrous_nation }
			}
		}
		if = {
			limit = {
				NOT = { has_saved_event_target = escanni_migration_target_1 } 
				has_saved_event_target = escanni_center_target_1
			}
			save_event_target_as = escanni_migration_target_1
		}
		else_if = {
			limit = {
				has_saved_event_target = escanni_center_target_1
				NOT = { has_saved_event_target = escanni_migration_target_2 } 
			}
			save_event_target_as = escanni_migration_target_2
		}
		else_if = {
			limit = {
				has_saved_event_target = escanni_center_target_2
				NOT = { has_saved_event_target = escanni_migration_target_3 } 
			}
			save_event_target_as = escanni_migration_target_3
		}
		else_if = {
			limit = {
				has_saved_event_target = escanni_center_target_2
				NOT = { has_saved_event_target = escanni_migration_target_4 } 
			}
			save_event_target_as = escanni_migration_target_4
		}
		set_province_flag = escanni_migration_target
	}
}