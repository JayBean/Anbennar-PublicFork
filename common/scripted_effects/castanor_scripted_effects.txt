############
##Castanor##
############
#"Castan LIV" #this has a weird space alt+0160
define_castan_name = {
	hidden_effect = {
		if = { limit = { REB = { check_variable = { castan_number = 54 } NOT = { check_variable = { castan_number = 55 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LIV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 55 } NOT = { check_variable = { castan_number = 56 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 56 } NOT = { check_variable = { castan_number = 57 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LVI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 57 } NOT = { check_variable = { castan_number = 58 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LVII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 58 } NOT = { check_variable = { castan_number = 59 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LVIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 59 } NOT = { check_variable = { castan_number = 60 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LIX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 60 } NOT = { check_variable = { castan_number = 61 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 61 } NOT = { check_variable = { castan_number = 62 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 62 } NOT = { check_variable = { castan_number = 63 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 63 } NOT = { check_variable = { castan_number = 64 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 64 } NOT = { check_variable = { castan_number = 65 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXIV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 65 } NOT = { check_variable = { castan_number = 66 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXVI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 66 } NOT = { check_variable = { castan_number = 67 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXVI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 67 } NOT = { check_variable = { castan_number = 68 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXVII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 68 } NOT = { check_variable = { castan_number = 69 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXVIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 69 } NOT = { check_variable = { castan_number = 70 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXIX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 70 } NOT = { check_variable = { castan_number = 71 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 71 } NOT = { check_variable = { castan_number = 72 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 72 } NOT = { check_variable = { castan_number = 73 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 73 } NOT = { check_variable = { castan_number = 74 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 74 } NOT = { check_variable = { castan_number = 75 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXIV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 75 } NOT = { check_variable = { castan_number = 76 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 76 } NOT = { check_variable = { castan_number = 77 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXVI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 77 } NOT = { check_variable = { castan_number = 78 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXVII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 78 } NOT = { check_variable = { castan_number = 79 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXVIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 79 } NOT = { check_variable = { castan_number = 80 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXIX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 80 } NOT = { check_variable = { castan_number = 81 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 81 } NOT = { check_variable = { castan_number = 82 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 82 } NOT = { check_variable = { castan_number = 83 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 83 } NOT = { check_variable = { castan_number = 84 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 84 } NOT = { check_variable = { castan_number = 85 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXIV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 85 } NOT = { check_variable = { castan_number = 86 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 86 } NOT = { check_variable = { castan_number = 87 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXVI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 87 } NOT = { check_variable = { castan_number = 88 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXVII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 88 } NOT = { check_variable = { castan_number = 89 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXVIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 89 } NOT = { check_variable = { castan_number = 90 } } } } set_saved_name = { key = castan_name type = simple name = "Castan LXXXIX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 90 } NOT = { check_variable = { castan_number = 91 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XC" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 91 } NOT = { check_variable = { castan_number = 92 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 92 } NOT = { check_variable = { castan_number = 93 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 93 } NOT = { check_variable = { castan_number = 94 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 94 } NOT = { check_variable = { castan_number = 95 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCIV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 95 } NOT = { check_variable = { castan_number = 96 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCV" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 96 } NOT = { check_variable = { castan_number = 97 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XXVI" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 97 } NOT = { check_variable = { castan_number = 98 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCVII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 98 } NOT = { check_variable = { castan_number = 99 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCVIII" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 99 } NOT = { check_variable = { castan_number = 100 } } } } set_saved_name = { key = castan_name type = simple name = "Castan XCIX" } }
		else_if = { limit = { REB = { check_variable = { castan_number = 100 } NOT = { check_variable = { castan_number = 101 } } } } set_saved_name = { key = castan_name type = simple name = "Castan C" } }
	}
}
increase_castan_number = {
	hidden_effect = {
		if = { limit = { REB = { check_variable = { castan_number = 54 } } } REB = { change_variable = { castan_number = 1 } } }
		else = { REB = { set_variable = { castan_number = 54 } } }
	}
}
define_new_castan = {	
	if = {
		limit = { has_country_flag = castanor_trials_candidate_adventurer_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			min_age = 21 #for some reason it does -1
			max_age = 41 #for some reason it does -1
			claim = 100
			male = yes
			max_random_adm = 4
			change_mil = 3
		}
		random_list = {
			1 = { add_ruler_personality = righteous_personality }
			1 = { add_ruler_personality = bold_fighter_personality }
		}
		increase_ruler_mil_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_noble_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			max_age = 51 #for some reason it does -1
			claim = 100
			male = yes
			change_dip = 3
			change_mil = 3
		}
		random_list = {
			1 = { add_ruler_personality = conqueror_personality }
			1 = { add_ruler_personality = lawgiver_personality }
			1 = { add_ruler_personality = careful_personality }
		}
		increase_ruler_dip_effect = yes
		increase_ruler_mil_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_general_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			claim = 100
			male = yes
			max_random_dip = 4
			change_mil = 4
		}
		random_list = {
			1 = { add_ruler_personality = inspiring_leader_personality }
			1 = { add_ruler_personality = martial_educator_personality }
			1 = { add_ruler_personality = tactical_genius_personality }
		}
		increase_ruler_mil_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_merchant_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			claim = 100
			male = yes
			change_dip = 4
		}
		random_list = {
			1 = { add_ruler_personality = midas_touched_personality }
			1 = { add_ruler_personality = industrious_personality }
			1 = { add_ruler_personality = entrepreneur_personality }
		}
		increase_ruler_dip_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_patrician_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			max_age = 41 #for some reason it does -1
			claim = 100
			male = yes
			change_adm = 4
			change_dip = 4
		}
		add_ruler_modifier = {
			name = patrician_castan
			duration = -1
		}
		random_list = {
			1 = { add_ruler_personality = well_connected_personality }
			1 = { add_ruler_personality = secretive_personality }
			1 = { add_ruler_personality = mage_personality }
		}
		increase_ruler_adm_effect = yes
		increase_ruler_dip_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_dignitary_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			claim = 100
			male = yes
			change_dip = 4
			max_random_mil = 3
		}
		random_list = {
			1 = { add_ruler_personality = silver_tongue_personality }
			1 = { add_ruler_personality = intricate_web_weaver_personality }
			1 = { add_ruler_personality = fierce_negotiator_personality }
		}
		increase_ruler_dip_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_academic_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			min_age = 31 #for some reason it does -1
			max_age = 51 #for some reason it does -1
			claim = 100
			male = yes
			change_adm = 2
			change_dip = 2
			change_mil = 2
		}
		random_list = {
			1 = { add_ruler_personality = free_thinker_personality }
			1 = { add_ruler_personality = scholar_personality }
			1 = { add_ruler_personality = well_advised_personality }
		}
		increase_ruler_adm_effect = yes
		increase_ruler_mil_effect = yes
		increase_ruler_dip_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_peasant_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			max_age = 31 #for some reason it does -1
			claim = 100
			male = yes
		}
		random_list = {
			50 = { add_ruler_personality = incorruptible_personality }
			50 = { add_ruler_personality = kind_hearted_personality }
			1 = { add_ruler_personality = babbling_buffoon_personality }
		}
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_priest_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			min_age = 46 #for some reason it does -1
			max_age = 61 #for some reason it does -1
			claim = 100
			male = yes
			change_adm = 4
			max_random_mil = 3
		}
		random_list = {
			1 = { add_ruler_personality = zealot_personality }
			1 = { add_ruler_personality = pious_personality }
		}
		increase_ruler_adm_effect = yes
	}
	else_if = {
		limit = { has_country_flag = castanor_trials_candidate_mage_won }
		define_ruler = {
			name = castan_name
			dynasty = "	"
			max_age = 61 #for some reason it does -1
			claim = 100
			male = yes
			max_random_adm = 5
			max_random_dip = 5
			max_random_mil = 5
		}
		add_ruler_personality = mage_personality
		custom_tooltip = mage_castan_tt
		hidden_effect = {
			# Gives legendary in a school
			random_list = {
				1 = { set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 set_ruler_flag = abjuration_3 }
				1 = { set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 set_ruler_flag = transmutation_3 }
				1 = { set_ruler_flag = divination_1 set_ruler_flag = divination_2 set_ruler_flag = divination_3 }
				1 = { set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 set_ruler_flag = evocation_3 }
				1 = { set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 set_ruler_flag = conjuration_3 }
				1 = { set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 set_ruler_flag = enchantment_3 }
				1 = { set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 set_ruler_flag = illusion_3 }
				1 = { set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 set_ruler_flag = necromancy_3 }
			}
			# Then gives talented in two others
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_3 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_3 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_3 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_3 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_3 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_3 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_3 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_3 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}
			random_list = {
				1 = { trigger = { NOT = { has_ruler_flag = abjuration_3 } NOT = { has_ruler_flag = abjuration_2 } } set_ruler_flag = abjuration_1 set_ruler_flag = abjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = transmutation_3 } NOT = { has_ruler_flag = transmutation_2 } } set_ruler_flag = transmutation_1 set_ruler_flag = transmutation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = divination_3 } NOT = { has_ruler_flag = divination_2 } } set_ruler_flag = divination_1 set_ruler_flag = divination_2 }
				1 = { trigger = { NOT = { has_ruler_flag = evocation_3 } NOT = { has_ruler_flag = evocation_2 } } set_ruler_flag = evocation_1 set_ruler_flag = evocation_2 }
				1 = { trigger = { NOT = { has_ruler_flag = conjuration_3 } NOT = { has_ruler_flag = conjuration_2 } } set_ruler_flag = conjuration_1 set_ruler_flag = conjuration_2 }
				1 = { trigger = { NOT = { has_ruler_flag = enchantment_3 } NOT = { has_ruler_flag = enchantment_2 } } set_ruler_flag = enchantment_1 set_ruler_flag = enchantment_2 }
				1 = { trigger = { NOT = { has_ruler_flag = illusion_3 } NOT = { has_ruler_flag = illusion_2 } } set_ruler_flag = illusion_1 set_ruler_flag = illusion_2 }
				1 = { trigger = { NOT = { has_ruler_flag = necromancy_3 } NOT = { has_ruler_flag = necromancy_2 } } set_ruler_flag = necromancy_1 set_ruler_flag = necromancy_2 }
			}
		}
	}
}
castanor_trials_clear_candidate_flags_effect = {
	hidden_effect = {
		clr_country_flag = castanor_trials_candidate_adventurer_chosen
		clr_country_flag = castanor_trials_candidate_noble_chosen
		clr_country_flag = castanor_trials_candidate_general_chosen
		clr_country_flag = castanor_trials_candidate_merchant_chosen
		clr_country_flag = castanor_trials_candidate_patrician_chosen
		clr_country_flag = castanor_trials_candidate_dignitary_chosen
		clr_country_flag = castanor_trials_candidate_academic_chosen
		clr_country_flag = castanor_trials_candidate_peasant_chosen
		clr_country_flag = castanor_trials_candidate_priest_chosen
		clr_country_flag = castanor_trials_candidate_mage_chosen

		clr_country_flag = castanor_trials_candidate_adventurer
		clr_country_flag = castanor_trials_candidate_noble
		clr_country_flag = castanor_trials_candidate_general
		clr_country_flag = castanor_trials_candidate_merchant
		clr_country_flag = castanor_trials_candidate_patrician
		clr_country_flag = castanor_trials_candidate_dignitary
		clr_country_flag = castanor_trials_candidate_academic
		clr_country_flag = castanor_trials_candidate_peasant
		clr_country_flag = castanor_trials_candidate_priest
		clr_country_flag = castanor_trials_candidate_mage

		clr_country_flag = castanor_trials_candidate_adventurer_won
		clr_country_flag = castanor_trials_candidate_noble_won
		clr_country_flag = castanor_trials_candidate_general_won
		clr_country_flag = castanor_trials_candidate_merchant_won
		clr_country_flag = castanor_trials_candidate_patrician_won
		clr_country_flag = castanor_trials_candidate_dignitary_won
		clr_country_flag = castanor_trials_candidate_academic_won
		clr_country_flag = castanor_trials_candidate_peasant_won
		clr_country_flag = castanor_trials_candidate_priest_won
		clr_country_flag = castanor_trials_candidate_mage_won
	}
}
castanor_trials_clear_trials_flags_effect = {
	hidden_effect = {
		clr_country_flag = dwarf_friend_trial_fail
		clr_country_flag = dwarf_friend_trial_success
		clr_country_flag = dwarf_friend_trial_success_jewelry
		clr_country_flag = dwarf_friend_trial_success_shield
		clr_country_flag = dwarf_friend_trial_success_weapon

		clr_country_flag = castan_oath_option_preserver
		clr_country_flag = castan_oath_option_peacemaker
		clr_country_flag = castan_oath_option_righteous
		clr_country_flag = castan_oath_option_old
		clr_country_flag = castan_oath_option_pious
		clr_country_flag = castan_oath_option_youthful
		clr_country_flag = castan_oath_option_compassionate
		clr_country_flag = castan_oath_option_unwavering
		clr_country_flag = castan_oath_option_sickly
		clr_country_flag = castan_oath_option_cowardly

		clr_country_flag = castanQuietTrialFail

		clr_country_flag = oath_trial_failed
		clr_country_flag = castan_oath_preserver_succeeded
		clr_country_flag = castan_oath_peacemaker_succeeded
		clr_country_flag = castan_oath_righteous_succeeded
		clr_country_flag = castan_oath_old_succeeded
		clr_country_flag = castan_oath_pious_succeeded
		clr_country_flag = castan_oath_youthful_succeeded
		clr_country_flag = castan_oath_compassionate_succeeded
		clr_country_flag = castan_oath_unwavering_succeeded
		clr_country_flag = castan_oath_sickly_succeeded
		clr_country_flag = castan_oath_cowardly_succeeded

		clr_country_flag = castanor_trials_in_progress

		clr_country_flag = golem_trial_ran

		clr_country_flag = beastbane_trial_being_hunted
		clr_country_flag = beastbane_trial_beast_hunting
		clr_country_flag = beastbane_trial_beast_asleep
		clr_country_flag = beastbane_trial_tracking_success
		clr_country_flag = beastbane_trial_tracking_failure
		clr_country_flag = beastbane_trial_fey_success
		clr_country_flag = beastbane_trial_fey_failure
		clr_country_flag = beastbane_trial_fey_fight_success
		clr_country_flag = beastbane_trial_fey_fight_failure
		clr_country_flag = beastbane_trial_sleeping_arrow_ambush
		clr_country_flag = beastbane_trial_hunting_arrow_ambush
		clr_country_flag = beastbane_trial_occupied_ambush
		clr_country_flag = beastbane_trial_beast_killed
		clr_country_flag = beastbane_trial_aspirant_killed
		clr_country_flag = beastbane_trial_molt_grabbed
		clr_country_flag = beastbane_trial_enchantment_adm_success
		clr_country_flag = beastbane_trial_enchantment_dip_success
		clr_country_flag = beastbane_trial_enchantment_mil_success
		clr_country_flag = beastbane_trial_ran
		clr_country_flag = undressed_wounds

		clr_country_flag = realmbuilder_trial_failed

		clr_country_flag = jump_trial_in_progress
		clr_country_flag = jump_trial_failed

		clr_country_flag = first_time_trying_trials
	}
}
castanor_trials_fail_effect = {	
	hidden_effect = {
		country_event = {
			id = castanortrials.15
		}
	}
}
castanor_trials_die_effect = {
	hidden_effect = {
		country_event = {
			id = castanortrials.16
		}
	}
}
castonath_patricians_decrease_influence_effect = {
	#Paradox somehow broke trigger_switch with has_province_modifier....
	# trigger_switch = {
	# 	on_trigger = has_province_modifier
	# 	castonath_patrician_influence_full = {
	# 		remove_province_modifier = castonath_patrician_influence_full
	# 		add_permanent_province_modifier = {
	# 			name = castonath_patrician_influence_significant
	# 			duration = -1
	# 		}
	# 	}
	# 	castonath_patrician_influence_significant = {
	# 		remove_province_modifier = castonath_patrician_influence_significant
	# 		add_permanent_province_modifier = {
	# 			name = castonath_patrician_influence_considerable
	# 			duration = -1
	# 		}
	# 	}
	# 	castonath_patrician_influence_considerable = {
	# 		remove_province_modifier = castonath_patrician_influence_considerable
	# 		add_permanent_province_modifier = {
	# 			name = castonath_patrician_influence_some
	# 			duration = -1
	# 		}
	# 	}
	# 	castonath_patrician_influence_some = {
	# 		remove_province_modifier = castonath_patrician_influence_some
	# 	}
	# }
	if = {
		limit = { has_province_modifier = castonath_patrician_influence_full }
		remove_province_modifier = castonath_patrician_influence_full
		add_permanent_province_modifier = {
			name = castonath_patrician_influence_significant
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = castonath_patrician_influence_significant }
		remove_province_modifier = castonath_patrician_influence_significant
		add_permanent_province_modifier = {
			name = castonath_patrician_influence_considerable
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = castonath_patrician_influence_considerable }
		remove_province_modifier = castonath_patrician_influence_considerable
		add_permanent_province_modifier = {
			name = castonath_patrician_influence_some
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = castonath_patrician_influence_some }
		remove_province_modifier = castonath_patrician_influence_some
	}
}
castanor_succession_war_update_legitimacy_modifiers = {
	if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 8
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_most_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { tag = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				add_province_modifier = {
					name = castanor_fortress_castonath_solid
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 6
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { tag = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_sturdy
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 5
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_most_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { tag = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_sturdy
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 4
				}
			}
		}
		B32 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_even
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_even
		}
		castonath_area = {
			if = {
				limit = { controller = { tag = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_impenetrable
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else_if = {
		limit = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 2
				}
			}
		}
		B32 = {
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { tag = B61 } }
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_impenetrable
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
	else = {
		B32 = {
			remove_country_modifier = castanor_succession_war_most_favored
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
		}
		B61 = {
			add_disaster_modifier = {
				name = castanor_succession_war_most_favored
				duration = -1
				disaster = castanor_succession_war
			}
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_favored
		}
		castonath_area = {
			if = {
				limit = { controller = { tag = B61 } }
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
				add_province_modifier = {
					name = castanor_fortress_castonath_indestructible
					duration = -1
				}
			}
			else = {
				remove_province_modifier = castanor_fortress_castonath_indestructible
				remove_province_modifier = castanor_fortress_castonath_impenetrable
				remove_province_modifier = castanor_fortress_castonath_sturdy
				remove_province_modifier = castanor_fortress_castonath_solid
			}
		}
	}
}
castanor_succession_war_shift_momentum_siege = {
	if = {
		limit = {
			ROOT = { tag = B61 }
			FROM = { owner = { tag = B32 } }
		}
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -0.2
			}
		}
		add_treasury = 10
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_increase_castan_legitimacy_small = {
	custom_tooltip = increaseCastanLegitimacySmall
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = 0.5
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_increase_castan_legitimacy_moderate = {
	custom_tooltip = increaseCastanLegitimacyModerate
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = 1
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_increase_castan_legitimacy_massive = {
	custom_tooltip = increaseCastanLegitimacyMassive
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = 3
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_decrease_castan_legitimacy_small = {
	custom_tooltip = decreaseCastanLegitimacySmall
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -0.5
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_decrease_castan_legitimacy_moderate = {
	custom_tooltip = decreaseCastanLegitimacyModerate
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -1
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_succession_war_decrease_castan_legitimacy_massive = {
	custom_tooltip = decreaseCastanLegitimacyMassive
	hidden_effect = {
		B32 = {
			change_variable = {
				which = castanLegitimacy
				value = -3
			}
		}
		castanor_succession_war_update_legitimacy_modifiers = yes
	}
}
castanor_build_legionway_with_hired_legion = {
	if = {
		limit = {
			event_target:$event_target$ = {
				location = {
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					NOT = { province_group = golden_highway_bulwar_proper }
					NOT = { province_group = golden_highway_far_bulwar }
					NOT = { province_group = golden_highway_dhujat }
					NOT = { province_group = golden_highway_far_salahad }
					NOT = { province_group = golden_highway_yanshen_coast }
					NOT = { province_group = golden_highway_rahen_coast }
					NOT = { province_group = golden_highway_upper_yanshen }
					NOT = { province_group = golden_highway_xianjie }
					NOT = { province_group = triunic_road }
					NOT = { has_terrain = dwarven_road }
				}
			}
		}
		custom_tooltip = not_has_legionway_tt
	}
	else = { custom_tooltip = has_legionway_tt }
	if = {
		limit = {
			event_target:$event_target$ = {
				location = {
					any_neighbor_province = {
						OR = {
							has_province_modifier = castanor_legionway
							has_province_modifier = castanor_building_legionway_survey
							has_province_modifier = castanor_building_legionway_construction
							AND = {
								OR = {
									has_province_modifier = federation_triunic_road
									has_province_modifier = golden_highway
								}
								any_neighbor_province = { has_province_modifier = castanor_legionway }
							}
						}
					}
				}
			}
		}
		custom_tooltip = neighbor_has_legionway_tt
	}
	else = { custom_tooltip = not_neighbor_has_legionway_tt }
	if = {
		limit = {
			event_target:$event_target$ = {
				location = { country_or_non_sovereign_subject_holds = ROOT }
			}
		}
		custom_tooltip = owned_by_us_tt
	}
	else = { custom_tooltip = not_owned_by_us_tt }
}
