

amlharaz_hold_vote = {
	every_subject_country = {
		limit = { is_subject_of_type = amlharaz_hold }
		if = {
			limit = {
				OR = {
					AND = { has_country_flag = for_amlharaz I24 = { has_country_flag = enacted_amlharaz } }
					AND = { has_country_flag = against_amlharaz I24 = { has_country_flag = denied_amlharaz } }
				}
			}
			amlharaz_happy = yes
			clr_country_flag = for_amlharaz
		}
		else = {
			amlharaz_not_happy = yes
			clr_country_flag = against_amlharaz
		}
	}
}
amlharaz_not_happy = {
	trigger_switch = {
		on_trigger = has_country_modifier
		
		amlharaz_liberty_desire_1 = { remove_country_modifier = amlharaz_liberty_desire_1 add_country_modifier = { name = amlharaz_liberty_desire_0 duration = -1 } }
		amlharaz_liberty_desire_2 = { remove_country_modifier = amlharaz_liberty_desire_2 add_country_modifier = { name = amlharaz_liberty_desire_1 duration = -1 } }
		amlharaz_liberty_desire_3 = { remove_country_modifier = amlharaz_liberty_desire_3 add_country_modifier = { name = amlharaz_liberty_desire_2 duration = -1 } }
		amlharaz_liberty_desire_4 = { remove_country_modifier = amlharaz_liberty_desire_4 add_country_modifier = { name = amlharaz_liberty_desire_3 duration = -1 } }
		amlharaz_liberty_desire_5 = { remove_country_modifier = amlharaz_liberty_desire_5 add_country_modifier = { name = amlharaz_liberty_desire_4 duration = -1 } }
		amlharaz_liberty_desire_6 = { remove_country_modifier = amlharaz_liberty_desire_6 add_country_modifier = { name = amlharaz_liberty_desire_5 duration = -1 } }
		amlharaz_liberty_desire_7 = { remove_country_modifier = amlharaz_liberty_desire_7 add_country_modifier = { name = amlharaz_liberty_desire_6 duration = -1 } }
		amlharaz_liberty_desire_8 = { remove_country_modifier = amlharaz_liberty_desire_8 add_country_modifier = { name = amlharaz_liberty_desire_7 duration = -1 } }
		amlharaz_liberty_desire_9 = { remove_country_modifier = amlharaz_liberty_desire_9 add_country_modifier = { name = amlharaz_liberty_desire_8 duration = -1 } }
		amlharaz_liberty_desire_10 = { remove_country_modifier = amlharaz_liberty_desire_10 add_country_modifier = { name = amlharaz_liberty_desire_9 duration = -1 } }
		amlharaz_liberty_desire_11 = { remove_country_modifier = amlharaz_liberty_desire_11 add_country_modifier = { name = amlharaz_liberty_desire_10 duration = -1 } }
		amlharaz_liberty_desire_12 = { remove_country_modifier = amlharaz_liberty_desire_12 add_country_modifier = { name = amlharaz_liberty_desire_11 duration = -1 } }
		amlharaz_liberty_desire_13 = { remove_country_modifier = amlharaz_liberty_desire_13 add_country_modifier = { name = amlharaz_liberty_desire_12 duration = -1 } }
		amlharaz_liberty_desire_14 = { remove_country_modifier = amlharaz_liberty_desire_14 add_country_modifier = { name = amlharaz_liberty_desire_13 duration = -1 } }
		amlharaz_liberty_desire_15 = { remove_country_modifier = amlharaz_liberty_desire_15 add_country_modifier = { name = amlharaz_liberty_desire_14 duration = -1 } }
		amlharaz_liberty_desire_16 = { remove_country_modifier = amlharaz_liberty_desire_16 add_country_modifier = { name = amlharaz_liberty_desire_15 duration = -1 } }
		amlharaz_liberty_desire_17 = { remove_country_modifier = amlharaz_liberty_desire_17 add_country_modifier = { name = amlharaz_liberty_desire_16 duration = -1 } }
		amlharaz_liberty_desire_18 = { remove_country_modifier = amlharaz_liberty_desire_18 add_country_modifier = { name = amlharaz_liberty_desire_17 duration = -1 } }
		amlharaz_liberty_desire_19 = { remove_country_modifier = amlharaz_liberty_desire_19 add_country_modifier = { name = amlharaz_liberty_desire_18 duration = -1 } }
		amlharaz_liberty_desire_20 = { remove_country_modifier = amlharaz_liberty_desire_20 add_country_modifier = { name = amlharaz_liberty_desire_19 duration = -1 } }
	}
}
amlharaz_happy = {
	trigger_switch = {
		on_trigger = has_country_modifier
		
		amlharaz_liberty_desire_19 = { remove_country_modifier = amlharaz_liberty_desire_19 add_country_modifier = { name = amlharaz_liberty_desire_20 duration = -1 } }
		amlharaz_liberty_desire_18 = { remove_country_modifier = amlharaz_liberty_desire_18 add_country_modifier = { name = amlharaz_liberty_desire_19 duration = -1 } }
		amlharaz_liberty_desire_17 = { remove_country_modifier = amlharaz_liberty_desire_17 add_country_modifier = { name = amlharaz_liberty_desire_18 duration = -1 } }
		amlharaz_liberty_desire_16 = { remove_country_modifier = amlharaz_liberty_desire_16 add_country_modifier = { name = amlharaz_liberty_desire_17 duration = -1 } }
		amlharaz_liberty_desire_15 = { remove_country_modifier = amlharaz_liberty_desire_15 add_country_modifier = { name = amlharaz_liberty_desire_16 duration = -1 } }
		amlharaz_liberty_desire_14 = { remove_country_modifier = amlharaz_liberty_desire_14 add_country_modifier = { name = amlharaz_liberty_desire_15 duration = -1 } }
		amlharaz_liberty_desire_13 = { remove_country_modifier = amlharaz_liberty_desire_13 add_country_modifier = { name = amlharaz_liberty_desire_14 duration = -1 } }
		amlharaz_liberty_desire_12 = { remove_country_modifier = amlharaz_liberty_desire_12 add_country_modifier = { name = amlharaz_liberty_desire_13 duration = -1 } }
		amlharaz_liberty_desire_11 = { remove_country_modifier = amlharaz_liberty_desire_11 add_country_modifier = { name = amlharaz_liberty_desire_12 duration = -1 } }
		amlharaz_liberty_desire_10 = { remove_country_modifier = amlharaz_liberty_desire_10 add_country_modifier = { name = amlharaz_liberty_desire_11 duration = -1 } }
		amlharaz_liberty_desire_9 = { remove_country_modifier = amlharaz_liberty_desire_9 add_country_modifier = { name = amlharaz_liberty_desire_10 duration = -1 } }
		amlharaz_liberty_desire_8 = { remove_country_modifier = amlharaz_liberty_desire_8 add_country_modifier = { name = amlharaz_liberty_desire_9 duration = -1 } }
		amlharaz_liberty_desire_7 = { remove_country_modifier = amlharaz_liberty_desire_7 add_country_modifier = { name = amlharaz_liberty_desire_8 duration = -1 } }
		amlharaz_liberty_desire_6 = { remove_country_modifier = amlharaz_liberty_desire_6 add_country_modifier = { name = amlharaz_liberty_desire_7 duration = -1 } }
		amlharaz_liberty_desire_5 = { remove_country_modifier = amlharaz_liberty_desire_5 add_country_modifier = { name = amlharaz_liberty_desire_6 duration = -1 } }
		amlharaz_liberty_desire_4 = { remove_country_modifier = amlharaz_liberty_desire_4 add_country_modifier = { name = amlharaz_liberty_desire_5 duration = -1 } }
		amlharaz_liberty_desire_3 = { remove_country_modifier = amlharaz_liberty_desire_3 add_country_modifier = { name = amlharaz_liberty_desire_4 duration = -1 } }
		amlharaz_liberty_desire_2 = { remove_country_modifier = amlharaz_liberty_desire_2 add_country_modifier = { name = amlharaz_liberty_desire_3 duration = -1 } }
		amlharaz_liberty_desire_1 = { remove_country_modifier = amlharaz_liberty_desire_1 add_country_modifier = { name = amlharaz_liberty_desire_2 duration = -1 } }
		amlharaz_liberty_desire_0 = { remove_country_modifier = amlharaz_liberty_desire_0 add_country_modifier = { name = amlharaz_liberty_desire_1 duration = -1 } }
	}
}


###############
### General ###
###############
adventurer_hold_formation = {
	hidden_effect = {
		if = {
			limit = { reform_level = 5 }
			set_country_flag = dwarovar_adventurer_legacy_4
		}
		else_if = {
			limit = { reform_level = 4 }
			set_country_flag = dwarovar_adventurer_legacy_3
		}
		else_if = {
			limit = { reform_level = 3 }
			set_country_flag = dwarovar_adventurer_legacy_2
		}
		else_if = {
			limit = { reform_level = 2 }
			set_country_flag = dwarovar_adventurer_legacy_1
		}
	}
	change_tag = $tag$
	hidden_effect = { restore_country_name = yes }
	remove_non_electors_emperors_from_empire_effect = yes

	#legacy buff and gov reforms
	add_country_modifier = { name = legacy_of_adventurers_modifier duration = 14600 }
	custom_tooltip = adventurer_hold_formation_tooltip
	#so players see
	tooltip = {
		if = {
			limit = { reform_level = 5 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_4 duration = 14600 }
		}
		else_if = {
			limit = { reform_level = 4 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_3 duration = 14600 }
		}
		else_if = {
			limit = { reform_level = 3 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_2 duration = 14600 }
		}
		else_if = {
			limit = { reform_level = 2 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_1 duration = 14600 }
		}
	}

	hidden_effect = {
		if = {
			limit = { has_country_flag = dwarovar_adventurer_legacy_4 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_4 duration = 14600 }
			clr_country_flag = dwarovar_adventurer_legacy_4
		}
		else_if = {
			limit = { has_country_flag = dwarovar_adventurer_legacy_3 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_3 duration = 14600 }
			clr_country_flag = dwarovar_adventurer_legacy_2
		}
		else_if = {
			limit = { has_country_flag = dwarovar_adventurer_legacy_2 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_2 duration = 14600 }
			clr_country_flag = dwarovar_adventurer_legacy_3
		}
		else_if = {
			limit = { has_country_flag = dwarovar_adventurer_legacy_1 }
			add_country_modifier = { name = dwarovar_adventurer_legacy_1 duration = 14600 }
			clr_country_flag = dwarovar_adventurer_legacy_1
		}
	}

	#other stuff
	add_prestige = 25
	set_country_flag = adventurer_derived_government
	set_country_flag = formed_diggy_formable
	country_event = { id = marcher.1 days = 1 }
	hidden_effect = { 
		country_event = { id = estate_organization.1 days = 2 } #mages
		country_event = { id = estate_organization.4 days = 2 } #adventurers
		country_event = { id = diggy.46 days = 4 } #AW conversion event
	}
	if = {
		limit = { has_custom_ideas = no }
		country_event = { id = ideagroups.1 } #Swap Ideas
	}

	#culture
	hidden_effect = {
		every_owned_province = {
			limit = { culture = ROOT NOT = { culture = $culture$_dwarf } }
			change_culture = $culture$_dwarf
		}
	}
	if = {
		limit = { ruler_culture = ROOT NOT = { ruler_culture = $culture$_dwarf } }
		set_ruler_culture = $culture$_dwarf
	}
	if = {
		limit = { has_heir = yes heir_culture = ROOT NOT = { heir_culture = $culture$_dwarf } }
		set_heir_culture = $culture$_dwarf
	}
	if = {
		limit = { has_consort = yes consort_culture = ROOT NOT = { consort_culture = $culture$_dwarf } }
		set_consort_culture = $culture$_dwarf
	}
	change_primary_culture = $culture$_dwarf
	custom_tooltip = adventurer_hold_formation_tooltip2
	set_capital = $capital_id$
}
dwarovar_republic_generic_election_effect = {
	if = {
		limit = { has_reform = dwarovar_new_minds } 
		define_ruler = {
			age = 50
			mil = $mil$
			adm = $adm$
			dip = $dip$
		}
		if = {
			limit = { has_government_attribute = dwarovar_new_minds_effect }
			random_list = {
				20 = {
					trigger = { has_estate = estate_church }
					add_estate_loyalty = { estate = estate_church loyalty = 5 }
				}
				20 = {
					trigger = { has_estate = estate_nobles }
					add_estate_loyalty = { estate = estate_nobles loyalty = 5 }
				}
				20 = {
					trigger = { has_estate = estate_burghers }
					add_estate_loyalty = { estate = estate_burghers loyalty = 5 }
				}
				20 = {
					trigger = { has_estate = estate_mages }
					add_estate_loyalty = { estate = estate_mages loyalty = 5 }
				}
				20 = {
					trigger = { has_estate = estate_artificers }
					add_estate_loyalty = { estate = estate_artificers loyalty = 5 }
				}
				#no adventurers
			}
		}
	}
	else_if = {
		limit = { has_reform = dwarovar_elder_wisdom } 
		define_ruler = {
			age = 94
			mil = $mil$
			adm = $adm$
			dip = $dip$
		}
	}
	else = {
		define_ruler = {
			age = 70
			mil = $mil$
			adm = $adm$
			dip = $dip$
		}
	}

	#nepotism option needs manual adjustments in elections file
}
save_yearly_income = { #Saves income for 0.5 1 1.5 2 3 5 7 9 years of income

	set_variable = { HalfYearOfIncome = 0}
	set_variable = { YearOfIncome = 0}
	set_variable = { OneAndHalfYearOfIncome = 0}
	set_variable = { 2YearOfIncome = 0}
	set_variable = { 3YearOfIncome = 0}
	set_variable = { 5YearOfIncome = 0}
	set_variable = { 7YearOfIncome = 0}
	set_variable = { 9YearOfIncome = 0}
	
	#Save yearly income at this point
	export_to_variable = {
		which = YearOfIncome
		value = years_of_income
		who = ROOT
	}
	
	
	#Do the same for other years of income, way easier than re-calculating it every time
	export_to_variable = {
		which = 2YearOfIncome
		value = years_of_income
		who = ROOT
	}
	
	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	multiply_variable = {
		which = 2YearOfIncome
		value = 2
	}
	
	export_to_variable = {
		which = 3YearOfIncome
		value = years_of_income
		who = ROOT
	}
	
	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	multiply_variable = {
		which = 3YearOfIncome
		value = 3
	}

	export_to_variable = {
		which = 5YearOfIncome
		value = years_of_income
		who = ROOT
	}

	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	multiply_variable = {
		which = 5YearOfIncome
		value = 5
	}

	export_to_variable = {
		which = 7YearOfIncome
		value = years_of_income
		who = ROOT
	}

	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	multiply_variable = {
		which = 7YearOfIncome
		value = 7
	}

	export_to_variable = {
		which = 9YearOfIncome
		value = years_of_income
		who = ROOT
	}

	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	multiply_variable = {
		which = 9YearOfIncome
		value = 9
	}

	export_to_variable = {
		which = OneAndHalfYearOfIncome
		value = years_of_income
		who = ROOT
	}

	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	multiply_variable = {
		which = OneAndHalfYearOfIncome
		value = 1.5
	}

	export_to_variable = {
		which = HalfYearOfIncome
		value = years_of_income
		who = ROOT
	}

	#Turn it negative and slightly increase it to make up for the negative income modifiers for hoardcurse
	divide_variable  = {
		which = HalfYearOfIncome
		value = 2
	}
}
set_province_historical_culture = {
	trigger_switch = {
		on_trigger = area
		amldihr_area = { add_core = I01  change_culture = kronium_dwarf }  
		krakdhum_area = {  add_core = I02  change_culture = quartz_dwarf }
		vazhatun_area = {  add_core = I03  change_culture = sapphire_dwarf }
		orlazam_area = {  add_core = I04  change_culture = ramsteel_dwarf }
		mithradhum_area = {  add_core = I05  change_culture = mithril_dwarf }
		railyard_area = {  add_core = I06  change_culture = dagrite_dwarf }
		khugdihr_area = {  add_core = I07  change_culture = agate_dwarf }
		orldhum_area = {  add_core = I08  change_culture = platinum_dwarf }
		stunad_kozenad_area = {  add_core = I09  change_culture = opal_dwarf }
		jorkad_junction_area = {  add_core = I10  change_culture = lead_dwarf }
		shazstundihr_area = {  add_core = I11  change_culture = marble_dwarf }
		orlghelovar_area = {  add_core = I12  change_culture = cobalt_dwarf }
		stunad_skomdihr_area = {  add_core = I13  change_culture = flint_dwarf }
		vazumbrog_area = {  add_core = I14  change_culture = titanium_dwarf }
		hehos_legacy_area = {  add_core = I15  change_culture = pyrite_dwarf }
		gor_burad_area = {  add_core = I16  change_culture = basalt_dwarf }
		ozumbrog_area = {  add_core = I17  change_culture = topaz_dwarf }
		grozumdihr_area = {  add_core = I18  change_culture = peridot_dwarf }
		ovdal_az_an_area = {  add_core = I19  change_culture = granite_dwarf }
		hul_az_krakazol_area = {  add_core = I20  change_culture = amethyst_dwarf }
		tuwad_area = {  add_core = I21  change_culture = emerald_dwarf }
		gronstunad_area = { add_core = I22  change_culture = jade_dwarf }
		dromak_area = {  add_core = I25  change_culture = malachite_dwarf }
		arg_ordstun_area = {  add_core = H76  change_culture = diamond_dwarf }
		ovdal_lodhum_area = {  add_core = H77  change_culture = garnet_dwarf }
		verkal_gulan_area = {  add_core = F47  change_culture = gold_dwarf }
		kanzad_area = {  add_core = H79  change_culture = amber_dwarf }
		seghdihr_area = {  add_core = H78  change_culture = citrine_dwarf }
	}
}

spawn_dwarovar_goblin_rebels = {
	#undergrowth
	if = {
		limit = { superregion = east_serpentspine_superregion }
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = undergrowth_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#coldcave
	else_if = {
		limit = { 
			OR = {
				area = lonely_mountains_area
				area = dead_end_tunnel_area
				area = krakdhum_area
				area = anvils_horn_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = coldcave_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#rustroad
	else_if = {
		limit = { 
			OR = {
				area = mithradhum_area
				area = dwarovrod_10_12_area
				area = railyard_exchange_area
				area = railyard_area
				area = skulkers_lair_area
				area = goblins_bypass_area
				area = broken_dagger_pass_area
				area = dagrinrod_4_6_area
				area = dagrite_depths_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = rustroad_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#crawler
	else_if = {
		limit = { 
			OR = {
				area = westnest_area
				area = eastnest_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = crawler_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#skinburner
	else_if = {
		limit = { 
			OR = {
				area = argrod_14_16_area
				area = gor_burad_area
				area = zarn_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = skinburner_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#straggler
	else_if = {
		limit = { 
			OR = {
				area = ovdal_lodhum_area
				area = thievesbane_area
				area = argrod_6_8_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = straggler_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#goldtooth
	else_if = {
		limit = { 
			OR = {
				area = diggers_road_area
				area = goblin_grotto_area
				area = dwarovrod_33_35_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = goldtooth_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#trolltamer
	else_if = {
		limit = { 
			OR = {
				area = greatcavern_area
				area = xazor_area
				area = ulagom_area
			}
		}
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = trolltamer_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
	#cave
	else = {
		spawn_rebels = {
			type = cave_goblin_rebel
			culture = cave_goblin
			size = $size$
			[[win]win = $win$]
		}
	}
}

################
### Obsidian ###
################
the_fallen_invasion_army = {
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
	H94 = { artillery = PREV }
}
the_fallen_invasion_infiltrator = {
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
	H94 = { infantry = PREV }
}
increase_runelink_upkeep = {
	if = {
		limit = { has_province_modifier = runelink_upkeep_1 }
		remove_province_modifier = runelink_upkeep_1
		add_permanent_province_modifier = {
			name = runelink_upkeep_2
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_2 }
		remove_province_modifier = runelink_upkeep_2
		add_permanent_province_modifier = {
			name = runelink_upkeep_3
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_3 }
		remove_province_modifier = runelink_upkeep_3
		add_permanent_province_modifier = {
			name = runelink_upkeep_4
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_4 }
		remove_province_modifier = runelink_upkeep_4
		add_permanent_province_modifier = {
			name = runelink_upkeep_5
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_5 }
		remove_province_modifier = runelink_upkeep_5
		add_permanent_province_modifier = {
			name = runelink_upkeep_6
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_6 }
		remove_province_modifier = runelink_upkeep_6
		add_permanent_province_modifier = {
			name = runelink_upkeep_7
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_7 }
		remove_province_modifier = runelink_upkeep_7
		add_permanent_province_modifier = {
			name = runelink_upkeep_8
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_8 }
		remove_province_modifier = runelink_upkeep_8
		add_permanent_province_modifier = {
			name = runelink_upkeep_9
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_9 }
		remove_province_modifier = runelink_upkeep_9
		add_permanent_province_modifier = {
			name = runelink_upkeep_10
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_10 }
		remove_province_modifier = runelink_upkeep_10
		add_permanent_province_modifier = {
			name = runelink_upkeep_11
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_11 }
		remove_province_modifier = runelink_upkeep_11
		add_permanent_province_modifier = {
			name = runelink_upkeep_12
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_12 }
		remove_province_modifier = runelink_upkeep_12
		add_permanent_province_modifier = {
			name = runelink_upkeep_13
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_13 }
		remove_province_modifier = runelink_upkeep_13
		add_permanent_province_modifier = {
			name = runelink_upkeep_14
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_14 }
		remove_province_modifier = runelink_upkeep_14
		add_permanent_province_modifier = {
			name = runelink_upkeep_15
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_15 }
		remove_province_modifier = runelink_upkeep_15
		add_permanent_province_modifier = {
			name = runelink_upkeep_16
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_16 }
		remove_province_modifier = runelink_upkeep_16
		add_permanent_province_modifier = {
			name = runelink_upkeep_17
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_17 }
		remove_province_modifier = runelink_upkeep_17
		add_permanent_province_modifier = {
			name = runelink_upkeep_18
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_18 }
		remove_province_modifier = runelink_upkeep_18
		add_permanent_province_modifier = {
			name = runelink_upkeep_19
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_19 }
		remove_province_modifier = runelink_upkeep_19
		add_permanent_province_modifier = {
			name = runelink_upkeep_20
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_20 }
		remove_province_modifier = runelink_upkeep_20
		add_permanent_province_modifier = {
			name = runelink_upkeep_21
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_21 }
		remove_province_modifier = runelink_upkeep_21
		add_permanent_province_modifier = {
			name = runelink_upkeep_22
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_22 }
		remove_province_modifier = runelink_upkeep_22
		add_permanent_province_modifier = {
			name = runelink_upkeep_23
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_23 }
		remove_province_modifier = runelink_upkeep_23
		add_permanent_province_modifier = {
			name = runelink_upkeep_24
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_24 }
		remove_province_modifier = runelink_upkeep_24
		add_permanent_province_modifier = {
			name = runelink_upkeep_25
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_25 }
		remove_province_modifier = runelink_upkeep_25
		add_permanent_province_modifier = {
			name = runelink_upkeep_26
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_26 }
		remove_province_modifier = runelink_upkeep_26
		add_permanent_province_modifier = {
			name = runelink_upkeep_27
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_27 }
		remove_province_modifier = runelink_upkeep_27
		add_permanent_province_modifier = {
			name = runelink_upkeep_28
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_28 }
		remove_province_modifier = runelink_upkeep_28
		add_permanent_province_modifier = {
			name = runelink_upkeep_29
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_29 }
		remove_province_modifier = runelink_upkeep_29
		add_permanent_province_modifier = {
			name = runelink_upkeep_30
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_30 }
		remove_province_modifier = runelink_upkeep_30
		add_permanent_province_modifier = {
			name = runelink_upkeep_31
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_31 }
		remove_province_modifier = runelink_upkeep_31
		add_permanent_province_modifier = {
			name = runelink_upkeep_32
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_32 }
		remove_province_modifier = runelink_upkeep_32
		add_permanent_province_modifier = {
			name = runelink_upkeep_33
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_33 }
		remove_province_modifier = runelink_upkeep_33
		add_permanent_province_modifier = {
			name = runelink_upkeep_34
			duration = -1
		}
	}
	else_if = {
		limit = { has_province_modifier = runelink_upkeep_34 }
		remove_province_modifier = runelink_upkeep_34
		add_permanent_province_modifier = {
			name = runelink_upkeep_35
			duration = -1
		}
	}
}
runedemand_effect = {
	if = {
		limit = { owner = { check_variable = { runeSize = 7 } } }
		add_base_production = -2
		add_base_manpower = -2
		add_base_tax = -3
	}
	else_if = {
		limit = { owner = { check_variable = { runeSize = 6 } } }
		add_base_production = -2
		add_base_manpower = -2
		add_base_tax = -2
	}
	else_if = {
		limit = { owner = { check_variable = { runeSize = 5 } } }
		add_base_production = -2
		add_base_manpower = -1
		add_base_tax = -2
	}
	else_if = {
		limit = { owner = { check_variable = { runeSize = 4 } } }
		add_base_production = -1
		add_base_manpower = -1
		add_base_tax = -2
	}
	else_if = {
		limit = { owner = { check_variable = { runeSize = 3 } } }
		add_base_production = -1
		add_base_manpower = -1
		add_base_tax = -1
	}
	else_if = {
		limit = { owner = { check_variable = { runeSize = 2 } } }
		add_base_production = -1
		add_base_manpower = -1
	}
	else_if = {
		limit = { owner = { check_variable = { runeSize = 1 } } }
		add_base_production = -1
	}
}




#############
### Holds ###
#############
define_hold_to_clear = {
	random_owned_province = {
		limit = { has_province_modifier = infested_hold is_city = yes NOT = { has_province_flag = infested_@ROOT } }
		set_province_flag = option_infested_1_@ROOT
		set_province_flag = infested_@ROOT
		save_event_target_as = infested1
	}
	random_owned_province = {
		limit = { has_province_modifier = infested_hold is_city = yes NOT = { has_province_flag = infested_@ROOT } }
		set_province_flag = option_infested_2_@ROOT
		set_province_flag = infested_@ROOT
		save_event_target_as = infested2
	}
	random_owned_province = {
		limit = { has_province_modifier = infested_hold is_city = yes NOT = { has_province_flag = infested_@ROOT } }
		set_province_flag = option_infested_3_@ROOT
		set_province_flag = infested_@ROOT
		save_event_target_as = infested3
	}
	random_owned_province = {
		limit = { has_province_modifier = infested_hold is_city = yes NOT = { has_province_flag = infested_@ROOT } }
		set_province_flag = option_infested_4_@ROOT
		set_province_flag = infested_@ROOT
		save_event_target_as = infested4
	}
}
infested_hold_clearing = {
	trigger_switch = {
		on_trigger = development
		
		35 = { spawn_rebels = { type = cave_orc_rebel culture = black_orc size = 1 } spawn_rebels = { type = cave_orc_rebel culture = black_orc size = 1 } spawn_rebels = { type = cave_orc_rebel culture = black_orc size = 1 } }
		20 = { spawn_rebels = { type = cave_orc_rebel culture = black_orc size = 1 } spawn_rebels = { type = cave_orc_rebel culture = black_orc size = 1 } }
		3 = { spawn_rebels = { type = cave_orc_rebel culture = black_orc size = 1 } }
	}
	remove_province_modifier = infested_hold
	add_permanent_province_modifier = {
		name = ruined_hold
		duration = -1
	}
	hidden_effect = {
		owner = {
			every_owned_province = {
				limit = { has_province_flag = infested_@ROOT }
				clr_province_flag = infested_@ROOT
				clr_province_flag = option_infested_1_@ROOT
				clr_province_flag = option_infested_2_@ROOT
				clr_province_flag = option_infested_3_@ROOT
				clr_province_flag = option_infested_4_@ROOT
			}
			clr_country_flag = open_infested_hold_menu
		}
	}
}


cap_digging_speed = { #caps the speed to -90% local build time
	export_to_variable = {
		value = modifier:local_build_time
		variable_name = digcap_variable
	}
	export_to_variable = {
		value = modifier:build_time
		variable_name = digcap_variable_country
		who = owner
	}
	change_variable = { which = digcap_variable which = digcap_variable_country }
	if = {
		limit = { NOT = { check_variable = { digcap_variable = 0.01 } } }
		multiply_variable = { which = digcap_variable value = -1 }
	}
	if = {
		limit = { check_variable = { digcap_variable = 2 } }
		add_province_modifier = { name = digging_speedcap_100 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_10 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.95 } }
		add_province_modifier = { name = digging_speedcap_100 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_10 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.9 } }
		add_province_modifier = { name = digging_speedcap_100 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_10 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.85 } }
		add_province_modifier = { name = digging_speedcap_100 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.8 } }
		add_province_modifier = { name = digging_speedcap_50 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.75 } }
		add_province_modifier = { name = digging_speedcap_50 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.7 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_40_2 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.65 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_40_2 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.6 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_30 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.55 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_30 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.5 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_20 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.45 } }
		add_province_modifier = { name = digging_speedcap_50 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_10 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.4 } }
		add_province_modifier = { name = digging_speedcap_50 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.35 } }
		add_province_modifier = { name = digging_speedcap_50 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.3 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.25 } }
		add_province_modifier = { name = digging_speedcap_40 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.2 } }
		add_province_modifier = { name = digging_speedcap_30 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.15 } }
		add_province_modifier = { name = digging_speedcap_30 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.1 } }
		add_province_modifier = { name = digging_speedcap_20 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.05 } }
		add_province_modifier = { name = digging_speedcap_20 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 1.0 } }
		add_province_modifier = { name = digging_speedcap_10 duration = 1 hidden = yes } add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 0.95 } }
		add_province_modifier = { name = digging_speedcap_10 duration = 1 hidden = yes }
	}
	else_if = {
		limit = { check_variable = { digcap_variable = 0.9 } }
		add_province_modifier = { name = digging_speedcap_5 duration = 1 hidden = yes }
	}
}
uncap_digging_speed = {
	remove_province_modifier = digging_speedcap_5
	remove_province_modifier = digging_speedcap_10
	remove_province_modifier = digging_speedcap_20
	remove_province_modifier = digging_speedcap_30
	remove_province_modifier = digging_speedcap_40
	remove_province_modifier = digging_speedcap_50
	remove_province_modifier = digging_speedcap_100
	set_variable = { digcap_variable = 0 }
	set_variable = { digcap_variable_country = 0 }
}


#repairs
define_hold_to_repair = {
	if = { #blorcs can only repair their capital
		limit = { culture = black_orc }
		capital_scope = {
			set_province_flag = option_repair_1_@ROOT
			set_province_flag = repair_@ROOT
			remove_province_modifier = blorc_plunder_camp
			remove_province_modifier = blorc_war_camp
			save_event_target_as = repair1
			setup_restoration_speed = yes
		}
	}
	else = {
		random_owned_province = {
			limit = { OR = { has_province_modifier = ruined_hold has_province_modifier = partially_ruined_hold has_province_modifier = damaged_hold } NOT = { has_construction = any has_province_flag = repair_@ROOT has_province_modifier = blorc_plunder_camp } is_city = yes is_core = ROOT NOT = { has_province_flag = cannot_repair_hold } }
			set_province_flag = option_repair_1_@ROOT
			set_province_flag = repair_@ROOT
			save_event_target_as = repair1
			setup_restoration_speed = yes
		}
		random_owned_province = {
			limit = { OR = { has_province_modifier = ruined_hold has_province_modifier = partially_ruined_hold has_province_modifier = damaged_hold } NOT = { has_construction = any has_province_flag = repair_@ROOT has_province_modifier = blorc_plunder_camp } is_city = yes is_core = ROOT NOT = { has_province_flag = cannot_repair_hold } }
			set_province_flag = option_repair_2_@ROOT
			set_province_flag = repair_@ROOT
			save_event_target_as = repair2
			setup_restoration_speed = yes
		}
		random_owned_province = {
			limit = { OR = { has_province_modifier = ruined_hold has_province_modifier = partially_ruined_hold has_province_modifier = damaged_hold } NOT = { has_construction = any has_province_flag = repair_@ROOT has_province_modifier = blorc_plunder_camp } is_city = yes is_core = ROOT NOT = { has_province_flag = cannot_repair_hold } }
			set_province_flag = option_repair_3_@ROOT
			set_province_flag = repair_@ROOT
			save_event_target_as = repair3
			setup_restoration_speed = yes
		}
		random_owned_province = {
			limit = { OR = { has_province_modifier = ruined_hold has_province_modifier = partially_ruined_hold has_province_modifier = damaged_hold } NOT = { has_construction = any has_province_flag = repair_@ROOT has_province_modifier = blorc_plunder_camp } is_city = yes is_core = ROOT NOT = { has_province_flag = cannot_repair_hold } }
			set_province_flag = option_repair_4_@ROOT
			set_province_flag = repair_@ROOT
			save_event_target_as = repair4
			setup_restoration_speed = yes
		}
		random_owned_province = {
			limit = { OR = { has_province_modifier = ruined_hold has_province_modifier = partially_ruined_hold has_province_modifier = damaged_hold } NOT = { has_construction = any has_province_flag = repair_@ROOT has_province_modifier = blorc_plunder_camp } is_city = yes is_core = ROOT NOT = { has_province_flag = cannot_repair_hold } }
			set_province_flag = option_repair_5_@ROOT
			set_province_flag = repair_@ROOT
			save_event_target_as = repair5
			setup_restoration_speed = yes
		}
		random_owned_province = {
			limit = { OR = { has_province_modifier = ruined_hold has_province_modifier = partially_ruined_hold has_province_modifier = damaged_hold } NOT = { has_construction = any has_province_flag = repair_@ROOT has_province_modifier = blorc_plunder_camp } is_city = yes is_core = ROOT NOT = { has_province_flag = cannot_repair_hold } }
			set_province_flag = option_repair_6_@ROOT
			set_province_flag = repair_@ROOT
			save_event_target_as = repair6
			setup_restoration_speed = yes
		}
	}
}
setup_restoration_speed = {
	hidden_effect = {
		set_variable = { globalCost = 0 }
		set_variable = { globalTime = 0 }
		set_variable = { localCost = 0 }
		set_variable = { localTime = 0 }
		set_variable = { testCost = 0 }
		set_variable = { testTime = 0 }
		set_variable = { Cost = 0 }
		set_variable = { Time = 0 }
		trigger_switch = {
			on_trigger = development
			
			100 = { set_variable = { speed = 35 } }
			97 = { set_variable = { speed = 34 } }
			94 = { set_variable = { speed = 33 } }
			91 = { set_variable = { speed = 32 } }
			88 = { set_variable = { speed = 31 } }
			85 = { set_variable = { speed = 30 } }
			82 = { set_variable = { speed = 29 } }
			79 = { set_variable = { speed = 28 } }
			76 = { set_variable = { speed = 27 } }
			73 = { set_variable = { speed = 26 } }
			70 = { set_variable = { speed = 25 } }
			67 = { set_variable = { speed = 24 } }
			64 = { set_variable = { speed = 23 } }
			61 = { set_variable = { speed = 22 } }
			58 = { set_variable = { speed = 21 } }
			55 = { set_variable = { speed = 20 } }
			52 = { set_variable = { speed = 19 } }
			49 = { set_variable = { speed = 18 } }
			46 = { set_variable = { speed = 17 } }
			43 = { set_variable = { speed = 16 } }
			40 = { set_variable = { speed = 15 } }
			37 = { set_variable = { speed = 14 } }
			34 = { set_variable = { speed = 13 } }
			31 = { set_variable = { speed = 12 } }
			28 = { set_variable = { speed = 11 } }
			25 = { set_variable = { speed = 10 } }
			22 = { set_variable = { speed = 9 } }
			19 = { set_variable = { speed = 8 } }
			16 = { set_variable = { speed = 7 } }
			13 = { set_variable = { speed = 6 } }
			10 = { set_variable = { speed = 5 } }
			7 = { set_variable = { speed = 4 } }
			4 = { set_variable = { speed = 3 } }
			3 = { set_variable = { speed = 2 } }
		}
		if = {
			limit = { has_coexisting_dwarven_pop_trigger = yes }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { has_integrated_dwarven_pop_trigger = yes }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { is_capital = yes }
			multiply_variable = { speed = 0.5 }
		}
		if = {
			limit = { owner = { NOT = { num_of_cities = 2 } } }
			multiply_variable = { speed = 0.2 }
		}
		if = {
			limit = { has_province_modifier = ruined_hold }
			multiply_variable = { speed = 1.2 }
		}
		if = {
			limit = { has_province_modifier = partially_ruined_hold }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { has_province_modifier = damaged_hold }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { has_country_modifier = how_to_dig } }
			multiply_variable = { speed = 0.95 }
		}
		if = {
			limit = { owner = { has_country_flag = remnant_dig } }
			multiply_variable = { speed = 0.95 }
		}
		if = {
			limit = { 
				owner = { 
					NOT = { 
						has_country_modifier = dwarven_administration 
						has_country_modifier = goblin_administration
						has_country_modifier = kobold_administration
					}
				}
			}
			multiply_variable = { speed = 1.5 }
		}
		if = {
			limit = { 
				owner = { 
					OR = { 
						has_country_modifier = goblin_administration
						has_country_modifier = kobold_administration
					}
				}
			}
			multiply_variable = { speed = 1.2 }
		}
		if = {
			limit = { owner = { has_age_ability = ab_dwarven_reclamation } }
			multiply_variable = { speed = 0.8 }
		}
	}
	if = {
		limit = { check_variable = { speed = 30 } }
		set_variable = { speed = 30 }
	}
	if = {
		limit = { NOT = { check_variable = { speed = 5 } } }
		set_variable = { speed = 5 }
	}
	multiply_variable = { speed = 0.001 }
	multiply_variable = { speed = 1000 }#Final Cost in Ducats
	export_to_variable = {
		which = globalCost
		value = modifier:build_cost
		who = PREV
	}
	export_to_variable = {
		which = globalTime
		value = modifier:build_time
		who = PREV
	}
	export_to_variable = {
		which = localCost
		value = modifier:local_build_cost
	}
	export_to_variable = {
		which = localTime
		value = modifier:local_build_time
	}
	change_variable = {
		which = localCost
		which = globalCost
	}
	change_variable = {
		which = localTime
		which = globalTime
	}

	##these are just for the tooltips
	#cap time to -85%
	if = {
		limit = { NOT = { check_variable = { localTime = -0.860 } } }
		set_variable = { localTime = -0.850 }
	}
	#cap cost to -90%
	if = {
		limit = { NOT = { check_variable = { localCost = -0.910 } } }
		set_variable = { localCost = -0.900 }
	}
	
	change_variable = { Cost = 1 }
	change_variable = { Time = 1 }
	change_variable = { which = Cost which = localCost }
	change_variable = { which = Time which = localTime }
	
	set_variable = { which = finalCost which = speed }
	multiply_variable = { which = finalCost which = finalCost }
	divide_variable = { finalCost = 10 }
	divide_variable = { finalCost = 2 }
	multiply_variable = { finalCost = 100 } #speed?/10/2x100
	multiply_variable = { which = finalCost which = Cost }
	multiply_variable = { finalCost = 0.001 }
	multiply_variable = { finalCost = 1000 }#Final Cost in Ducats
	
	set_variable = { which = finalTime which = speed }
	multiply_variable = { which = finalTime which = Time } #Final Time in Years
}
repair_hold = {
	# custom_tooltip = see_speed_value
	hidden_effect = { cancel_construction = yes }
	if = {
		limit = { has_province_modifier = ruined_hold }
		trigger_switch = {
			on_trigger = development
			
			100 = { owner = { add_mil_power = -500 add_dip_power = -500 add_adm_power = -500 } }
			90 = { owner = { add_mil_power = -450 add_dip_power = -450 add_adm_power = -450 } }
			80 = { owner = { add_mil_power = -400 add_dip_power = -400 add_adm_power = -400 } }
			70 = { owner = { add_mil_power = -350 add_dip_power = -350 add_adm_power = -350 } }
			60 = { owner = { add_mil_power = -300 add_dip_power = -300 add_adm_power = -300 } }
			50 = { owner = { add_mil_power = -250 add_dip_power = -250 add_adm_power = -250 } }
			40 = { owner = { add_mil_power = -200 add_dip_power = -200 add_adm_power = -200 } }
			30 = { owner = { add_mil_power = -150 add_dip_power = -150 add_adm_power = -150 } }
			20 = { owner = { add_mil_power = -100 add_dip_power = -100 add_adm_power = -100 } }
			10 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
			3 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
		}
	}
	else_if = {
		limit = { has_province_modifier = partially_ruined_hold }
		trigger_switch = {
			on_trigger = development
			
			100 = { owner = { add_mil_power = -400 add_dip_power = -400 add_adm_power = -400 } }
			90 = { owner = { add_mil_power = -350 add_dip_power = -350 add_adm_power = -350 } }
			80 = { owner = { add_mil_power = -325 add_dip_power = -325 add_adm_power = -325 } }
			70 = { owner = { add_mil_power = -300 add_dip_power = -300 add_adm_power = -300 } }
			60 = { owner = { add_mil_power = -250 add_dip_power = -250 add_adm_power = -250 } }
			50 = { owner = { add_mil_power = -200 add_dip_power = -200 add_adm_power = -200 } }
			40 = { owner = { add_mil_power = -175 add_dip_power = -175 add_adm_power = -175 } }
			30 = { owner = { add_mil_power = -150 add_dip_power = -150 add_adm_power = -150 } }
			20 = { owner = { add_mil_power = -100 add_dip_power = -100 add_adm_power = -100 } }
			10 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
			3 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
		}
	}
	else_if = {
		limit = { has_province_modifier = damaged_hold }
		trigger_switch = {
			on_trigger = development
			
			100 = { owner = { add_mil_power = -300 add_dip_power = -300 add_adm_power = -300 } }
			90 = { owner = { add_mil_power = -275 add_dip_power = -275 add_adm_power = -275 } }
			80 = { owner = { add_mil_power = -250 add_dip_power = -250 add_adm_power = -250 } }
			70 = { owner = { add_mil_power = -225 add_dip_power = -225 add_adm_power = -225 } }
			60 = { owner = { add_mil_power = -175 add_dip_power = -175 add_adm_power = -175 } }
			50 = { owner = { add_mil_power = -125 add_dip_power = -125 add_adm_power = -125 } }
			40 = { owner = { add_mil_power = -100 add_dip_power = -100 add_adm_power = -100 } }
			30 = { owner = { add_mil_power = -75 add_dip_power = -75 add_adm_power = -75 } }
			20 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
			10 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
			3 = { owner = { add_mil_power = -50 add_dip_power = -50 add_adm_power = -50 } }
		}
	}
	# custom_tooltip = see_speed_value
	custom_tooltip = cost_hold_restoration_tooltip
	hidden_effect = {
		cap_digging_speed = yes
		if = { limit = { check_variable = { speed = 35 } } add_building_construction = { building = restoring_hold speed = 35 cost = 6125 } }
		else_if = { limit = { check_variable = { speed = 34 } } add_building_construction = { building = restoring_hold speed = 34 cost = 5780 } }
		else_if = { limit = { check_variable = { speed = 33 } } add_building_construction = { building = restoring_hold speed = 33 cost = 5445 } }
		else_if = { limit = { check_variable = { speed = 32 } } add_building_construction = { building = restoring_hold speed = 32 cost = 5120 } }
		else_if = { limit = { check_variable = { speed = 31 } } add_building_construction = { building = restoring_hold speed = 31 cost = 4805 } }
		else_if = { limit = { check_variable = { speed = 30 } } add_building_construction = { building = restoring_hold speed = 30 cost = 4500 } }
		else_if = { limit = { check_variable = { speed = 29 } } add_building_construction = { building = restoring_hold speed = 29 cost = 4205 } }
		else_if = { limit = { check_variable = { speed = 28 } } add_building_construction = { building = restoring_hold speed = 28 cost = 3920 } }
		else_if = { limit = { check_variable = { speed = 27 } } add_building_construction = { building = restoring_hold speed = 27 cost = 3645 } }
		else_if = { limit = { check_variable = { speed = 26 } } add_building_construction = { building = restoring_hold speed = 26 cost = 3380 } }
		else_if = { limit = { check_variable = { speed = 25 } } add_building_construction = { building = restoring_hold speed = 25 cost = 3125 } }
		else_if = { limit = { check_variable = { speed = 24 } } add_building_construction = { building = restoring_hold speed = 24 cost = 2880 } }
		else_if = { limit = { check_variable = { speed = 23 } } add_building_construction = { building = restoring_hold speed = 23 cost = 2645 } }
		else_if = { limit = { check_variable = { speed = 22 } } add_building_construction = { building = restoring_hold speed = 22 cost = 2420 } }
		else_if = { limit = { check_variable = { speed = 21 } } add_building_construction = { building = restoring_hold speed = 21 cost = 2205 } }
		else_if = { limit = { check_variable = { speed = 20 } } add_building_construction = { building = restoring_hold speed = 20 cost = 2000 } }
		else_if = { limit = { check_variable = { speed = 19 } } add_building_construction = { building = restoring_hold speed = 19 cost = 1805 } }
		else_if = { limit = { check_variable = { speed = 18 } } add_building_construction = { building = restoring_hold speed = 18 cost = 1620 } }
		else_if = { limit = { check_variable = { speed = 17 } } add_building_construction = { building = restoring_hold speed = 17 cost = 1445 } }
		else_if = { limit = { check_variable = { speed = 16 } } add_building_construction = { building = restoring_hold speed = 16 cost = 1280 } }
		else_if = { limit = { check_variable = { speed = 15 } } add_building_construction = { building = restoring_hold speed = 15 cost = 1125 } }
		else_if = { limit = { check_variable = { speed = 14 } } add_building_construction = { building = restoring_hold speed = 14 cost = 980 } }
		else_if = { limit = { check_variable = { speed = 13 } } add_building_construction = { building = restoring_hold speed = 13 cost = 845 } }
		else_if = { limit = { check_variable = { speed = 12 } } add_building_construction = { building = restoring_hold speed = 12 cost = 720 } }
		else_if = { limit = { check_variable = { speed = 11 } } add_building_construction = { building = restoring_hold speed = 11 cost = 605 } }
		else_if = { limit = { check_variable = { speed = 10 } } add_building_construction = { building = restoring_hold speed = 10 cost = 500 } }
		else_if = { limit = { check_variable = { speed = 9 } } add_building_construction = { building = restoring_hold speed = 9 cost = 405 } }
		else_if = { limit = { check_variable = { speed = 8 } } add_building_construction = { building = restoring_hold speed = 8 cost = 320 } }
		else_if = { limit = { check_variable = { speed = 7 } } add_building_construction = { building = restoring_hold speed = 7 cost = 245 } }
		else_if = { limit = { check_variable = { speed = 6 } } add_building_construction = { building = restoring_hold speed = 6 cost = 180 } }
		else = { limit = { check_variable = { speed = 5 } } add_building_construction = { building = restoring_hold speed = 5 cost = 125 } }
		uncap_digging_speed = yes
		set_province_flag = being_restored
	}
}
repair_hold_ai = { #They're so dumb it's insane
	set_province_flag = being_restored
	cancel_construction = yes
	trigger_switch = {
		on_trigger = development
		
		120 = { add_building_construction = { building = restoring_hold speed = 23 cost = 500 } }
		115 = { add_building_construction = { building = restoring_hold speed = 22 cost = 400 } }
		110 = { add_building_construction = { building = restoring_hold speed = 21 cost = 400 } }
		105 = { add_building_construction = { building = restoring_hold speed = 20 cost = 400 } }
		100 = { add_building_construction = { building = restoring_hold speed = 19 cost = 400 } }
		95 = { add_building_construction = { building = restoring_hold speed = 18 cost = 400 } }
		90 = { add_building_construction = { building = restoring_hold speed = 17 cost = 300 } }
		85 = { add_building_construction = { building = restoring_hold speed = 16 cost = 300 } }
		80 = { add_building_construction = { building = restoring_hold speed = 15 cost = 300 } }
		75 = { add_building_construction = { building = restoring_hold speed = 14 cost = 300 } }
		70 = { add_building_construction = { building = restoring_hold speed = 13 cost = 300 } }
		65 = { add_building_construction = { building = restoring_hold speed = 12 cost = 200 } }
		60 = { add_building_construction = { building = restoring_hold speed = 11 cost = 200 } }
		55 = { add_building_construction = { building = restoring_hold speed = 10 cost = 200 } }
		50 = { add_building_construction = { building = restoring_hold speed = 9 cost = 200 } }
		45 = { add_building_construction = { building = restoring_hold speed = 8 cost = 200 } }
		40 = { add_building_construction = { building = restoring_hold speed = 7 cost = 100 } }
		35 = { add_building_construction = { building = restoring_hold speed = 6 cost = 100 } }
		20 = { add_building_construction = { building = restoring_hold speed = 5 cost = 100 } }
		15 = { add_building_construction = { building = restoring_hold speed = 4 cost = 100 } }
		10 = { add_building_construction = { building = restoring_hold speed = 3 cost = 100 } }
		3 = { add_building_construction = { building = restoring_hold speed = 2 cost = 100 } }
		1 = { add_building_construction = { building = restoring_hold speed = 1 cost = 100 } }
	}
}
restored_hold = {
	remove_province_modifier = damaged_hold
	remove_province_modifier = partially_ruined_hold
	hidden_effect = { clr_province_flag = being_restored }
	if = {
		limit = { has_province_modifier = ruined_hold }
		trigger_switch = {
			on_trigger = development
			100 = { add_permanent_province_modifier = { name = dig_8 duration = -1 } }
			90 = { add_permanent_province_modifier = { name = dig_7 duration = -1 } }
			80 = { add_permanent_province_modifier = { name = dig_6 duration = -1 } }
			70 = { add_permanent_province_modifier = { name = dig_5 duration = -1 } }
			60 = { add_permanent_province_modifier = { name = dig_4 duration = -1 } }
			50 = { add_permanent_province_modifier = { name = dig_3 duration = -1 } }
			40 = { add_permanent_province_modifier = { name = dig_2 duration = -1 } }
			3 = { add_permanent_province_modifier = { name = dig_1 duration = -1 } }
		}
		remove_province_modifier = ruined_hold
	}
}

#capital
setup_digging_deeper_capital = {
	hidden_effect = {
		# trigger_switch = {
			# on_trigger = has_province_modifier
			
			# dig_1 = { set_variable = { speed = 10 } }
			# dig_2 = { set_variable = { speed = 20 } }
			# dig_3 = { set_variable = { speed = 25 } }
			# dig_4 = { set_variable = { speed = 30 } }
			# dig_5 = { set_variable = { speed = 35 } }
			# dig_6 = { set_variable = { speed = 40 } }
			# dig_7 = { set_variable = { speed = 45 } }
			# dig_8 = { set_variable = { speed = 50 } }
			# dig_9 = { set_variable = { speed = 55 } }
			# dig_10 = { set_variable = { speed = 60 } }
		# }
		if = {
			limit = { has_province_modifier = dig_1 }
			set_variable = { speed = 10 }
		}
		else_if = {
			limit = { has_province_modifier = dig_2 }
			set_variable = { speed = 20 }
		}
		else_if = {
			limit = { has_province_modifier = dig_3 }
			set_variable = { speed = 25 }
		}
		else_if = {
			limit = { has_province_modifier = dig_4 }
			set_variable = { speed = 30 }
		}
		else_if = {
			limit = { has_province_modifier = dig_5 }
			set_variable = { speed = 35 }
		}
		else_if = {
			limit = { has_province_modifier = dig_6 }
			set_variable = { speed = 40 }
		}
		else_if = {
			limit = { has_province_modifier = dig_7 }
			set_variable = { speed = 45 }
		}
		else_if = {
			limit = { has_province_modifier = dig_8 }
			set_variable = { speed = 50 }
		}
		else_if = {
			limit = { has_province_modifier = dig_9 }
			set_variable = { speed = 55 }
		}
		else_if = {
			limit = { has_province_modifier = dig_10 }
			set_variable = { speed = 60 }
		}
		set_variable = { globalCost = 0 }
		set_variable = { globalTime = 0 }
		set_variable = { localCost = 0 }
		set_variable = { localTime = 0 }
		set_variable = { testCost = 0 }
		set_variable = { testTime = 0 }
		set_variable = { Cost = 0 }
		set_variable = { Time = 0 }

		if = {
			limit = { has_province_modifier = easy_rock }
			multiply_variable = { speed = 0.8 }
		}
		
		if = {
			limit = { has_terrain = dwarven_hold continent = serpentspine }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { province_id = 4119 }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { province_id = 4311 }
			multiply_variable = { speed = 0.95 }
		}
		if = {
			limit = { owner = { has_country_flag = dig_through } }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { has_country_flag = remnant_dig } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { owner = { has_country_flag = not_dig_through } }
			multiply_variable = { speed = 1.2 }
		}
		if = {
			limit = { owner = { has_country_modifier = how_to_dig } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { owner = { has_country_modifier = dadv_digging_expert } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { 
				owner = { 
					NOT = { 
						has_country_modifier = dwarven_administration 
						has_country_modifier = goblin_administration
						has_country_modifier = kobold_administration
					}
				}
			}
			multiply_variable = { speed = 1.5 }
		}
		if = {
			limit = { 
				owner = { 
					OR = { 
						has_country_modifier = goblin_administration
						has_country_modifier = kobold_administration
					}
				}
			}
			multiply_variable = { speed = 1.2 }
		}
		if = {
			limit = { owner = { has_age_ability = ab_dwarven_reclamation } }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_1 } }
			multiply_variable = { speed = 0.99 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_2 } }
			multiply_variable = { speed = 0.98 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_3 } }
			multiply_variable = { speed = 0.96 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_4 } }
			multiply_variable = { speed = 0.94 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_5 } }
			multiply_variable = { speed = 0.92 }
		}
		if = {
			limit = { owner = { OR = { has_ruler_modifier = krakazol_drinking_digging_6 has_ruler_modifier = krakazol_drinking_digging_7 has_country_modifier = krakazol_drinking_digging_perm } } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { owner = { has_country_modifier = orlghelovar_laser_cutter } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { owner = { has_estate_privilege = artifice_invention_snotfinger_stimulant } }
			multiply_variable = { speed = 0.9 }
		}
		
		if = {
			limit = { check_variable = { speed = 80 } }
			set_variable = { speed = 80 }
		}
		if = {
			limit = { NOT = { check_variable = { speed = 10 } } }
			set_variable = { speed = 10 }
		}
		multiply_variable = { speed = 0.001 }
		multiply_variable = { speed = 1000 }#Final Cost in Ducats
		export_to_variable = {
			which = globalCost
			value = modifier:build_cost
			who = PREV
		}
		export_to_variable = {
			which = globalTime
			value = modifier:build_time
			who = PREV
		}
		export_to_variable = {
			which = localCost
			value = modifier:local_build_cost
		}
		export_to_variable = {
			which = localTime
			value = modifier:local_build_time
		}
		change_variable = {
			which = localCost
			which = globalCost
		}
		change_variable = {
			which = localTime
			which = globalTime
		}

		##these are just for the tooltips
		#cap time to -85
		if = {
			limit = { NOT = { check_variable = { localTime = -0.860 } } }
			set_variable = { localTime = -0.850 }
		}
		#cap cost to -90%
		if = {
			limit = { NOT = { check_variable = { localCost = -0.910 } } }
			set_variable = { localCost = -0.900 }
		}
		
		change_variable = { Cost = 1 }
		change_variable = { Time = 1 }
		change_variable = { which = Cost which = localCost }
		change_variable = { which = Time which = localTime }
		
		set_variable = { which = finalCost which = speed }
		multiply_variable = { which = finalCost which = finalCost }
		multiply_variable = { which = finalCost which = Cost }
		multiply_variable = { finalCost = 0.001 }
		multiply_variable = { finalCost = 1000 }#Final Cost in Ducats
		
		set_variable = { which = finalTime which = speed }
		multiply_variable = { which = finalTime which = Time } #Final Time in Years
	}
}
start_digging_deeper = {
	hidden_effect = { cancel_construction = yes cap_digging_speed = yes }
	custom_tooltip = cost_capital_dig_tooltip
	hidden_effect = {
			 if = { limit = { check_variable = { speed =	80	} } add_building_construction = { building = digging_deeper speed =	160	cost =	6400	} }
		else_if = { limit = { check_variable = { speed =	79	} } add_building_construction = { building = digging_deeper speed =	158	cost =	6241	} }
		else_if = { limit = { check_variable = { speed =	78	} } add_building_construction = { building = digging_deeper speed =	156	cost =	6084	} }
		else_if = { limit = { check_variable = { speed =	77	} } add_building_construction = { building = digging_deeper speed =	154	cost =	5929	} }
		else_if = { limit = { check_variable = { speed =	76	} } add_building_construction = { building = digging_deeper speed =	152	cost =	5776	} }
		else_if = { limit = { check_variable = { speed =	75	} } add_building_construction = { building = digging_deeper speed =	150	cost =	5625	} }
		else_if = { limit = { check_variable = { speed =	74	} } add_building_construction = { building = digging_deeper speed =	148	cost =	5476	} }
		else_if = { limit = { check_variable = { speed =	73	} } add_building_construction = { building = digging_deeper speed =	146	cost =	5329	} }
		else_if = { limit = { check_variable = { speed =	72	} } add_building_construction = { building = digging_deeper speed =	144	cost =	5184	} }
		else_if = { limit = { check_variable = { speed =	71	} } add_building_construction = { building = digging_deeper speed =	142	cost =	5041	} }
		else_if = { limit = { check_variable = { speed =	70	} } add_building_construction = { building = digging_deeper speed =	140	cost =	4900	} }
		else_if = { limit = { check_variable = { speed =	69	} } add_building_construction = { building = digging_deeper speed =	138	cost =	4761	} }
		else_if = { limit = { check_variable = { speed =	68	} } add_building_construction = { building = digging_deeper speed =	136	cost =	4624	} }
		else_if = { limit = { check_variable = { speed =	67	} } add_building_construction = { building = digging_deeper speed =	134	cost =	4489	} }
		else_if = { limit = { check_variable = { speed =	66	} } add_building_construction = { building = digging_deeper speed =	132	cost =	4356	} }
		else_if = { limit = { check_variable = { speed =	65	} } add_building_construction = { building = digging_deeper speed =	130	cost =	4225	} }
		else_if = { limit = { check_variable = { speed =	64	} } add_building_construction = { building = digging_deeper speed =	128	cost =	4096	} }
		else_if = { limit = { check_variable = { speed =	63	} } add_building_construction = { building = digging_deeper speed =	126	cost =	3969	} }
		else_if = { limit = { check_variable = { speed =	62	} } add_building_construction = { building = digging_deeper speed =	124	cost =	3844	} }
		else_if = { limit = { check_variable = { speed =	61	} } add_building_construction = { building = digging_deeper speed =	122	cost =	3721	} }
		else_if = { limit = { check_variable = { speed =	60	} } add_building_construction = { building = digging_deeper speed =	120	cost =	3600	} }
		else_if = { limit = { check_variable = { speed =	59	} } add_building_construction = { building = digging_deeper speed =	118	cost =	3481	} }
		else_if = { limit = { check_variable = { speed =	58	} } add_building_construction = { building = digging_deeper speed =	116	cost =	3364	} }
		else_if = { limit = { check_variable = { speed =	57	} } add_building_construction = { building = digging_deeper speed =	114	cost =	3249	} }
		else_if = { limit = { check_variable = { speed =	56	} } add_building_construction = { building = digging_deeper speed =	112	cost =	3136	} }
		else_if = { limit = { check_variable = { speed =	55	} } add_building_construction = { building = digging_deeper speed =	110	cost =	3025	} }
		else_if = { limit = { check_variable = { speed =	54	} } add_building_construction = { building = digging_deeper speed =	108	cost =	2916	} }
		else_if = { limit = { check_variable = { speed =	53	} } add_building_construction = { building = digging_deeper speed =	106	cost =	2809	} }
		else_if = { limit = { check_variable = { speed =	52	} } add_building_construction = { building = digging_deeper speed =	104	cost =	2704	} }
		else_if = { limit = { check_variable = { speed =	51	} } add_building_construction = { building = digging_deeper speed =	102	cost =	2601	} }
		else_if = { limit = { check_variable = { speed =	50	} } add_building_construction = { building = digging_deeper speed =	100	cost =	2500	} }
		else_if = { limit = { check_variable = { speed =	49	} } add_building_construction = { building = digging_deeper speed =	98	cost =	2401	} }
		else_if = { limit = { check_variable = { speed =	48	} } add_building_construction = { building = digging_deeper speed =	96	cost =	2304	} }
		else_if = { limit = { check_variable = { speed =	47	} } add_building_construction = { building = digging_deeper speed =	94	cost =	2209	} }
		else_if = { limit = { check_variable = { speed =	46	} } add_building_construction = { building = digging_deeper speed =	92	cost =	2116	} }
		else_if = { limit = { check_variable = { speed =	45	} } add_building_construction = { building = digging_deeper speed =	90	cost =	2025	} }
		else_if = { limit = { check_variable = { speed =	44	} } add_building_construction = { building = digging_deeper speed =	88	cost =	1936	} }
		else_if = { limit = { check_variable = { speed =	43	} } add_building_construction = { building = digging_deeper speed =	86	cost =	1849	} }
		else_if = { limit = { check_variable = { speed =	42	} } add_building_construction = { building = digging_deeper speed =	84	cost =	1764	} }
		else_if = { limit = { check_variable = { speed =	41	} } add_building_construction = { building = digging_deeper speed =	82	cost =	1681	} }
		else_if = { limit = { check_variable = { speed =	40	} } add_building_construction = { building = digging_deeper speed =	80	cost =	1600	} }
		else_if = { limit = { check_variable = { speed =	39	} } add_building_construction = { building = digging_deeper speed =	78	cost =	1521	} }
		else_if = { limit = { check_variable = { speed =	38	} } add_building_construction = { building = digging_deeper speed =	76	cost =	1444	} }
		else_if = { limit = { check_variable = { speed =	37	} } add_building_construction = { building = digging_deeper speed =	74	cost =	1369	} }
		else_if = { limit = { check_variable = { speed =	36	} } add_building_construction = { building = digging_deeper speed =	72	cost =	1296	} }
		else_if = { limit = { check_variable = { speed =	35	} } add_building_construction = { building = digging_deeper speed =	70	cost =	1225	} }
		else_if = { limit = { check_variable = { speed =	34	} } add_building_construction = { building = digging_deeper speed =	68	cost =	1156	} }
		else_if = { limit = { check_variable = { speed =	33	} } add_building_construction = { building = digging_deeper speed =	66	cost =	1089	} }
		else_if = { limit = { check_variable = { speed =	32	} } add_building_construction = { building = digging_deeper speed =	64	cost =	1024	} }
		else_if = { limit = { check_variable = { speed =	31	} } add_building_construction = { building = digging_deeper speed =	62	cost =	961 	} }
		else_if = { limit = { check_variable = { speed =	30	} } add_building_construction = { building = digging_deeper speed =	60	cost =	900 	} }
		else_if = { limit = { check_variable = { speed =	29	} } add_building_construction = { building = digging_deeper speed =	58	cost =	841 	} }
		else_if = { limit = { check_variable = { speed =	28	} } add_building_construction = { building = digging_deeper speed =	56	cost =	784 	} }
		else_if = { limit = { check_variable = { speed =	27	} } add_building_construction = { building = digging_deeper speed =	54	cost =	729 	} }
		else_if = { limit = { check_variable = { speed =	26	} } add_building_construction = { building = digging_deeper speed =	52	cost =	676 	} }
		else_if = { limit = { check_variable = { speed =	25	} } add_building_construction = { building = digging_deeper speed =	50	cost =	625 	} }
		else_if = { limit = { check_variable = { speed =	24	} } add_building_construction = { building = digging_deeper speed =	48	cost =	576 	} }
		else_if = { limit = { check_variable = { speed =	23	} } add_building_construction = { building = digging_deeper speed =	46	cost =	529 	} }
		else_if = { limit = { check_variable = { speed =	22	} } add_building_construction = { building = digging_deeper speed =	44	cost =	484 	} }
		else_if = { limit = { check_variable = { speed =	21	} } add_building_construction = { building = digging_deeper speed =	42	cost =	441 	} }
		else_if = { limit = { check_variable = { speed =	20	} } add_building_construction = { building = digging_deeper speed =	40	cost =	400 	} }
		else_if = { limit = { check_variable = { speed =	19	} } add_building_construction = { building = digging_deeper speed =	38	cost =	361 	} }
		else_if = { limit = { check_variable = { speed =	18	} } add_building_construction = { building = digging_deeper speed =	36	cost =	324 	} }
		else_if = { limit = { check_variable = { speed =	17	} } add_building_construction = { building = digging_deeper speed =	34	cost =	289 	} }
		else_if = { limit = { check_variable = { speed =	16	} } add_building_construction = { building = digging_deeper speed =	32	cost =	256 	} }
		else_if = { limit = { check_variable = { speed =	15	} } add_building_construction = { building = digging_deeper speed =	30	cost =	225 	} }
		else_if = { limit = { check_variable = { speed =	14	} } add_building_construction = { building = digging_deeper speed =	28	cost =	196 	} }
		else_if = { limit = { check_variable = { speed =	13	} } add_building_construction = { building = digging_deeper speed =	26	cost =	169 	} }
		else_if = { limit = { check_variable = { speed =	12	} } add_building_construction = { building = digging_deeper speed =	24	cost =	144 	} }
		else_if = { limit = { check_variable = { speed =	11	} } add_building_construction = { building = digging_deeper speed =	22	cost =	121 	} }
		else	= {													add_building_construction = { building = digging_deeper speed =	20	cost =	100 	} }
		uncap_digging_speed = yes
		set_variable = { cons_prog = 0.5 }
		
		random_list = {
			5 = { set_province_flag = strike_1 }
			5 = { set_province_flag = strike_2 }
			5 = { set_province_flag = strike_3 }
			5 = { set_province_flag = strike_4 }
			5 = { set_province_flag = strike_5 }
			5 = { set_province_flag = strike_6 }
			5 = { set_province_flag = strike_7 }
			5 = { set_province_flag = strike_8 }
			5 = { set_province_flag = strike_9 }
			5 = { set_province_flag = strike_10 }
			5 = { set_province_flag = strike_11 }
			5 = { set_province_flag = strike_12 }
			5 = { set_province_flag = strike_13 }
			5 = { set_province_flag = strike_14 }
			5 = { set_province_flag = strike_15 }
			5 = { set_province_flag = strike_16 }
			5 = { set_province_flag = strike_17 }
			5 = { set_province_flag = strike_18 }
			5 = { set_province_flag = strike_19 }
			5 = { set_province_flag = strike_20 }
		}
		
		random_list = {
			5 = { set_province_flag = swear_1 }
			5 = { set_province_flag = swear_2 }
			5 = { set_province_flag = swear_3 }
			5 = { set_province_flag = swear_4 }
			5 = { set_province_flag = swear_5 }
			5 = { set_province_flag = swear_6 }
			5 = { set_province_flag = swear_7 }
			5 = { set_province_flag = swear_8 }
			5 = { set_province_flag = swear_9 }
			5 = { set_province_flag = swear_10 }
			5 = { set_province_flag = swear_11 }
			5 = { set_province_flag = swear_12 }
			5 = { set_province_flag = swear_13 }
			5 = { set_province_flag = swear_14 }
			5 = { set_province_flag = swear_15 }
			5 = { set_province_flag = swear_16 }
			5 = { set_province_flag = swear_17 }
			5 = { set_province_flag = swear_18 }
			5 = { set_province_flag = swear_19 }
			5 = { set_province_flag = swear_20 }
		}
	}
}
upgrade_hold_capital = {
	trigger_switch = {
		on_trigger = has_province_modifier
		
		dig_1 = { remove_province_modifier = dig_1 add_permanent_province_modifier = { name = dig_2 duration = -1 } }
		dig_2 = { remove_province_modifier = dig_2 add_permanent_province_modifier = { name = dig_3 duration = -1 } }
		dig_3 = { remove_province_modifier = dig_3 add_permanent_province_modifier = { name = dig_4 duration = -1 } }
		dig_4 = { remove_province_modifier = dig_4 add_permanent_province_modifier = { name = dig_5 duration = -1 } }
		dig_5 = { remove_province_modifier = dig_5 add_permanent_province_modifier = { name = dig_6 duration = -1 } }
		dig_6 = { remove_province_modifier = dig_6 add_permanent_province_modifier = { name = dig_7 duration = -1 } }
		dig_7 = { remove_province_modifier = dig_7 add_permanent_province_modifier = { name = dig_8 duration = -1 } }
		dig_8 = { remove_province_modifier = dig_8 add_permanent_province_modifier = { name = dig_9 duration = -1 } }
		dig_9 = { remove_province_modifier = dig_9 add_permanent_province_modifier = { name = dig_10 duration = -1 } }
		dig_10 = { 
			if = {
				limit = { 
					OR = {
						province_id = 4119 #amldihr
						province_id = 4311 #gronstunad
						AND = { province_id = 4119 OWNER = { has_country_flag = I98_may_come_down_flag } } 
					}
				}
				remove_province_modifier = dig_10 
				add_permanent_province_modifier = { name = dig_11 duration = -1 } 
			}
		}
	}
	
	hidden_effect = { owner = { clr_hold_digging_modifiers = yes } }
	
	if = { # Verkal Ozovar
		limit = { province_id = 5424 owner = { has_estate_privilege = estate_mages_grand_rune_haln } }
		hidden_effect = { add_grand_rune_haln_effect = yes }
	}
}

#non-capital
define_hold_that_can_dig = {
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_1_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold1
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_2_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold2
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_3_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold3
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_4_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold4
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_5_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold5
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_6_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold6
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_7_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold7
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_8_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold8
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_9_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold9
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_10_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold10
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_11_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold11
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_12_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold12
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_13_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold13
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_14_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold14
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_15_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold15
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_16_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold16
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_17_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold17
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_18_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold18
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_19_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold19
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_20_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold20
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_21_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold21
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_22_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold22
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_23_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold23
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_24_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold24
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_25_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold25
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_26_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold26
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_27_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold27
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_28_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold28
		setup_digging_deeper_non_capital = yes
	}
	random_owned_province = {
		limit = { can_upgrade_hold = yes NOT = { has_province_flag = hold_@ROOT } }
		set_province_flag = option_hold_29_@ROOT
		set_province_flag = hold_@ROOT
		save_event_target_as = hold29
		setup_digging_deeper_non_capital = yes
	}

}
setup_digging_deeper_non_capital = {
	hidden_effect = {
		set_variable = { globalCost = 0 }
		set_variable = { globalTime = 0 }
		set_variable = { localCost = 0 }
		set_variable = { localTime = 0 }
		set_variable = { testCost = 0 }
		set_variable = { testTime = 0 }
		set_variable = { Cost = 0 }
		set_variable = { Time = 0 }
		trigger_switch = {
			on_trigger = has_province_modifier
			
			dig_1 = { set_variable = { speed = 20 } }
			dig_2 = { set_variable = { speed = 20 } }
			dig_3 = { set_variable = { speed = 30 } }
			dig_4 = { set_variable = { speed = 40 } }
			dig_5 = { set_variable = { speed = 50 } }
			dig_6 = { set_variable = { speed = 60 } }
			dig_7 = { set_variable = { speed = 70 } }
			dig_8 = { set_variable = { speed = 80 } }
			dig_9 = { set_variable = { speed = 80 } }
			dig_10 = { set_variable = { speed = 90 } }
		}
		
		if = {
			limit = { has_province_modifier = easy_rock }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { has_country_flag = dig_through } }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { 676 = { has_province_modifier = the_jorkad_dam owned_by = owner } }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { tag = I24 } } #Aul-Dwarov
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { has_age_ability = ab_dwarven_reclamation } }
			multiply_variable = { speed = 0.8 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_1 } }
			multiply_variable = { speed = 0.99 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_2 } }
			multiply_variable = { speed = 0.98 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_3 } }
			multiply_variable = { speed = 0.96 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_4 } }
			multiply_variable = { speed = 0.94 }
		}
		if = {
			limit = { owner = { has_ruler_modifier = krakazol_drinking_digging_5 } }
			multiply_variable = { speed = 0.92 }
		}
		if = {
			limit = { owner = { OR = { has_ruler_modifier = krakazol_drinking_digging_6 has_ruler_modifier = krakazol_drinking_digging_7 has_country_modifier = krakazol_drinking_digging_perm } } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { owner = { has_country_modifier = orlghelovar_laser_cutter } }
			multiply_variable = { speed = 0.9 }
		}
		if = {
			limit = { owner = { has_estate_privilege = artifice_invention_snotfinger_stimulant } }
			multiply_variable = { speed = 0.9 }
		}



		if = {
			limit = { check_variable = { speed = 90 } }
			set_variable = { speed = 90 }
		}
		if = {
			limit = { NOT = { check_variable = { speed = 10 } } }
			set_variable = { speed = 10 }
		}
		multiply_variable = { speed = 0.001 }
		multiply_variable = { speed = 1000 }
		export_to_variable = {
			which = globalCost
			value = modifier:build_cost
			who = PREV
		}
		export_to_variable = {
			which = globalTime
			value = modifier:build_time
			who = PREV
		}
		export_to_variable = {
			which = localCost
			value = modifier:local_build_cost
		}
		export_to_variable = {
			which = localTime
			value = modifier:local_build_time
		}
		change_variable = {
			which = localCost
			which = globalCost
		}
		change_variable = {
			which = localTime
			which = globalTime
		}

		##these are just for the tooltips
		#cap time to -85%
		if = {
			limit = { NOT = { check_variable = { localTime = -0.860 } } }
			set_variable = { localTime = -0.850 }
		}
		#cap cost to -90%
		if = {
			limit = { NOT = { check_variable = { localCost = -0.910 } } }
			set_variable = { localCost = -0.900 }
		}
		
		change_variable = { Cost = 1 }
		change_variable = { Time = 1 }
		change_variable = { which = Cost which = localCost }
		change_variable = { which = Time which = localTime }
		
		set_variable = { finalCost = 1.5 }
		multiply_variable = { which = finalCost which = speed }
		multiply_variable = { which = finalCost which = speed }
		multiply_variable = { which = finalCost which = Cost }
		multiply_variable = { finalCost = 0.001 }
		multiply_variable = { finalCost = 1000 }#Final Cost in Ducats
		
		set_variable = { which = finalTime which = speed }
		multiply_variable = { which = finalTime which = Time } #Final Time in Years
	}
}
start_digging_deeper_non_capital = {
	hidden_effect = { cancel_construction = yes cap_digging_speed = yes }
	custom_tooltip = cost_capital_dig_tooltip
	hidden_effect = {
		if = { limit = { check_variable = { speed = 90 } } add_building_construction = { building = digging_deeper speed = 90 cost = 12150 } }
		else_if = { limit = { check_variable = { speed = 89 } } add_building_construction = { building = digging_deeper speed = 89 cost = 11882 } }
		else_if = { limit = { check_variable = { speed = 88 } } add_building_construction = { building = digging_deeper speed = 88 cost = 11616 } }
		else_if = { limit = { check_variable = { speed = 87 } } add_building_construction = { building = digging_deeper speed = 87 cost = 11354 } }
		else_if = { limit = { check_variable = { speed = 86 } } add_building_construction = { building = digging_deeper speed = 86 cost = 11094 } }
		else_if = { limit = { check_variable = { speed = 85 } } add_building_construction = { building = digging_deeper speed = 85 cost = 10838 } }
		else_if = { limit = { check_variable = { speed = 84 } } add_building_construction = { building = digging_deeper speed = 84 cost = 10584 } }
		else_if = { limit = { check_variable = { speed = 83 } } add_building_construction = { building = digging_deeper speed = 83 cost = 10334 } }
		else_if = { limit = { check_variable = { speed = 82 } } add_building_construction = { building = digging_deeper speed = 82 cost = 10086 } }
		else_if = { limit = { check_variable = { speed = 81 } } add_building_construction = { building = digging_deeper speed = 81 cost = 9842 } }
		else_if = { limit = { check_variable = { speed = 80 } } add_building_construction = { building = digging_deeper speed = 80 cost = 9600 } }
		else_if = { limit = { check_variable = { speed = 79 } } add_building_construction = { building = digging_deeper speed = 79 cost = 9362 } }
		else_if = { limit = { check_variable = { speed = 78 } } add_building_construction = { building = digging_deeper speed = 78 cost = 9126 } }
		else_if = { limit = { check_variable = { speed = 77 } } add_building_construction = { building = digging_deeper speed = 77 cost = 8894 } }
		else_if = { limit = { check_variable = { speed = 76 } } add_building_construction = { building = digging_deeper speed = 76 cost = 8664 } }
		else_if = { limit = { check_variable = { speed = 75 } } add_building_construction = { building = digging_deeper speed = 75 cost = 8438 } }
		else_if = { limit = { check_variable = { speed = 74 } } add_building_construction = { building = digging_deeper speed = 74 cost = 8214 } }
		else_if = { limit = { check_variable = { speed = 73 } } add_building_construction = { building = digging_deeper speed = 73 cost = 7994 } }
		else_if = { limit = { check_variable = { speed = 72 } } add_building_construction = { building = digging_deeper speed = 72 cost = 7776 } }
		else_if = { limit = { check_variable = { speed = 71 } } add_building_construction = { building = digging_deeper speed = 71 cost = 7562 } }
		else_if = { limit = { check_variable = { speed = 70 } } add_building_construction = { building = digging_deeper speed = 70 cost = 7350 } }
		else_if = { limit = { check_variable = { speed = 69 } } add_building_construction = { building = digging_deeper speed = 69 cost = 7142 } }
		else_if = { limit = { check_variable = { speed = 68 } } add_building_construction = { building = digging_deeper speed = 68 cost = 6936 } }
		else_if = { limit = { check_variable = { speed = 67 } } add_building_construction = { building = digging_deeper speed = 67 cost = 6734 } }
		else_if = { limit = { check_variable = { speed = 66 } } add_building_construction = { building = digging_deeper speed = 66 cost = 6534 } }
		else_if = { limit = { check_variable = { speed = 65 } } add_building_construction = { building = digging_deeper speed = 65 cost = 6338 } }
		else_if = { limit = { check_variable = { speed = 64 } } add_building_construction = { building = digging_deeper speed = 64 cost = 6144 } }
		else_if = { limit = { check_variable = { speed = 63 } } add_building_construction = { building = digging_deeper speed = 63 cost = 5954 } }
		else_if = { limit = { check_variable = { speed = 62 } } add_building_construction = { building = digging_deeper speed = 62 cost = 5766 } }
		else_if = { limit = { check_variable = { speed = 61 } } add_building_construction = { building = digging_deeper speed = 61 cost = 5582 } }
		else_if = { limit = { check_variable = { speed = 60 } } add_building_construction = { building = digging_deeper speed = 60 cost = 5400 } }
		else_if = { limit = { check_variable = { speed = 59 } } add_building_construction = { building = digging_deeper speed = 59 cost = 5222 } }
		else_if = { limit = { check_variable = { speed = 58 } } add_building_construction = { building = digging_deeper speed = 58 cost = 5046 } }
		else_if = { limit = { check_variable = { speed = 57 } } add_building_construction = { building = digging_deeper speed = 57 cost = 4874 } }
		else_if = { limit = { check_variable = { speed = 56 } } add_building_construction = { building = digging_deeper speed = 56 cost = 4704 } }
		else_if = { limit = { check_variable = { speed = 55 } } add_building_construction = { building = digging_deeper speed = 55 cost = 4538 } }
		else_if = { limit = { check_variable = { speed = 54 } } add_building_construction = { building = digging_deeper speed = 54 cost = 4374 } }
		else_if = { limit = { check_variable = { speed = 53 } } add_building_construction = { building = digging_deeper speed = 53 cost = 4214 } }
		else_if = { limit = { check_variable = { speed = 52 } } add_building_construction = { building = digging_deeper speed = 52 cost = 4056 } }
		else_if = { limit = { check_variable = { speed = 51 } } add_building_construction = { building = digging_deeper speed = 51 cost = 3902 } }
		else_if = { limit = { check_variable = { speed = 50 } } add_building_construction = { building = digging_deeper speed = 50 cost = 3750 } }
		else_if = { limit = { check_variable = { speed = 49 } } add_building_construction = { building = digging_deeper speed = 49 cost = 3602 } }
		else_if = { limit = { check_variable = { speed = 48 } } add_building_construction = { building = digging_deeper speed = 48 cost = 3456 } }
		else_if = { limit = { check_variable = { speed = 47 } } add_building_construction = { building = digging_deeper speed = 47 cost = 3314 } }
		else_if = { limit = { check_variable = { speed = 46 } } add_building_construction = { building = digging_deeper speed = 46 cost = 3174 } }
		else_if = { limit = { check_variable = { speed = 45 } } add_building_construction = { building = digging_deeper speed = 45 cost = 3038 } }
		else_if = { limit = { check_variable = { speed = 44 } } add_building_construction = { building = digging_deeper speed = 44 cost = 2904 } }
		else_if = { limit = { check_variable = { speed = 43 } } add_building_construction = { building = digging_deeper speed = 43 cost = 2774 } }
		else_if = { limit = { check_variable = { speed = 42 } } add_building_construction = { building = digging_deeper speed = 42 cost = 2646 } }
		else_if = { limit = { check_variable = { speed = 41 } } add_building_construction = { building = digging_deeper speed = 41 cost = 2522 } }
		else_if = { limit = { check_variable = { speed = 40 } } add_building_construction = { building = digging_deeper speed = 40 cost = 2400 } }
		else_if = { limit = { check_variable = { speed = 39 } } add_building_construction = { building = digging_deeper speed = 39 cost = 2282 } }
		else_if = { limit = { check_variable = { speed = 38 } } add_building_construction = { building = digging_deeper speed = 38 cost = 2166 } }
		else_if = { limit = { check_variable = { speed = 37 } } add_building_construction = { building = digging_deeper speed = 37 cost = 2054 } }
		else_if = { limit = { check_variable = { speed = 36 } } add_building_construction = { building = digging_deeper speed = 36 cost = 1944 } }
		else_if = { limit = { check_variable = { speed = 35 } } add_building_construction = { building = digging_deeper speed = 35 cost = 1838 } }
		else_if = { limit = { check_variable = { speed = 34 } } add_building_construction = { building = digging_deeper speed = 34 cost = 1734 } }
		else_if = { limit = { check_variable = { speed = 33 } } add_building_construction = { building = digging_deeper speed = 33 cost = 1634 } }
		else_if = { limit = { check_variable = { speed = 32 } } add_building_construction = { building = digging_deeper speed = 32 cost = 1536 } }
		else_if = { limit = { check_variable = { speed = 31 } } add_building_construction = { building = digging_deeper speed = 31 cost = 1442 } }
		else_if = { limit = { check_variable = { speed = 30 } } add_building_construction = { building = digging_deeper speed = 30 cost = 1350 } }
		else_if = { limit = { check_variable = { speed = 29 } } add_building_construction = { building = digging_deeper speed = 29 cost = 1262 } }
		else_if = { limit = { check_variable = { speed = 28 } } add_building_construction = { building = digging_deeper speed = 28 cost = 1176 } }
		else_if = { limit = { check_variable = { speed = 27 } } add_building_construction = { building = digging_deeper speed = 27 cost = 1094 } }
		else_if = { limit = { check_variable = { speed = 26 } } add_building_construction = { building = digging_deeper speed = 26 cost = 1014 } }
		else_if = { limit = { check_variable = { speed = 25 } } add_building_construction = { building = digging_deeper speed = 25 cost = 938 } }
		else_if = { limit = { check_variable = { speed = 24 } } add_building_construction = { building = digging_deeper speed = 24 cost = 864 } }
		else_if = { limit = { check_variable = { speed = 23 } } add_building_construction = { building = digging_deeper speed = 23 cost = 794 } }
		else_if = { limit = { check_variable = { speed = 22 } } add_building_construction = { building = digging_deeper speed = 22 cost = 726 } }
		else_if = { limit = { check_variable = { speed = 21 } } add_building_construction = { building = digging_deeper speed = 21 cost = 662 } }
		else_if = { limit = { check_variable = { speed = 20 } } add_building_construction = { building = digging_deeper speed = 20 cost = 600 } }
		else_if = { limit = { check_variable = { speed = 19 } } add_building_construction = { building = digging_deeper speed = 19 cost = 542 } }
		else_if = { limit = { check_variable = { speed = 18 } } add_building_construction = { building = digging_deeper speed = 18 cost = 486 } }
		else_if = { limit = { check_variable = { speed = 17 } } add_building_construction = { building = digging_deeper speed = 17 cost = 434 } }
		else_if = { limit = { check_variable = { speed = 16 } } add_building_construction = { building = digging_deeper speed = 16 cost = 384 } }
		else_if = { limit = { check_variable = { speed = 15 } } add_building_construction = { building = digging_deeper speed = 15 cost = 338 } }
		else_if = { limit = { check_variable = { speed = 14 } } add_building_construction = { building = digging_deeper speed = 14 cost = 294 } }
		else_if = { limit = { check_variable = { speed = 13 } } add_building_construction = { building = digging_deeper speed = 13 cost = 254 } }
		else_if = { limit = { check_variable = { speed = 12 } } add_building_construction = { building = digging_deeper speed = 12 cost = 216 } }
		else_if = { limit = { check_variable = { speed = 11 } } add_building_construction = { building = digging_deeper speed = 11 cost = 182 } }
		else = { add_building_construction = { building = digging_deeper speed = 10 cost = 150 } }
		uncap_digging_speed = yes
		set_variable = { cons_prog = 0.5 }
		random_list = {
			5 = { set_province_flag = strike_1 }
			5 = { set_province_flag = strike_2 }
			5 = { set_province_flag = strike_3 }
			5 = { set_province_flag = strike_4 }
			5 = { set_province_flag = strike_5 }
			5 = { set_province_flag = strike_6 }
			5 = { set_province_flag = strike_7 }
			5 = { set_province_flag = strike_8 }
			5 = { set_province_flag = strike_9 }
			5 = { set_province_flag = strike_10 }
			5 = { set_province_flag = strike_11 }
			5 = { set_province_flag = strike_12 }
			5 = { set_province_flag = strike_13 }
			5 = { set_province_flag = strike_14 }
			5 = { set_province_flag = strike_15 }
			5 = { set_province_flag = strike_16 }
			5 = { set_province_flag = strike_17 }
			5 = { set_province_flag = strike_18 }
			5 = { set_province_flag = strike_19 }
			5 = { set_province_flag = strike_20 }
		}
		
		random_list = {
			5 = { set_province_flag = swear_1 }
			5 = { set_province_flag = swear_2 }
			5 = { set_province_flag = swear_3 }
			5 = { set_province_flag = swear_4 }
			5 = { set_province_flag = swear_5 }
			5 = { set_province_flag = swear_6 }
			5 = { set_province_flag = swear_7 }
			5 = { set_province_flag = swear_8 }
			5 = { set_province_flag = swear_9 }
			5 = { set_province_flag = swear_10 }
			5 = { set_province_flag = swear_11 }
			5 = { set_province_flag = swear_12 }
			5 = { set_province_flag = swear_13 }
			5 = { set_province_flag = swear_14 }
			5 = { set_province_flag = swear_15 }
			5 = { set_province_flag = swear_16 }
			5 = { set_province_flag = swear_17 }
			5 = { set_province_flag = swear_18 }
			5 = { set_province_flag = swear_19 }
			5 = { set_province_flag = swear_20 }
		}
	}
}
upgrade_hold = {
	trigger_switch = {
		on_trigger = has_province_modifier
		
		dig_1 = { remove_province_modifier = dig_1 add_permanent_province_modifier = { name = dig_2 duration = -1 } }
		dig_2 = { remove_province_modifier = dig_2 add_permanent_province_modifier = { name = dig_3 duration = -1 } }
		dig_3 = { remove_province_modifier = dig_3 add_permanent_province_modifier = { name = dig_4 duration = -1 } }
		dig_4 = { remove_province_modifier = dig_4 add_permanent_province_modifier = { name = dig_5 duration = -1 } }
		dig_5 = { remove_province_modifier = dig_5 add_permanent_province_modifier = { name = dig_6 duration = -1 } }
		dig_6 = { remove_province_modifier = dig_6 add_permanent_province_modifier = { name = dig_7 duration = -1 } }
		dig_7 = { remove_province_modifier = dig_7 add_permanent_province_modifier = { name = dig_8 duration = -1 } }
		dig_8 = { remove_province_modifier = dig_8 add_permanent_province_modifier = { name = dig_9 duration = -1 } }
		dig_9 = { remove_province_modifier = dig_9 add_permanent_province_modifier = { name = dig_10 duration = -1 } }
		dig_10 = { 
			if = {
				limit = { 
					OR = {
						province_id = 4119 #amldihr
						province_id = 4311 #gronstunad
						AND = { province_id = 4119 OWNER = { has_country_flag = I98_may_come_down_flag } } 
					}
				}
				remove_province_modifier = dig_10 
				add_permanent_province_modifier = { name = dig_11 duration = -1 } 
			}
		}
	}
}

clr_hold_advanced_infrastructure = {
	remove_province_modifier = hold_city
	remove_province_modifier = hold_artisan
	remove_province_modifier = hold_farm
	remove_province_modifier = hold_military
	remove_province_modifier = hold_foundry
	remove_province_modifier = hold_city_2
	remove_province_modifier = hold_artisan_2
	remove_province_modifier = hold_farm_2
	remove_province_modifier = hold_military_2
	remove_province_modifier = hold_foundry_2
	remove_province_modifier = developing_advanced_infrastructure
	hidden_effect = { clr_province_flag = specialized_hold }
	owner = {
		hidden_effect = { clr_country_flag = building_diggy }
		hidden_effect = { clr_country_flag = building_artificier_hall }
		hidden_effect = { clr_country_flag = building_engineer_manufactory }
		hidden_effect = { clr_country_flag = building_high_gardens }
		hidden_effect = { clr_country_flag = building_military_academy }
	}
}

clr_hold_digging_modifiers = {
	hidden_effect = {
		clr_country_flag = is_digging
		clr_country_flag = dig_prod
		clr_country_flag = dig_manpower
		clr_country_flag = dig_culture
		clr_country_flag = dig_explosive
		clr_country_flag = dig_slimes
		clr_country_flag = dig_miner
		clr_country_flag = dig_trader
		remove_country_modifier = dig_prod
		remove_country_modifier = dig_manpower
		remove_country_modifier = dig_explosive
		remove_country_modifier = dig_trader
	}
}


clr_digging_menu = {
	every_owned_province = {
		limit = { has_province_flag = hold_@ROOT }
		clr_province_flag = option_hold_1_@ROOT
		clr_province_flag = option_hold_2_@ROOT
		clr_province_flag = option_hold_3_@ROOT
		clr_province_flag = option_hold_4_@ROOT
		clr_province_flag = option_hold_5_@ROOT
		clr_province_flag = option_hold_6_@ROOT
		clr_province_flag = option_hold_7_@ROOT
		clr_province_flag = option_hold_8_@ROOT
		clr_province_flag = option_hold_9_@ROOT
		clr_province_flag = option_hold_10_@ROOT
		clr_province_flag = option_hold_11_@ROOT
		clr_province_flag = option_hold_12_@ROOT
		clr_province_flag = option_hold_13_@ROOT
		clr_province_flag = option_hold_14_@ROOT
		clr_province_flag = option_hold_15_@ROOT
		clr_province_flag = option_hold_16_@ROOT
		clr_province_flag = option_hold_17_@ROOT
		clr_province_flag = option_hold_18_@ROOT
		clr_province_flag = option_hold_19_@ROOT
		clr_province_flag = option_hold_20_@ROOT
		clr_province_flag = option_hold_21_@ROOT
		clr_province_flag = option_hold_22_@ROOT
		clr_province_flag = option_hold_23_@ROOT
		clr_province_flag = option_hold_24_@ROOT
		clr_province_flag = option_hold_25_@ROOT
		clr_province_flag = option_hold_26_@ROOT
		clr_province_flag = option_hold_27_@ROOT
		clr_province_flag = option_hold_28_@ROOT
		clr_province_flag = option_hold_29_@ROOT
		clr_province_flag = hold_@ROOT
	}
	clr_country_flag = hold_operation_menu
}
binary_ad1 = {
	if = {
		limit = {
			check_variable = {
				which = $variable$
				value = $value$
			}
		}
		owner = {
			add_treasury = -$value$
		}
		
		subtract_variable = {
			which = $variable$
			value = $value$
		}
	}
}
binary_ad20 = {
	if = {
		limit = {
			check_variable = {
				which = $variable$
				value = $valueAdd$
			}
		}
		owner = {
			add_$addcommand$_power = $valueSub$
		}

		subtract_variable = {
			which = $variable$
			value = $valueAdd$
		}
	}
}
dig_rebate = { #reddit.com/r/eu4/comments/dy7lyv
	set_variable = {
		which = temp
		which = finalCost
	}
	divide_variable = {
		temp = 2
	}
	
	binary_ad1 = { variable = temp	value = 4096 }
	binary_ad1 = { variable = temp	value = 2048 }
	binary_ad1 = { variable = temp	value = 1024 }
	binary_ad1 = { variable = temp	value = 512	 }
	binary_ad1 = { variable = temp	value = 256	 }
	binary_ad1 = { variable = temp	value = 128	 }
	binary_ad1 = { variable = temp	value = 64	 }
	binary_ad1 = { variable = temp	value = 32	 }
	binary_ad1 = { variable = temp	value = 16	 }
	binary_ad1 = { variable = temp	value = 8	 }
	binary_ad1 = { variable = temp	value = 4	 }
	binary_ad1 = { variable = temp	value = 2	 }
	binary_ad1 = { variable = temp	value = 1	 }
}
add_power = { #reddit.com/r/eu4/comments/dy7lyv
	set_variable = {
		which = temp
		which = provDevCost
	}

	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 1024 	valueSub = -1024 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 512		valueSub = -512 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 256		valueSub = -256 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 128		valueSub = -128 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 64		valueSub = -64 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 32		valueSub = -32 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 16		valueSub = -16 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 8		valueSub = -8 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 4		valueSub = -4 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 2		valueSub = -2 }
	binary_ad20 = { variable = temp	addcommand = $power$	valueAdd = 1		valueSub = -1 }
	#log = dev_info.4
}
set_base_value = {
	set_variable = { #100% base cost
		which = $which$
		value = 1
	}

	export_to_variable = {
		variable_name = apowerCost
		value = modifier:all_power_cost
		who = owner
	}
	change_variable = { #power cost modifiers
		which = $which$
		which = apowerCost
	}

	export_to_variable = {
		variable_name = devCost
		value = modifier:development_cost
		who = owner
	}
	change_variable = { #country dev modifiers
		which = $which$
		which = devCost
	}

	export_to_variable = {
		variable_name = ldevCost
		value = modifier:local_development_cost
	}
	change_variable = { #province dev modifiers
		which = $which$
		which = ldevCost
	}

	if = { #dev efficiency from adm tech affects base cost by -10%
		limit = {
			owner = { adm_tech = 27 }
		}
		multiply_variable = {
			which = $which$
			value = 35
		}
	}
	else_if  = {
		limit = {
			owner = { adm_tech = 23 }
		}
		multiply_variable = {
			which = $which$
			value = 40
		}
	}
	else_if  = {
		limit = {
			owner = { adm_tech = 17 }
		}
		multiply_variable = {
			which = $which$
			value = 45
		}
	}
	else = {
		multiply_variable = {
			which = $which$
			value = 50
		}
	}
}

########################
### Remnant Disaster ###
########################
increase_remnant_faction_readiness = {
	[[Dig]
		custom_tooltip = increase_readiness_dig_$size$
		increase_remnant_faction_readiness_helper = { $size$ = yes remFact = Dig }
	]
	[[Army]
		custom_tooltip = increase_readiness_army_$size$
		increase_remnant_faction_readiness_helper = { $size$ = yes remFact = Army }
	]
	[[Colonial]
		custom_tooltip = increase_readiness_colonial_$size$
		increase_remnant_faction_readiness_helper = { $size$ = yes remFact = Colonial }
	]
}

increase_remnant_faction_readiness_helper = {
	hidden_effect = {
		[[small]
			change_variable = { awakening$remFact$ = 5 }
		]
		[[normal]
			change_variable = { awakening$remFact$ = 7.5 }
		]
		[[big]
			change_variable = { awakening$remFact$ = 10 }
		]
	}
}

increase_remnant_react = {
	hidden_effect = {
		[[small]
			change_variable = { awakeningReact = 5 }
		]
		[[normal]
			change_variable = { awakeningReact = 10 }
		]
		[[big]
			change_variable = { awakeningReact = 15 }
		]
		if = {
			limit = { check_variable = { awakeningReact = 100 } }
			country_event = { id = diggy_remnant_stagnation.3 }
		}
	}
}





###################
### Expeditions ###
###################
####Prep
spawn_expedition = {
	if = {
		limit = { can_spawn_expedition = yes }
		add_permanent_province_modifier = { name = expedition_target duration = -1 }
		hidden_effect = { REB = { change_variable = { nbExpedition = 1 } } }
	}
}

define_expedition_target = {
	# Dungeons
	random_owned_province = {
		limit = { is_city = yes has_province_flag = explorable_dungeon owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_province_flag = floor_explored has_saved_event_target = expedition1 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition1
	}
	random_owned_province = {
		limit = { is_city = yes has_province_flag = explorable_dungeon owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_province_flag = floor_explored has_saved_event_target = expedition2 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition2
	}
	random_owned_province = {
		limit = { is_city = yes has_province_flag = explorable_dungeon owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_province_flag = floor_explored has_saved_event_target = expedition3 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition3
	}
	random_owned_province = {
		limit = { is_city = yes has_province_flag = explorable_dungeon owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_province_flag = floor_explored has_saved_event_target = expedition4 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition4
	}
	random_owned_province = {
		limit = { is_city = yes has_province_flag = explorable_dungeon owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_province_flag = floor_explored has_saved_event_target = expedition5 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition5
	}

	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition1 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition1
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition2 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition2
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition3 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition3
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition4 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition4
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition5 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition5
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition6 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition6
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition7 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition7
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition8 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition8
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition9 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition9
	}
	random_owned_province = {
		limit = { is_city = yes has_province_modifier = expedition_target owned_by = ROOT controlled_by = ROOT NOT = { has_province_flag = expedition_@ROOT has_province_flag = sent_expedition_@ROOT has_province_modifier = expedition_death_timer has_saved_event_target = expedition10 } }
		set_province_flag = expedition_@ROOT
		save_event_target_as = expedition10
	}
}

generate_party_stats = {
	hidden_effect = {
		set_variable = { partyEffectiveness = 100 }
		owner = { 
			export_to_variable = {
				which = partyEffectiveness
				value = modifier:discipline
			}
			if = {
				limit = { has_reform = dwarovar_serpentspine_spelunking }
				change_variable = { partyEffectiveness = 0.05 }
			}
			if = {
				limit = { has_country_modifier = dwarovar_urist_stories }
				change_variable = { partyEffectiveness = 0.05 }
			}
			if = {
				limit = { has_country_flag = dwarven_pantheon_expedition_dolurazan }
				change_variable = { partyEffectiveness = 0.20 }
			}
			if = {
				limit = { has_country_flag = dwarven_pantheon_expedition_derzobrazan }
				change_variable = { partyEffectiveness = 0.20 }
			}
			if = {
				limit = { has_country_flag = dwarven_pantheon_expedition_bervinazan }
				change_variable = { partyEffectiveness = 0.20 }
			}
			if = {
				limit = { has_estate_privilege = artifice_invention_allclan_BOMBNAR }
				change_variable = { partyEffectiveness = 0.05 }
			}
			multiply_variable = { partyEffectiveness = 100 }
		}
		owner = { ROOT = { change_variable = { which = partyEffectiveness which = PREV } } }
		owner = { 
			export_to_variable = {
				which = partyMorale
				value = trigger_value:land_morale
			}
			if = {
				limit = { has_country_flag = dwarven_pantheon_expedition_karazlov }
				change_variable = { partyMorale = 2 }
			}
			if = {
				limit = { has_country_flag = dwarven_pantheon_expedition_grimthar }
				change_variable = { partyMorale = 2 }
			}
			if = {
				limit = { has_country_modifier = dwarovar_expedition_douche }
				multiply_variable = { partyMorale = 0.8 }
			}
		}
		owner = { ROOT = { set_variable = { which = partyMorale which = PREV } } }
		
		if = {
			limit = { check_variable = { partyMorale = 10 } }
			set_variable = { partyMorale = 10 }
		}
		if = {
			limit = { NOT = { check_variable = { partyMorale = 0 } } }
			set_variable = { partyMorale = 0 }
		}
		owner = {
			if = {
				limit = { OR = { has_country_flag = dwarven_pantheon_expedition_thyrfen has_country_flag = dwarven_pantheon_expedition_werdun } }
				ROOT = { set_variable = { partySupplies = 100 } }
			}
			if = {
				limit = { OR = { has_country_flag = dwarven_pantheon_expedition_lorgram has_country_flag = dwarven_pantheon_expedition_grobilazk } }
				ROOT = { set_variable = { partyManpower = 10000 } }
			}
		}
		set_province_flag = generated_party_stats_@ROOT
	}
}

generate_ai_party = {
	#Basic stats
	generate_party_stats = yes
	owner = {
		clr_country_flag = dwarven_pantheon_expedition_dolurazan #Effectiveness
		clr_country_flag = dwarven_pantheon_expedition_derzobrazan
		clr_country_flag = dwarven_pantheon_expedition_bervinazan
		clr_country_flag = dwarven_pantheon_expedition_karazlov #Morale
		clr_country_flag = dwarven_pantheon_expedition_grimthar
		clr_country_flag = dwarven_pantheon_expedition_thyrfen #Supplies
		clr_country_flag = dwarven_pantheon_expedition_werdun
		clr_country_flag = dwarven_pantheon_expedition_lorgram #Manpower
		clr_country_flag = dwarven_pantheon_expedition_grobilazk
	}
	set_variable = { partyMorale = 7 }
	set_variable = { partyManpower = 5000 }
	set_variable = { partySupplies = 80 }
	random_list = {
		20 = { multiply_variable = { partyEffectiveness = 0.8 } }
		20 = { multiply_variable = { partyEffectiveness = 0.9 } }
		20 = { multiply_variable = { partyEffectiveness = 1 } }
		20 = { multiply_variable = { partyEffectiveness = 1.1 } }
		20 = { multiply_variable = { partyEffectiveness = 1.2 } }
	}
	random_list = {
		20 = { multiply_variable = { partyMorale = 1.1 } }
		20 = { multiply_variable = { partyMorale = 1.2 } }
		20 = { multiply_variable = { partyMorale = 1.3 } }
		20 = { multiply_variable = { partyMorale = 1.4 } }
		20 = { multiply_variable = { partyMorale = 1.5 } }
	}
	random_list = {
		20 = { multiply_variable = { partyManpower = 1.1 } }
		20 = { multiply_variable = { partyManpower = 1.2 } }
		20 = { multiply_variable = { partyManpower = 1.3 } }
		20 = { multiply_variable = { partyManpower = 1.4 } }
		20 = { multiply_variable = { partyManpower = 1.5 } }
	}
	random_list = {
		20 = { multiply_variable = { partySupplies = 0.8 } }
		20 = { multiply_variable = { partySupplies = 0.9 } }
		20 = { multiply_variable = { partySupplies = 1 } }
		20 = { multiply_variable = { partySupplies = 1.1 } }
		20 = { multiply_variable = { partySupplies = 1.2 } }
	}
	#Racial Shit
	if = {
		limit = { owner = { has_country_modifier = goblin_military } }
		multiply_variable = { partyManpower = 1.5 }
		multiply_variable = { partyEffectiveness = 1.1 }
		multiply_variable = { partyMorale = 1.2 }
		multiply_variable = { partySupplies = 0.8 }
	}
	if = {
		limit = { owner = { has_country_modifier = dwarven_military } }
		multiply_variable = { partyManpower = 1.2 }
		multiply_variable = { partyEffectiveness = 1.3 }
		multiply_variable = { partyMorale = 1.2 }
		multiply_variable = { partySupplies = 1.2 }
	}
	if = {
		limit = { owner = { has_country_modifier = orcish_military } }
		multiply_variable = { partyManpower = 0.9 }
		multiply_variable = { partyEffectiveness = 1.1 }
		multiply_variable = { partyMorale = 1.3 }
		multiply_variable = { partySupplies = 1 }
	}
	if = {
		limit = { owner = { has_country_modifier = kobold_military } }
		multiply_variable = { partyManpower = 1.4 }
		multiply_variable = { partyEffectiveness = 0.8 }
		multiply_variable = { partyMorale = 1.2 }
		multiply_variable = { partySupplies = 1 }
	}
	
	#Rewards
	set_variable = { which = partyRewards  which = lowLootEstimate }
	random_list = {
		20 = { multiply_variable = { partyRewards = 0.8 } }
		20 = { multiply_variable = { partyRewards = 0.9 } }
		20 = { multiply_variable = { partyRewards = 1 } }
		20 = { multiply_variable = { partyRewards = 1.1 } }
		20 = { multiply_variable = { partyRewards = 1.2 } }
	}
	
	#Sanity Check
	if = {
		limit = { check_variable = { which = partyRewards which = highLootEstimate } }
		divide_variable = { partyRewards = 2 }
	}
	if = {
		limit = { check_variable = { partyRewards = 1000 } }
		set_variable = { partyRewards = 1000 }
	}
	if = {
		limit = { check_variable = { partySupplies = 100 } }
		set_variable = { partySupplies = 100 }
	}
	if = {
		limit = { check_variable = { partyManpower = 10000 } }
		set_variable = { partyManpower = 10000 }
	}
	if = {
		limit = { check_variable = { partyEffectiveness = 200 } }
		set_variable = { partyEffectiveness = 200 }
	}
	set_province_flag = generated_party_stats_@ROOT
}

generate_expedition = {
	hidden_effect = {
		if = {
			limit = { has_province_flag = generated_expedition }
			#Failsafe, nothing should be here
		}
		else_if = {
			limit = { has_province_flag = explorable_dungeon }

			set_variable = { partyRewards = 0 }
			set_variable = { partySupplies = 0 }
			set_variable = { partyManpower = 0 }
			set_variable = { partyTotalCost = 0 }
		}
		else = {
			set_province_flag = generated_expedition
			
			set_variable = { nbFloor = $base_floor$ }
			set_variable = { clearedFloor = 0 }
			set_variable = { progressFloor = 0 }
			set_variable = { nbEncounters = 0 }
			set_variable = { dangerLevel = $base_danger$ } #1 = Bronze 2 = Silver 3 = Gold 4 = Platinum 5 = Mithril
			set_variable = { partyLoot = 0 }
			set_variable = { partyRewards = 0 }
			set_variable = { partySupplies = 0 }
			set_variable = { partyManpower = 0 }
			set_variable = { partyTotalCost = 0 }

			#####################
			### Numbers of Floors
			#####################
			#Fixed
			if = {
				limit = { region = tree_of_stone_region } 						# Expeditions are bigger and harder in this region
				change_variable = { nbFloor = 1 }
			}
			if = {
				limit = { has_terrain = dwarven_hold }							# Holds are deeper
				change_variable = { nbFloor = 2 }
			}
			else_if = {
				limit = { has_terrain = dwarven_hold_surface }					# Surface holds are less deep
				change_variable = { nbFloor = 1 }
			}
			else_if = {
				limit = { 
					has_terrain = cavern
					all_neighbor_province = { has_terrain = cavern }			# Deep Caverns are harder
				}
				change_variable = { nbFloor = 1 }
			}
			
			#Random
			random = {
				chance = 40
				change_variable = { nbFloor = 1 }
			}
			random = {
				chance = 20
				change_variable = { nbFloor = 1 }
			}
			random_list = {
				50 = { }
				40 = { change_variable = { nbFloor = 1 } }
				10 = { change_variable = { nbFloor = 2 } }
			}
			
			random = {
				chance = 30
				multiply_variable = { nbFloor = 1.5 }
			}
			random = {
				chance = 25
				multiply_variable = { nbFloor = 1.5 }
			}
			
			if = {
				limit = { province_group = hold_province }
				random = {
					chance = 30
					change_variable = { nbFloor = 1 }
				}
				random = {
					chance = 20
					change_variable = { nbFloor = 1 }
				}
			}
			else_if = {
				limit = { has_terrain = cavern }
				random = {
					chance = 80
					change_variable = { nbFloor = 1 }
				}
				random_list = {
					60 = {}
					40 = { multiply_variable = { nbFloor = 1.5 } }
				}
			}
			
			
			#####################
			###   Danger Level
			#####################
			#Fixed
			if = {
				limit = { region = tree_of_stone_region }						# Expeditions are bigger and harder in this region
				change_variable = { dangerLevel = 1 }
			}
			if = {
				limit = { has_terrain = dwarven_hold }							# Holds are dangerous
				change_variable = { dangerLevel = 1.5 }
			}
			else_if = {
				limit = { has_terrain = dwarven_hold_surface }					# Holds are dangerous
				change_variable = { dangerLevel = 1 }
			}
			else_if = {
				limit = { 
					has_terrain = cavern
					all_neighbor_province = { has_terrain = cavern }			# Deep Caverns are harder
				}
				change_variable = { dangerLevel = 1 }
			}
			if = {																# Expedition with dwarovkron gems are harder
				limit = { has_province_modifier = dwarovkron_fragment }
				change_variable = { dangerLevel = 1.5 }
			}
			
			#Random
			if = {
				limit = { has_terrain = dwarven_hold }
				random = {
					chance = 50
					change_variable = { dangerLevel = 1 }
				}
			}
			else_if = {
				limit = { 
					has_terrain = cavern
					all_neighbor_province = { has_terrain = cavern }			# Deep Caverns are harder
				}
				random = {
					chance = 50
					change_variable = { dangerLevel = 1 }
				}
			}
			random = {
				chance = 35
				change_variable = { dangerLevel = 1 }
			}
			random = {
				chance = 15
				change_variable = { dangerLevel = 1 }
			}
			random = {
				chance = 10
				change_variable = { dangerLevel = 1 }
			}
			random_list = {
				60 = { }
				25 = { change_variable = { dangerLevel = 1 } }
				15 = { change_variable = { dangerLevel = 2 } }
			}
			
			random = {
				chance = 10
				multiply_variable = { dangerLevel = 1.5 }
			}
			random = {
				chance = 5
				multiply_variable = { dangerLevel = 1.5 }
			}

			#####################
			###  Fixed Expeditions
			#####################
			# Khugdihr MT
			if = {
				limit = { has_province_flag = khug_expedition_2_created }
				set_variable = { dangerLevel = 5 } 
			}

			#Krakazol MT
			if = {
				limit = { has_province_flag = krakazol_key_expedition }
				set_variable = { nbFloor = 2 }
				set_variable = { dangerLevel = 2 } 
			}
			
			#temp until dungeons are implemented
			if = {
				limit = { has_province_flag = krakazol_1st_exp }
				set_variable = { nbFloor = 1 }
				set_variable = { dangerLevel = 3 } 
			}
			if = {
				limit = { has_province_flag = krakazol_2nd_exp }
				set_variable = { nbFloor = 3 }
				set_variable = { dangerLevel = 4 }
			}
			if = {
				limit = { has_province_flag = krakazol_3rd_exp }
				set_variable = { nbFloor = 4 }
				set_variable = { dangerLevel = 5 } 
			}
			
			# Dur-Vazhatun MT
			if = {
				limit = { has_province_flag = vazhatun_expedition_flag }
				set_variable = { nbFloor = 4 }
				set_variable = { danger_level = 5 }
			}

			# Loot Estimate
			loot_estimate = yes
			
			#####################
			###  Sanity Checks
			#####################
			if = {
				limit = { check_variable = { nbFloor = 7 } }
				set_variable = { nbFloor = 7 }
			}
			if = {
				limit = { check_variable = { dangerLevel = 5 } }
				set_variable = { dangerLevel = 5 }
			}
			
			if = {
				limit = { check_variable = { partyMorale = 10 } }
				set_variable = { partyMorale = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { partyMorale = 0 } } }
				set_variable = { partyMorale = 0 }
			}
			
			divide_variable = { nbFloor = 1000 }
			multiply_variable = { nbFloor = 1000 }
			
			divide_variable = { dangerLevel = 1000 }
			multiply_variable = { dangerLevel = 1000 }
			
			divide_variable = { partyEffectiveness = 1000 }
			multiply_variable = { partyEffectiveness = 1000 }
		}
	}
}

change_party_manpower = {
	[[add_tooltip]
		custom_tooltip = add_$add$_party_manpower_tooltip
	]
	[[remove_tooltip]
		custom_tooltip = remove_$loss$_party_manpower_tooltip
	]
	hidden_effect = {
		[[add_expedition]		# YOU SHOULD NEVER USE THAT ONE
			set_variable = { foo = 0 }
			while = {
				limit = {
					NOT = { check_variable = { foo = $add_expedition$ } }
					NOT = { check_variable = { partyManpower = 10000 } }
					infantry_in_province = 1
					infantry_in_province = owner
				}
				kill_units = { who = owner type = infantry amount = 1 }
				change_variable = { partyManpower = 1000 }
				change_variable = { foo = 1 }
			}
		]
		[[add] 					# USE THAT ONE FOR ENCOUNTER
			change_variable = { partyManpower = $add$ }
		]
		[[add_percent]			# If you want to add 10% manpower, do add_percent = 1.10
			multiply_variable = { partyManpower = $add_percent$ }
		]
		[[loss]
			subtract_variable = { partyManpower = $loss$ }
		]
		
		[[loss_percent]			# If you want to remove 10% manpower, do loss_percent = 0.10
			set_variable = { foo = 1 }
			subtract_variable = { foo = $loss_percent$ }
			multiply_variable = { which = partyManpower which = foo }
		]
		
		if = {
			limit = { NOT = { check_variable = { partyManpower = 0 } } }
			set_variable = { partyManpower = 0 }
		}
		
		divide_variable = { partyManpower = 1000 }
		multiply_variable = { partyManpower = 1000 }
	}
}

change_party_morale = {
	[[add_tooltip]
		custom_tooltip = add_$add$_party_morale_tooltip
	]
	[[remove_tooltip]
		custom_tooltip = remove_$loss$_party_morale_tooltip
	]
	hidden_effect = {
		[[add]
			change_variable = { partyMorale = $add$ }
		]
		[[loss]
			subtract_variable = { partyMorale = $loss$ }
		]
		if = {
			limit = { NOT = { check_variable = { partyMorale = 0 } } }
			set_variable = { partyMorale = 0 }
		}
		if = {
			limit = { check_variable = { partyMorale = 10 } }
			set_variable = { partyMorale = 10 }
		}
		#Only use the 4 below for the prep phase
		[[adm_cost]	
			change_variable = { partyMoraleAdmCost = $adm_cost$ }
		]
		[[dip_cost]
			change_variable = { partyMoraleDipCost = $dip_cost$ }
		]
		[[mil_cost]
			change_variable = { partyMoraleMilCost = $mil_cost$ }
		]
		[[cash_cost]
			change_variable = { partyMoraleCashCost = $cash_cost$ }
		]
	}
}

change_party_effectiveness = {
	[[add_tooltip]
		custom_tooltip = add_$add$_party_effectiveness_tooltip
	]
	[[remove_tooltip]
		custom_tooltip = remove_$loss$_party_effectiveness_tooltip
	]
	hidden_effect = {
		[[add]
			change_variable = { partyEffectiveness = $add$ }
		]
		[[loss]
			subtract_variable = { partyEffectiveness = $loss$ }
		]
		divide_variable = { partyEffectiveness = 1000 }
		multiply_variable = { partyEffectiveness = 1000 }
		if = {
			limit = { check_variable = { partyEffectiveness = 200 } }
			set_variable = { partyEffectiveness = 200 }
		}
		if = {
			limit = { NOT = { check_variable = { partyEffectiveness = 0 } } }
			set_variable = { partyEffectiveness = 0 }
		}
		#Only use the 4 below for the prep phase
		[[adm_cost]	
			change_variable = { partyEffectivenessAdmCost = $adm_cost$ }
		]
		[[dip_cost]
			change_variable = { partyEffectivenessDipCost = $dip_cost$ }
		]
		[[mil_cost]
			change_variable = { partyEffectivenessMilCost = $mil_cost$ }
		]
		[[cash_cost]
			change_variable = { partyEffectivenessCashCost = $cash_cost$ }
		]
	}
}

change_party_rewards = {
	[[add_tooltip]
		custom_tooltip = add_$add$_party_rewards_tooltip
	]
	[[remove_tooltip]
		custom_tooltip = remove_$loss$_party_rewards_tooltip
	]
	hidden_effect = {
		[[add]
			change_variable = { partyRewards = $add$ }
		]
		[[loss]
			subtract_variable = { partyRewards = $loss$ }
		]
		if = {
			limit = { check_variable = { partyRewards = 2000 } }
			set_variable = { partyRewards = 2000 }
		}
		if = {
			limit = { NOT = { check_variable = { partyRewards = 0 } } }
			set_variable = { partyRewards = 0 }
		}
	}
}

change_party_supplies = {
	[[add_tooltip]
		custom_tooltip = add_$add$_party_supplies_tooltip
	]
	[[remove_tooltip]
		custom_tooltip = remove_$loss$_party_supplies_tooltip
	]
	hidden_effect = {
		[[add]
			change_variable = { partySupplies = $add$ }
		]
		[[loss]
			subtract_variable = { partySupplies = $loss$ }
		]
		if = {
			limit = { check_variable = { partySupplies = 100 } }
			set_variable = { partySupplies = 100 }
		}
		if = {
			limit = { NOT = { check_variable = { partySupplies = 0 } } }
			set_variable = { partySupplies = 0 }
		}
		#Only use the 4 below for the prep phase
		[[adm_cost]	
			change_variable = { partySuppliesAdmCost = $adm_cost$ }
		]
		[[dip_cost]
			change_variable = { partySuppliesDipCost = $dip_cost$ }
		]
		[[mil_cost]
			change_variable = { partySuppliesMilCost = $mil_cost$ }
		]
		[[cash_cost]
			change_variable = { partySuppliesCashCost = $cash_cost$ }
		]
	}
}

change_party_loot = {
	[[add_tooltip]
		custom_tooltip = add_$add$_party_loot_tooltip
	]
	[[remove_tooltip]
		custom_tooltip = remove_$loss$_party_loot_tooltip
	]
	hidden_effect = {
		[[add]
			change_variable = { partyLoot = $add$ }
		]
		[[loss]
			subtract_variable = { partyLoot = $loss$ }
		]
		if = {
			limit = { NOT = { check_variable = { partyLoot = 0 } } }
			set_variable = { partyLoot = 0 }
		}
	}
}

refund_party_preparation = {
	hidden_effect = {
		[[manpower]
			while = { limit = { check_variable = { partyManpower = 1000 } }
				subtract_variable = { partyManpower = 1000 }
				infantry = owner
			}
			set_variable = { partyManpower = 0 }
			if = {
				limit = { owner = { OR = { has_country_flag = dwarven_pantheon_expedition_lorgram has_country_flag = dwarven_pantheon_expedition_grobilazk } } }
				set_variable = { partyManpower = 10000 }
			}
		]
		[[morale]
			currency_effect_expedition = { currency = adm_power morale = Adm addTo = owner }
			currency_effect_expedition = { currency = dip_power morale = Dip addTo = owner }
			currency_effect_expedition = { currency = mil_power morale = Mil addTo = owner }
			currency_effect_expedition = { currency = treasury morale = Cash addTo = owner }
			owner = { 
				export_to_variable = {
					which = partyMorale
					value = trigger_value:land_morale
				}
				if = {
					limit = { has_country_flag = dwarven_pantheon_expedition_karazlov }
					change_variable = { partyMorale = 2 }
				}
				if = {
					limit = { has_country_flag = dwarven_pantheon_expedition_grimthar }
					change_variable = { partyMorale = 2 }
				}
				if = {
					limit = { has_country_modifier = dwarovar_expedition_douche }
					multiply_variable = { partyMorale = 0.8 }
				}
				ROOT = { set_variable = { which = partyMorale which = PREV } } 
			}
			if = {
				limit = { check_variable = { partyMorale = 10 } }
				set_variable = { partyMorale = 10 }
			}
			if = {
				limit = { NOT = { check_variable = { partyMorale = 0 } } }
				set_variable = { partyMorale = 0 }
			}
		]
		[[effectiveness]
			currency_effect_expedition = { currency = adm_power effectiveness = Adm addTo = owner }
			currency_effect_expedition = { currency = dip_power effectiveness = Dip addTo = owner }
			currency_effect_expedition = { currency = mil_power effectiveness = Mil addTo = owner }
			currency_effect_expedition = { currency = treasury effectiveness = Cash addTo = owner }
			set_variable = { partyEffectiveness = 100 }
			owner = { 
				export_to_variable = {
					which = partyEffectiveness
					value = modifier:discipline
				}
				if = {
					limit = { has_reform = dwarovar_serpentspine_spelunking }
					change_variable = { partyEffectiveness = 0.05 }
				}
				if = {
					limit = { has_country_modifier = dwarovar_urist_stories }
					change_variable = { partyEffectiveness = 0.05 }
				}
				if = {
					limit = { has_country_flag = dwarven_pantheon_expedition_dolurazan }
					change_variable = { partyEffectiveness = 0.20 }
				}
				if = {
					limit = { has_country_flag = dwarven_pantheon_expedition_derzobrazan }
					change_variable = { partyEffectiveness = 0.20 }
				}
				if = {
					limit = { has_country_flag = dwarven_pantheon_expedition_bervinazan }
					change_variable = { partyEffectiveness = 0.20 }
				}
				if = {
					limit = { has_estate_privilege = artifice_invention_allclan_BOMBNAR }
					change_variable = { partyEffectiveness = 0.05 }
				}
				multiply_variable = { partyEffectiveness = 100 }
				ROOT = { change_variable = { which = partyEffectiveness which = PREV } }
			}
		]
		[[supplies]
			currency_effect_expedition = { currency = adm_power supplies = Adm addTo = owner }
			currency_effect_expedition = { currency = dip_power supplies = Dip addTo = owner }
			currency_effect_expedition = { currency = mil_power supplies = Mil addTo = owner }
			currency_effect_expedition = { currency = treasury supplies = Cash addTo = owner }
			set_variable = { partySupplies = 0 }
			if = {
				limit = { owner = { OR = { has_country_flag = dwarven_pantheon_expedition_thyrfen has_country_flag = dwarven_pantheon_expedition_werdun } } }
				set_variable = { partySupplies = 100 }
			}
		]
		[[rewards]
			set_variable = { partyRewards = 0 }
		]
	}
}

update_party_costs = {
	hidden_effect = {
		set_variable = { which = partyPreparationCost which = partyEffectivenessAdmCost }
		change_variable = { which = partyPreparationCost which = partyEffectivenessDipCost }
		change_variable = { which = partyPreparationCost which = partyEffectivenessMilCost }
		change_variable = { which = partyPreparationCost which = partyEffectivenessCashCost }
		change_variable = { which = partyPreparationCost which = partyMoraleAdmCost }
		change_variable = { which = partyPreparationCost which = partyMoraleDipCost }
		change_variable = { which = partyPreparationCost which = partyMoraleMilCost }
		change_variable = { which = partyPreparationCost which = partyMoraleCashCost }
		change_variable = { which = partyPreparationCost which = partySuppliesAdmCost }
		change_variable = { which = partyPreparationCost which = partySuppliesDipCost }
		change_variable = { which = partyPreparationCost which = partySuppliesMilCost }
		change_variable = { which = partyPreparationCost which = partySuppliesCashCost }
		set_variable = { which = partyTotalCost which = partyPreparationCost }
		change_variable = { which = partyTotalCost which = partyRewards }
	}
}

save_party_preparation = {
	hidden_effect = {
		owner = { set_country_flag = sent_first_expedition }
		set_variable = { which = partyManpowerSave which = partyManpower }
		set_variable = { which = partyMoraleSave which = partyMorale }
		set_variable = { which = partyEffectivenessSave which = partyEffectiveness }
		set_variable = { which = partySuppliesSave which = partySupplies }
		set_variable = { which = partyRewardsSave which = partyRewards }
		if = {
			limit = { has_province_flag = explorable_dungeon }
			set_variable = { dangerLevelSave = 6 }
			set_variable = { nbFloorSave = 8 }
		}
		else = {
			set_variable = { which = dangerLevelSave which = dangerLevel }
			set_variable = { which = nbFloorSave which = nbFloor }
		}
		owner = {
			set_variable = { which = partyManpowerSave which = PREV }
			set_variable = { which = partyMoraleSave which = PREV }
			set_variable = { which = partyEffectivenessSave which = PREV }
			set_variable = { which = partySuppliesSave which = PREV }
			set_variable = { which = partyRewardsSave which = PREV }
			set_variable = { which = dangerLevelSave which = PREV }
			set_variable = { which = nbFloorSave which = PREV }
		}
	}
}

loot_estimate = {
	if = {
		limit = { check_variable = { dangerLevel = 5 } }
		set_variable = { lowLootEstimate = 200 }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 4 } }
		set_variable = { lowLootEstimate = 175 }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 3 } }
		set_variable = { lowLootEstimate = 150 }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 2 } }
		set_variable = { lowLootEstimate = 125 }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 1 } }
		set_variable = { lowLootEstimate = 100 }
	}
	else_if = {
		limit = { has_province_flag = explorable_dungeon }
		set_variable = { lowLootEstimate = 150 }
	}
	else = {
		set_variable = { lowLootEstimate = 150 } #Failsafe
	}
	
	multiply_variable = { which = lowLootEstimate which = nbFloor }
	random_list = {
		30 = { multiply_variable = { lowLootEstimate = 1.3 } }
		30 = { multiply_variable = { lowLootEstimate = 0.7 } }
		30 = { multiply_variable = { lowLootEstimate = 1.2 } }
		30 = { multiply_variable = { lowLootEstimate = 0.8 } }
	}
	random = {
		chance = 50
		change_variable = { lowLootEstimate = 150 }
	}
	random = {
		chance = 50
		subtract_variable = { lowLootEstimate = 150 }
	}
	
	set_variable = { which = highLootEstimate which = lowLootEstimate }
	multiply_variable = { highLootEstimate = 2 }
	
	random_list = {
		30 = { multiply_variable = { highLootEstimate = 1.3 } }
		30 = { multiply_variable = { highLootEstimate = 0.7 } }
		30 = { multiply_variable = { highLootEstimate = 1.2 } }
		30 = { multiply_variable = { highLootEstimate = 0.8 } }
	}
	random = {
		chance = 50
		change_variable = { highLootEstimate = 150 }
	}
	random = {
		chance = 50
		subtract_variable = { highLootEstimate = 150 }
	}
	
	# Trim
	
	divide_variable = { lowLootEstimate = 100000 }
	multiply_variable = { lowLootEstimate = 100000 }
	
	divide_variable = { highLootEstimate = 100000 }
	multiply_variable = { highLootEstimate = 100000 }
	
	# Loot Estimate for Morale Loss relative to Party Rewards calculation in progress effect
	
	set_variable = { which = lootEstimate which = lowLootEstimate }
	change_variable = { which = lootEstimate which = highLootEstimate }
	divide_variable = { lootEstimate = 2 }
	if = {
		limit = { check_variable = { lootEstimate = 2000 } }
		set_variable = { lootEstimate = 2000 }
	}
}

####System
# If progress must be faster for OPM or other, lossSupplies and lossMorale MUST BE ADJUSTED TOO
# At 100 progress, you finish a floors
progress_advancement = {
	# OPM only
	if = {
		limit = { owner = { NOT = { num_of_cities = 2 } } }
		set_variable = { addProgress = 14.1 }		# ~7 months/floors at this rate, max ~4 years
		
		#Supplies
		set_variable = { lossSupplies = 2.06 }
		#Morale
		set_variable = { lossMorale = 0.21 }
	}
	# Remnant Colonial option
	else_if = {
		limit = { owner = { has_country_modifier = remnant_colonial } }
		set_variable = { addProgress = 8.2 }	# ~12 months/floors at this rate, max ~7 years
		
		#Supplies
		set_variable = { lossSupplies = 1.17 }
		#Morale
		set_variable = { lossMorale = 0.13 }
	}
	# Other dude
	else = {
		set_variable = { addProgress = 5.8 }	 # ~22 months/floors at this rate, max ~13 years
		
		#Supplies
		set_variable = { lossSupplies = 0.85 }
		#Morale
		set_variable = { lossMorale = 0.10 }
	}
	
	# Supplies lost
	random = {
		chance = 20
		multiply_variable = { lossSupplies = 1.1 }
	}
	random = {
		chance = 20
		multiply_variable = { lossSupplies = 0.9 }
	}
	
	if = {
		limit = { owner = { ruler_has_personality = careful_personality } }	
		random = {
			chance = 40
			multiply_variable = { lossSupplies = 0.9 }
		}
	}
	
	#Party Rewards
	if = {
		limit = { check_variable = { partyRewards = 2000 } }
		multiply_variable = { lossMorale = 0.52 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1900 } }
		multiply_variable = { lossMorale = 0.57 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1800 } }
		multiply_variable = { lossMorale = 0.61 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1700 } }
		multiply_variable = { lossMorale = 0.65 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1600 } }
		multiply_variable = { lossMorale = 0.69 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1500 } }
		multiply_variable = { lossMorale = 0.72 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1400 } }
		multiply_variable = { lossMorale = 0.75 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1300 } }
		multiply_variable = { lossMorale = 0.78 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1200 } }
		multiply_variable = { lossMorale = 0.81 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1100 } }
		multiply_variable = { lossMorale = 0.84 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1000 } }
		multiply_variable = { lossMorale = 0.87 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 900 } }
		multiply_variable = { lossMorale = 0.89 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 800 } }
		multiply_variable = { lossMorale = 0.91 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 700 } }
		multiply_variable = { lossMorale = 0.93 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 600 } }
		multiply_variable = { lossMorale = 0.95 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 500 } }
		multiply_variable = { lossMorale = 0.97 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 400 } }
		multiply_variable = { lossMorale = 0.98 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 300 } }
		multiply_variable = { lossMorale = 0.99 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 200 } }
		multiply_variable = { lossMorale = 1.1 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 100 } }
		multiply_variable = { lossMorale = 1.2 }
	}
	else = { multiply_variable = { lossMorale = 1.3 } }
	
	#Attrition
	if = {
		limit = { check_variable = { partyManpower = 5000 } }
		multiply_variable = { partyManpower = 0.99 }
	}
	else = {
		multiply_variable = { partyManpower = 0.98 }
	}
	random_list = {
		120 = {}
		25 = { change_variable = { partyManpower = -5 } }
		25 = { change_variable = { partyManpower = -3 } }
		25 = { change_variable = { partyManpower = -1 } }
	}
	
	#Starvation
	if = {
		limit = { NOT = { check_variable = { partySupplies = 0.1 } } }
		multiply_variable = { partyManpower = 0.75 }
		change_variable = { partyManpower = -500 }
	}
	
	#Low Morale/Desertion
	if = {
		limit = { NOT = { check_variable = { partyMorale = 0.1 } } }
		multiply_variable = { partyManpower = 0.7 }
		change_variable = { partyManpower = -300 }
	}
	
	#Lack of Organisation
	if = {
		limit = { NOT = { check_variable = { partyEffectiveness = 50 } } }
		multiply_variable = { partyManpower = 0.9 }
		change_variable = { partyManpower = -50 }
	}
	
	#Danger Random Losses
	random_list = {
		90 = { }
		10 = {
			trigger = { 
				check_variable = { dangerLevel = 2 }
				NOT = { check_variable = { dangerLevel = 3 } }
			}
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 110 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 115 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 120 } } }
			random_list = {
				33 = { multiply_variable = { partyManpower = 0.99 } }
				33 = { multiply_variable = { lossSupplies = 1.01 } }
				33 = { multiply_variable = { lossMorale = 1.01 } }
			}
		}
		10 = {
			trigger = { 
				check_variable = { dangerLevel = 3 }
				NOT = { check_variable = { dangerLevel = 4 } }
			}
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 125 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 130 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 135 } } }
			random_list = {
				33 = { multiply_variable = { partyManpower = 0.98 } }
				33 = { multiply_variable = { lossSupplies = 1.02 } }
				33 = { multiply_variable = { lossMorale = 1.02 } }
			}
		}
		10 = {
			trigger = { 
				check_variable = { dangerLevel = 4 }
				NOT = { check_variable = { dangerLevel = 5 } }
			}
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 140 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 145 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 150 } } }
			random_list = {
				33 = { multiply_variable = { partyManpower = 0.97 } }
				33 = { multiply_variable = { lossSupplies = 1.03 } }
				33 = { multiply_variable = { lossMorale = 1.03 } }
			}
		}
		10 = {
			trigger = { 
				check_variable = { dangerLevel = 5 }
			}
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 155 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 160 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 165 } } }
			random_list = {
				33 = { multiply_variable = { partyManpower = 0.96 } }
				33 = { multiply_variable = { lossSupplies = 1.04 } }
				33 = { multiply_variable = { lossMorale = 1.04 } }
			}
		}
	}
	
	#Random Progress
	random_list = {
		10 = {
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 45 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 50 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 55 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 60 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 65 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 70 } } }
			multiply_variable = { addProgress = 0.5 }
		}
		10 = {
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 75 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 80 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 85 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 90 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 95 } } }
			modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 100 } } }
			multiply_variable = { addProgress = 0.75 }
		}
		50 = { }
		10 = {
			modifier = { factor = 0 NOT = { check_variable = { partyEffectiveness = 105 } } }
			modifier = { factor = 1.5 check_variable = { partyEffectiveness = 105 } }
			modifier = { factor = 1.5 check_variable = { partyEffectiveness = 110 } }
			modifier = { factor = 1.5 check_variable = { partyEffectiveness = 115 } }
			modifier = { factor = 1.5 check_variable = { partyEffectiveness = 120 } }
			modifier = { factor = 1.5 check_variable = { partyEffectiveness = 125 } }
			modifier = { factor = 1.5 check_variable = { partyEffectiveness = 130 } }
			multiply_variable = { addProgress = 1.25 }
		}
		10 = {
			modifier = { factor = 0 NOT = { check_variable = { partyEffectiveness = 135 } } }
			modifier = { factor = 2 check_variable = { partyEffectiveness = 135 } }
			modifier = { factor = 2 check_variable = { partyEffectiveness = 140 } }
			modifier = { factor = 2 check_variable = { partyEffectiveness = 145 } }
			modifier = { factor = 2 check_variable = { partyEffectiveness = 150 } }
			modifier = { factor = 2 check_variable = { partyEffectiveness = 155 } }
			modifier = { factor = 2 check_variable = { partyEffectiveness = 160 } }
			multiply_variable = { addProgress = 1.5 }
		}
		10 = {
			modifier = { factor = 0 NOT = { check_variable = { partyEffectiveness = 165 } } }
			modifier = { factor = 3 check_variable = { partyEffectiveness = 165 } }
			modifier = { factor = 3 check_variable = { partyEffectiveness = 170 } }
			modifier = { factor = 3 check_variable = { partyEffectiveness = 175 } }
			modifier = { factor = 3 check_variable = { partyEffectiveness = 180 } }
			modifier = { factor = 3 check_variable = { partyEffectiveness = 185 } }
			modifier = { factor = 3 check_variable = { partyEffectiveness = 190 } }
			multiply_variable = { addProgress = 1.75 }
		}
		1 = {
			modifier = { factor = 0 NOT = { check_variable = { partyEffectiveness = 195 } } }
			modifier = { factor = 7000 check_variable = { partyEffectiveness = 195 } }
			multiply_variable = { addProgress = 2 }
		}
	}
	
	if = {
		limit = { owner = { NOT = { num_of_cities = 2 } } }
		random = {
			chance = 20
			change_party_effectiveness = { loss = 1 }
		}
	}
	else = {
		random = {
			chance = 7
			change_party_effectiveness = { loss = 1 }
		}
	}
	
	#Allclan BOMBNAR
	if = {
		limit = { owner = { has_estate_privilege = artifice_invention_allclan_BOMBNAR } }
		multiply_variable = { addProgress = 1.1 }
	}

	subtract_variable = { which = partyMorale which = lossMorale }
	subtract_variable = { which = partySupplies which = lossSupplies }
	change_variable = { which = progressFloor which = addProgress }
	
	#Sanity
	if = {
		limit = { NOT = { check_variable = { partyMorale = 0 } } }
		set_variable = { partyMorale = 0 }
	}
	if = {
		limit = { NOT = { check_variable = { partySupplies = 0 } } }
		set_variable = { partySupplies = 0 }
	}
	if = {
		limit = { NOT = { check_variable = { partyManpower = 0 } } }
		set_variable = { partyManpower = 0 }
	}
	else = {
		divide_variable = { partyManpower = 1000 }
		multiply_variable = { partyManpower = 1000 }
	}
}
launch_encounter = {
	if = {
		limit = { continent = serpentspine }
		province_event = { id = diggy_encounter.0 }
	}
}
encounter_effect = {
	hidden_effect = {
		random_list = {
			#Success
			$base_success$ = {
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 105 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 110 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 115 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 120 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 125 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 130 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 135 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 135 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 140 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 145 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 150 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 155 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 160 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 165 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 170 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 175 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 180 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 185 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 190 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 195 } }
				#Racial shit
				modifier = { factor = 1.2 owner = { has_country_modifier = kobold_administration } has_terrain = cavern }
				modifier = { factor = 1.2 owner = { has_country_modifier = goblin_administration } has_terrain = cavern }
				modifier = { factor = 1.2 owner = { has_country_modifier = dwarven_administration } OR = { has_terrain = dwarven_hold has_terrain = dwarven_hold_surface } }
				[[added_success_modifier]
					$added_success_modifier$
				]
				
				province_event = { id = diggy_encounter.$success_id$ }
			}
			#Failure
			$base_failure$ = {
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 100 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 95 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 90 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 85 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 80 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 75 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 70 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 65 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 60 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 55 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 50 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 45 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 40 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 35 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 30 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 25 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 20 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 15 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 10 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 5 } } }
				modifier = { factor = 100 NOT = { check_variable = { partyEffectiveness = 1 } } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 2 } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 3 } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 4 } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 5 } }
				[[added_failure_modifier]
					$added_failure_modifier$
				]
				
				province_event = { id = diggy_encounter.$failure_id$ }
			}
			#Special
			[[special_option]
				$special_option$ = {
					$special_trigger$
					$special_modifier$
					$special_event$
				}
			]
			
			[[special_option_2]
				$special_option_2$ = {
					$special_trigger_2$
					$special_modifier_2$
					$special_event_2$
				}
			]
		}
	}
}
continue_expedition = {
	hidden_effect = { province_event = { id = diggy_expedition.2000 days = 30 } }
}

####rewards
add_loot_effect = {
	set_variable = { addLoot = 75 }
	if = {
		limit = { is_variable_equal = { which = clearedFloor value = 1 } }
		change_variable = { addLoot = 10 }
		random = {
			chance = 25
			change_variable = { addLoot = 10 }
		}
	}
	else_if = {
		limit = { is_variable_equal = { which = clearedFloor value = 2 } }
		change_variable = { addLoot = 20 }
		random = {
			chance = 25
			change_variable = { addLoot = 20 }
		}
	}
	else_if = {
		limit = { is_variable_equal = { which = clearedFloor value = 3 } }
		change_variable = { addLoot = 30 }
		random = {
			chance = 25
			change_variable = { addLoot = 30 }
		}
	}
	else_if = {
		limit = { is_variable_equal = { which = clearedFloor value = 4 } }
		change_variable = { addLoot = 40 }
		random = {
			chance = 25
			change_variable = { addLoot = 40 }
		}
	}
	else_if = {
		limit = { is_variable_equal = { which = clearedFloor value = 5 } }
		change_variable = { addLoot = 50 }
		random = {
			chance = 25
			change_variable = { addLoot = 50 }
		}
	}
	else_if = {
		limit = { is_variable_equal = { which = clearedFloor value = 6 } }
		change_variable = { addLoot = 60 }
		random = {
			chance = 25
			change_variable = { addLoot = 60 }
		}
	}
	else_if = {
		limit = { is_variable_equal = { which = clearedFloor value = 7 } }
		change_variable = { addLoot = 70 }
		random = {
			chance = 25
			change_variable = { addLoot = 70 }
		}
	}
	if = {
		limit = { has_terrain = dwarven_hold }
		change_variable = { addLoot = 50 }
	}
	if = {
		limit = { has_terrain = dwarven_hold_surface }
		change_variable = { addLoot = 25 }
	}
	if = {
		limit = { check_variable = { dangerLevel = 5 } }
		change_variable = { addLoot = 175 }
		random = {
			chance = 50
			change_variable = { addLoot = 25 }
		}
		random = {
			chance = 25
			change_variable = { addLoot = 50 }
		}
		random = {
			chance = 50
			subtract_variable = { addLoot = 50 }
		}
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 4 } }
		change_variable = { addLoot = 150 }
		random = {
			chance = 50
			change_variable = { addLoot = 20 }
		}
		random = {
			chance = 25
			change_variable = { addLoot = 40 }
		}
		random = {
			chance = 50
			subtract_variable = { addLoot = 40 }
		}
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 3 } }
		change_variable = { addLoot = 125 }
		random = {
			chance = 50
			change_variable = { addLoot = 15 }
		}
		random = {
			chance = 25
			change_variable = { addLoot = 30 }
		}
		random = {
			chance = 50
			subtract_variable = { addLoot = 30 }
		}
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 2 } }
		change_variable = { addLoot = 100 }
		random = {
			chance = 50
			change_variable = { addLoot = 10 }
		}
		random = {
			chance = 25
			change_variable = { addLoot = 20 }
		}
		random = {
			chance = 50
			subtract_variable = { addLoot = 20 }
		}
	}
	else = {
		change_variable = { addLoot = 75 }
		random = {
			chance = 50
			change_variable = { addLoot = 5 }
		}
		random = {
			chance = 25
			change_variable = { addLoot = 10 }
		}
		random = {
			chance = 50
			subtract_variable = { addLoot = 10 }
		}
	}
	change_variable = { which = partyLoot which = addLoot }
}

set_adk_effect = {
	if = {
		limit = { check_variable = { dangerLevel = 5 } }
		random_list = {
			20 = { set_variable = { temp_adk = 3 } }
			60 = { set_variable = { temp_adk = 2 } }
			25 = { set_variable = { temp_adk = 1 } }
		}
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 4 } }
		random_list = {
			10 = { set_variable = { temp_adk = 3 } }
			50 = { set_variable = { temp_adk = 2 } }
			40 = { set_variable = { temp_adk = 1 } }
			10 = { set_variable = { temp_adk = 0 } }
		}
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 3 } }
		random_list = {
			5 = { set_variable = { temp_adk = 3 } }
			40 = { set_variable = { temp_adk = 2 } }
			55 = { set_variable = { temp_adk = 1 } }
			20 = { set_variable = { temp_adk = 0 } }
		}
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 2 } }
		random_list = {
			1 = { set_variable = { temp_adk = 3 } }
			30 = { set_variable = { temp_adk = 2 } }
			69 = { set_variable = { temp_adk = 1 } }
			30 = { set_variable = { temp_adk = 0 } }
		}
	}
	else = {
		random_list = {
			1 = { set_variable = { temp_adk = 3 } }
			20 = { set_variable = { temp_adk = 2 } }
			79 = { set_variable = { temp_adk = 1 } }
			40 = { set_variable = { temp_adk = 0 } }
		}
	}
}
add_adk_effect = {
	custom_tooltip = gain_$add$_adk_tooltip
	hidden_effect = {
		change_variable = { ancientDwarvenKnowledge = $add$ }
		divide_variable = { ancientDwarvenKnowledge = 1000 }
		multiply_variable = { ancientDwarvenKnowledge = 1000 }
	}
}
reward_adk_effect = {
	[[store]
		custom_tooltip = store_adk_tooltip
		hidden_effect = { owner = { change_variable = { which = ancientDwarvenKnowledge which = PREV } } }
	]
	[[spend] #add custom inputs for other currencies if necessary later
		custom_tooltip = spend_adk_tooltip
		hidden_effect = {
			while = {
				limit = { check_variable = { ancientDwarvenKnowledge = 1 } }
				subtract_variable = { ancientDwarvenKnowledge = 1 }
				owner = { change_government_reform_progress = 15 }
			}
		}
	]
}

special_reward_expedition = {
	##Counter for missions
	hidden_effect = { owner = { change_variable = { expeditions_completed_var = 1 } } }

	##Random flavor
	if = {
		limit = { has_province_modifier = dwarovar_unwanted_guests }
		remove_province_modifier = dwarovar_unwanted_guests
	}

	##Militarisation
	if = {
		limit = { 
			owner = {
				has_government_mechanic = anb_adventurer_unity
				NOT = { num_of_cities = 2 } 
			}
		}
		if = {
			limit = { check_variable = { dangerLevel = 5 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity 
					power_type = adventurer_unity 
					value = 25
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 4 } }
						owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity 
					power_type = adventurer_unity 
					value = 20
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 3 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity 
					power_type = adventurer_unity 
					value = 15
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 2 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 10
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 1 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 5
				}
			}
		}
	}
	else_if = {
		limit = { owner = { has_government_mechanic = anb_adventurer_unity } }
		if = {
			limit = { check_variable = { dangerLevel = 5 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 12.5
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 4 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 10
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 3 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 7.5
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 2 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 5
				}
			}
		}
		else_if = {
			limit = { check_variable = { dangerLevel = 1 } }
			owner = { 
				add_government_power = {
					mechanic_type = anb_adventurer_unity
					power_type = adventurer_unity 
					value = 2.5
				}
			}
		}
	}
	
	##Prestige
	if = {
		limit = { check_variable = { dangerLevel = 5 } }
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 25 } }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 4 } }
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 15 } }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 3 } }
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 10 } }
	}
	else_if = {
		limit = { check_variable = { dangerLevel = 2 } }
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 5 } }
	}
	else = {
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 2.5 } }
	}
	
	##Dwarovkron
	if = {
		limit = { has_province_modifier = dwarovkron_fragment }
		hidden_effect = { remove_province_modifier = dwarovkron_fragment  }
		#amethyst
		if = {
			limit = { has_province_modifier = dwarovkron_amethyst_fragment }
			hidden_effect = { remove_province_modifier = dwarovkron_amethyst_fragment }
			set_global_flag = dwarovkron_amethyst_found
			owner = {
				hidden_effect = { add_country_modifier = { name = dwarovkron_amethyst duration = -1 } }
				country_event = { id = diggy.211 }
			}
		}
		#diamond
		if = {
			limit = { has_province_modifier = dwarovkron_diamond_fragment }
			hidden_effect = { remove_province_modifier = dwarovkron_diamond_fragment }
			set_global_flag = dwarovkron_diamond_found
			owner = {
				hidden_effect = { add_country_modifier = { name = dwarovkron_diamond duration = -1 } }
				country_event = { id = diggy.212 }
			}
		}
		#citrine
		if = {
			limit = { has_province_modifier = dwarovkron_citrine_fragment }
			hidden_effect = { remove_province_modifier = dwarovkron_citrine_fragment }
			set_global_flag = dwarovkron_citrine_found
			owner = {
				hidden_effect = { add_country_modifier = { name = dwarovkron_citrine duration = -1 } }
				country_event = { id = diggy.213 }
			}
		}
		#ruby
		if = {
			limit = { has_province_modifier = dwarovkron_ruby_fragment }
			hidden_effect = { remove_province_modifier = dwarovkron_ruby_fragment }
			set_global_flag = dwarovkron_ruby_found
			owner = {
				hidden_effect = { add_country_modifier = { name = dwarovkron_ruby duration = -1 } }
				country_event = { id = diggy.214 }
			}
		}
	}
	
	##Encounters
	if = {
		limit = { 
			AND = {
				has_province_flag = expedition_mages_happy
				owner = { has_estate = estate_mages }
			}
		}
		owner = { add_estate_loyalty = { estate = estate_mages loyalty = 10 } }
	}
	if = {
		limit = { 
			AND = {
				has_province_flag = expedition_mages_unhappy
				owner = { has_estate = estate_mages }
			}
		}
		owner = { add_estate_loyalty = { estate = estate_mages loyalty = -10 } }
	}
	if = {
		limit = { 
			AND = {
				has_province_flag = expedition_big_vein
				OR = {
					trade_goods = iron
					trade_goods = copper
					trade_goods = gold
					trade_goods = mithril
					trade_goods = gems
				}
			}
		}
		add_permanent_province_modifier = { name = expedition_big_vein_modifier duration = -1 }
	}
	if = {
		limit = { has_province_flag = expedition_dwarf_colonists_join }
		owner = {
			random_owned_province = {
				limit = { province_group = hold_province }
				random_list = {
					33 = { add_base_tax = 2 }
					33 = { add_base_production = 2 }
					33 = { add_base_manpower = 2 }
				}
			}
		}
	}
	if = {
		limit = { has_province_flag = expedition_slime_colony }
		add_permanent_province_modifier = { name = expedition_slime_colony_modifier duration = -1 }
	}
	if = {
		limit = { has_province_flag = expedition_remnant_dev }
		if = {
			limit = { province_group = hold_province }
			add_base_tax = 2
			add_base_production = 2
			add_base_manpower = 2
			add_local_autonomy = 80
		}
		else = {
			add_base_tax = 3
			add_base_production = 2
			add_base_manpower = 3
			add_local_autonomy = 50
		}
	}
	if = {
		limit = { has_province_flag = expedition_bugbear_tribe }
		add_permanent_province_modifier = { name = expedition_bugbear_tribe_modifier duration = -1 }
	}


	##Missions
	# Khugdihr MT
	if = {
		limit = { has_province_flag = khug_expedition_1_created }
		owner = { country_event = { id = flavour_khug.16 } }
	}
	if = {
		limit = { has_province_flag = khug_expedition_2_created }
		owner = { country_event = { id = flavour_khug.5 } }
	}

	#Krakazol MT
	if = {
		limit = { has_province_flag = krakazol_key_expedition }
		custom_tooltip = krakazol_found_key_tooltip
		clr_province_flag = krakazol_key_expedition
	}
	#temp until dungeons are made
	if = {
		limit = {
			OR = {
				has_province_flag = krakazol_1st_exp
				has_province_flag = krakazol_2nd_exp
				has_province_flag = krakazol_3rd_exp
			}
		}
		tooltip = { add_great_project_tier = { type = dd_stramolgiv tier = 1 } }
		hidden_effect = { owner = { country_event = { id = flavor_krakazol.202 } } }
		owner = { change_innovativeness = 5 }
		if = {
			limit = { has_province_flag = krakazol_1st_exp }
			owner = {
				set_country_flag = krakazol_part2
				swap_non_generic_missions = yes
			}
		}
		clr_province_flag = krakazol_1st_exp
		clr_province_flag = krakazol_2nd_exp
		clr_province_flag = krakazol_3rd_exp
	}
	
	# Dur-Vazhatun MT
	if = {
		limit = { has_province_flag = vazhatun_expedition_flag }
		owner = { country_event = { id = flavor_vazhatun.8 } }
	}
	
}
currency_effect_expedition = { #currency (#takeFrom) #addTo #which/value
	hidden_effect = {
		[[mana] set_variable = { which = foo which = manaLoot } ]
		[[cash] set_variable = { which = foo which = cashLoot } ]
		[[badLoot] set_variable = { which = foo which = badLoot } ]
		[[morale] set_variable = { which = foo which = partyMorale$morale$Cost } ]
		[[effectiveness] set_variable = { which = foo which = partyEffectiveness$effectiveness$Cost } ]
		[[supplies] set_variable = { which = foo which = partySupplies$supplies$Cost } ]
		
		if = {
			limit = {
				check_variable = { which = foo value = 0 }
			}
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=while val=820 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=410 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=205 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=102 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=51 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=26 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=13 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=6 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=3 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=2 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=1 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.4 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.2 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.1 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.05 }
			currency_helper_expedition = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.025 }
		}
		else = {
			multiply_variable = { which = foo value = -1 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=while val=820 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=410 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=205 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=102 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=51 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=26 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=13 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=6 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=3 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=2 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=1 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.4 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.2 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.1 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.05 }
			currency_helper_expedition = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.025 }
		}
		set_variable = { which = foo value = 0 }
		[[morale] set_variable = { partyMorale$morale$Cost = 0 } ]
		[[effectiveness] set_variable = { partyEffectiveness$effectiveness$Cost = 0 } ]
		[[supplies] set_variable = { partySupplies$supplies$Cost = 0 } ]
	}
}
currency_helper_expedition = {
	$type$ = {
		limit = {
			check_variable = { which = foo value = $val$ }
		}
		subtract_variable = { which = foo value = $val$ }
		[[addTo]
			$addTo$ = { add_$currency$ = $val$ }
		]
		[[takeFrom]
			$takeFrom$ = { add_$currency$ = -$val$ }
		]
	}
}

####cleanup
clear_expedition_effect = {
	set_variable = { nbFloor = 0 }
	set_variable = { clearedFloor = 0 }
	set_variable = { progressFloor = 0 }
	set_variable = { nbEncounters = 0 }
	set_variable = { dangerLevel = 0 }
	set_variable = { partyEffectiveness = 0 }
	set_variable = { partyManpower = 0 }
	set_variable = { partyRewards = 0 }
	set_variable = { partySupplies = 0 }
	set_variable = { partyManpower = 0 }
	set_variable = { partyLoot = 0 }
	set_variable = { addLoot = 0 }
	set_variable = { lossMorale = 0 }
	set_variable = { lossSupplies = 0 }
	set_variable = { addProgress = 0 }
	set_variable = { cashLoot = 0 }
	set_variable = { manaLoot = 0 }
	set_variable = { foo = 0 }
	set_variable = { ancientDwarvenKnowledge = 0 }
	set_variable = { temp_adk = 0 }
	set_variable = { lootEstimate = 0 }
	set_variable = { partyEffectivenessAdmCost = 0 }
	set_variable = { partyEffectivenessDipCost = 0 }
	set_variable = { partyEffectivenessMilCost = 0 }
	set_variable = { partyEffectivenessCashCost = 0 }
	set_variable = { partyMoraleAdmCost = 0 }
	set_variable = { partyMoraleDipCost = 0 }
	set_variable = { partyMoraleMilCost = 0 }
	set_variable = { partyMoraleCashCost = 0 }
	set_variable = { partySuppliesAdmCost = 0 }
	set_variable = { partySuppliesDipCost = 0 }
	set_variable = { partySuppliesMilCost = 0 }
	set_variable = { partySuppliesCashCost = 0 }
	set_variable = { partyTotalCost = 0 }
	
	clr_province_flag = sent_expedition_@owner
	clr_province_flag = expedition_in_progress
	clr_province_flag = generated_party_stats_@ROOT
	clr_province_flag = generated_expedition
	owner = { clr_country_flag = expedition_happening }
	
	clear_expedition_special_flags_effect = yes
	if = {
		limit = { has_province_modifier = expedition_target }
		remove_province_modifier = expedition_target
		REB = { subtract_variable = { nbExpedition = 1 } }
	}
}
expedition_dead_effect = {
	set_variable = { clearedFloor = 0 }
	set_variable = { progressFloor = 0 }
	set_variable = { partyEffectiveness = 0 }
	set_variable = { partyManpower = 0 }
	set_variable = { partyRewards = 0 }
	set_variable = { partySupplies = 0 }
	set_variable = { partyManpower = 0 }
	set_variable = { partyLoot = 0 }
	set_variable = { addLoot = 0 }
	set_variable = { lossMorale = 0 }
	set_variable = { lossSupplies = 0 }
	set_variable = { addProgress = 0 }
	set_variable = { cashLoot = 0 }
	set_variable = { manaLoot = 0 }
	set_variable = { foo = 0 }
	set_variable = { ancientDwarvenKnowledge = 0 }
	set_variable = { temp_adk = 0 }
	set_variable = { lootEstimate = 0 }
	set_variable = { partyEffectivenessAdmCost = 0 }
	set_variable = { partyEffectivenessDipCost = 0 }
	set_variable = { partyEffectivenessMilCost = 0 }
	set_variable = { partyEffectivenessCashCost = 0 }
	set_variable = { partyMoraleAdmCost = 0 }
	set_variable = { partyMoraleDipCost = 0 }
	set_variable = { partyMoraleMilCost = 0 }
	set_variable = { partyMoraleCashCost = 0 }
	set_variable = { partySuppliesAdmCost = 0 }
	set_variable = { partySuppliesDipCost = 0 }
	set_variable = { partySuppliesMilCost = 0 }
	set_variable = { partySuppliesCashCost = 0 }
	set_variable = { partyTotalCost = 0 }
	
	if = {
		limit = { is_city = yes }
		add_permanent_province_modifier = { name = expedition_death_timer duration = 365 }
	}
	
	clr_province_flag = sent_expedition_@owner
	clr_province_flag = expedition_in_progress
	clr_province_flag = generated_party_stats_@ROOT
	owner = { clr_country_flag = expedition_happening }
	
	clear_expedition_special_flags_effect = yes
}
clear_expedition_special_flags_effect = {
	#Encounter flags
	clr_province_flag = encounter_drunk_dwarf
	clr_province_flag = encounter_mushroom_people
	clr_province_flag = encounter_friendly_slimes
	clr_province_flag = encounter_remnant_camp
	clr_province_flag = encounter_bugbears
	#Expedition reward flags
	clr_province_flag = expedition_big_vein
	clr_province_flag = expedition_mages_happy
	clr_province_flag = expedition_mages_unhappy
	clr_province_flag = expedition_dwarf_colonists_join
	clr_province_flag = expedition_slime_colony
	clr_province_flag = expedition_remnant_dev
	clr_province_flag = expedition_bugbear_tribe

	###Dungeon encounters
	
	#Frogarsalforn
	clr_province_flag = frogarsalforn_1_broken_statue
	clr_province_flag = frogarsalforn_1_bookbinder


	#Wytlramvar
	clr_province_flag = wytlramvar_1_bridge
	clr_province_flag = wytlramvar_1_exit
	clr_province_flag = wytlramvar_1_crystal
	clr_province_flag = wytlramvar_2_crabs
	clr_province_flag = wytlramvar_2_island
	clr_province_flag = wytlramvar_2_rapids
	clr_province_flag = wytlramvar_3_crank
	clr_province_flag = wytlramvar_3_shinies
	clr_province_flag = wytlramvar_3_trap

	#Grumhardhum
	clr_province_flag = grumhardhum_1_forgeroom
	clr_province_flag = grumhardhum_1_upperlvl
	clr_province_flag = grumhardhum_1_mainlvl
	clr_province_flag = grumhardhum_1_maintenancelvl
	clr_province_flag = grumhardhum_1_emergencyvalves
	clr_province_flag = grumhardhum_2_cauldron
	clr_province_flag = grumhardhum_2_controlroom
	clr_province_flag = grumhardhum_2_tunnel
	clr_province_flag = grumhardhum_2_lever
	clr_province_flag = grumhardhum_2_leftvalve
	clr_province_flag = grumhardhum_2_rightvalve
	clr_province_flag = grumhardhum_2_labels
	clr_province_flag = grumhardhum_2_control_correct1
	clr_province_flag = grumhardhum_2_control_correct2
	clr_province_flag = grumhardhum_2_throwwater
	clr_province_flag = grumhardhum_2_blowup
	clr_province_flag = grumhardhum_2_tunnel_success
	clr_province_flag = grumhardhum_3_vents
	clr_province_flag = grumhardhum_3_floodgates
	clr_province_flag = grumhardhum_3_cannons
	clr_province_flag = grumhardhum_3_cage
	clr_province_flag = grumhardhum_3_golems
	clr_province_flag = grumhardhum_3_sprinklers
	clr_province_flag = grumhardhum_3_vents_success
	clr_province_flag = grumhardhum_3_floodgates_success
	clr_province_flag = grumhardhum_3_cannons_success
	clr_province_flag = grumhardhum_3_cage_success
	clr_province_flag = grumhardhum_3_golems_success
	clr_province_flag = grumhardhum_3_sprinklers_success
	clr_province_flag = grumhardhum_3_elementalrun_1
	clr_province_flag = grumhardhum_3_elementalrun_2
	clr_province_flag = grumhardhum_3_elementalrun_3
	clr_province_flag = grumhardhum_3_elementalfight_fail

	#Dimlherd
	clr_province_flag = dimlherd_lava_canoeing_flag
	clr_province_flag = dimlherd_explosives_flag
	clr_province_flag = dimlherd_laboratory_flag
	clr_province_flag = dimlherd_generator_flag

	#Ofralglarf
	clr_province_flag = ofralglarf_1_investigate
	clr_province_flag = ofralglarf_2_lock
	clr_province_flag = ofralglarf_2_drill
	clr_province_flag = ofralglarf_3_bomb
	clr_province_flag = ofralglarf_3_stairs

	#Stunveigryôrth
	clr_province_flag = stunveigryorth_1_lake
	clr_province_flag = stunveigryorth_1_explosives
	clr_province_flag = stunveigryorth_2_pulverise
	clr_province_flag = stunveigryorth_2_dig
	clr_province_flag = stunveigryorth_2_explosives
	clr_province_flag = stunveigryorth_2_descend
	clr_province_flag = stunveigryorth_3_hammer
	clr_province_flag = stunveigryorth_3_smoke
	clr_province_flag = stunveigryorth_3_illusion
	clr_province_flag = stunveigryorth_3_stick

	#Leforn Vâmbrèthar
	clr_province_flag = leforn_1_bomb
	clr_province_flag = leforn_1_stabilize
	clr_province_flag = leforn_3_gems
	clr_province_flag = leforn_3_forge
	clr_province_flag = leforn_3_jeweller

	#Rizvâmbrèthar
	clr_province_flag = runeshop_1_entry
	clr_province_flag = runeshop_1_traps
	clr_province_flag = runeshop_1_perimeter
	clr_province_flag = runeshop_1_attack
	clr_province_flag = runeshop_2_perimeter
	clr_province_flag = runeshop_2_assembly
	clr_province_flag = runeshop_2_violence
	clr_province_flag = runeshop_2_magic
	clr_province_flag = runeshop_2_shutdown
	clr_province_flag = runeshop_2_destroy
	clr_province_flag = runeshop_2_activate
	clr_province_flag = runeshop_2_barricade
	clr_province_flag = runeshop_3_search
	clr_province_flag = runeshop_3_charge
	clr_province_flag = runeshop_3_fastest
	clr_province_flag = runeshop_3_failure
	clr_province_flag = runeshop_3_source
	clr_province_flag = runeshop_3_anvil
	clr_province_flag = runeshop_3_ritual
	clr_province_flag = runeshop_3_banish
	clr_province_flag = runeshop_3_diplomacy

	#Yidablaerun
	clr_province_flag = yidablaerun_1_translate
	clr_province_flag = yidablaerun_1_ritual
	clr_province_flag = yidablaerun_1_web
	clr_province_flag = yidablaerun_1_sneak
	clr_province_flag = yidablaerun_1_bridge
	clr_province_flag = yidablaerun_2_defenses
	clr_province_flag = yidablaerun_2_run
	clr_province_flag = yidablaerun_3_empower
	clr_province_flag = yidablaerun_3_trap
	clr_province_flag = yidablaerun_4_loot

	#Allclan
	clr_province_flag = taming_bnunin_flag
	clr_province_flag = taming_rothe_flag
	clr_province_flag = taming_logrhundr_flag
	clr_province_flag = taming_ooze_flag
	clr_province_flag = taming_troll_flag
	clr_province_flag = taming_cube_flag
	clr_province_flag = taming_shellback_flag
	clr_province_flag = taming_fungrum_flag
	clr_province_flag = taming_sternphant_flag
	clr_province_flag = taming_healing_slime_flag
	clr_province_flag = taming_purple_worm_flag
	clr_province_flag = taming_hook_horror_flag
	clr_province_flag = taming_crawler_flag


}



clr_cavern_exploration = {
	hidden_effect = {
		clr_country_flag = cave_1 
		clr_country_flag = cave_2 
		clr_country_flag = cave_3 
		clr_country_flag = cave_4 
		clr_country_flag = cave_5 
		clr_country_flag = cave_6 
		clr_country_flag = cave_7 
		clr_country_flag = cave_8 
		clr_country_flag = cave_9 
		clr_country_flag = cave_10
		clr_country_flag = cave_11
		clr_country_flag = cave_12
		clr_country_flag = cave_13
		clr_country_flag = cave_14
		clr_country_flag = cave_15
		clr_country_flag = cave_16
		clr_country_flag = cave_17
		clr_country_flag = cave_18
		clr_country_flag = cave_19
		clr_country_flag = cave_20
		clr_country_flag = cave_21
		clr_country_flag = cave_22
		clr_country_flag = cave_23
		clr_country_flag = cave_24
		clr_country_flag = cave_25
		clr_country_flag = exploring_cavern
	}
}


################
### Dungeons ###
################
dungeon_start_exploration = {
	if = {
		limit = { 
			has_great_project = { type = dd_yidablaerun tier = 3 } 
			NOT = { has_global_flag = dd_yidablaerun_4_completed }
		}
		province_event = { id = diggy_dungeons.999 }
	}
	if = {
		limit = { 
			has_great_project = { type = dd_$dungeon$ tier = 2 }
			NOT = { has_great_project = { type = dd_$dungeon$ tier = 3 } }
		}
		province_event = { id = diggy_dungeons.$floor3$ }
	}
	if = {
		limit = { 
			has_great_project = { type = dd_$dungeon$ tier = 1 }
			NOT = { has_great_project = { type = dd_$dungeon$ tier = 2 } }
		}
		province_event = { id = diggy_dungeons.$floor2$ }
	}
	if = { 
		limit = { NOT = { has_great_project = { type = dd_$dungeon$ tier = 1 } } }
		province_event = { id = diggy_dungeons.$floor1$ }
	}
}

dungeon_progress = {
	#Supplies
	set_variable = { lossSupplies = 1.3 }
	#Morale
	set_variable = { lossMorale = 0.25 }
	
	# Supplies lost
	random = {
		chance = 30
		multiply_variable = { lossSupplies = 1.1 }
	}
	random = {
		chance = 30
		multiply_variable = { lossSupplies = 0.9 }
	}
	if = {
		limit = { owner = { ruler_has_personality = careful_personality } }
		random = {
			chance = 40
			multiply_variable = { lossSupplies = 0.9 }
		}
	}
	
	#Party Rewards
	if = {
		limit = { check_variable = { partyRewards = 2000 } }
		multiply_variable = { lossMorale = 0.52 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1900 } }
		multiply_variable = { lossMorale = 0.57 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1800 } }
		multiply_variable = { lossMorale = 0.61 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1700 } }
		multiply_variable = { lossMorale = 0.65 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1600 } }
		multiply_variable = { lossMorale = 0.69 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1500 } }
		multiply_variable = { lossMorale = 0.72 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1400 } }
		multiply_variable = { lossMorale = 0.75 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1300 } }
		multiply_variable = { lossMorale = 0.78 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1200 } }
		multiply_variable = { lossMorale = 0.81 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1100 } }
		multiply_variable = { lossMorale = 0.84 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 1000 } }
		multiply_variable = { lossMorale = 0.87 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 900 } }
		multiply_variable = { lossMorale = 0.89 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 800 } }
		multiply_variable = { lossMorale = 0.91 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 700 } }
		multiply_variable = { lossMorale = 0.93 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 600 } }
		multiply_variable = { lossMorale = 0.95 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 500 } }
		multiply_variable = { lossMorale = 0.97 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 400 } }
		multiply_variable = { lossMorale = 0.98 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 300 } }
		multiply_variable = { lossMorale = 0.99 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 200 } }
		multiply_variable = { lossMorale = 1 }
	}
	else_if = {
		limit = { check_variable = { partyRewards = 100 } }
		multiply_variable = { lossMorale = 1.1 }
	}
	else = { multiply_variable = { lossMorale = 1.2 } }

	
	#Attrition
	multiply_variable = { partyManpower = 0.96 }
	random_list = {
		120 = {}
		25 = { change_variable = { partyManpower = -5 } }
		25 = { change_variable = { partyManpower = -3 } }
		25 = { change_variable = { partyManpower = -1 } }
	}
	
	#Starvation
	if = {
		limit = { NOT = { check_variable = { partySupplies = 0.1 } } }
		multiply_variable = { partyManpower = 0.75 }
		change_variable = { partyManpower = -500 }
	}
	
	#Low Morale/Desertion
	if = {
		limit = { NOT = { check_variable = { partyMorale = 0.1 } } }
		multiply_variable = { partyManpower = 0.8 }
		change_variable = { partyManpower = -300 }
	}
	
	#Lack of Organisation
	if = {
		limit = { NOT = { check_variable = { partyEffectiveness = 50 } } }
		multiply_variable = { partyManpower = 0.9 }
		change_variable = { partyManpower = -50 }
	}
	


	subtract_variable = { which = partyMorale which = lossMorale }
	subtract_variable = { which = partySupplies which = lossSupplies }


	#loot
	random_list = {
		60 = {}
		15 ={ change_variable = { partyLoot = 10 } }
		15 ={ change_variable = { partyLoot = 20 } }
		10 = { change_variable = { partyLoot = 30 } }
	}
	random_list = {
		95 = {}
		5 = { multiply_variable = { partyLoot = 1.1 } }
	}

	#Sanity
	if = {
		limit = { NOT = { check_variable = { partyMorale = 0 } } }
		set_variable = { partyMorale = 0 }
	}
	if = {
		limit = { NOT = { check_variable = { partySupplies = 0 } } }
		set_variable = { partySupplies = 0 }
	}
	if = {
		limit = { NOT = { check_variable = { partyManpower = 0 } } }
		set_variable = { partyManpower = 0 }
	}
	else = {
		divide_variable = { partyManpower = 1000 }
		multiply_variable = { partyManpower = 1000 }
	}
}

dungeon_progress_advancement = {
	hidden_effect = {
		random_list = {
			#Bad
			50 = {
				modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 60 } } }
				modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 70 } } }
				modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 80 } } }
				modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 90 } } }
				modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 100 } } }
				random_list = {
					#Bad
					50 = {
						modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 60 } } }
						modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 65 } } }
						modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 70 } } }
						random_list = {
							20 = { province_event = { id = diggy_dungeons.$id$ days = 45 random = 120 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 45 random = 90 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 45 random = 60 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 45 random = 30 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 45 random = 0 } }
						}
					}
					#Very Bad
					50 = {
						modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 45 } } }
						modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 50 } } }
						modifier = { factor = 1.5 NOT = { check_variable = { partyEffectiveness = 55 } } }
						random_list = {
							20 = { province_event = { id = diggy_dungeons.$id$ days = 60 random = 180 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 60 random = 135 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 60 random = 90 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 60 random = 45 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 60 random = 0 } }
						}
					}
				}
			}
			#Good
			50 = {
				modifier = { factor = 1.5 check_variable = { partyEffectiveness = 110 } }
				modifier = { factor = 1.5 check_variable = { partyEffectiveness = 120 } }
				modifier = { factor = 1.5 check_variable = { partyEffectiveness = 130 } }
				modifier = { factor = 1.5 check_variable = { partyEffectiveness = 140 } }
				modifier = { factor = 1.5 check_variable = { partyEffectiveness = 150 } }
				random_list = {
					#Good
					50 = {
						modifier = { factor = 2 check_variable = { partyEffectiveness = 135 } }
						modifier = { factor = 2 check_variable = { partyEffectiveness = 140 } }
						modifier = { factor = 2 check_variable = { partyEffectiveness = 145 } }
						random_list = {
							20 = { province_event = { id = diggy_dungeons.$id$ days = 30 random = 60 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 30 random = 45 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 30 random = 30 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 30 random = 15 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 30 random = 0 } }
						}
					}
					#Very Good
					50 = {
						modifier = { factor = 2 check_variable = { partyEffectiveness = 150 } }
						modifier = { factor = 2 check_variable = { partyEffectiveness = 155 } }
						modifier = { factor = 2 check_variable = { partyEffectiveness = 160 } }
						random_list = {
							20 = { province_event = { id = diggy_dungeons.$id$ days = 15 random = 30 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 15 random = 21 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 15 random = 15 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 15 random = 7 } }
							20 = { province_event = { id = diggy_dungeons.$id$ days = 15 random = 0 } }
						}
					}
				}
			}
		}
	}
}

dungeon_encounter_effect = {
	hidden_effect = {
		random_list = {
			#Success
			$base_success$ = {
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 105 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 110 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 115 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 120 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 125 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 130 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 135 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 140 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 145 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 150 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 155 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 160 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 165 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 170 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 175 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 180 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 185 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 190 } }
				modifier = { factor = 1.2 check_variable = { partyEffectiveness = 195 } }
				#Racial shit
				modifier = { factor = 1.2 owner = { has_country_modifier = kobold_administration } has_terrain = cavern }
				modifier = { factor = 1.2 owner = { has_country_modifier = goblin_administration } has_terrain = cavern }
				modifier = { factor = 1.2 owner = { has_country_modifier = dwarven_administration } OR = { has_terrain = dwarven_hold has_terrain = dwarven_hold_surface } }
				[[added_success_modifier]
					$added_success_modifier$
				]
				
				province_event = { id = diggy_dungeons.$success_id$ }
			}
			#Failure
			$base_failure$ = {
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 100 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 95 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 90 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 85 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 80 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 75 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 70 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 65 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 60 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 55 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 50 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 45 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 40 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 35 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 30 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 25 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 20 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 15 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 10 } } }
				modifier = { factor = 1.2 NOT = { check_variable = { partyEffectiveness = 5 } } }
				modifier = { factor = 100 NOT = { check_variable = { partyEffectiveness = 1 } } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 2 } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 3 } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 4 } }
				modifier = { factor = 1.2 check_variable = { dangerLevel = 5 } }
				[[added_failure_modifier]
					$added_failure_modifier$
				]
				
				province_event = { id = diggy_dungeons.$failure_id$ }
			}
			#Special
			[[special_option]
				$special_option$ = {
					$special_trigger$
					$special_modifier$
					$special_event$
				}
			]
			
			[[special_option_2]
				$special_option_2$ = {
					$special_trigger_2$
					$special_modifier_2$
					$special_event_2$
				}
			]
		}
	}
}

dungeon_immediate_effect = {
	hidden_effect = {
		clr_province_flag = sent_expedition_@owner #so progress stops
		subtract_variable = { which = partyLoot which = partyRewards }
		if = {
			limit = { check_variable = { partyLoot = 1 } }
			set_variable = { which = cashLoot which = partyLoot }
			set_variable = { which = manaLoot which = partyLoot }
			divide_variable = { cashLoot = 2 }
			divide_variable = { manaLoot = 2 }
			divide_variable = { manaLoot = 3 }
			
			divide_variable = { manaLoot = 1000 }
			multiply_variable = { manaLoot = 1000 }
			
			divide_variable = { cashLoot = 1000 }
			multiply_variable = { cashLoot = 1000 }
		}
		else = {
			set_variable = { which = badLoot which = partyLoot }
			multiply_variable = { badLoot = -1 }
		}
	}
}

#for on_actions
dungeon_ownership_reset_effect = {
	if = {
		limit = { has_dlc = "Leviathan" }
		if = {
			limit = { has_great_project = { type = dd_frogarsalforn } }
			set_province_flag = dd_frogarsalforn_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_frogarsalforn tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_stunveigryorth } }
			set_province_flag = dd_stunveigryorth_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_stunveigryorth tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_wytlramvar } }
			set_province_flag = dd_wytlramvar_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_wytlramvar tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_dimlherd } }
			set_province_flag = dd_dimlherd_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_dimlherd tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_grumhardhum } }
			set_province_flag = dd_grumhardhum_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_grumhardhum tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_leforn } }
			set_province_flag = dd_leforn_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_leforn tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_rizvambrethar } }
			set_province_flag = dd_rizvambrethar_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_rizvambrethar tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_ofralglarf } }
			set_province_flag = dd_ofralglarf_flag
			if = {
				limit = { NOT = { has_great_project = { type = dd_ofralglarf tier = 3 } } }
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
		else_if = {
			limit = { has_great_project = { type = dd_yidablaerun } }
			set_province_flag = dd_yidablaerun_flag
			if = {
				limit = { 
					OR = {
						NOT = { 
							has_great_project = { type = dd_yidablaerun tier = 3 }
						}
						AND = {
							owner = {
								tag = I98
							}
							NOT = { has_global_flag = dd_yidablaerun_4_completed }
						}
					}
				}
				clr_province_flag = floor_explored
				set_province_flag = explorable_dungeon
			}
		}
	}
}


##################
### Dwarovkron ###
##################
seed_dwarovkron = {
	#amethyst
	random_province = {
		limit = { NOT = { has_province_modifier = dwarovkron_fragment } continent = serpentspine has_province_modifier = expedition_target }
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes } #permanent_province can't be hidden
		add_province_modifier = { name = dwarovkron_amethyst_fragment duration = -1 hidden = yes }
	}
	#diamond
	random_province = {
		limit = { NOT = { has_province_modifier = dwarovkron_fragment } region = serpentreach_region has_province_modifier = expedition_target }
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_diamond_fragment duration = -1 hidden = yes }
	}
	#citrine
	random_province = {
		limit = { NOT = { has_province_modifier = dwarovkron_fragment } region = middle_dwarovar_region has_province_modifier = expedition_target }
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_citrine_fragment duration = -1 hidden = yes }
	}
	#ruby
	random_province = {
		limit = { NOT = { has_province_modifier = dwarovkron_fragment } region = west_dwarovar_region has_province_modifier = expedition_target }
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_ruby_fragment duration = -1 hidden = yes }
	}
	#crown
	4119 = { #Amldihr
		owner = { 
			add_country_modifier = { name = dwarovkron_crown duration = -1 }
			country_event = { id = diggy.210 days = 2 }
		}
	}
	#jade
	4311 = { #Gronstunad
		owner = { 
			add_country_modifier = { name = dwarovkron_jade duration = -1 }
			country_event = { id = diggy.215 days = 2 }
		}
	}
	#sapphire
	2973 = { #Ovdal Lodhum
		owner = { 
			add_country_modifier = { name = dwarovkron_sapphire duration = -1 }
			country_event = { id = diggy.216 days = 2 }
		}
	}
}


#both of these are only to be used in on_actions
transfer_dwarovkron_fragments = {
	if = {
		limit = { has_country_modifier = dwarovkron_crown }
		ROOT = {
			add_country_modifier = { name = dwarovkron_crown duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.210 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_amethyst }
		ROOT = {
			add_country_modifier = { name = dwarovkron_amethyst duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.211 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_diamond }
		ROOT = {
			add_country_modifier = { name = dwarovkron_diamond duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.212 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_citrine }
		ROOT = {
			add_country_modifier = { name = dwarovkron_citrine duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.213 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_ruby }
		ROOT = {
			add_country_modifier = { name = dwarovkron_ruby duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.214 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_jade }
		ROOT = {
			add_country_modifier = { name = dwarovkron_jade duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.215 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_sapphire }
		ROOT = {
			add_country_modifier = { name = dwarovkron_sapphire duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.216 }
		}
	}
	if = {
		limit = { has_country_modifier = dwarovkron_agate }
		ROOT = {
			add_country_modifier = { name = dwarovkron_agate duration = -1 }
			set_country_flag = flag_dwarovkron_stolen_parts
			country_event = { id = diggy.217 }
		}
	}
}
respawn_dwarovkron_fragments = {
	if = {
		limit = { 
			NOT = { has_global_flag = dwarovkron_ruby_found }
			region = west_dwarovar_region
			NOT = { west_dwarovar_region = { has_province_modifier = dwarovkron_ruby_fragment } }
			has_province_modifier = expedition_target
		}
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_ruby_fragment duration = -1 hidden = yes }
	}
	else_if = {
		limit = { 
			NOT = { has_global_flag = dwarovkron_citrine_found }
			region = middle_dwarovar_region
			NOT = { middle_dwarovar_region = { has_province_modifier = dwarovkron_citrine_fragment } }
			has_province_modifier = expedition_target
		}
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_citrine_fragment duration = -1 hidden = yes }
	}
	else_if = {
		limit = { 
			NOT = { has_global_flag = dwarovkron_diamond_found }
			region = serpentreach_region
			NOT = { serpentreach_region = { has_province_modifier = dwarovkron_diamond_fragment } }
			has_province_modifier = expedition_target
		}
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_diamond_fragment duration = -1 hidden = yes }
	}
	else_if = {
		limit = {
			NOT = { has_global_flag = dwarovkron_amethyst_found }
			NOT = { serpentspine = { has_province_modifier = dwarovkron_amethyst_fragment } }
			has_province_modifier = expedition_target
		}
		add_province_modifier = { name = dwarovkron_fragment duration = -1 hidden = yes }
		add_province_modifier = { name = dwarovkron_amethyst_fragment duration = -1 hidden = yes }
	}
}


########################
### Dwarven Pantheon ###
########################

dwarven_pantheon_unlock_deity = {
	custom_tooltip = dwarven_pantheon_unlock_deity_$deity$_tooltip
	hidden_effect = { set_country_flag = dwarven_pantheon_knows_$deity$ }
}

clr_dwarven_pantheon_deities = {
	hidden_effect = {
		remove_church_aspect = dagrin_adm_aspect
		remove_church_aspect = dagrin_dip_aspect
		remove_church_aspect = anvelind_dip_aspect
		remove_church_aspect = anvelind_mil_aspect
		remove_church_aspect = durvorazir_adm_aspect
		remove_church_aspect = durvorazir_mil_aspect
		remove_church_aspect = margurz_dip_aspect
		remove_church_aspect = margurz_mil_aspect
		remove_church_aspect = miradeth_dip_aspect
		remove_church_aspect = miradeth_mil_aspect
		remove_church_aspect = azmirethazin_adm_aspect
		remove_church_aspect = azmirethazin_dip_aspect
		remove_church_aspect = argezenna_adm_aspect
		remove_church_aspect = argezenna_mil_aspect
		remove_church_aspect = auirikus_adm_aspect
		remove_church_aspect = auirikus_dip_aspect
		remove_church_aspect = urisazirn_adm_aspect
		remove_church_aspect = urisazirn_mil_aspect
		remove_church_aspect = dolurazan_adm_aspect
		remove_church_aspect = dolurazan_mil_aspect
		remove_church_aspect = derzobrazan_adm_aspect
		remove_church_aspect = derzobrazan_dip_aspect
		remove_church_aspect = bervinazan_adm_aspect
		remove_church_aspect = bervinazan_mil_aspect
		remove_church_aspect = karazlov_dip_aspect
		remove_church_aspect = karazlov_mil_aspect
		remove_church_aspect = grimthar_adm_aspect
		remove_church_aspect = grimthar_dip_aspect
		remove_church_aspect = verdrik_adm_aspect
		remove_church_aspect = verdrik_mil_aspect
		remove_church_aspect = thyrfen_adm_aspect
		remove_church_aspect = thyrfen_mil_aspect
		remove_church_aspect = werdun_adm_aspect
		remove_church_aspect = werdun_dip_aspect
		remove_church_aspect = lorgrim_dip_aspect
		remove_church_aspect = lorgrim_mil_aspect
		remove_church_aspect = lorgram_adm_aspect
		remove_church_aspect = lorgram_dip_aspect
		remove_church_aspect = grobilazk_dip_aspect
		remove_church_aspect = grobilazk_mil_aspect
	}
}

dwarven_pantheon_argezenna_purge_effect = {
	custom_tooltip = dwarven_pantheon_argezenna_purge_effect_tooltip
	hidden_effect = {
		if = {
			limit = { 
				OR = {
					has_province_modifier = orcish_majority_oppressed
					has_province_modifier = goblin_majority_oppressed
					has_province_modifier = ogre_majority_oppressed
					has_province_modifier = troll_majority_oppressed
					has_province_modifier = kobold_majority_oppressed
				}
			}

			# remove majority first so no minorities
			remove_racial_majority = { race = orcish }
			remove_racial_majority = { race = goblin }
			remove_racial_majority = { race = ogre }
			remove_racial_majority = { race = troll }
			remove_racial_majority = { race = kobold }

			add_devastation = 50
			change_culture = ROOT
			change_religion = ROOT
			random_list = {
				1 = { add_base_tax = -2 }
				1 = { add_base_production = -2 }
				1 = { add_base_manpower = -2 }
			}
			add_permanent_province_modifier = { name = purge_unrest_modifier duration = 9125 }
		}
		else = {
			remove_racial_minority_any_size_with_tolerance = { race = orcish tolerance = oppressed }
			remove_racial_minority_any_size_with_tolerance = { race = goblin tolerance = oppressed }
			remove_racial_minority_any_size_with_tolerance = { race = ogre tolerance = oppressed }
			remove_racial_minority_any_size_with_tolerance = { race = troll tolerance = oppressed }
			remove_racial_minority_any_size_with_tolerance = { race = kobold tolerance = oppressed }
		}
	}
}

dwarven_pantheon_define_hold_for_auirikus_effect = {
	if = {
		limit = { has_country_flag = is_digging }
		capital_scope = { save_event_target_as = auirikus_target1 }
	}
	else_if = {
		limit = { NOT = { has_country_flag = hold_operation } }
		random_owned_province = {
			limit = { dwarven_pantheon_can_passive_upgrade_auirikus = yes NOT = { has_province_flag = hold_@ROOT } }
			set_province_flag = hold_@ROOT
			save_event_target_as = auirikus_target1
		}
	}
	if = {
		limit = { NOT = { has_country_flag = hold_operation } }
		random_owned_province = {
			limit = { dwarven_pantheon_can_passive_upgrade_auirikus = yes NOT = { has_province_flag = hold_@ROOT } }
			set_province_flag = hold_@ROOT
			save_event_target_as = auirikus_target2
		}
	}
	if = {
		limit = { NOT = { has_country_flag = hold_operation } }
		random_owned_province = {
			limit = { dwarven_pantheon_can_passive_upgrade_auirikus = yes NOT = { has_province_flag = hold_@ROOT } }
			set_province_flag = hold_@ROOT
			save_event_target_as = auirikus_target3
		}
	}
	if = {
		limit = { NOT = { has_country_flag = hold_operation } }
		random_owned_province = {
			limit = { dwarven_pantheon_can_passive_upgrade_auirikus = yes NOT = { has_province_flag = hold_@ROOT } }
			set_province_flag = hold_@ROOT
			save_event_target_as = auirikus_target4
		}
	}
	if = {
		limit = { NOT = { has_country_flag = hold_operation } }
		random_owned_province = {
			limit = { dwarven_pantheon_can_passive_upgrade_auirikus = yes NOT = { has_province_flag = hold_@ROOT } }
			set_province_flag = hold_@ROOT
			save_event_target_as = auirikus_target5
		}
	}
}

dwarven_pantheon_auirikus_cost_effect = {
	trigger_switch = {
		on_trigger = has_province_modifier
		dig_1 = { ROOT = { add_adm_power = -25 add_dip_power = -25 add_mil_power = -25 } }
		dig_2 = { ROOT = { add_adm_power = -50 add_dip_power = -50 add_mil_power = -50 } }
		dig_3 = { ROOT = { add_adm_power = -75 add_dip_power = -75 add_mil_power = -75 } }
		dig_4 = { ROOT = { add_adm_power = -100 add_dip_power = -100 add_mil_power = -100 } }
		dig_5 = { ROOT = { add_adm_power = -125 add_dip_power = -125 add_mil_power = -125 } }
		dig_6 = { ROOT = { add_adm_power = -150 add_dip_power = -150 add_mil_power = -150 } }
		dig_7 = { ROOT = { add_adm_power = -175 add_dip_power = -175 add_mil_power = -175 } }
		dig_8 = { ROOT = { add_adm_power = -200 add_dip_power = -200 add_mil_power = -200 } }
		dig_9 = { ROOT = { add_adm_power = -225 add_dip_power = -225 add_mil_power = -225 } }
		dig_10 = { ROOT = { add_adm_power = -250 add_dip_power = -250 add_mil_power = -250 } }
	}
}

dwarven_pantheon_auirikus_secondary_effects = {
	#dolurazan
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = dolurazan } }
		custom_tooltip = dwarven_pantheon_ritual_has_dolurazan_tooltip
		if = {
			limit = { has_estate = estate_nobles }
			add_estate_influence_modifier = { estate = estate_nobles influence = -5 duration = 1825 desc = auirikus_dolurazan_modifier }
		}
		else = { add_church_power = 25 }
	}
	#derzobrazan
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = derzobrazan } }
		custom_tooltip = dwarven_pantheon_ritual_has_derzobrazan_tooltip
		if = {
			limit = { has_estate = estate_burghers }
			add_estate_influence_modifier = { estate = estate_burghers influence = -5 duration = 1825 desc = auirikus_derzobrazan_modifier }
		}
		else = { add_church_power = 25 }
	}
	#bervinazan
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = bervinazan } }
		custom_tooltip = dwarven_pantheon_ritual_has_bervinazan_tooltip
		if = {
			limit = { has_estate = estate_church }
			add_estate_influence_modifier = { estate = estate_church influence = -5 duration = 1825 desc = auirikus_bervinazan_modifier }
		}
		else = { add_church_power = 25 }
	}
	#karazlov
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = karazlov } }
		custom_tooltip = dwarven_pantheon_ritual_has_karazlov_tooltip
		if = {
			limit = { num_of_subjects = 1 }
			random_subject_country = { add_liberty_desire = -5 }
		}
		else = { add_church_power = 25 }
	}
	#grimthar
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = grimthar } }
		custom_tooltip = dwarven_pantheon_ritual_has_grimthar_tooltip
		create_conquistador = { tradition = 40 }
	}
	#verdrik
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = verdrik } }
		custom_tooltip = dwarven_pantheon_ritual_has_verdrik_tooltip
		if = {
			limit = { OR = { current_age = age_of_absolutism current_age = age_of_revolutions } }
			add_absolutism = 2
		}
		else = { add_church_power = 25 }
	}
	#thyrfen
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = thyrfen } }
		custom_tooltip = dwarven_pantheon_ritual_has_thyrfen_tooltip
		if = {
			limit = { corruption = 0.1 }
			add_corruption = -0.5
		}
		else = { add_church_power = 25 }
	}
	#werdun
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = werdun } }
		custom_tooltip = dwarven_pantheon_ritual_has_werdun_tooltip
		define_advisor = {
			type = trader
			skill = 2
			cost_multiplier = 0.75
			religion = dwarven_pantheon
			culture = ROOT
		}
	}
	#lorgrim
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = lorgrim } }
		custom_tooltip = dwarven_pantheon_ritual_has_lorgrim_tooltip
		change_government_reform_progress = 20
	}
	#lorgram
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = lorgram } }
		custom_tooltip = dwarven_pantheon_ritual_has_lorgram_tooltip
		add_legitimacy_equivalent = { amount = 10 republican_tradition = 5 }
	}
	#grobilazk
	if = {
		limit = { has_dwarven_pantheon_deity = { deity = grobilazk } }
		custom_tooltip = dwarven_pantheon_ritual_has_grobilazk_tooltip
		random_owned_province = {
			limit = { any_neighbor_province = { is_city = yes owner = { NOT = { tag = ROOT alliance_with = ROOT } } } }
			random_neighbor_province = {
				limit = { is_city = yes owner = { NOT = { tag = ROOT alliance_with = ROOT } } }
				remove_loot = { who = ROOT amount = 100 }
			}
		}
	}
}

dwarven_pantheon_unlock_random_deity = {
	[[major]
		custom_tooltip = dwarven_pantheon_unlock_random_deity_tooltip1
		hidden_effect = {
			random_list = {
				1 = { modifier = { factor = 0.1 always = yes } }
				#dagrin
				1000 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_dagrin } 
					}
					country_event = { id = dwarven_pantheon.30 }
				}
				#anvelind
				500 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_anvelind } 
					}
					country_event = { id = dwarven_pantheon.31 }
				}
				#durvorazir
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_durvorazir }
						has_country_flag = dwarven_pantheon_knows_dagrin
						has_country_flag = dwarven_pantheon_knows_anvelind
					}
					country_event = { id = dwarven_pantheon.32 }
				}
				#margurz
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_margurz }
						has_country_flag = dwarven_pantheon_knows_dagrin
						has_country_flag = dwarven_pantheon_knows_anvelind
					}
					country_event = { id = dwarven_pantheon.33 }
				}
				#miradeth
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_miradeth }
						has_country_flag = dwarven_pantheon_knows_azmirethazin 
					}
					country_event = { id = dwarven_pantheon.34 }
				}
				#azmirethazin
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_azmirethazin }
						has_country_flag = dwarven_pantheon_knows_dagrin
					}
					country_event = { id = dwarven_pantheon.35 }
				}
				#argezenna
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_argezenna }
						has_country_flag = dwarven_pantheon_knows_azmirethazin 
					}
					country_event = { id = dwarven_pantheon.36 }
				}
				#auirikus
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_auirikus }
					}
					country_event = { id = dwarven_pantheon.37 }
				}
				#urisazirn
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_urisazirn }
						has_country_flag = dwarven_pantheon_knows_durvorazir 
					}
					country_event = { id = dwarven_pantheon.38 }
				}
			}
		}
	]
	[[minor]
		custom_tooltip = dwarven_pantheon_unlock_random_deity_tooltip2
		hidden_effect = {
			random_list = {
				1 = { modifier = { factor = 0.1 always = yes } }
				
				#fallback incase player is missing a required major and everything else is unlocked
				50 = {
					trigger = {
						has_unlocked_all_dwarven_pantheon_major_deities = no
					}
					dwarven_pantheon_unlock_random_deity = { major = yes }
				}
				#dolurazan
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_dolurazan }
						has_country_flag = dwarven_pantheon_knows_azmirethazin
						has_country_flag = dwarven_pantheon_knows_argezenna
					}
					country_event = { id = dwarven_pantheon.39 }
				}
				#derzobrazan
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_derzobrazan }
						has_country_flag = dwarven_pantheon_knows_azmirethazin
						has_country_flag = dwarven_pantheon_knows_argezenna
					}
					country_event = { id = dwarven_pantheon.40 }
				}
				#bervinazan
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_bervinazan }
						has_country_flag = dwarven_pantheon_knows_azmirethazin
						has_country_flag = dwarven_pantheon_knows_argezenna
					}
					country_event = { id = dwarven_pantheon.41 }
				}
				#karazlov
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_karazlov }
						has_country_flag = dwarven_pantheon_knows_dagrin
					}
					country_event = { id = dwarven_pantheon.42 }
				}
				#grimthar
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_grimthar }
						has_country_flag = dwarven_pantheon_knows_margurz
					}
					country_event = { id = dwarven_pantheon.43 }
				}
				#verdrik
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_verdrik }
						has_country_flag = dwarven_pantheon_knows_durvorazir
					}
					country_event = { id = dwarven_pantheon.44 }
				}
				#thyrfen
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_thyrfen }
						has_country_flag = dwarven_pantheon_knows_margurz
					}
					country_event = { id = dwarven_pantheon.45 }
				}
				#werdun
				200 = { 
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_werdun }
						has_country_flag = dwarven_pantheon_knows_derzobrazan
					}
					country_event = { id = dwarven_pantheon.46 }
				}
				#lorgrim
				200 = {
					trigger = {
						NOT = { has_country_flag = dwarven_pantheon_knows_lorgrim }
					}
					country_event = { id = dwarven_pantheon.47 }
				}
				#lorgram
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_lorgram }
					}
					country_event = { id = dwarven_pantheon.48 }
				}
				#grobilazk
				200 = { 
					trigger = { 
						NOT = { has_country_flag = dwarven_pantheon_knows_grobilazk }
					}
					country_event = { id = dwarven_pantheon.49 }
				}
			}
		}
	]
}

dwarven_pantheon_unlock_deity_digging = {
	if = {
		limit = {
			has_dwarven_hold_5 = no
			owner = {
				religion = dwarven_pantheon
				has_unlocked_all_dwarven_pantheon_deities = no
			}
		}
		owner = {
			if = {
				limit = { 
					has_unlocked_all_dwarven_pantheon_major_deities = yes 
					has_unlocked_all_dwarven_pantheon_minor_deities = no
				}
				dwarven_pantheon_unlock_random_deity = { minor = yes }
			}
			if = {
				limit = {
					has_unlocked_all_dwarven_pantheon_major_deities = no
					has_unlocked_all_dwarven_pantheon_minor_deities = yes
				}
				dwarven_pantheon_unlock_random_deity = { major = yes }
			}
			if = {
				limit = {
					has_unlocked_all_dwarven_pantheon_major_deities = no
					has_unlocked_all_dwarven_pantheon_minor_deities = no
				}
				random_list = {
					30 = {
						dwarven_pantheon_unlock_random_deity = { major = yes }
					}
					70 = {
						dwarven_pantheon_unlock_random_deity = { minor = yes }
					}
				}
			}
		}
	}
}


##############
### Blorcs ###
##############

blorc_hold_trophy_remove = { # ONLY USE INSIDE on_province_owner_change ON_ACTION
	trigger_switch = {
		on_trigger = province_id

		2863 = { FROM = { remove_country_modifier = black_orc_trophy_khugdihr } }
		2868 = { FROM = { remove_country_modifier = black_orc_trophy_haraz_orldhum } }
		4119 = { FROM = { remove_country_modifier = black_orc_trophy_amldihr } }
		4208 = { FROM = { remove_country_modifier = black_orc_trophy_krakdhumvror } }
		4020 = { FROM = { remove_country_modifier = black_orc_trophy_dur_vazhatun } }
		4147 = { FROM = { remove_country_modifier = black_orc_trophy_orlazam_az_dihr } }
		4236 = { FROM = { remove_country_modifier = black_orc_trophy_mithradhum } }
		2931 = { FROM = { remove_country_modifier = black_orc_trophy_er_natvir } }
		4056 = { FROM = { remove_country_modifier = black_orc_trophy_verkal_kozenad } }
		2963 = { FROM = { remove_country_modifier = black_orc_trophy_hul_jorkad } }
		4238 = { FROM = { remove_country_modifier = black_orc_trophy_orlghelovar } }
		2942 = { FROM = { remove_country_modifier = black_orc_trophy_shazstundihr } }
		4093 = { FROM = { remove_country_modifier = black_orc_trophy_arg_ordstun } }
		4100 = { FROM = { remove_country_modifier = black_orc_trophy_verkal_skomdihr } }
		2973 = { FROM = { remove_country_modifier = black_orc_trophy_ovdal_lodhum } }
		4039 = { FROM = { remove_country_modifier = black_orc_trophy_gor_burad } }
		4217 = { FROM = { remove_country_modifier = black_orc_trophy_gor_vazumbrog } }
		4078 = { FROM = { remove_country_modifier = black_orc_trophy_hehodovar } }
		4124 = { FROM = { remove_country_modifier = black_orc_trophy_seghdihr } }
		2914 = { FROM = { remove_country_modifier = black_orc_trophy_verkal_gulan } }
		4218 = { FROM = { remove_country_modifier = black_orc_trophy_gor_ozumbrog } }
		4247 = { FROM = { remove_country_modifier = black_orc_trophy_ovdal_kanzad } }
		4265 = { FROM = { remove_country_modifier = black_orc_trophy_grozumdihr } }
		4284 = { FROM = { remove_country_modifier = black_orc_trophy_ovdal_az_an }	}
		4266 = { FROM = { remove_country_modifier = black_orc_trophy_hul_az_krakazol } }
		4350 = { FROM = { remove_country_modifier = black_orc_trophy_tuwad_dhumankon } }
		4311 = { FROM = { remove_country_modifier = black_orc_trophy_gronstunad } }
		4323 = { FROM = { remove_country_modifier = black_orc_trophy_verkal_dromak } }
	}
}

define_hold_to_duel = {
	random_owned_province = {
		limit = { has_province_modifier = infested_hold NOT = { has_province_flag = duel_@ROOT } }
		set_province_flag = option_duel_1_@ROOT
		set_province_flag = duel_@ROOT
		save_event_target_as = duel1
	}
	random_owned_province = {
		limit = { has_province_modifier = infested_hold NOT = { has_province_flag = duel_@ROOT } }
		set_province_flag = option_duel_2_@ROOT
		set_province_flag = duel_@ROOT
		save_event_target_as = duel2
	}
	random_owned_province = {
		limit = { has_province_modifier = infested_hold NOT = { has_province_flag = duel_@ROOT } }
		set_province_flag = option_duel_3_@ROOT
		set_province_flag = duel_@ROOT
		save_event_target_as = duel3
	}
	random_owned_province = {
		limit = { has_province_modifier = infested_hold NOT = { has_province_flag = duel_@ROOT } }
		set_province_flag = option_duel_4_@ROOT
		set_province_flag = duel_@ROOT
		save_event_target_as = duel4
	}
}

define_hold_to_plunder = {
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder1
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder2
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder3
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder4
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder5
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder6
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder7
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder8
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder9
	}
	random_owned_province = {
		limit = { blorc_can_be_plundered = yes NOT = { has_province_flag = plunder_@ROOT } }
		set_province_flag = plunder_@ROOT
		save_event_target_as = blorc_plunder10
	}
}

blorc_begin_plundering = {
	if = {
		limit = {
			OR = {
				base_tax = 2
				base_production = 2
				base_manpower = 2
				NOT = { has_province_modifier = ruined_hold }
			}
		}
		add_province_modifier = { name = blorc_plunder_camp duration = -1 }
	}
	else = { add_province_modifier = { name = blorc_war_camp duration = -1 } }
}

define_hold_to_plunder_fort_upgrade = {
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade1
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade2
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade3
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade4
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade5
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade6
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade7
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade8
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade9
	}
	random_owned_province = {
		limit = { province_group = hold_province OR = { has_province_modifier = blorc_plunder_camp has_province_modifier = blorc_war_camp } NOT = { has_province_flag = plunder_fort_upgrade_@ROOT province_has_current_tech_fort_trigger = yes has_construction = any } }
		set_province_flag = plunder_fort_upgrade_@ROOT
		save_event_target_as = blorc_plunder_upgrade10
	}
}

blorc_plunder_fort_upgrade = {
	if = {
		limit = { has_building = fort_17th }
		ROOT = { add_treasury = -200 }
		add_building_construction = { building = fort_18th cost = 0 speed = 0.5 }
	}
	else_if = {
		limit = { has_building = fort_16th }
		ROOT = { add_treasury = -200 }
		add_building_construction = { building = fort_17th cost = 0 speed = 0.5 }
	}
	else_if = {
		limit = { has_building = fort_15th }
		ROOT = { add_treasury = -200 }
		add_building_construction = { building = fort_16th cost = 0 speed = 0.5 }
	}
	else_if = {
		limit = { NOT = { has_building = fort_18th } }
		ROOT = { add_treasury = -200 }
		add_building_construction = { building = fort_15th cost = 0 speed = 0.5 }
	}
}


blorc_plunder_effect = {
	[[tax]
		if = {
			limit = { event_target:blorc_plunder_target = { base_tax = $tax$ } }
			event_target:blorc_plunder_target = { add_base_tax = -$tax$ }
			capital_scope = { add_base_tax = $gain$ }
		}
	]
	[[prod]
		if = {
			limit = { event_target:blorc_plunder_target = { base_production = $prod$ } }
			event_target:blorc_plunder_target = { add_base_production = -$prod$ }
			capital_scope = { add_base_production = $gain$ }
		}
	]
	[[man]
		if = {
			limit = { event_target:blorc_plunder_target = { base_manpower = $man$ } }
			event_target:blorc_plunder_target = { add_base_manpower = -$man$ }
			capital_scope = { add_base_manpower = $gain$ }
		}
	]
	if = {
		limit = { NOT = { has_institution = feudalism } }
		capital_scope = { add_institution_embracement = { which = feudalism value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = renaissance NOT = { has_institution = renaissance } }
		capital_scope = { add_institution_embracement = { which = renaissance value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = new_world_i NOT = { has_institution = new_world_i } }
		capital_scope = { add_institution_embracement = { which = new_world_i value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = printing_press NOT = { has_institution = printing_press } }
		capital_scope = { add_institution_embracement = { which = printing_press value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = global_trade NOT = { has_institution = global_trade } }
		capital_scope = { add_institution_embracement = { which = global_trade value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = manufactories NOT = { has_institution = manufactories } }
		capital_scope = { add_institution_embracement = { which = manufactories value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = enlightenment NOT = { has_institution = enlightenment } }
		capital_scope = { add_institution_embracement = { which = enlightenment value = 7.5 } }
	}
	else_if = {
		limit = { is_institution_enabled = industrialization NOT = { has_institution = industrialization } }
		capital_scope = { add_institution_embracement = { which = industrialization value = 7.5 } }
	}
}

blorc_plunder_raw_loot = {
	[[mana]
		random_list = {
			33 = { add_adm_power = $mana$ }
			33 = { add_dip_power = $mana$ }
			33 = { add_mil_power = $mana$ }
		}
	]
	[[ducats]
		add_treasury = $ducats$
	]
	[[prestige]
		add_prestige_excess_to_splendour_effect = { VAL = $prestige$ }
	]
}


blorc_plunder_upgrade_check = {
	hidden_effect = {
		capital_scope = {
			# trigger_switch = {
			# 	on_trigger = development
	
			# 	300 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy15 } } owner = { country_event = { id = blorc.103 } } } }
			# 	280 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy14 } } owner = { country_event = { id = blorc.103 } } } }
			# 	260 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy13 } } owner = { country_event = { id = blorc.103 } } } }
			# 	240 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy12 } } owner = { country_event = { id = blorc.103 } } } }
			# 	220 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy11 } } owner = { country_event = { id = blorc.103 } } } }
			# 	200 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy10 } } owner = { country_event = { id = blorc.103 } } } }
			# 	180 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy9 } } owner = { country_event = { id = blorc.103 } } } }
			# 	160 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy8 } } owner = { country_event = { id = blorc.103 } } } }
			# 	140 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy7 } } owner = { country_event = { id = blorc.103 } } } }
			# 	120 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy6 } } owner = { country_event = { id = blorc.103 } } } }
			# 	100 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy5 } } owner = { country_event = { id = blorc.103 } } } }
			# 	80 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy4 } } owner = { country_event = { id = blorc.103 } } } }
			# 	60 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy3 } } owner = { country_event = { id = blorc.103 } } } }
			# 	40 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy2 } } owner = { country_event = { id = blorc.103 } } } }
			# 	20 = { if = { limit = { NOT = { has_province_modifier = blorc_trophy1 } } owner = { country_event = { id = blorc.103 } } } }
			# }
			#pdx why are you like this
			if = { limit = { development = 300 NOT = { has_province_modifier = blorc_trophy15 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 280 NOT = { development = 300 } NOT = { has_province_modifier = blorc_trophy14 has_province_modifier = blorc_trophy15 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 260 NOT = { development = 280 } NOT = { has_province_modifier = blorc_trophy13 has_province_modifier = blorc_trophy14 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 240 NOT = { development = 260 } NOT = { has_province_modifier = blorc_trophy12 has_province_modifier = blorc_trophy13 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 220 NOT = { development = 240 } NOT = { has_province_modifier = blorc_trophy11 has_province_modifier = blorc_trophy12 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 200 NOT = { development = 220 } NOT = { has_province_modifier = blorc_trophy10 has_province_modifier = blorc_trophy11 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 180 NOT = { development = 200 } NOT = { has_province_modifier = blorc_trophy9 has_province_modifier = blorc_trophy10 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 160 NOT = { development = 180 } NOT = { has_province_modifier = blorc_trophy8 has_province_modifier = blorc_trophy9 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 140 NOT = { development = 160 } NOT = { has_province_modifier = blorc_trophy7 has_province_modifier = blorc_trophy8 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 120 NOT = { development = 140 } NOT = { has_province_modifier = blorc_trophy6 has_province_modifier = blorc_trophy7 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 100 NOT = { development = 120 } NOT = { has_province_modifier = blorc_trophy5 has_province_modifier = blorc_trophy6 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 80 NOT = { development = 100 } NOT = { has_province_modifier = blorc_trophy4 has_province_modifier = blorc_trophy5 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 60 NOT = { development = 80 } NOT = { has_province_modifier = blorc_trophy3 has_province_modifier = blorc_trophy4 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 40 NOT = { development = 60 } NOT = { has_province_modifier = blorc_trophy2 has_province_modifier = blorc_trophy3 } } owner = { country_event = { id = blorc.103 } } }
			if = { limit = { development = 20 NOT = { development = 40 } NOT = { has_province_modifier = blorc_trophy1 has_province_modifier = blorc_trophy2 } } owner = { country_event = { id = blorc.103 } } }
		}
	}
}

blorc_move_capital_effect = {
	if = {
		limit = { has_country_flag = blorc_plunder_capital_set }
		hidden_effect = {
			capital_scope = {
				if = {
					limit = { development = 20 }
					trigger_switch = {
						on_trigger = has_province_modifier

						blorc_trophy1 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy1 duration = -1 } } remove_province_modifier = blorc_trophy1 }
						blorc_trophy2 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy2 duration = -1 } } remove_province_modifier = blorc_trophy2 }
						blorc_trophy3 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy3 duration = -1 } } remove_province_modifier = blorc_trophy3 }
						blorc_trophy4 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy4 duration = -1 } } remove_province_modifier = blorc_trophy4 }
						blorc_trophy5 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy5 duration = -1 } } remove_province_modifier = blorc_trophy5 }
						blorc_trophy6 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy6 duration = -1 } } remove_province_modifier = blorc_trophy6 }
						blorc_trophy7 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy7 duration = -1 } } remove_province_modifier = blorc_trophy7 }
						blorc_trophy8 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy8 duration = -1 } } remove_province_modifier = blorc_trophy8 }
						blorc_trophy9 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy9 duration = -1 } } remove_province_modifier = blorc_trophy9 }
						blorc_trophy10 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy10 duration = -1 } } remove_province_modifier = blorc_trophy10 }
						blorc_trophy11 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy11 duration = -1 } } remove_province_modifier = blorc_trophy11 }
						blorc_trophy12 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy12 duration = -1 } } remove_province_modifier = blorc_trophy12 }
						blorc_trophy13 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy13 duration = -1 } } remove_province_modifier = blorc_trophy13 }
						blorc_trophy14 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy14 duration = -1 } } remove_province_modifier = blorc_trophy14 }
						blorc_trophy15 = { $ID$ = { add_permanent_province_modifier = { name = blorc_trophy15 duration = -1 } } remove_province_modifier = blorc_trophy15 }
					}
				}
				if = {
					limit = { has_province_modifier = blorc_hold_foundry }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_foundry duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_magma_forge }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_magma_forge duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_city }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_city duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_artificier_hall }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_artificier_hall duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_artisan }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_artisan duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_engineer_manufactory }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_engineer_manufactory duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_farm }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_farm duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_high_gardens }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_high_gardens duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_military }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_military duration = -1 } }
				}
				if = {
					limit = { has_province_modifier = blorc_hold_military_academy }
					$ID$ = { add_permanent_province_modifier = { name = blorc_hold_military_academy duration = -1 } }
				}

				while = { 
					limit = { base_tax = 2 }
					add_base_tax = -1
					$ID$ = { add_base_tax = 1 }
				}
				while = { 
					limit = { base_production = 2 }
					add_base_production = -1
					$ID$ = { add_base_production = 1 }
				}
				while = { 
					limit = { base_manpower = 2 }
					add_base_manpower = -1
					$ID$ = { add_base_manpower = 1 }
				}

				add_province_modifier = { name = blorc_plunder_camp duration = -1 }
				clr_province_flag = blorc_plunder_capital_@ROOT

				$ID$ = {
					set_province_flag = blorc_plunder_capital_@ROOT
					remove_province_modifier = blorc_plunder_camp
					remove_province_modifier = blorc_war_camp
				}
			}
		}
		set_capital = $ID$
		custom_tooltip = blorc_move_capital_effect_tooltip
	}
	else = {
		hidden_effect = { $ID$ = { remove_province_modifier = blorc_plunder_camp remove_province_modifier = blorc_war_camp } }
		set_capital = $ID$
	}
}
