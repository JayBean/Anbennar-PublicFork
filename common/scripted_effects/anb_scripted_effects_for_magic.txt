
ruler_save_spell_schools = {
	if = {
		limit = {
			is_abjuration_1 = yes
		}
		set_country_flag = saved_abjuration_1
	}
	if = {
		limit = {
			is_abjuration_2 = yes
		}
		set_country_flag = saved_abjuration_2
	}
	if = {
		limit = {
			is_abjuration_3 = yes
		}
		set_country_flag = saved_abjuration_3
	}
	
	if = {
		limit = {
			is_conjuration_1 = yes
		}
		set_country_flag = saved_conjuration_1
	}
	if = {
		limit = {
			is_conjuration_2 = yes
		}
		set_country_flag = saved_conjuration_2
	}
	if = {
		limit = {
			is_conjuration_3 = yes
		}
		set_country_flag = saved_conjuration_3
	}
	
	if = {
		limit = {
			is_divination_1 = yes
		}
		set_country_flag = saved_divination_1
	}
	if = {
		limit = {
			is_divination_2 = yes
		}
		set_country_flag = saved_divination_2
	}
	if = {
		limit = {
			is_divination_3 = yes
		}
		set_country_flag = saved_divination_3
	}
	
	if = {
		limit = {
			is_enchantment_1 = yes
		}
		set_country_flag = saved_enchantment_1
	}
	if = {
		limit = {
			is_enchantment_2 = yes
		}
		set_country_flag = saved_enchantment_2
	}
	if = {
		limit = {
			is_enchantment_3 = yes
		}
		set_country_flag = saved_enchantment_3
	}
	
	if = {
		limit = {
			is_evocation_1 = yes
		}
		set_country_flag = saved_evocation_1
	}
	if = {
		limit = {
			is_evocation_2 = yes
		}
		set_country_flag = saved_evocation_2
	}
	if = {
		limit = {
			is_evocation_3 = yes
		}
		set_country_flag = saved_evocation_3
	}
	
	if = {
		limit = {
			is_illusion_1 = yes
		}
		set_country_flag = saved_illusion_1
	}
	if = {
		limit = {
			is_illusion_2 = yes
		}
		set_country_flag = saved_illusion_2
	}
	if = {
		limit = {
			is_illusion_3 = yes
		}
		set_country_flag = saved_illusion_3
	}
	
	if = {
		limit = {
			is_necromancy_1 = yes
		}
		set_country_flag = saved_necromancy_1
	}
	if = {
		limit = {
			is_necromancy_2 = yes
		}
		set_country_flag = saved_necromancy_2
	}
	if = {
		limit = {
			is_necromancy_3 = yes
		}
		set_country_flag = saved_necromancy_3
	}
	
	if = {
		limit = {
			is_transmutation_1 = yes
		}
		set_country_flag = saved_transmutation_1
	}
	if = {
		limit = {
			is_transmutation_2 = yes
		}
		set_country_flag = saved_transmutation_2
	}
	if = {
		limit = {
			is_transmutation_3 = yes
		}
		set_country_flag = saved_transmutation_3
	}
	
}

ruler_give_saved_spell_schools = {
	if = {
		limit = {
			has_country_flag = saved_abjuration_1
		}
		set_ruler_flag = abjuration_1
	}
	if = {
		limit = {
			has_country_flag = saved_abjuration_2
		}
		set_ruler_flag = abjuration_1
		set_ruler_flag = abjuration_2
	}
	if = {
		limit = {
			has_country_flag = saved_abjuration_3
		}
		set_ruler_flag = abjuration_1
		set_ruler_flag = abjuration_2
		set_ruler_flag = abjuration_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_conjuration_1
		}
		set_ruler_flag = conjuration_1
	}
	if = {
		limit = {
			has_country_flag = saved_conjuration_2
		}
		set_ruler_flag = conjuration_1
		set_ruler_flag = conjuration_2
	}
	if = {
		limit = {
			has_country_flag = saved_conjuration_3
		}
		set_ruler_flag = conjuration_1
		set_ruler_flag = conjuration_2
		set_ruler_flag = conjuration_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_divination_1
		}
		set_ruler_flag = divination_1
	}
	if = {
		limit = {
			has_country_flag = saved_divination_2
		}
		set_ruler_flag = divination_1
		set_ruler_flag = divination_2
	}
	if = {
		limit = {
			has_country_flag = saved_divination_3
		}
		set_ruler_flag = divination_1
		set_ruler_flag = divination_2
		set_ruler_flag = divination_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_enchantment_1
		}
		set_ruler_flag = enchantment_1
	}
	if = {
		limit = {
			has_country_flag = saved_enchantment_2
		}
		set_ruler_flag = enchantment_1
		set_ruler_flag = enchantment_2
	}
	if = {
		limit = {
			has_country_flag = saved_enchantment_3
		}
		set_ruler_flag = enchantment_1
		set_ruler_flag = enchantment_2
		set_ruler_flag = enchantment_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_evocation_1
		}
		set_ruler_flag = evocation_1
	}
	if = {
		limit = {
			has_country_flag = saved_evocation_2
		}
		set_ruler_flag = evocation_1
		set_ruler_flag = evocation_2
	}
	if = {
		limit = {
			has_country_flag = saved_evocation_3
		}
		set_ruler_flag = evocation_1
		set_ruler_flag = evocation_2
		set_ruler_flag = evocation_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_illusion_1
		}
		set_ruler_flag = illusion_1
	}
	if = {
		limit = {
			has_country_flag = saved_illusion_2
		}
		set_ruler_flag = illusion_1
		set_ruler_flag = illusion_2
	}
	if = {
		limit = {
			has_country_flag = saved_illusion_3
		}
		set_ruler_flag = illusion_1
		set_ruler_flag = illusion_2
		set_ruler_flag = illusion_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_necromancy_1
		}
		set_ruler_flag = necromancy_1
	}
	if = {
		limit = {
			has_country_flag = saved_necromancy_2
		}
		set_ruler_flag = necromancy_1
		set_ruler_flag = necromancy_2
	}
	if = {
		limit = {
			has_country_flag = saved_necromancy_3
		}
		set_ruler_flag = necromancy_1
		set_ruler_flag = necromancy_2
		set_ruler_flag = necromancy_3
	}
	
	if = {
		limit = {
			has_country_flag = saved_transmutation_1
		}
		set_ruler_flag = transmutation_1
	}
	if = {
		limit = {
			has_country_flag = saved_transmutation_2
		}
		set_ruler_flag = transmutation_1
		set_ruler_flag = transmutation_2
	}
	if = {
		limit = {
			has_country_flag = saved_transmutation_3
		}
		set_ruler_flag = transmutation_1
		set_ruler_flag = transmutation_2
		set_ruler_flag = transmutation_3
	}
}

ruler_clear_spell_schools = {
	clr_country_flag = abjuration_1
	clr_country_flag = abjuration_2
	clr_country_flag = abjuration_3
	clr_country_flag = conjuration_1
	clr_country_flag = conjuration_2
	clr_country_flag = conjuration_3
	clr_country_flag = divination_1
	clr_country_flag = divination_2
	clr_country_flag = divination_3
	clr_country_flag = enchantment_1
	clr_country_flag = enchantment_2
	clr_country_flag = enchantment_3
	clr_country_flag = evocation_1
	clr_country_flag = evocation_2
	clr_country_flag = evocation_3
	clr_country_flag = illusion_1
	clr_country_flag = illusion_2
	clr_country_flag = illusion_3
	clr_country_flag = necromancy_1
	clr_country_flag = necromancy_2
	clr_country_flag = necromancy_3
	clr_country_flag = transmutation_1
	clr_country_flag = transmutation_2
	clr_country_flag = transmutation_3
}

ruler_clear_saved_spell_schools = {
	clr_country_flag = saved_abjuration_1
	clr_country_flag = saved_abjuration_2
	clr_country_flag = saved_abjuration_3
	clr_country_flag = saved_conjuration_1
	clr_country_flag = saved_conjuration_2
	clr_country_flag = saved_conjuration_3
	clr_country_flag = saved_divination_1
	clr_country_flag = saved_divination_2
	clr_country_flag = saved_divination_3
	clr_country_flag = saved_enchantment_1
	clr_country_flag = saved_enchantment_2
	clr_country_flag = saved_enchantment_3
	clr_country_flag = saved_evocation_1
	clr_country_flag = saved_evocation_2
	clr_country_flag = saved_evocation_3
	clr_country_flag = saved_illusion_1
	clr_country_flag = saved_illusion_2
	clr_country_flag = saved_illusion_3
	clr_country_flag = saved_necromancy_1
	clr_country_flag = saved_necromancy_2
	clr_country_flag = saved_necromancy_3
	clr_country_flag = saved_transmutation_1
	clr_country_flag = saved_transmutation_2
	clr_country_flag = saved_transmutation_3
}

magic_project_clear_lichdom_flags = {
	set_ruler_flag = magic_project_lichdom_complete
	clr_ruler_flag = magic_project_lichdom_started
	clr_ruler_flag = magic_project_lichdom_1
	clr_ruler_flag = magic_project_lichdom_2
	clr_ruler_flag = magic_project_lichdom_3
	clr_ruler_flag = magic_project_lichdom_4
	clr_ruler_flag = magic_project_lichdom_5
	clr_ruler_flag = magic_project_lichdom_6
	clr_ruler_flag = magic_project_lichdom_7
	clr_ruler_flag = magic_project_lichdom_8
	clr_ruler_flag = magic_project_lichdom_9
	clr_ruler_flag = magic_project_lichdom_10
	
	clr_ruler_flag = magic_project_lichdom_1_adventurers
	clr_ruler_flag = magic_project_lichdom_1_state
	clr_ruler_flag = magic_project_lichdom_1_myself
	clr_ruler_flag = magic_project_lichdom_2_amulet
	clr_ruler_flag = magic_project_lichdom_2_box
	clr_ruler_flag = magic_project_lichdom_5_a
	clr_ruler_flag = magic_project_lichdom_5_b
	clr_ruler_flag = magic_project_lichdom_5_c
	clr_ruler_flag = magic_project_lichdom_6_a
	clr_ruler_flag = magic_project_lichdom_6_b
	clr_ruler_flag = magic_project_lichdom_6_c
	clr_ruler_flag = magic_project_lichdom_7_heart
	clr_ruler_flag = magic_project_lichdom_7_unicorn
	clr_ruler_flag = magic_project_lichdom_8_a
}

magic_project_clear_lichdom_government_flags = {
	clr_country_flag = wizard_king_magocracy
	clr_country_flag = original_gov_monarchy
	clr_country_flag = original_gov_republic
	clr_country_flag = original_gov_theocracy
	clr_country_flag = original_gov_clergy
	clr_country_flag = original_gov_monastic
	clr_country_flag = original_gov_secular
	clr_country_flag = original_gov_adventurer
	clr_country_flag = original_gov_rezankand
	clr_country_flag = original_gov_oracular
	clr_country_flag = original_gov_tribal
}

clear_spell_flags = {
	clr_country_flag = spell_1
	clr_country_flag = spell_2
	clr_country_flag = spell_3
	clr_country_flag = spell_4
	clr_country_flag = spell_5
	clr_country_flag = spell_6
	clr_country_flag = spell_7
	clr_country_flag = spell_8
	clr_country_flag = spell_9
	clr_country_flag = spell_10
}

calculate_lichdom_chance = {
	set_variable ={
		which=$which$ value=0
	}
	
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_2_box
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_5_b
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_5_c
		}
		change_variable = {
			which = $which$
			value = 2
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_6_b
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_6_c
		}
		change_variable = {
			which = $which$
			value = 2
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_7_unicorn
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
	if = {
		limit = {
			has_ruler_flag = magic_project_lichdom_8_a
		}
		change_variable = {
			which = $which$
			value = 1
		}
	}
}

magic_ruler_give_contextual_spell_school = {
	#Yeah eventually lol
}

magic_ruler_initialize_schools = {
	clear_witch_king_points = yes
	set_variable = {
		which = ruler_study_experience
		value = 0
	}

	magic_ruler_give_random_spell_school = yes

	if = {
		limit = {
			ruler_has_personality = scholar_personality
		}
		magic_ruler_give_random_spell_school = yes
	}

	if = {
		limit = {
			OR = {
				has_reform = magocracy_reform
				has_reform = magisterium_reform
			}
		}
		magic_ruler_give_random_spell_school = yes
	}

	if = {
		limit = {
			has_reform = oracular_order_reform # Oracle Order in Haless
		}
		oracle_ruler_give_random_divination_spell_school = yes
	}

	if = {
		limit = {
			OR = {
				consort_culture = sun_elf
				consort_culture = moon_elf
				consort_culture = cliff_gnome
				consort_culture = creek_gnome
				consort_culture = imperial_gnome
			}
		}
		magic_ruler_give_random_spell_school = yes
	}

	if = {
		limit = {
			OR = {
				adm = 6
				dip = 6
				mil = 6
			}
		}
		magic_ruler_give_random_spell_school = yes
	}


	if = {
		limit = {
			adm = 3
		}
		magic_ruler_give_random_adm_school = yes
	}
	if = {
		limit = {
			dip = 3
		}
		magic_ruler_give_random_dip_school = yes
	}
	if = {
		limit = {
			mil = 3
		}
		magic_ruler_give_random_mil_school = yes
	}

	if = {
		limit = {
			ruler_age = 30
		}
		magic_ruler_give_random_spell_school = yes
	}

	if = {
		limit = {
			ruler_age = 40
		}
		magic_ruler_give_random_spell_school = yes
	}

	if = {
		limit = {
			ruler_age = 50
		}
		magic_ruler_give_random_spell_school = yes
	}

	if = {
		limit = {
			ruler_age = 60
		}
		magic_ruler_give_random_spell_school = yes
	}

	# Guaranteed levels

	if = {
		limit = { has_country_flag = add_abjuration_1_point }
		magic_study_level_up_abjuration = yes
	}
	if = {
		limit = { has_country_flag = add_conjuration_1_point }
		magic_study_level_up_conjuration = yes
	}
	if = {
		limit = { has_country_flag = add_divination_1_point }
		magic_study_level_up_divination = yes
	}
	if = {
		limit = { has_country_flag = add_enchantment_1_point }
		magic_study_level_up_enchantment = yes
	}
	if = {
		limit = { has_country_flag = add_evocation_1_point }
		magic_study_level_up_evocation = yes
	}
	if = {
		limit = { has_country_flag = add_illusion_1_point }
		magic_study_level_up_illusion = yes
	}
	if = {
		limit = { has_country_flag = add_necromancy_1_point }
		magic_study_level_up_necromancy = yes
	}
	if = {
		limit = { has_country_flag = add_transmutation_1_point }
		magic_study_level_up_transmutation = yes
	}

	# Acolytes Dominions
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		magic_ruler_give_random_spell_school = yes
		magic_ruler_give_random_spell_school = yes
		magic_ruler_give_random_spell_school = yes
		magic_ruler_give_random_spell_school = yes
		magic_ruler_give_random_spell_school = yes
		if = {
			limit = { overlord = { acolyte_dominion = 7 } }
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes

		}
		else_if = {
			limit = { overlord = { acolyte_dominion = 6 } }
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
		}
		else_if = {
			limit = { overlord = { acolyte_dominion = 5 } }
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
		}
		else_if = {
			limit = { overlord = { acolyte_dominion = 4 } }
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
		}
		else_if = {
			limit = { overlord = { acolyte_dominion = 3 } }
			magic_ruler_give_random_spell_school = yes
			magic_ruler_give_random_spell_school = yes
		}
		else_if = {
			limit = { overlord = { acolyte_dominion = 2 } }
			magic_ruler_give_random_spell_school = yes
		}
	}
	#Khet Mandate
	if = {
		limit = {
			is_emperor_of_china = yes
			empire_of_china_reform_passed = taste_magic_reform
		}
		magic_ruler_give_random_spell_school = yes
	}

	#Tower of Muhaqaar
	if = {
		limit = { 
			owns = 5483
			5483 = { has_great_project = { type = tower_of_muhaqaar tier = 3 } }
			religion_group = khetist
			}
		magic_ruler_give_random_spell_school = yes
	}

	#Parura Divination
	if = {
		limit = {
			has_reform = effelai_alianaiarat_reform
			ruler_culture = parura
		}
		effelai_parura_mage_heir_divination_scripted_effect = yes
	}

	set_ruler_flag = initialized_magic_flags
}

magic_ruler_give_random_spell_school = {
	random_list = {
		10 = {
			if = {
				limit = {
					is_abjuration_1 = yes
				}
				set_ruler_flag = abjuration_2
			}
			else_if = {
				limit = {
					is_abjuration_2 = yes
				}
				set_ruler_flag = abjuration_3
			}
			else = {
				set_ruler_flag = abjuration_1
			}
		}
		10 = {
			if = {
				limit = {
					is_conjuration_1 = yes
				}
				set_ruler_flag = conjuration_2
			}
			else_if = {
				limit = {
					is_conjuration_2 = yes
				}
				set_ruler_flag = conjuration_3
			}
			else = {
				set_ruler_flag = conjuration_1
			}
		}
		10 = {
			if = {
				limit = {
					is_divination_1 = yes
				}
				set_ruler_flag = divination_2
			}
			else_if = {
				limit = {
					is_divination_2 = yes
				}
				set_ruler_flag = divination_3
			}
			else = {
				set_ruler_flag = divination_1
			}
		}
		10 = {
			if = {
				limit = {
					is_enchantment_1 = yes
				}
				set_ruler_flag = enchantment_2
			}
			else_if = {
				limit = {
					is_enchantment_2 = yes
				}
				set_ruler_flag = enchantment_3
			}
			else = {
				set_ruler_flag = enchantment_1
			}
		}
		10 = {
			if = {
				limit = {
					is_evocation_1 = yes
				}
				set_ruler_flag = evocation_2
			}
			else_if = {
				limit = {
					is_evocation_2 = yes
				}
				set_ruler_flag = evocation_3
			}
			else = {
				set_ruler_flag = evocation_1
			}
		}
		10 = {
			if = {
				limit = {
					is_illusion_1 = yes
				}
				set_ruler_flag = illusion_2
			}
			else_if = {
				limit = {
					is_illusion_2 = yes
				}
				set_ruler_flag = illusion_3
			}
			else = {
				set_ruler_flag = illusion_1
			}
		}
		10 = {
			trigger = { NOT = { tag = I20 has_reform = krakazol_olzonog } } #krakazol should not generate with necromancy
			if = {
				limit = {
					is_necromancy_1 = yes
				}
				set_ruler_flag = necromancy_2
			}
			else_if = {
				limit = {
					is_necromancy_2 = yes
				}
				set_ruler_flag = necromancy_3
			}
			else = {
				set_ruler_flag = necromancy_1
			}
		}
		10 = {
			if = {
				limit = {
					is_transmutation_1 = yes
				}
				set_ruler_flag = transmutation_2
			}
			else_if = {
				limit = {
					is_transmutation_2 = yes
				}
				set_ruler_flag = transmutation_3
			}
			else = {
				set_ruler_flag = transmutation_1
			}
		}
	}
}

magic_ruler_give_random_adm_school = {
	random_list = {
		34 = {
			if = {
				limit = {
					is_conjuration_1 = yes
				}
				set_ruler_flag = conjuration_2
			}
			else_if = {
				limit = {
					is_conjuration_2 = yes
				}
				set_ruler_flag = conjuration_3
			}
			else = {
				set_ruler_flag = conjuration_1
			}
		}
		33 = {
			if = {
				limit = {
					is_transmutation_1 = yes
				}
				set_ruler_flag = transmutation_2
			}
			else_if = {
				limit = {
					is_transmutation_2 = yes
				}
				set_ruler_flag = transmutation_3
			}
			else = {
				set_ruler_flag = transmutation_1
			}
		}
		33 = {
			if = {
				limit = {
					is_divination_1 = yes
				}
				set_ruler_flag = divination_2
			}
			else_if = {
				limit = {
					is_divination_2 = yes
				}
				set_ruler_flag = divination_3
			}
			else = {
				set_ruler_flag = divination_1
			}
		}
	}
}

magic_ruler_give_random_dip_school = {
	random_list = {
		34 = {
			if = {
				limit = {
					is_illusion_1 = yes
				}
				set_ruler_flag = illusion_2
			}
			else_if = {
				limit = {
					is_illusion_2 = yes
				}
				set_ruler_flag = illusion_3
			}
			else = {
				set_ruler_flag = illusion_1
			}
		}
		33 = {
			if = {
				limit = {
					is_enchantment_1 = yes
				}
				set_ruler_flag = enchantment_2
			}
			else_if = {
				limit = {
					is_enchantment_2 = yes
				}
				set_ruler_flag = enchantment_3
			}
			else = {
				set_ruler_flag = enchantment_1
			}
		}
		33 = {
			if = {
				limit = {
					is_necromancy_1 = yes
				}
				set_ruler_flag = necromancy_2
			}
			else_if = {
				limit = {
					is_necromancy_2 = yes
				}
				set_ruler_flag = necromancy_3
			}
			else = {
				set_ruler_flag = necromancy_1
			}
		}
	}
}

magic_ruler_give_random_mil_school = {
	random_list = {
		50 = {
			if = {
				limit = {
					is_evocation_1 = yes
				}
				set_ruler_flag = evocation_2
			}
			else_if = {
				limit = {
					is_evocation_2 = yes
				}
				set_ruler_flag = evocation_3
			}
			else = {
				set_ruler_flag = evocation_1
			}
		}
		50 = {
			if = {
				limit = {
					is_abjuration_1 = yes
				}
				set_ruler_flag = abjuration_2
			}
			else_if = {
				limit = {
					is_abjuration_2 = yes
				}
				set_ruler_flag = abjuration_3
			}
			else = {
				set_ruler_flag = abjuration_1
			}
		}
	}
}


clear_witch_king_points = {
	#variable is set in magic ruler initialization
	hidden_effect = {
		set_variable = {
			which = pointsWitchKing
			value = 0
		}
	}
}

increase_witch_king_points_small = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_small_tt
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 1
		}
	}
}

increase_witch_king_points_medium = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_medium_tt
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 2
		}
	}
}

increase_witch_king_points_large = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_large_tt
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 3
		}
	}
}

increase_witch_king_points_massive = {
	#variable is set in magic ruler initialization
	custom_tooltip = increase_witch_king_points_massive_tt
	hidden_effect = {
		change_variable = {
			which = pointsWitchKing
			value = 15
		}
	}
}

magic_project_clear_homunculus_flags = {
		hidden_effect = {
			clr_ruler_flag = magic_project_homunculus_started
			clr_ruler_flag = magic_project_homunculus_1
			clr_ruler_flag = magic_project_homunculus_2
			clr_ruler_flag = magic_project_homunculus_3
			clr_ruler_flag = magic_project_homunculus_4
			clr_ruler_flag = magic_project_homunculus_5
			clr_ruler_flag = magic_project_homunculus_complete
			
			clr_ruler_flag = homunculus_current_male
			clr_ruler_flag = homunculus_current_female
			clr_ruler_flag = homunculus_current_androgyne
			clr_ruler_flag = homunculus_current_humanlike
			clr_ruler_flag = homunculus_current_artificial
		}
}

casted_foresight_spell_flag = {
	if = {
		limit = { 
			has_ruler_flag = foresight_spell_1
			NOT = { has_ruler_flag = foresight_spell_2 }
		}
		set_ruler_flag = foresight_spell_2
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_2
			NOT = { has_ruler_flag = foresight_spell_3 }
		}
		set_ruler_flag = foresight_spell_3
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_3
			NOT = { has_ruler_flag = foresight_spell_4 }
		}
		set_ruler_flag = foresight_spell_4
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_4
			NOT = { has_ruler_flag = foresight_spell_5 }
		}
		set_ruler_flag = foresight_spell_5
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_5
			NOT = { has_ruler_flag = foresight_spell_6 }
		}
		set_ruler_flag = foresight_spell_6
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_6
			NOT = { has_ruler_flag = foresight_spell_7 }
		}
		set_ruler_flag = foresight_spell_7
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_7
			NOT = { has_ruler_flag = foresight_spell_8 }
		}
		set_ruler_flag = foresight_spell_8
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_8
			NOT = { has_ruler_flag = foresight_spell_9 }
		}
		set_ruler_flag = foresight_spell_9
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_9
			NOT = { has_ruler_flag = foresight_spell_10 }
		}
		set_ruler_flag = foresight_spell_10
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_10
			NOT = { has_ruler_flag = foresight_spell_11 }
		}
		set_ruler_flag = foresight_spell_11
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_11
			NOT = { has_ruler_flag = foresight_spell_12 }
		}
		set_ruler_flag = foresight_spell_12
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_12
			NOT = { has_ruler_flag = foresight_spell_13 }
		}
		set_ruler_flag = foresight_spell_13
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_13
			NOT = { has_ruler_flag = foresight_spell_14 }
		}
		set_ruler_flag = foresight_spell_14
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_14
			NOT = { has_ruler_flag = foresight_spell_15 }
		}
		set_ruler_flag = foresight_spell_15
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_15
			NOT = { has_ruler_flag = foresight_spell_16 }
		}
		set_ruler_flag = foresight_spell_16
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_16
			NOT = { has_ruler_flag = foresight_spell_17 }
		}
		set_ruler_flag = foresight_spell_17
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_17
			NOT = { has_ruler_flag = foresight_spell_18 }
		}
		set_ruler_flag = foresight_spell_18
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_18
			NOT = { has_ruler_flag = foresight_spell_19 }
		}
		set_ruler_flag = foresight_spell_19
	}
	else_if = {
		limit = { 
			has_ruler_flag = foresight_spell_19
			NOT = { has_ruler_flag = foresight_spell_20 }
		}
		set_ruler_flag = foresight_spell_20
	}
	else = {
		set_ruler_flag = foresight_spell_1
	}
}

apply_foresight_spell = {
	if = { limit = { has_ruler_flag = foresight_spell_20 }
		foresight_spell_chance = { success = 20 failure = 80 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_19 }
		foresight_spell_chance = { success = 40 failure = 60 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_18 }
		foresight_spell_chance = { success = 50 failure = 50 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_17 }
		foresight_spell_chance = { success = 55 failure = 45 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_16 }
		foresight_spell_chance = { success = 60 failure = 40 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_15 }
		foresight_spell_chance = { success = 65 failure = 35 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_14 }
		foresight_spell_chance = { success = 70 failure = 30 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_13 }
		foresight_spell_chance = { success = 75 failure = 25 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_12 }
		foresight_spell_chance = { success = 80 failure = 20 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_11 }
		foresight_spell_chance = { success = 85 failure = 15 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_10 }
		foresight_spell_chance = { success = 90 failure = 10 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_9 }
		foresight_spell_chance = { success = 91 failure = 9 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_8 }
		foresight_spell_chance = { success = 92 failure = 8 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_7 }
		foresight_spell_chance = { success = 93 failure = 7 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_6 }
		foresight_spell_chance = { success = 94 failure = 6 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_5 }
		foresight_spell_chance = { success = 95 failure = 5 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_4 }
		foresight_spell_chance = { success = 96 failure = 4 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_3 }
		foresight_spell_chance = { success = 97 failure = 3 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_2 }
		foresight_spell_chance = { success = 98 failure = 2 }
	}
	else_if = { limit = { has_ruler_flag = foresight_spell_1 }
		foresight_spell_chance = { success = 99 failure = 1 }
	}
	else = {
		foresight_spell_chance = { success = 99 failure = 1 }
	}
}

foresight_spell_chance = {
	random_list = {
		$success$ = {
			if = {		# Tughayasa's tier 2 monument reward
				limit = {
					4527 = {
						owned_by = ROOT
						has_province_flag = tughayasa_better_divination_1
					}
				}
				add_country_modifier = {
					name = magic_realm_divination_foresight
					duration = 450
				}
				custom_tooltip = tughayasa_divination_booster_tt
			}
			else_if = {		# Tughayasa's tier 3 monument reward
				limit = {
					4527 = {
						owned_by = ROOT
						has_province_flag = tughayasa_better_divination_2
					}
				}
				add_country_modifier = {
					name = magic_realm_divination_foresight
					duration = 600
				}
				custom_tooltip = tughayasa_divination_booster_tt
			}
			else = {
				add_ruler_modifier = {
					name = magic_realm_divination_foresight
					duration = 365
				}
			}
		}
		$failure$ = {
			add_ruler_modifier = {
				name = magic_realm_divination_foresight_madness
				duration = -1
			}
			change_adm = -6
			change_dip = -6
			change_mil = -6
		}
	}
}

magic_scrying_rivals_cost = {
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 1 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 5 } }
		}
		
		add_adm_power = -25
		add_dip_power = -25
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 5 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 10 } }
		}
		add_adm_power = -30
		add_dip_power = -30
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 10 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 15 } }
		}
		add_adm_power = -35
		add_dip_power = -35
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 15 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 20 } }
		}
		add_years_of_income = -0.4
		add_adm_power = -40
		add_dip_power = -40
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 20 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 30 } }
		}
		add_years_of_income = -0.5
		add_adm_power = -45	
		add_dip_power = -45
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 30 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 40 } }
		}
		add_years_of_income = -0.6
		add_adm_power = -50
		add_dip_power = -50
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 40 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 50 } }
		}
		add_years_of_income = -0.7
		add_adm_power = -55	
		add_dip_power = -55
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 50 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 60 } }
		}
		add_years_of_income = -0.8
		add_adm_power = -60
		add_dip_power = -60
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 60 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 70 } }
		}
		add_years_of_income = -0.9
		add_adm_power = -65
		add_dip_power = -65
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 70 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 80 } }
		}
		add_years_of_income = -1
		add_adm_power = -70	
		add_dip_power = -70
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 80 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 90 } }
		}
		add_years_of_income = -1.1
		add_adm_power = -75
		add_dip_power = -75
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 90 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 100 } }
		}
		add_years_of_income = -1.2
		add_adm_power = -80
		add_dip_power = -80
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 100 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 200 } }
		}
		
		add_adm_power = -85
		add_dip_power = -85
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 200 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 300 } }
		}
		add_years_of_income = -1.4
		add_adm_power = -90
		add_dip_power = -90
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 200 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 300 } }
		}
		
		add_adm_power = -95
		add_dip_power = -95
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 300 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 400 } }
		}
		add_years_of_income = -1.6
		add_adm_power = -100
		add_dip_power = -100
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 400 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 500 } }
		}
		add_years_of_income = -1.7
		add_adm_power = -105
		add_dip_power = -105
	}
	if = {
		limit = {
			check_variable = { which = amount_of_rival_provinces value = 500 }
			NOT = { check_variable = { which = amount_of_rival_provinces value = 1000 } }
		}
		add_years_of_income = -3
		add_adm_power = -150
		add_dip_power = -150
	}
}

magic_scrying_neighbours_cost = {
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 1 sup = 5 } }
		add_adm_power = -50	#adm power is the administrative cost of watching all these scrying balls
	}
	if = {	
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 5 sup = 10 } }
		add_adm_power = -60	
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 10 sup = 15 } }
		add_adm_power = -70
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 15 sup = 20 } }
		add_adm_power = -80
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 20 sup = 30 } }
		add_adm_power = -90	
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 30 sup = 40 } }
		add_adm_power = -100	
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 40 sup = 50 } }
		add_adm_power = -110	
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 50 sup = 60 } }
		add_adm_power = -120
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 60 sup = 70 } }
		add_adm_power = -130	
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 70 sup = 80 } }
		add_adm_power = -140	
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 80 sup = 90 } }
		add_adm_power = -150
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 90 sup = 100 } }
		add_adm_power = -160
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 100 sup = 200 } }
		add_adm_power = -170
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 200 sup = 300 } }
		add_adm_power = -180
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 300 sup = 400 } }
		add_adm_power = -190
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 400 sup = 500 } }
		add_adm_power = -200
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 500 sup = 600 } }
		add_adm_power = -210
	}
	if = {
		limit = { variable_between = { which = amount_of_neighbour_provinces inf = 600 sup = 1000 } }
		add_adm_power = -300
	}
}

magic_scrying_dissidents_cost = {
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 1 sup = 5 } }
		add_adm_power = -50	#adm power is the administrative cost of watching all these scrying balls
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 5 sup = 10 } }
		add_adm_power = -60	
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 10 sup = 15 } }
		add_adm_power = -70
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 15 sup = 20 } }
		add_adm_power = -80
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 20 sup = 30 } }
		add_adm_power = -90	
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 30 sup = 40 } }
		add_adm_power = -100	
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 40 sup = 50 } }
		add_adm_power = -110	
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 50 sup = 60 } }
		add_adm_power = -120
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 60 sup = 70 } }
		add_adm_power = -130	
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 70 sup = 80 } }
		add_adm_power = -140	
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 80 sup = 90 } }
		add_adm_power = -150
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 90 sup = 100 } }
		add_adm_power = -160
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 100 sup = 200 } }
		add_adm_power = -170
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 200 sup = 300 } }
		add_adm_power = -180
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 300 sup = 400 } }
		add_adm_power = -190
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 400 sup = 500 } }
		add_adm_power = -200
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 500 sup = 600 } }
		add_adm_power = -210
	}
	if = {
		limit = { variable_between = { which = amount_of_owned_provinces inf = 600 sup = 1000 } }
		add_adm_power = -300
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 1000 }
		}
		add_adm_power = -400
	}
}

magic_scrying_realm_cost = {
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 1 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 5 } }
		}
		
		add_adm_power = -50	#adm power is the administrative cost of watching all these scrying balls
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 5 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 10 } }
		}
		add_adm_power = -60	
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 10 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 15 } }
		}
		add_adm_power = -70
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 15 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 20 } }
		}
		add_adm_power = -80
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 20 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 30 } }
		}
		add_adm_power = -90	
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 30 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 40 } }
		}
		add_adm_power = -100	
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 40 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 50 } }
		}
		add_adm_power = -110	
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 50 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 60 } }
		}
		add_adm_power = -120
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 60 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 70 } }
		}
		add_adm_power = -130	
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 70 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 80 } }
		}
		add_adm_power = -140	
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 80 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 90 } }
		}
		add_adm_power = -150
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 90 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 100 } }
		}
		add_adm_power = -160
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 100 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 200 } }
		}
		add_adm_power = -170
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 200 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 300 } }
		}
		add_adm_power = -180
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 300 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 400 } }
		}
		add_adm_power = -190
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 400 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 500 } }
		}
		add_adm_power = -200
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 500 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 600 } }
		}
		add_adm_power = -210
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 600 }
			NOT = { check_variable = { which = amount_of_owned_provinces value = 1000 } }
		}
		add_adm_power = -300
	}
	if = {
		limit = {
			check_variable = { which = amount_of_owned_provinces value = 1000 }
		}
		add_adm_power = -400
	}
}

magic_study_clear_study_effects = {
	clr_ruler_flag = ruler_studying_abjuration
	clr_ruler_flag = ruler_studying_conjuration
	clr_ruler_flag = ruler_studying_divination
	clr_ruler_flag = ruler_studying_enchantment
	clr_ruler_flag = ruler_studying_evocation
	clr_ruler_flag = ruler_studying_illusion
	clr_ruler_flag = ruler_studying_necromancy
	clr_ruler_flag = ruler_studying_transmutation
	
	clr_ruler_flag = ruler_studying_help_from_mages_estate
	clr_ruler_flag = ruler_studying_help_from_advisor
	clr_ruler_flag = ruler_studying_library_archives
	clr_ruler_flag = ruler_studying_ancient_tome_found
	clr_ruler_flag = ruler_studying_magic_relic
	clr_ruler_flag = ruler_studying_magic_precursor_knowledge
	clr_ruler_flag = ruler_studying_magisterial_support
	clr_ruler_flag = ruler_studying_mana_1
	clr_ruler_flag = ruler_studying_mana_2
	clr_ruler_flag = ruler_studying_mana_3
	clr_ruler_flag = ruler_studying_gold_1
	clr_ruler_flag = ruler_studying_gold_2
	clr_ruler_flag = ruler_studying_gold_3
	clr_ruler_flag = ruler_studying_unregulated_research
	clr_ruler_flag = ruler_studying_unsafe_experiments
	clr_ruler_flag = ruler_studying_live_experiments
	clr_ruler_flag = ruler_studying_forbidden_knowledge
	clr_ruler_flag = ruler_studying_appealed_to_darker_powers
	
	clr_ruler_flag = money_magic_study
	clr_ruler_flag = ruler_studying_magic_flag
	clr_ruler_flag = magical_study_1
	clr_ruler_flag = magical_study_2
	clr_ruler_flag = magical_study_3
	
	remove_country_modifier = ruler_studying_magic
	
	hidden_effect = {
		set_variable = {
			which = ruler_study_experience 
			value = 0
		}
		
		if = { limit = { has_country_flag = patron_xp_bonus }
			update_magic_study_experience_modifier = { value = -25 }
			clr_country_flag = patron_xp_bonus
		}
		if = { limit = { has_country_flag = patron_xp_malus }
			update_magic_study_experience_modifier = { value = 25 }
			clr_country_flag = patron_xp_malus
		}
		if = { limit = { has_country_flag = onyxguard_xp_malus }
			update_magic_study_experience_modifier = { value = 50 }
			clr_country_flag = onyxguard_xp_malus
		}
		if = { limit = { has_country_flag = bardic_college_xp_bonus }
			update_magic_study_experience_modifier = { value = 50 }
			clr_country_flag = bardic_college_xp_bonus
		}
	}
}

magic_study_level_up_abjuration = {
	if = {
		limit = { 
			is_abjuration_1 = yes
		}
		set_ruler_flag = abjuration_2
		custom_tooltip = tooltip_abjuration_2_level_up 
	}
	else_if = {
		limit = { 
			is_abjuration_2 = yes
		}
		set_ruler_flag = abjuration_3
		custom_tooltip = tooltip_abjuration_3_level_up 
	}
	else = {
		set_ruler_flag = abjuration_1
		custom_tooltip = tooltip_abjuration_1_level_up 
	}
	
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_abjuration
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_conjuration = {
	if = {
		limit = { 
			is_conjuration_1 = yes
		}
		set_ruler_flag = conjuration_2
		custom_tooltip = tooltip_conjuration_2_level_up 
	}
	else_if = {
		limit = { 
			is_conjuration_2 = yes
		}
		set_ruler_flag = conjuration_3
		custom_tooltip = tooltip_conjuration_3_level_up 
	}
	else = {
		set_ruler_flag = conjuration_1
		custom_tooltip = tooltip_conjuration_1_level_up 
	}
	
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_conjuration
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_divination = {
	if = {
		limit = { 
			is_divination_1 = yes
		}
		set_ruler_flag = divination_2
		custom_tooltip = tooltip_divination_2_level_up 
	}
	else_if = {
		limit = { 
			is_divination_2 = yes
		}
		set_ruler_flag = divination_3
		custom_tooltip = tooltip_divination_3_level_up 
	}
	else_if = {
		limit = { is_divination_0 = yes }
		set_ruler_flag = divination_1
		custom_tooltip = tooltip_divination_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_divination
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_enchantment = {
	if = {
		limit = { 
			is_enchantment_1 = yes
		}
		set_ruler_flag = enchantment_2
		custom_tooltip = tooltip_enchantment_2_level_up 
	}
	else_if = {
		limit = { 
			is_enchantment_2 = yes
		}
		set_ruler_flag = enchantment_3
		custom_tooltip = tooltip_enchantment_3_level_up 
	}
	else_if = {
		limit = { is_enchantment_0 = yes }
		set_ruler_flag = enchantment_1
		custom_tooltip = tooltip_enchantment_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_enchantment
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_evocation = {
	if = {
		limit = { 
			is_evocation_1 = yes
		}
		set_ruler_flag = evocation_2
		custom_tooltip = tooltip_evocation_2_level_up 
	}
	else_if = {
		limit = { 
			is_evocation_2 = yes
		}
		set_ruler_flag = evocation_3
		custom_tooltip = tooltip_evocation_3_level_up 
	}
	else_if = {
		limit = { is_evocation_0 = yes }
		set_ruler_flag = evocation_1
		custom_tooltip = tooltip_evocation_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_evocation
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_illusion = {
	if = {
		limit = { 
			is_illusion_1 = yes
		}
		set_ruler_flag = illusion_2
		custom_tooltip = tooltip_illusion_2_level_up 
	}
	else_if = {
		limit = { 
			is_illusion_2 = yes
		}
		set_ruler_flag = illusion_3
		custom_tooltip = tooltip_illusion_3_level_up 
	}
	else_if = {
		limit = { is_illusion_0 = yes }
		set_ruler_flag = illusion_1
		custom_tooltip = tooltip_illusion_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_illusion
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_necromancy = {
	if = {
		limit = { 
			is_necromancy_1 = yes
		}
		set_ruler_flag = necromancy_2
		custom_tooltip = tooltip_necromancy_2_level_up 
	}
	else_if = {
		limit = { 
			is_necromancy_2 = yes
		}
		set_ruler_flag = necromancy_3
		custom_tooltip = tooltip_necromancy_3_level_up 
	}
	else_if = {
		limit = { is_necromancy_0 = yes }
		set_ruler_flag = necromancy_1
		custom_tooltip = tooltip_necromancy_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_necromancy
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_transmutation = {
	if = {
		limit = { 
			is_transmutation_1 = yes
		}
		set_ruler_flag = transmutation_2
		custom_tooltip = tooltip_transmutation_2_level_up 
	}
	else_if = {
		limit = { 
			is_transmutation_2 = yes
		}
		set_ruler_flag = transmutation_3
		custom_tooltip = tooltip_transmutation_3_level_up 
	}
	else_if = {
		limit = { is_transmutation_0 = yes }
		set_ruler_flag = transmutation_1
		custom_tooltip = tooltip_transmutation_1_level_up 
	}
	
	if = {
		limit = {
			has_ruler_flag = ruler_studying_transmutation
		}
		magic_study_clear_study_effects = yes
	}
	ruler_clear_saved_spell_schools = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_all = {
	magic_study_level_up_abjuration = yes
	magic_study_level_up_divination = yes
	magic_study_level_up_conjuration = yes
	magic_study_level_up_enchantment = yes
	magic_study_level_up_evocation = yes
	magic_study_level_up_illusion = yes
	magic_study_level_up_necromancy = yes
	magic_study_level_up_transmutation = yes
	ruler_save_spell_schools = yes
}

magic_study_level_up_mana = {
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_mana_1
			NOT = { has_ruler_flag = ruler_studying_mana_2 }
		}
		set_ruler_flag = ruler_studying_mana_2
	}
	else_if = {
		limit = { 
			has_ruler_flag = ruler_studying_mana_2
			NOT = { has_ruler_flag = ruler_studying_mana_3 }
		}
		set_ruler_flag = ruler_studying_mana_3
	}
	else = {
		set_ruler_flag = ruler_studying_mana_1
	}
}

magic_study_level_up_gold = {
	if = {
		limit = { 
			has_ruler_flag = ruler_studying_gold_1
			NOT = { has_ruler_flag = ruler_studying_gold_2 }
		}
		set_ruler_flag = ruler_studying_gold_2
	}
	else_if = {
		limit = { 
			has_ruler_flag = ruler_studying_gold_2
			NOT = { has_ruler_flag = ruler_studying_gold_3 }
		}
		set_ruler_flag = ruler_studying_gold_3
	}
	else = {
		set_ruler_flag = ruler_studying_gold_1
	}
}

remove_siege_spells_from_province = {
	remove_province_modifier = siege_magic_elemental_besieger
	remove_province_modifier = siege_magic_giant_besieger
	remove_province_modifier = siege_magic_dragon_besieger
}

magic_casted_spell = {
#Eventually this would be spending spell slots, but for its a spell-a-month limit
	hidden_effect = {
		ROOT = {
			add_ruler_modifier = { 
				name = ruler_recently_casted_spell
				duration = 28 #a month
				desc = ruler_recently_casted_spell_desc
				#hidden = yes
			}
		}
	}
	set_ruler_flag = magic_just_casted_spell
}
open_single_menu = {
	set_ruler_flag = magic_menu_opened
}

close_single_menu = {
		if = {
			limit = { has_ruler_flag = magic_menu_opened }
			clr_ruler_flag = magic_menu_opened 
		}
}

clear_siege_magic_effects = {
	#remove_province_modifier = 
}

count_provinces_with_farm_goods_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = {
		which=$which$ value=0
	}
	
	every_owned_province = {
	    limit = { plant_growth_target = yes }
	    ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_broad_ward_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = {
		which=$which$ value=0
	}
	
	every_owned_province = {
	    limit = {
			has_no_ward_province_modifiers = yes
			is_city = yes
			OR = {
				fort_level = 2
				is_capital = yes
			}
		}
	    ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_narrow_ward_effect = {	#it isnt an actual count its used for the Plant Growth spell, its in 2's til 50 then 10's til 100, 25's til 500
	set_variable = {
		which=$which$ value=0
	}
	
	every_owned_province = {
	    limit = {
			has_no_ward_province_modifiers = yes
			is_city = yes
			OR = {
				AND = {
					has_building = ramparts
					fort_level = 2
				}
				is_capital = yes
			}
		}
	    ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}
# Can handle experience = 50, 100, 200, 250, 300 or 500. If you want to add more then you need to create new tooltips for them.
increase_study_experience = {
	[[experience]
		custom_tooltip = magic_study_experience_$experience$_tt 								# Loc only exists for 50, 100, 200, 250, 300 and 500 currently
		
		update_magic_study_experience_modifier = {}
		hidden_effect = { set_variable = { experienceGain = $experience$ } }
		# If the modifier is positive or negative
		if = {
			limit = { 
				NOT = { is_variable_equal = { which = experienceModifier value = 0 } } # XP modifier not 0
			}
			custom_tooltip = magic_study_experience_modifier_tt			
			hidden_effect = {
				set_variable = { which = expFoo which = experienceModifier }
				divide_variable = { expFoo = 100 }
				change_variable = { expFoo = 1 }
				multiply_variable = { which = experienceGain which = expFoo }
			}
		}

		hidden_effect = {
			change_variable = {
				which = ruler_study_experience 
				which = experienceGain
			}
		}
	]
	hidden_effect = {
		country_event = { id = magic_study.100 days = 1 }
	}
}

# Tooltip to increase: add_magic_study_modifier_1_tt		Handle 1,2,5,7,10,12,15,17,20,25,33,50,100
# Tooltip to decrease : remove_magic_study_modifier_1_tt	Handle 1,2,5,7,10,12,15,17,20,25,33,50,100

#Note that 2 actually display 2.5%, 7 7.5%, 12 12.5% and 17 17.5%. Add accordingly, add_magic_study_modifier_7_tt value = 7.5
update_magic_study_experience_modifier = {
	hidden_effect = {
		if = {
			limit = { NOT = { has_country_flag = study_modifier_set } }
			set_country_flag = study_modifier_set
			set_variable = { experienceModifier = 0 }
		}
		[[value]
			change_variable = { experienceModifier = $value$ } 							# This handle negative. Value must be whole, so +10% = 10
		]
		if = {
			limit = { NOT = { check_variable = { experienceModifier = -100 } } }		# We never go under -100%
			set_variable = { experienceModifier = -100 }
		}
	}
}

# Fires the correct event for magical study completing
# finished_study_effect = {
	# trigger_switch = {
		# on_trigger = has_ruler_flag
	
		# ruler_studying_abjuration = { country_event = { id = magic_study.2 days = 7 } }
		# ruler_studying_conjuration = { country_event = { id = magic_study.5 days = 7 } }
		# ruler_studying_divination = { country_event = { id = magic_study.8 days = 7 } }
		# ruler_studying_enchantment = { country_event = { id = magic_study.11 days = 7 } }
		# ruler_studying_evocation = { country_event = { id = magic_study.14 days = 7 } }
		# ruler_studying_illusion = { country_event = { id = magic_study.17 days = 7 } }
		# ruler_studying_necromancy = { country_event = { id = magic_study.20 days = 7 } }
		# ruler_studying_transmutation = { country_event = { id = magic_study.23 days = 7 } }
	# }
	# country_event = { id = magic_study.100 }
# }

magic_study_start_effect = {
	add_ruler_modifier = {
		name = ruler_studying_magic
		duration = -1
	}
	custom_tooltip = study_experience_cost_tt
	set_ruler_flag = ruler_studying_magic_flag
	hidden_effect = {
		if = { limit = { ai = no }
			if = { limit = { has_ruler_flag = magical_study_1 }
				set_variable = { ruler_study_experience_target = 1000 }
			}
			else_if = { limit = { has_ruler_flag = magical_study_2 }
				set_variable = { ruler_study_experience_target = 1500 }
			}
			else_if = { limit = { has_ruler_flag = magical_study_3 }
				set_variable = { ruler_study_experience_target = 2000 }
			}
			else = {
				set_variable = { ruler_study_experience_target = 5000 }
			}
		}
		country_event = { id = magic_ruler.21 }
	}
}

magic_field_adm_cost = {
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 1 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 5 } }
		}
		add_adm_power = -20
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 5 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 10 } }
		}
		add_adm_power = -40
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 10 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 15 } }
		}
		add_adm_power = -60
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 15 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 20 } }
		}
		add_adm_power = -80
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 20 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 30 } }
		}
		add_adm_power = -100
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 30 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 40 } }
		}
		add_adm_power = -120
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 40 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 50 } }
		}
		add_adm_power = -140
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 50 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 60 } }
		}
		add_adm_power = -160
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 60 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 70 } }
		}
		add_adm_power = -180
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 70 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 80 } }
		}
		add_adm_power = -200
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 80 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 90 } }
		}
		add_adm_power = -220
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 90 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 100 } }
		}
		add_adm_power = -240
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 100 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 200 } }
		}
		add_adm_power = -260
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 200 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 300 } }
		}
		add_adm_power = -280
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 300 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 400 } }
		}
		add_adm_power = -300
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 400 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 500 } }
		}
		add_adm_power = -320
	}
	if = {
		limit = {
			check_variable = { which = amount_of_capital_area_provinces value = 500 }
			NOT = { check_variable = { which = amount_of_capital_area_provinces value = 1000 } }
		}
		add_adm_power = -500
	}
}

magic_legend_lore_effect = {
	set_ruler_flag = ruler_studying_legend_lore
	increase_study_experience = {
		experience = 250
	}
	add_dip_power = -150
	add_mil_power = -40
	add_ruler_modifier = { name = magic_loreseeker_cooldown duration = 365 hidden = yes }
}

magic_legend_lore_cost_tooltip = {	
	if = {
		limit = {
			OR = {
				AND = {
					has_ruler_flag = ruler_studying_abjuration
					has_ruler_flag = abjuration_2
				}
				AND = {
					has_ruler_flag = ruler_studying_conjuration
					has_ruler_flag = conjuration_2
				}
				AND = {
					has_ruler_flag = ruler_studying_divination
					has_ruler_flag = divination_2
				}
				AND = {
					has_ruler_flag = ruler_studying_enchantment
					has_ruler_flag = enchantment_2
				}
				AND = {
					has_ruler_flag = ruler_studying_evocation
					has_ruler_flag = evocation_2
				}
				AND = {
					has_ruler_flag = ruler_studying_illusion
					has_ruler_flag = illusion_2
				}
				AND = {
					has_ruler_flag = ruler_studying_necromancy
					has_ruler_flag = necromancy_2
				}
				AND = {
					has_ruler_flag = ruler_studying_transmutation
					has_ruler_flag = transmutation_2
				}
			}
		}
		if = { limit = { NOT = { dip_power = 80 } }
			custom_tooltip = magic_need_80_dip_tt
		}
		if = { limit = { NOT = { dip_power = 20 } }
			custom_tooltip = magic_need_20_mil_tt
		}
	}
	else_if = {
		limit = {
			OR = {
				AND = {
					has_ruler_flag = ruler_studying_abjuration
					has_ruler_flag = abjuration_1
				}
				AND = {
					has_ruler_flag = ruler_studying_conjuration
					has_ruler_flag = conjuration_1
				}
				AND = {
					has_ruler_flag = ruler_studying_divination
					has_ruler_flag = divination_1
				}
				AND = {
					has_ruler_flag = ruler_studying_enchantment
					has_ruler_flag = enchantment_1
				}
				AND = {
					has_ruler_flag = ruler_studying_evocation
					has_ruler_flag = evocation_1
				}
				AND = {
					has_ruler_flag = ruler_studying_illusion
					has_ruler_flag = illusion_1
				}
				AND = {
					has_ruler_flag = ruler_studying_necromancy
					has_ruler_flag = necromancy_1
				}
				AND = {
					has_ruler_flag = ruler_studying_transmutation
					has_ruler_flag = transmutation_1
				}
			}
		}
		if = { limit = { NOT = { dip_power = 40 } }
			custom_tooltip = magic_need_40_dip_tt
		}
		if = { limit = { NOT = { dip_power = 10 } }
			custom_tooltip = magic_need_10_mil_tt
		}
	}
	else = {
		if = { limit = { NOT = { dip_power = 20 } }
			custom_tooltip = magic_need_20_dip_tt
		}
		if = { limit = { NOT = { dip_power = 5 } }
			custom_tooltip = magic_need_5_mil_tt
		}
	}
}

set_magic_patron = {
	set_ruler_flag = $name_key$_patron
	custom_tooltip = $name_key$_desc_tt
	hidden_effect = {
		[[favoured_school_1] set_ruler_flag = patron_favored_$favoured_school_1$ ]
		[[favoured_school_2] set_ruler_flag = patron_favored_$favoured_school_2$ ]
		[[disfavoured_school_1] set_ruler_flag = patron_disfavored_$disfavoured_school_1$ ]
		[[disfavoured_school_2] set_ruler_flag = patron_disfavored_$disfavoured_school_2$ ]
		[[initial_approval] set_variable = { PatronApproval = $initial_approval$ } ]
	}
}

change_patron_approval = {
	[[add]
		custom_tooltip = patron_pleased_tt
		hidden_effect = {
			change_variable = { PatronApproval = $add$ }
			if = { limit = { check_variable = { PatronApproval = 9 } }
				set_variable = { PatronApproval = 8 }
			}
		}
	]
	[[remove]
		custom_tooltip = patron_displeased_tt
		hidden_effect = {
			subtract_variable = { PatronApproval = $remove$ }
			if = { limit = { NOT = { check_variable = { PatronApproval = 0 } } }
				set_variable = { PatronApproval = 0 }
			}
		}
	]
}

kill_adm_homunculus = {
	remove_country_modifier = artist_homunculus
	remove_country_modifier = inquisitor_homunculus
	remove_country_modifier = master_of_mint_homunculus
	remove_country_modifier = natural_scientist_homunculus
	remove_country_modifier = philosopher_homunculus
	remove_country_modifier = theologian_homunculus
	remove_country_modifier = treasurer_homunculus	
	clr_country_flag = employs_adm_homunculus
}

kill_dip_homunculus = {
	remove_country_modifier = colonial_governor_homunculus
	remove_country_modifier = diplomat_homunculus
	remove_country_modifier = naval_reformer_homunculus
	remove_country_modifier = navigator_homunculus
	remove_country_modifier = spymaster_homunculus
	remove_country_modifier = statesman_homunculus
	remove_country_modifier = trader_homunculus
	clr_country_flag = employs_dip_homunculus
}

kill_mil_homunculus = {
	remove_country_modifier = army_organiser_homunculus
	remove_country_modifier = army_reformer_homunculus
	remove_country_modifier = commandant_homunculus
	remove_country_modifier = grand_captain_homunculus
	remove_country_modifier = master_recruiter_homunculus
	remove_country_modifier = military_engineer_homunculus
	remove_country_modifier = quartermaster_homunculus
	clr_country_flag = employs_mil_homunculus
}
