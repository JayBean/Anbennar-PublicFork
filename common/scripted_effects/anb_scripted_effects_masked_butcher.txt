no_loyalty_loss_on_vampire_privilege_revocation = { #Stops you losing loyalty when you swap a Mask out
	custom_tooltip = keepers_dont_care_tt
	hidden_effect = {
		if = {
			limit = {
				has_idea = recognize_hierarchy
			}
			add_estate_loyalty = {
				estate = estate_vampires
				loyalty = 15
			}
		}
		else = {
			add_estate_loyalty = {
				estate = estate_vampires
				loyalty = 20
			}
		}
	}
}

track_mask_granted = {
    display_mask_tooltip = { mask_race = $mask_race$ }
    track_level_3_mask = { mask_race = $mask_race$ }
}

display_mask_tooltip = { #This is for displaying tooltips
    if = { #"This mask is level 1"
        limit = {
            has_country_flag = $mask_race$_mask_1
            NOT = { has_country_flag = $mask_race$_mask_2 }
        }
        custom_tooltip = mask_current_level_1_tt
    }
    else_if = { #"This mask is level 2"
        limit = {
            has_country_flag = $mask_race$_mask_2
            NOT = { has_country_flag = $mask_race$_mask_3 }
        }
        custom_tooltip = mask_current_level_2_tt
    }
    else_if = { #"This mask is level 3, and we can only wear one at a time"
        limit = { 
            has_country_flag = $mask_race$_mask_3 
        }
        if = {
            limit = { has_estate_privilege = estate_mages_all_mask }
            custom_tooltip = mask_current_level_3_alt_tt
        }
        else = {
            custom_tooltip = mask_current_level_3_tt
        }

        if = { #"We already have one on!"
            limit = {
                OR = {
                    has_country_flag = 2_level_3_mask_flg
                    AND = { has_country_flag = level_3_mask_flg NOT = { has_estate_privilege = estate_mages_all_mask } }
                }
            }
            custom_tooltip = mask_level_3_already_tt
        }
    }
    else = { custom_tooltip = has_crafted_mask_tt } # "We haven't crafted this mask"
}

track_level_3_mask = {
    if = {
        limit = { has_country_flag = $mask_race$_mask_3 }
        if = {
            limit = {
                has_country_flag = level_3_mask_flg
                NOT = { has_country_flag = 2_level_3_mask_flg }
                has_estate_privilege = estate_mages_all_mask
            }
            set_country_flag = 2_level_3_mask_flg
            set_country_flag = $mask_race$_mask_3_granted
        }
        else_if = {
            limit = { NOT = { has_country_flag = level_3_mask_flg } }
            set_country_flag = level_3_mask_flg
            set_country_flag = $mask_race$_mask_3_granted
        }
    }
}

track_mask_granted_human = {
    display_human_mask_tooltip = { mask_race = $mask_race$ }
    track_level_3_mask = { mask_race = $mask_race$ }
}

display_human_mask_tooltip = { #This is for displaying tooltips
    if = { #"This mask is level 1"
        limit = {
            has_country_flag = $mask_race$_mask_1
            NOT = { has_country_flag = $mask_race$_mask_2 }
        }
        custom_tooltip = mask_current_level_1_tt
    }
    else_if = { #"This mask is level 2"
        limit = {
            has_country_flag = $mask_race$_mask_2
            NOT = { has_country_flag = $mask_race$_mask_3 }
        }
        custom_tooltip = mask_current_level_2_tt
    }
    else_if = { #"This mask is level 3, and we can only wear one at a time"
        limit = { 
            has_country_flag = $mask_race$_mask_3 
        }
        if = {
            limit = { has_estate_privilege = estate_mages_all_mask }
            custom_tooltip = mask_current_level_3_human_alt_tt
        }
        else = {
            custom_tooltip = mask_current_level_3_human_tt
        }

        if = { #"We already have one on!"
            limit = {
                OR = {
                    has_country_flag = 2_level_3_mask_flg
                    AND = { has_country_flag = level_3_mask_flg NOT = { has_estate_privilege = estate_mages_all_mask } }
                }
            }
            custom_tooltip = mask_level_3_already_tt
        }
    }
    else = { custom_tooltip = has_crafted_mask_tt } # "We haven't crafted this mask"
}

revoke_mask_level_check = { #When you revoke a Level Three mask privilege, get the ability to wear a different one
	if = {
		limit = {
			has_country_flag = 2_level_3_mask_flg
			has_country_flag = $mask_race$_mask_3_granted
		}
		clr_country_flag = 2_level_3_mask_flg
		clr_country_flag = $mask_race$_mask_3_granted
	}
	else_if = {
		limit = {
			NOT = { has_country_flag = 2_level_3_mask_flg }
			has_country_flag = $mask_race$_mask_3_granted
		}
		clr_country_flag = level_3_mask_flg
		clr_country_flag = $mask_race$_mask_3_granted
	}
}

apply_mask_opinion = { #Makes countries hate you when you craft a mask of their race
	every_country = {
		limit = { culture_is_$mask_race$ = yes }
		reverse_add_opinion = {
			who = ROOT
			modifier = mb_made_mask_opinion
		}
	}
}

grant_level_1_mask = { #Unlock Level One mask
	custom_tooltip = $mask_race$_mask_1_unlock_tt
	set_country_flag = $mask_race$_mask_1
}

grant_level_2_mask = { #Unlocks Level Two masks, requires Ichor from blood moon + 5 more provinces with the mask race majority
	custom_tooltip = $mask_race$_mask_2_unlock_tt
	set_country_flag = $mask_race$_mask_2
	clr_country_flag = has_$mask_race$_ichor
}

grant_level_3_mask = { #Unlocks Level Three masks, requires Ichor from blood moon + 5 more provinces with the mask race majority
	custom_tooltip = $mask_race$_mask_3_unlock_tt
	set_country_flag = $mask_race$_mask_3
	remove_estate_privilege = estate_vampires_mask_$mask_race$
	custom_tooltip = must_reequip_tt
	clr_country_flag = has_$mask_race$_ichor
}

blood_moon_sacrifice_majority = { #Choose five minority provinces of the race and destroy the majorities, leaving large minorities
	custom_tooltip = five_chosen_provinces_tt
	hidden_effect = {
		random_owned_province = {
			limit = { has_$mask_race$_majority_trigger = yes }
			change_culture = ROOT
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_majority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			change_culture = ROOT
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_majority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			change_culture = ROOT
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_majority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			change_culture = ROOT
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_majority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			change_culture = ROOT
		}
	}
	set_country_flag = has_$mask_race$_ichor
}

blood_moon_sacrifice_minority = { #Choose five minority provinces of the race and destroy/reduce the minorities there
	custom_tooltip = five_chosen_provinces_minority_tt
	hidden_effect = {
		random_owned_province = {
			limit = { has_$mask_race$_minority_trigger = yes }
			remove_$mask_race$_minority_size_effect = yes
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_minority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			remove_$mask_race$_minority_size_effect = yes
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_minority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			remove_$mask_race$_minority_size_effect = yes
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_minority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			remove_$mask_race$_minority_size_effect = yes
			set_province_flag = sacrificing_flag
		}
		random_owned_province = {
			limit = { has_$mask_race$_minority_trigger = yes NOT = { has_province_flag = sacrificing_flag } }
			remove_$mask_race$_minority_size_effect = yes
		}
	}
	set_country_flag = has_$mask_race$_ichor
}

add_oblations = { # by okman
	event_target:oblations_loser = {
		ROOT = {
		   export_to_variable = {
			   which = oblation_loser_dev
			   value = trigger_value:total_development
			   who = PREV # not certain if you could instead put event_target directly in here and bypass doing this
			}
		} # assuming your nation is ROOT here
	}
	if = {
		limit = { check_variable = { which = oblation_loser_dev value = 210 } }
		set_variable = { which = oblation_loser_dev value = 210 }
	}
	while = {
	   limit = { check_variable = { which = oblation_loser_dev value = 1 } }
	   subtract_variable = { which = oblation_loser_dev value = 15 }
	   random_owned_province = {
		   limit = { 
			   NOT = { fast_has_pop_of_race = { race = $mask_race$ } }
		   }
		   add_$mask_race$_minority_size_effect = yes
	   }
	   change_variable = { which = mb_oblations_claimed value = 1 }
	}
	clear_global_event_target = oblations_loser
}

grove_minority_effect = {
	random_owned_province = {
		limit = {
			province_group = deepwoods_$grove$_grove
			NOT = { has_elven_majority_trigger = yes }
		}
		add_elven_minority_size_effect = yes
	}
	if = {
		limit = { has_country_flag = mb_buffed_ichortap_flg }
		grove_bonus_minority_effect = { provs = $grove$ }
	}
}

grove_bonus_minority_effect = {
	random_owned_province = {
		limit = {
			province_group = deepwoods_$provs$_grove
			NOT = { has_elven_majority_trigger = yes }
		}
		add_elven_minority_size_effect = yes
	}
	random_owned_province = {
		limit = {
			province_group = deepwoods_$provs$_grove
			NOT = { has_goblin_majority_trigger = yes }
		}
		add_goblin_minority_size_effect = yes
	}
}

mb_set_ptm = {
    add_province_triggered_modifier = $ptm_name$
	hidden_effect = {
		add_province_modifier = {
			name = mb_ap_tracker
			hidden = yes
			duration = $move_timer$
		}
	}
	owner = { set_country_flag = $ptm_name$_moved }
}

mb_remove_ptm = {
    if = {
        limit = { owner = { has_country_flag = $ptm_name$_moved } }
        remove_province_triggered_modifier = $ptm_name$
        owner = { clr_country_flag = $ptm_name$_moved }
    }
}