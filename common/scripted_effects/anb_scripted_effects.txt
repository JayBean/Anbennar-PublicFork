
#No longer needed with 1.33 due to "set_emperor = no" being fixed
#Use to remove the emperor from the imperial throne without killing them and without a specific new emperor
#Can be used within any scope
# abdicate_emperor_no_reelection = {
	# emperor = {
		# custom_tooltip = abdicate_emperor_no_reelection_tooltip
		# hidden_effect = {
			# export_to_variable = { #Save emperor's religion so they can be returned to the correct religion at the end
				# which = emperor_religion
				# value = religion
				# who = ROOT
			# }
			
			# set_country_flag = emperor_religion_change #So changing religion doesn't tank prestige and give conversion zeal modifier, flag referenced in religion file
			# if = { #If there is religious peace, then we need to choose a religion to for the new emperor to be from
				# limit = { hre_religion_treaty = yes }
				
				# 1 = {
					# set_variable = {
						# which = regent_court_electors
						# value = 0
					# }
					# set_variable = {
						# which = corinite_electors
						# value = 0
					# }
					# set_variable = {
						# which = ravelian_electors
						# value = 0
					# }
				# }
			
				# every_elector = {
					# set_country_flag = hre_elector #Save electors so they can be remade electors at end
					# trigger_switch = {
						# on_trigger = religion
						
						# regent_court = { 1 = { change_variable = { which = regent_court_electors value = 1 } } }
						# corinite = { 1 = { change_variable = { which = corinite_electors value = 1 } } }
						# ravelian = { 1 = { change_variable = { which = ravelian_electors value = 1 } } }
					# }
				# }
				
				# Religion with most electors chooses emperor with tiebreakers: Regent Court > Corinite > Ravelian
				# if = {
					# limit = {
						# 1 = {
							# check_variable = {
								# which = regent_court_electors
								# which = corinite_electors
							# }
							# check_variable = {
								# which = regent_court_electors
								# which = ravelian_electors
							# }
						# }
					# }
					# set_hre_religion = regent_court
					# set_hre_religion_locked = yes #Have to lock religion to remove religious peace
					# change_religion = cannorian_pantheon #Have to change emperor to dummy religion to remove emperorship
				# }
				# else_if = {
					# limit = {
						# 1 = {
							# check_variable = {
								# which = corinite_electors
								# which = ravelian_electors
							# }
						# }
					# }
					# set_hre_religion = corinite
					# set_hre_religion_locked = yes
					# change_religion = cannorian_pantheon
				# }
				# else = {
					# set_hre_religion = ravelian
					# set_hre_religion_locked = yes
					# change_religion = cannorian_pantheon
				# }
				
				# set_hre_religion_treaty = yes
				
				# every_known_country = { #Reapply electorship to electors removed by locking religion
					# limit = {
						# has_country_flag = hre_elector
					# }
					# clr_country_flag = hre_elector
					# if = {
						# limit = { is_elector = no }
						# elector = yes
					# }
				# }
			# }
			# else = { #If not religious peace, then we just need to change the emperor's religion
				# change_religion = cannorian_pantheon
			# }
			
			# change_religion = variable:emperor_religion
			# clr_country_flag = emperor_religion_change
		# }
	# }
# }

#No longer needed with 1.32 due to the new effect "set_emperor = yes"
# #Using make_emperor during a league war will end the war with an unlocked religion. Use another effect to determine the outcome for that
# #Use within scope for new emperor
# make_emperor = { 
	# custom_tooltip = make_emperor_tooltip
	# hidden_effect = {
		# export_to_variable = { #Save future emperor's religion so they can be returned to the correct religion at the end
			# which = future_emperor_religion
			# value = religion
			# who = ROOT
		# }
		# if = { #Save empire's religion if not religious peace and usurper matches religion else will end with religious peace
			# limit = {
				# hre_religion_treaty = no
				# hre_religion = ROOT
			# }
			# set_country_flag = hre_has_religion
			# trigger_switch = {
				# on_trigger = hre_religion
				
				# regent_court = { set_country_flag = regent_court_empire }
				# corinite = { set_country_flag = corinite_empire }
				# ravelian = { set_country_flag = ravelian_empire }
			# }
			# if = {
				# limit = { hre_religion_locked = no }
				# set_country_flag = hre_unlocked_religion
			# }
		# }
		
		# set_country_flag = emperor_religion_change #So changing religion doesn't tank prestige and give conversion zeal modifier
		# every_elector = { #Save electors to remake electors at end
			# set_country_flag = hre_elector
		# }
		
		# set_hre_religion_treaty = yes #Have to set religious peace so empire isn't dismantled during process
		# change_religion = cannorian_pantheon #Change future emperor to dummy religion so they are only option for emperor
		# elector = yes #Need someone to vote you emperor with religious peace
		# set_hre_religion = cannorian_pantheon
		# set_hre_religion_locked = yes
		
		# #No longer needed in 1.31.5 since just changing the hre religion now also changes the emperor. Previous method dismantles empire
		# # emperor = { #Need to change emperor's religion to change emperor
			# # export_to_variable = {
				# # which = emperor_religion
				# # value = religion
				# # who = emperor
			# # }
			# # set_country_flag = emperor_religion_change
			# # if = {
				# # limit = { religion = regent_court }
				# # change_religion = corinite
			# # }
			# # else = {
				# # change_religion = regent_court
			# # }
			# # change_religion = variable:emperor_religion
			# # clr_country_flag = emperor_religion_change
		# # }
		
		# set_hre_religion_treaty = yes #Have to go through religious peace so new emperor stays emperor
		# change_religion = variable:future_emperor_religion
		
		# if = { #Change hre religion back if not religious peace
			# limit = { has_country_flag = hre_has_religion }
			# clr_country_flag = hre_has_religion
			# trigger_switch = {
				# on_trigger = has_country_flag
				
				# regent_court_empire = { set_hre_religion = regent_court set_hre_religion_locked = yes clr_country_flag = regent_court_empire }
				# corinite_empire = { set_hre_religion = corinite set_hre_religion_locked = yes clr_country_flag = corinite_empire }
				# ravelian_empire = { set_hre_religion = ravelian set_hre_religion_locked = yes clr_country_flag = ravelian_empire }
			# }
			# if = {
				# limit = { has_country_flag = hre_unlocked_religion }
				# set_hre_religion_locked = no
				# clr_country_flag = hre_unlocked_religion
			# }
		# }
		
		# elector = no
		# every_known_country = { #Reapply electorship to electors removed by locking religion
			# limit = {
				# has_country_flag = hre_elector
			# }
			# clr_country_flag = hre_elector
			# if = {
				# limit = { is_elector = no }
				# elector = yes
			# }
		# }
		# clr_country_flag = emperor_religion_change
	# }
# }

# function to clear out ruler flags. use before setting ruler flag when changing races
clear_fast_ruler_flags = {
	clr_ruler_flag = half_elven_ruler
	clr_ruler_flag = elven_ruler
	clr_ruler_flag = dwarven_ruler
	clr_ruler_flag = gnomish_ruler
	clr_ruler_flag = human_ruler
	clr_ruler_flag = half_orcish_ruler
	clr_ruler_flag = orcish_ruler
	clr_ruler_flag = goblin_ruler
	clr_ruler_flag = gnollish_ruler
	clr_ruler_flag = kobold_ruler
	clr_ruler_flag = lizardfolk_ruler
	clr_ruler_flag = halfling_ruler
	clr_ruler_flag = harimari_ruler
	clr_ruler_flag = hobgoblin_ruler
	clr_ruler_flag = troll_ruler
	clr_ruler_flag = ogre_ruler
	clr_ruler_flag = harpy_ruler
	clr_ruler_flag = centaur_ruler
	clr_ruler_flag = ruinborn_ruler
}

# function to clear out consort flags. use before setting consort flag when changing races
clear_fast_consort_flags = {
	clr_consort_flag = half_elven_consort
	clr_consort_flag = elven_consort
	clr_consort_flag = dwarven_consort
	clr_consort_flag = gnomish_consort
	clr_consort_flag = human_consort
	clr_consort_flag = half_orcish_consort
	clr_consort_flag = orcish_consort
	clr_consort_flag = goblin_consort
	clr_consort_flag = gnollish_consort
	clr_consort_flag = kobold_consort
	clr_consort_flag = lizardfolk_consort
	clr_consort_flag = halfling_consort
	clr_consort_flag = harimari_consort
	clr_consort_flag = hobgoblin_consort
	clr_consort_flag = troll_consort
	clr_consort_flag = ogre_consort
	clr_consort_flag = harpy_consort
	clr_consort_flag = centaur_consort
	clr_consort_flag = ruinborn_consort
}

# function to clear out heir flags. use before setting heir flag when changing races
clear_fast_heir_flags = {
	clr_heir_flag = half_elven_heir
	clr_heir_flag = elven_heir
	clr_heir_flag = dwarven_heir
	clr_heir_flag = gnomish_heir
	clr_heir_flag = human_heir
	clr_heir_flag = half_orcish_heir
	clr_heir_flag = orcish_heir
	clr_heir_flag = goblin_heir
	clr_heir_flag = gnollish_heir
	clr_heir_flag = kobold_heir
	clr_heir_flag = lizardfolk_heir
	clr_heir_flag = halfling_heir
	clr_heir_flag = harimari_heir
	clr_heir_flag = hobgoblin_heir
	clr_heir_flag = troll_heir
	clr_heir_flag = ogre_heir
	clr_heir_flag = harpy_heir
	clr_heir_flag = centaur_heir
	clr_heir_flag = ruinborn_heir
}

increase_unraveling_knowledge_small = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = 0.002
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = 0.005
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = 0.007
	}
	else = {
		add_reform_desire = 0.01
	}
}

increase_unraveling_knowledge_medium = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = 0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = 0.007
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = 0.01
	}
	else = {
		add_reform_desire = 0.02
	}
}

increase_unraveling_knowledge_large = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = 0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = 0.01
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = 0.02
	}
	else = {
		add_reform_desire = 0.04
	}
}

decrease_unraveling_knowledge_small = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = -0.002
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = -0.005
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = -0.007
	}
	else = {
		add_reform_desire = -0.01
	}
}

decrease_unraveling_knowledge_medium = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = -0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = -0.007
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = -0.01
	}
	else = {
		add_reform_desire = -0.02
	}
}

decrease_unraveling_knowledge_large = {
	if = {
		limit = { has_global_flag = third_ravelian_council }
		add_reform_desire = -0.005
	}
	else_if = {
		limit = { has_global_flag = second_ravelian_council }
		add_reform_desire = -0.01
	}
	else_if = {
		limit = { has_global_flag = first_ravelian_council }
		add_reform_desire = -0.02
	}
	else = {
		add_reform_desire = -0.04
	}
}

ynn_barge_clear_flag = {
	clr_country_flag = little_barges
	clr_country_flag = normal_barges
	clr_country_flag = big_barges
	clr_country_flag = ynn_barge_distance_0
	clr_country_flag = ynn_barge_distance_1
	clr_country_flag = ynn_barge_distance_2
	clr_country_flag = ynn_barge_distance_3
	clr_country_flag = ynn_dam_mocbarja
	clr_country_flag = ynn_dam_bosancovac
	clr_country_flag = ynn_dam_vels_bacar
	clr_country_flag = ynn_dam_adbrabohvi
	clr_country_flag = ynn_reward_1
	clr_country_flag = ynn_reward_2
	clr_country_flag = ynn_reward_3
	clr_country_flag = ynn_reward_4
	clr_country_flag = ynn_reward_5
	clr_country_flag = ynn_reward_6
	clr_country_flag = ynn_reward_7
	clr_country_flag = ynn_mayor_death
}

ynn_reward = {
	trigger_switch = {
		on_trigger = has_country_flag
		
		ynn_reward_1 = { add_prestige = 2 add_legitimacy = 2 }
		ynn_reward_2 = { add_prestige = 5 increase_legitimacy_small_effect = yes }
		ynn_reward_3 = { add_prestige = 5 increase_legitimacy_small_effect = yes  add_dip_power = 10 }
		ynn_reward_4 = { add_prestige = 5 increase_legitimacy_small_effect = yes  add_dip_power = 15 }
		ynn_reward_5 = { add_prestige = 10 increase_legitimacy_medium_effect = yes  add_dip_power = 20 }
		ynn_reward_6 = { add_prestige = 10 increase_legitimacy_medium_effect = yes  add_dip_power = 20 random = { chance = 50 add_stability_or_adm_power = yes } }
		ynn_reward_7 = { add_prestige = 15 increase_legitimacy_large_effect = yes  add_dip_power = 30 add_stability_or_adm_power = yes }
	}
}


trollsbay_cultures = {
	if = {
		limit = { culture = vernman }
		change_culture = valorman
	}
	else_if = {
		limit = { culture = visfoot_halfling }
		change_culture = towerfoot_halfling
	}
	else_if = {
		limit = { culture = roilsardi }
		change_culture = isobeliner
	}
	else_if = {
		limit = { culture = bahari }
		change_culture = zanlibi
	}
	else_if = {
		limit = { culture = arannese }
		change_culture = marlliander
	}
	else_if = {
		limit = {
			OR = {
				culture = east_damerian
				culture = pashainey
			}
		}
		change_culture = cestirmarker
	}
}

ynn_cultures = {
	if = {
		limit = { 
			OR = {
				culture = low_lorentish
				culture = arannese
			}
		}
		change_culture = dustman
	}
	else_if = {
		limit = { culture = castellyrian }
		change_culture = corinsfielder
	}
	else_if = {
		limit = { culture = havoric }
		if = {
			limit = {
				OR = {
					region = veykoda_region
					province_group = sarda_eastern_lands
					is_core = H56 #Havoral Band
					is_core = H57 #New Havoral
				}
			}
			change_culture = new_havoric
		}
		else_if = {
			limit = {
				OR = {
					region = broken_isles_region
					region = forest_of_the_cursed_ones_region
					is_core = H37 #Themaria
				}
			}
			change_culture = themarian
		}
	}
	else_if = {
		limit = {
			OR = {
				culture = crownsman
				culture = vernman
			}
		}
		change_culture = steadsman
	}
	else_if = {
		limit = { culture = east_damerian }
		if = {
			limit = {
				OR = {
					region = rzenta_region
					region = broken_isles_region
					superregion = eordand_superregion
					region = forest_of_the_cursed_ones_region
					is_core = H46 #Istralorian Crusaders
					is_core = H47 #Istranar
				}
			}
			change_culture = istranari
		}
		else_if = {
			limit = {
				OR = {
					region = epednan_expanse_region
					province_group = ynn_western_lands
					is_core = H60
					is_core = H61
				}
			}
			change_culture = steadsman
		}
	}
	else_if = {
		limit = { culture = redfoot_halfling }
		change_culture = pipefoot_halfling
	}
	else_if = {
		limit = { culture = stone_dwarf }
		change_culture = steel_dwarf
	}
	else_if = {
		limit = {
			culture = half_orc
			OR = {	#East bank are Freemarchers by default
				region = epednan_expanse_region
				province_group = ynn_western_lands
				is_core = H58 #Chipped Tooth Company
				is_core = H59 #Chippengard
			}
		}
		change_culture = chippengarder_half_orc
	}
	else_if = {
		limit = { culture = moon_elf }
		change_culture = horizon_elf
	}
}

triarchy_cultures = {
	if = {
		limit = { culture = city_goblin }
		change_culture = soot_goblin
	}
	else_if = {
		limit = { culture = cliff_gnome }
		change_culture = tinker_gnome
	}
	else_if = {
		limit = { culture = bluescale_kobold }
		change_culture = steelscale_kobold
	}
}

goblinic_shamanism_event = {
	if = {
		limit = {
			religion_group = cannorian
			ROOT = {  NOT = { has_unlocked_cult = cannorian_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.2 }
		}
	}
	if = {
		limit = {
			religion = the_thought
			ROOT = {  NOT = { has_unlocked_cult = gnomish_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.3 }
		}
	}
	if = {
		limit = {
			religion_group = dwarven
			ROOT = {  NOT = { has_unlocked_cult = ancestor_worship_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.4 }
		}
	}
	if = {
		limit = {
			religion = godlost
			ROOT = {  NOT = { has_unlocked_cult = godlost_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.401 }
		}
	}
	if = {
		limit = {
			religion_group = khetist
			ROOT = {  NOT = { has_unlocked_cult = khetist_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.402 }
		}
	}
	if = {
		limit = {
			religion_group = gnollish
			ROOT = {  NOT = { has_unlocked_cult = gnollish_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.403 }
		}
	}
	if = {
		limit = {
			religion_group = elven
			ROOT = {  NOT = { has_unlocked_cult = elven_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.404 }
		}
	}
	if = {
		limit = {
			religion_group = bulwari
			ROOT = {  NOT = { has_unlocked_cult = bulwari_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.405 }
		}
	}
	if = {
		limit = {
			religion_group = gerudian
			ROOT = {  NOT = { has_unlocked_cult = gerudian_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.406 }
		}
	}
	if = {
		limit = {
			religion_group = orcish
			ROOT = {  NOT = { has_unlocked_cult = orcish_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.407 }
		}
	}
	if = {
		limit = {
			religion_group = harpy_cults
			ROOT = {  NOT = { has_unlocked_cult = harpy_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.408 }
		}
	}
	if = {
		limit = {
			religion_group = fey_religion
			ROOT = {  NOT = { has_unlocked_cult = fey_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.409 }
		}
	}
	if = {
		limit = {
			religion_group = raheni
			ROOT = {  NOT = { has_unlocked_cult = raheni_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.410 }
		}
	}
	if = {
		limit = {
			religion_group = giantkin
			ROOT = {  NOT = { has_unlocked_cult = giantkin_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.411 }
		}
	}
	if = {
		limit = {
			religion_group = centaur_religion
			ROOT = {  NOT = { has_unlocked_cult = centaur_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.412 }
		}
	}
	if = {
		limit = {
			religion_group = dragon_cult
			ROOT = {  NOT = { has_unlocked_cult = kobold_cult } }
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.413 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = kroozmuta_zemna_cult
				dwarovar_goblin_culture = yes
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = kroozmuta_zemna_cult
					dwarovar_goblin_culture = yes
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.20 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = kroozbuto_nubo_cult
				culture = common_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = kroozbuto_nubo_cult
					culture = common_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.21 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = tewaka_sunka_cult
				culture = exodus_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = tewaka_sunka_cult
					culture = exodus_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.22 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = apzarko_hrom_cult
				culture = common_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = apzarko_hrom_cult
					culture = common_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.24 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = vortza_lesa_cult
				culture = forest_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = vortza_lesa_cult
					culture = forest_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.25 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = vortzo_laukuno_cult
				culture = exodus_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = vortzo_laukuno_cult
					culture = exodus_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.26 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = vortza_krpa_cult	
				dwarovar_goblin_culture = yes
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = vortza_krpa_cult
					dwarovar_goblin_culture = yes
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.27 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = zvaiko_udenzo_cult
				culture = exodus_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = zvaiko_udenzo_cult
					culture = exodus_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.28 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = zvaika_kirba_cult
				culture = common_goblin
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = zvaika_kirba_cult
					culture = common_goblin
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.29 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = vortzo_liezmo_cult
				dwarovar_goblin_culture = yes
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = vortzo_liezmo_cult
					dwarovar_goblin_culture = yes
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.30 }
		}
	}
	if = {
		limit = {
			OR = {
				has_unlocked_cult = muta_kroozpauz_cult
				dwarovar_goblin_culture = yes
			}
			ROOT = {
				NOT = {
					has_unlocked_cult = muta_kroozpauz_cult
					dwarovar_goblin_culture = yes
				}
			}
		}
		ROOT = {
			country_event = { id = goblinic_shamanism_flavor.31 }
		}
	}
}


harpy_define_pop_to_take = {
	random_owned_province = {
		limit = {
			NOT = { has_province_flag = harpy_pop_@ROOT }
			is_city = yes
			is_capital = no
			development = 4
			OR = {	#compatible races
				has_human_majority_trigger = yes
				has_elven_majority_trigger = yes
				has_goblin_majority_trigger = yes
				has_hobgoblin_majority_trigger = yes
				has_orcish_majority_trigger = yes
				has_ruinborn_majority_trigger = yes
			}
		}
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop1
	}
	random_owned_province = {	# first option tries to find new pops
		limit = {
			NOT = { has_province_flag = harpy_pop_@ROOT }
			is_city = yes
			is_capital = no
			development = 4
			OR = {	#compatible races
				AND = { has_human_majority_trigger = yes ROOT = { capital_scope = { NOT = { has_human_minority_trigger = yes } } } }
				AND = { has_elven_majority_trigger = yes ROOT = { capital_scope = { NOT = { has_elven_minority_trigger = yes } } } }
				AND = { has_goblin_majority_trigger = yes ROOT = { capital_scope = { NOT = { has_goblin_minority_trigger = yes } } } }
				AND = { has_hobgoblin_majority_trigger = yes ROOT = { capital_scope = { NOT = { has_hobgoblin_minority_trigger = yes } } } }
				AND = { has_orcish_majority_trigger = yes ROOT = { capital_scope = { NOT = { has_orcish_minority_trigger = yes } } } }
				AND = { has_ruinborn_majority_trigger = yes ROOT = { capital_scope = { NOT = { has_ruinborn_minority_trigger = yes } } } }
			}
		}
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop1
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_flag = harpy_pop_@ROOT }
			is_city = yes
			is_capital = no
			development = 4
			OR = {	#compatible races
				has_human_majority_trigger = yes
				has_elven_majority_trigger = yes
				has_goblin_majority_trigger = yes
				has_hobgoblin_majority_trigger = yes
				has_orcish_majority_trigger = yes
				has_ruinborn_majority_trigger = yes
			}
		}
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop2
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_flag = harpy_pop_@ROOT }
			is_city = yes
			is_capital = no
			development = 4
			OR = {	#compatible races
				has_human_majority_trigger = yes
				has_elven_majority_trigger = yes
				has_goblin_majority_trigger = yes
				has_hobgoblin_majority_trigger = yes
				has_orcish_majority_trigger = yes
				has_ruinborn_majority_trigger = yes
			}
		}
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop3
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_flag = harpy_pop_@ROOT }
			is_city = yes
			is_capital = no
			development = 4
			OR = {	#compatible races
				has_human_majority_trigger = yes
				has_elven_majority_trigger = yes
				has_goblin_majority_trigger = yes
				has_hobgoblin_majority_trigger = yes
				has_orcish_majority_trigger = yes
				has_ruinborn_majority_trigger = yes
			}
		}
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop4
	}
	random_owned_province = {
		limit = {
			NOT = { has_province_flag = harpy_pop_@ROOT }
			is_city = yes
			is_capital = no
			development = 4
			OR = {	#compatible races
				has_human_majority_trigger = yes
				has_elven_majority_trigger = yes
				has_goblin_majority_trigger = yes
				has_hobgoblin_majority_trigger = yes
				has_orcish_majority_trigger = yes
				has_ruinborn_majority_trigger = yes
			}
		}
		set_province_flag = harpy_pop_@ROOT
		save_event_target_as = harpy_pop5
	}
}

harpy_move_pop_to_capital_effect = {
	if = { limit = { has_elven_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = { limit = { has_large_elven_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_elven_minority_size_effect = yes
				}
			}
		}
	}
	else_if = { limit = { has_orcish_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = { limit = { has_large_orcish_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_orcish_minority_size_effect = yes
				}
			}
		}
	}
	else_if = { limit = { has_ruinborn_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = { limit = { has_large_ruinborn_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_ruinborn_minority_size_effect = yes
				}
			}
		}
	}
	else_if = { limit = { has_goblin_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = { limit = { has_large_goblin_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_goblin_minority_size_effect = yes
				}
			}
		}
	}
	else_if = { limit = { has_hobgoblin_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = { limit = { has_large_hobgoblin_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_hobgoblin_minority_size_effect = yes
				}
			}
		}
	}
	else_if = { limit = { has_human_majority_trigger = yes }
		ROOT = {
			capital_scope = {
				if = { limit = { has_large_human_minority_trigger = yes }
					random_list = {
						33 = { add_base_tax = 1 }
						33 = { add_base_production = 1 }
						33 = { add_base_manpower = 1 }
					}
				}
				else = {
					add_human_minority_size_effect = yes
				}
			}
		}
	}
	random_list = {
		33 = { add_base_tax = -1 ROOT = { capital_scope = { add_base_tax = 1 } } }
		33 = { add_base_production = -1 ROOT = { capital_scope = { add_base_production = 1 } } }
		33 = { add_base_manpower = -1 ROOT = { capital_scope = { add_base_manpower = 1 } } }
	}
	if = {
		limit = { NOT = { owned_by = ROOT } }
		owner = { add_liberty_desire = 10 }
	}
	if = {
		limit = { ROOT = { NOT = { has_country_flag = no_longer_monstrous } } }
		add_devastation = 5
	}
}

harpy_define_raid_target = {
	harpy_raid_target_selection = { target = harpy_raid1 }
	harpy_raid_target_selection = { target = harpy_raid2 }
	harpy_raid_target_selection = { target = harpy_raid3 }
	harpy_raid_target_selection = { target = harpy_raid4 }
}

harpy_raid_target_selection = {
	random_owned_province = {
		limit = {
			any_province = {
				harpy_raid_target_limit = yes
			}
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				feudalism = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				renaissance = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				new_world_i = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				printing_press = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				global_trade = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				manufactories = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				enlightenment = 100
			}
			save_event_target_as = $target$
		}
		random_province = {
			limit = {
				harpy_raid_target_limit = yes
				industrialization = 100
			}
			save_event_target_as = $target$
		}
		if = {
			limit = { has_saved_event_target = $target$ }
			event_target:$target$ = {
				area = { set_province_flag = harpy_raid_@ROOT } # Make whole area chosen. 
			}
		}
	}
}

harpy_raid_effect = {
	if = {
		limit = { development = 50 }
		remove_loot = {
			who = ROOT
			amount = 25
		}
	}
	else_if = {
		limit = { development = 40 }
		remove_loot = {
			who = ROOT
			amount = 20
		}
	}
	else_if = {
		limit = { development = 35 }
		remove_loot = {
			who = ROOT
			amount = 18
		}
	}
	else_if = {
		limit = { development = 30 }
		remove_loot = {
			who = ROOT
			amount = 15
		}
	}
	else_if = {
		limit = { development = 25 }
		remove_loot = {
			who = ROOT
			amount = 13
		}
	}
	else_if = {
		limit = { development = 20 }
		remove_loot = {
			who = ROOT
			amount = 10
		}
	}
	else_if = {
		limit = { development = 15 }
		remove_loot = {
			who = ROOT
			amount = 8
		}
	}
	else_if = {
		limit = { development = 10 }
		remove_loot = {
			who = ROOT
			amount = 5
		}
	}
	else = {
		remove_loot = {
			who = ROOT
			amount = 3
		}
	}
	add_devastation = 10
	
	
	
	if = { 
		limit = { ROOT = { capital_scope = { NOT = { feudalism = 100 } } } feudalism = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = feudalism value = 5 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { renaissance = 100 } } } renaissance = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { renaissance = 100 } }
				# add_institution_embracement = { which = renaissance value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { renaissance = 100 } } } renaissance = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = renaissance value = 5 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { new_world_i = 100 } } } new_world_i = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { new_world_i = 100 } }
				# add_institution_embracement = { which = new_world_i value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { new_world_i = 100 } } } new_world_i = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = new_world_i value = 5 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { printing_press = 100 } } } printing_press = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { printing_press = 100 } }
				# add_institution_embracement = { which = printing_press value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { printing_press = 100 } } } printing_press = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = printing_press value = 5 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { global_trade = 100 } } } global_trade = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { global_trade = 100 } }
				# add_institution_embracement = { which = global_trade value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { global_trade = 100 } } } global_trade = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = global_trade value = 5 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { manufactories = 100 } } } manufactories = 100 }
		# ROOT = { 
			# random_owned_province = {
				# limit = { NOT = { manufactories = 100 } }
				# add_institution_embracement = { which = manufactories value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { manufactories = 100 } } } manufactories = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = manufactories value = 5 } }
		}
	}
	# else_if = { 
		# limit = { ROOT = { any_owned_province = { NOT = { enlightenment = 100 } } } enlightenment = 100 }
		# ROOT = {
			# random_owned_province = {
				# limit = { NOT = { enlightenment = 100 } }
				# add_institution_embracement = { which = enlightenment value = 20 }
			# }
		# }
	# }
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { enlightenment = 100 } } } enlightenment = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = enlightenment value = 5 } }
		}
	}
	else_if = { 
		limit = { ROOT = { capital_scope = { NOT = { industrialization = 100 } } } industrialization = 100 }
		ROOT = {
			capital_scope = { add_institution_embracement = { which = industrialization value = 5 } }
		}
	}
	owner = { add_opinion = { who = ROOT modifier = the_hunt_raided_province } }
	custom_tooltip = hunted_get_casus_belli_tt
}

harpy_clear = {
	if = {
		limit = { has_saved_event_target = $target$ }
		event_target:$target$ = {
			area = {
				clr_province_flag = harpy_raid_@ROOT
			}
		}
	}
}

harpy_hunt_raid_option = {
	event_target:$target$ = {
		area = {
			limit = { 
				NOT = {
					owned_by = ROOT
					owner = { is_subject_of = ROOT }
					owner = { overlord_of = ROOT }
					owner = { alliance_with = ROOT }
					owner = { ROOT = { truce_with = PREV } }
					has_terrain = cavern
					has_terrain = dwarven_road
					has_terrain = dwarven_hold
					has_terrain = dwarven_hold_surface
				}
				is_city = yes
				has_discovered = ROOT		
			}
			harpy_raid_effect = yes
			hidden_effect = {
				if = {
					limit = { owner = { NOT = { has_country_flag = informed_of_harpy_raid } } }
					owner = { # Raid and inform the victim.
						set_country_flag = informed_of_harpy_raid
						country_event = { id = the_hunt_events.$event_nr$ days = 1 } 
					}
				}
			}
		}
	}
}

harpy_build_roost_region = {
	random_owned_province = {
		limit = {
			fort_level = 1
			NOT = { has_province_modifier = harpy_roost }
			NOT = { has_province_modifier = harpy_roost_under_construction }
			is_city = yes
			OR = {
				has_terrain = mountain
				has_terrain = highlands
				has_terrain = hills
			}
			NOT = {
				region_for_scope_province = {
					has_province_flag = harpy_roost_region_@ROOT
				}
			}
		}
		set_province_flag = harpy_roost_region_@ROOT
		save_event_target_as = harpy_roost_region1
	}
	if = { limit = { has_saved_event_target = harpy_roost_region1 }
		random_owned_province = {
			limit = {
				fort_level = 1
				NOT = { has_province_modifier = harpy_roost }
				NOT = { has_province_modifier = harpy_roost_under_construction }
				is_city = yes
				OR = {
					has_terrain = mountain
					has_terrain = highlands
					has_terrain = hills
				}
				NOT = {
					region_for_scope_province = {
						has_province_flag = harpy_roost_region_@ROOT
					}
				}
			}
			set_province_flag = harpy_roost_region_@ROOT
			save_event_target_as = harpy_roost_region2
		}
		if = { limit = { has_saved_event_target = harpy_roost_region2 }
			random_owned_province = {
				limit = {
					fort_level = 1
					has_harpy_majority_trigger = yes
					NOT = { has_province_modifier = harpy_roost }
					NOT = { has_province_modifier = harpy_roost_under_construction }
					is_city = yes
					OR = {
						has_terrain = mountain
						has_terrain = highlands
						has_terrain = hills
					}
					NOT = {
						region_for_scope_province = {
							has_province_flag = harpy_roost_region_@ROOT
						}
					}
				}
				set_province_flag = harpy_roost_region_@ROOT
				save_event_target_as = harpy_roost_region3
			}
			if = { limit = { has_saved_event_target = harpy_roost_region3 }
				random_owned_province = {
					limit = {
						fort_level = 1
						has_harpy_majority_trigger = yes
						NOT = { has_province_modifier = harpy_roost }
						NOT = { has_province_modifier = harpy_roost_under_construction }
						is_city = yes
						OR = {
							has_terrain = mountain
							has_terrain = highlands
							has_terrain = hills
						}
						NOT = {
							region_for_scope_province = {
								has_province_flag = harpy_roost_region_@ROOT
							}
						}
					}
					set_province_flag = harpy_roost_region_@ROOT
					save_event_target_as = harpy_roost_region4
				}
				if = { limit = { has_saved_event_target = harpy_roost_region4 }
					random_owned_province = {
						limit = {
							fort_level = 1
							has_harpy_majority_trigger = yes
							NOT = { has_province_modifier = harpy_roost }
							NOT = { has_province_modifier = harpy_roost_under_construction }
							is_city = yes
							OR = {
								has_terrain = mountain
								has_terrain = highlands
								has_terrain = hills
							}
							NOT = {
								region_for_scope_province = {
									has_province_flag = harpy_roost_region_@ROOT
								}
							}
						}
						set_province_flag = harpy_roost_region_@ROOT
						save_event_target_as = harpy_roost_region5
					}
					if = { limit = { has_saved_event_target = harpy_roost_region5 }
						random_owned_province = {
							limit = {
								fort_level = 1
								has_harpy_majority_trigger = yes
								NOT = { has_province_modifier = harpy_roost }
								NOT = { has_province_modifier = harpy_roost_under_construction }
								is_city = yes
								OR = {
									has_terrain = mountain
									has_terrain = highlands
									has_terrain = hills
								}
								NOT = {
									region_for_scope_province = {
										has_province_flag = harpy_roost_region_@ROOT
									}
								}
							}
							set_province_flag = harpy_roost_region_@ROOT
							save_event_target_as = harpy_roost_region6
						}
						if = { limit = { has_saved_event_target = harpy_roost_region6 }
							random_owned_province = {
								limit = {
									fort_level = 1
									has_harpy_majority_trigger = yes
									NOT = { has_province_modifier = harpy_roost }
									NOT = { has_province_modifier = harpy_roost_under_construction }
									is_city = yes
									OR = {
										has_terrain = mountain
										has_terrain = highlands
										has_terrain = hills
									}
									NOT = {
										region_for_scope_province = {
											has_province_flag = harpy_roost_region_@ROOT
										}
									}
								}
								set_province_flag = harpy_roost_region_@ROOT
								save_event_target_as = harpy_roost_region7
							}
							if = { limit = { has_saved_event_target = harpy_roost_region7 }
								random_owned_province = {
									limit = {
										fort_level = 1
										has_harpy_majority_trigger = yes
										NOT = { has_province_modifier = harpy_roost }
										NOT = { has_province_modifier = harpy_roost_under_construction }
										is_city = yes
										OR = {
											has_terrain = mountain
											has_terrain = highlands
											has_terrain = hills
										}
										NOT = {
											region_for_scope_province = {
												has_province_flag = harpy_roost_region_@ROOT
											}
										}
									}
									set_province_flag = harpy_roost_region_@ROOT
									save_event_target_as = harpy_roost_region8
								}
								if = { limit = { has_saved_event_target = harpy_roost_region8 }
									random_owned_province = {
										limit = {
											fort_level = 1
											has_harpy_majority_trigger = yes
											NOT = { has_province_modifier = harpy_roost }
											NOT = { has_province_modifier = harpy_roost_under_construction }
											is_city = yes
											OR = {
												has_terrain = mountain
												has_terrain = highlands
												has_terrain = hills
											}
											NOT = {
												region_for_scope_province = {
													has_province_flag = harpy_roost_region_@ROOT
												}
											}
										}
										set_province_flag = harpy_roost_region_@ROOT
										save_event_target_as = harpy_roost_region9
									}
								}
								if = { limit = { has_saved_event_target = harpy_roost_region9 }
									random_owned_province = {
										limit = {
											fort_level = 1
											has_harpy_majority_trigger = yes
											NOT = { has_province_modifier = harpy_roost }
											NOT = { has_province_modifier = harpy_roost_under_construction }
											is_city = yes
											OR = {
												has_terrain = mountain
												has_terrain = highlands
												has_terrain = hills
											}
											NOT = {
												region_for_scope_province = {
													has_province_flag = harpy_roost_region_@ROOT
												}
											}
										}
										set_province_flag = harpy_roost_region_@ROOT
										save_event_target_as = harpy_roost_region10
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

harpy_build_roost_province = {
	owner = {
		random_owned_province = {
			limit = {
				region = ROOT
				fort_level = 1
				NOT = { has_province_modifier = harpy_roost }
				NOT = { has_province_modifier = harpy_roost_under_construction }
				is_city = yes
				OR = {
					has_terrain = mountain
					has_terrain = highlands
					has_terrain = hills
				}
			}
			set_province_flag = harpy_roost_@PREV
			save_event_target_as = harpy_roost1
		}
		if = { limit = { has_saved_event_target = harpy_roost1 }
			random_owned_province = {
				limit = {
					region = ROOT
					fort_level = 1
					NOT = { has_province_modifier = harpy_roost }
					NOT = { has_province_modifier = harpy_roost_under_construction }
					NOT = { has_province_flag = harpy_roost_@PREV }
					is_city = yes
					OR = {
						has_terrain = mountain
						has_terrain = highlands
						has_terrain = hills
					}
				}
				set_province_flag = harpy_roost_@PREV
				save_event_target_as = harpy_roost2
			}
			if = { limit = { has_saved_event_target = harpy_roost2 }
				random_owned_province = {
					limit = {
						region = ROOT
						fort_level = 1
						NOT = { has_province_modifier = harpy_roost }
						NOT = { has_province_modifier = harpy_roost_under_construction }
						NOT = { has_province_flag = harpy_roost_@PREV }
						is_city = yes
						OR = {
							has_terrain = mountain
							has_terrain = highlands
							has_terrain = hills
						}
					}
					set_province_flag = harpy_roost_@PREV
					save_event_target_as = harpy_roost3
				}
				if = { limit = { has_saved_event_target = harpy_roost3 }
					random_owned_province = {
						limit = {
							region = ROOT
							fort_level = 1
							NOT = { has_province_modifier = harpy_roost }
							NOT = { has_province_modifier = harpy_roost_under_construction }
							NOT = { has_province_flag = harpy_roost_@PREV }
							is_city = yes
							OR = {
								has_terrain = mountain
								has_terrain = highlands
								has_terrain = hills
							}
						}
						set_province_flag = harpy_roost_@PREV
						save_event_target_as = harpy_roost4
					}
					if = { limit = { has_saved_event_target = harpy_roost4 }
						random_owned_province = {
							limit = {
								region = ROOT
								fort_level = 1
								NOT = { has_province_modifier = harpy_roost }
								NOT = { has_province_modifier = harpy_roost_under_construction }
								NOT = { has_province_flag = harpy_roost_@PREV }
								is_city = yes
								OR = {
									has_terrain = mountain
									has_terrain = highlands
									has_terrain = hills
								}
							}
							set_province_flag = harpy_roost_@PREV
							save_event_target_as = harpy_roost5
						}
						if = { limit = { has_saved_event_target = harpy_roost5 }
							random_owned_province = {
								limit = {
									region = ROOT
									fort_level = 1
									NOT = { has_province_modifier = harpy_roost }
									NOT = { has_province_modifier = harpy_roost_under_construction }
									NOT = { has_province_flag = harpy_roost_@PREV }
									is_city = yes
									OR = {
										has_terrain = mountain
										has_terrain = highlands
										has_terrain = hills
									}
								}
								set_province_flag = harpy_roost_@PREV
								save_event_target_as = harpy_roost6
							}
							if = { limit = { has_saved_event_target = harpy_roost6 }
								random_owned_province = {
									limit = {
										region = ROOT
										fort_level = 1
										NOT = { has_province_modifier = harpy_roost }
										NOT = { has_province_modifier = harpy_roost_under_construction }
										NOT = { has_province_flag = harpy_roost_@PREV }
										is_city = yes
										OR = {
											has_terrain = mountain
											has_terrain = highlands
											has_terrain = hills
										}
									}
									set_province_flag = harpy_roost_@PREV
									save_event_target_as = harpy_roost7
								}
								if = { limit = { has_saved_event_target = harpy_roost7 }
									random_owned_province = {
										limit = {
											region = ROOT
											fort_level = 1
											NOT = { has_province_modifier = harpy_roost }
											NOT = { has_province_modifier = harpy_roost_under_construction }
											NOT = { has_province_flag = harpy_roost_@PREV }
											is_city = yes
											OR = {
												has_terrain = mountain
												has_terrain = highlands
												has_terrain = hills
											}
										}
										set_province_flag = harpy_roost_@PREV
										save_event_target_as = harpy_roost8
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

update_roost_count = {
	hidden_effect = {
		set_variable = { built_roosts = 0 }
		every_owned_province = {
			limit = { has_province_modifier = harpy_roost }
			owner = { change_variable = { built_roosts = 1 } }
		}
	}
}

set_harpy_heir_father_race = {	#used for the harpy's father bond event
	random_list = {
		1 = { trigger = { capital_scope = { has_any_elven_pop_trigger = yes } } set_heir_flag = elven_father }
		1 = { trigger = { capital_scope = { has_any_goblin_pop_trigger = yes } } set_heir_flag = goblin_father }
		1 = { trigger = { capital_scope = { has_any_half_elven_pop_trigger = yes } } set_heir_flag = half_elven_father }
		1 = { trigger = { capital_scope = { has_any_half_orcish_pop_trigger = yes } } set_heir_flag = half_orcish_father }
		1 = { trigger = { capital_scope = { has_any_hobgoblin_pop_trigger = yes } } set_heir_flag = hobgoblin_father }
		1 = { trigger = { capital_scope = { has_any_human_pop_trigger = yes } } set_heir_flag = human_father }
		1 = { trigger = { capital_scope = { has_any_orcish_pop_trigger = yes } } set_heir_flag = orcish_father }
		1 = { trigger = { capital_scope = { has_any_ruinborn_pop_trigger = yes } } set_heir_flag = ruinborn_father }
	}
	if = { limit = { heir_age = 15 }
		country_event = { id = harpy_events.120 days = 730 random = 1095 }	#2-5 years
	}
	else_if = { limit = { heir_age = 10 }
		country_event = { id = harpy_events.120 days = 1825 random = 1095 }	#5-8 years
	}
	else_if = { limit = { heir_age = 5 }
		country_event = { id = harpy_events.120 days = 3650 random = 1095 }	#10-13 years
	}
	else = {
		country_event = { id = harpy_events.120 days = 5475 random = 1095 }	#15-18 years
	}
}

#avamezan horse race
set_horse_race_rankings = {
	random_list = {
		10 = { 616 = { save_event_target_as = jockey_origin_1 } } #Akelses - second (good choice)
		10 = { 633 = { save_event_target_as = jockey_origin_1 } } #Anzarim Avamezan - third (good choice)
		10 = { 591 = { save_event_target_as = jockey_origin_1 } } #Kumarkand - fourth (meh choice)
		10 = { 2909 = { save_event_target_as = jockey_origin_1 } } #Ebbusubtu - best choice
		10 = { 598 = { save_event_target_as = jockey_origin_1 } } #Surib - fifth (bad choice
		10 = { 526 = { save_event_target_as = jockey_origin_1 } } #Ovdal Tungr - sixth (dumb choice)
	}
	event_target:jockey_origin_1 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_2 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_2 } }
	}
	event_target:jockey_origin_2 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_3 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_3 } }
	}
	event_target:jockey_origin_3 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_4 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_4 } }
	}
	event_target:jockey_origin_4 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_5 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_5 } }
	}
	event_target:jockey_origin_5 = { set_province_flag = jockeyed }
	random_list = {
		10 = { trigger = { 616 = { NOT = { has_province_flag = jockeyed } } } 616 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 633 = { NOT = { has_province_flag = jockeyed } } } 633 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 591 = { NOT = { has_province_flag = jockeyed } } } 591 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 2909 = { NOT = { has_province_flag = jockeyed } } } 2909 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 598 = { NOT = { has_province_flag = jockeyed } } } 598 = { save_event_target_as = jockey_origin_6 } }
		10 = { trigger = { 526 = { NOT = { has_province_flag = jockeyed } } } 526 = { save_event_target_as = jockey_origin_6 } }
	}
	
	event_target:jockey_origin_1 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_2 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_3 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_4 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_5 = { set_variable = { which = horseRaceRank value = 1 } }
	event_target:jockey_origin_6 = { set_variable = { which = horseRaceRank value = 1 } }
	set_variable = { which = tempHorseRaceRank value = 1 }
	
	while = { limit = { NOT = { check_variable = { which = tempHorseRaceRank value = 6 } } }
		change_variable = { which = tempHorseRaceRank value = 1 }
		
		random_list = {		#number on the random list is the horse odds, number in the factors in the jockey odds
			30 = {
				trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_1 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_1 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_1 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_1 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_1 = { province_id = 526 } }
				event_target:jockey_origin_1 = { set_province_flag = bulwar_race_ranked }
			}
			70 = {
				trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_2 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_2 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_2 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_2 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_2 = { province_id = 526 } }
				event_target:jockey_origin_2 = { set_province_flag = bulwar_race_ranked }
			}
			5 = {
				trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_3 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_3 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_3 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_3 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_3 = { province_id = 526 } }
				event_target:jockey_origin_3 = { set_province_flag = bulwar_race_ranked }
			}
			80 = {
				trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_4 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_4 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_4 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_4 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_4 = { province_id = 526 } }
				event_target:jockey_origin_4 = { set_province_flag = bulwar_race_ranked }
			}
			100 = {
				trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_5 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_5 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_5 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_5 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_5 = { province_id = 526 } }
				event_target:jockey_origin_5 = { set_province_flag = bulwar_race_ranked }
			}
			50 = {
				trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = bulwar_race_ranked } } }
				modifier = { factor = 0.8 event_target:jockey_origin_6 = { province_id = 616 } }
				modifier = { factor = 0.7 event_target:jockey_origin_6 = { province_id = 633 } }
				modifier = { factor = 0.4 event_target:jockey_origin_6 = { province_id = 591 } }
				modifier = { factor = 0.2 event_target:jockey_origin_6 = { province_id = 598 } }
				modifier = { factor = 0.05 event_target:jockey_origin_6 = { province_id = 526 } }
				event_target:jockey_origin_6 = { set_province_flag = bulwar_race_ranked }
			}
		}
		
		event_target:jockey_origin_1 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_2 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_3 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_4 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_5 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
		event_target:jockey_origin_6 = { if = { limit = { NOT = { has_province_flag = bulwar_race_ranked } } change_variable = { which = horseRaceRank value = 1 } } }
	}
	
	random_list = {
		10 = { event_target:jockey_origin_1 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_2 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_3 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_4 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_5 = { save_event_target_as = blue_origin } }
		10 = { event_target:jockey_origin_6 = { save_event_target_as = blue_origin } }
	}
	event_target:blue_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = teal_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = teal_origin } }
	}
	event_target:teal_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = green_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = green_origin } }
	}
	event_target:green_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = yellow_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = yellow_origin } }
	}
	event_target:yellow_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = orange_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = orange_origin } }
	}
	event_target:orange_origin = { set_province_flag = coloured }
	random_list = {
		10 = { trigger = { event_target:jockey_origin_1 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_1 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_2 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_2 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_3 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_3 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_4 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_4 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_5 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_5 = { save_event_target_as = red_origin } }
		10 = { trigger = { event_target:jockey_origin_6 = { NOT = { has_province_flag = coloured } } } event_target:jockey_origin_6 = { save_event_target_as = red_origin } }
	}	
	
	event_target:jockey_origin_1 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_2 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_3 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_4 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_5 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
	event_target:jockey_origin_6 = { clr_province_flag = jockeyed clr_province_flag = bulwar_race_ranked clr_province_flag = coloured }
}

remove_government_name_changers = {
	clr_country_flag = is_a_county
	clr_country_flag = knightly_order_adventurer
}

clear_mages_organization_effect = {
	hidden_effect = {
		remove_estate_privilege = estate_mages_organization_magisterium
		remove_estate_privilege = estate_mages_organization_state
		remove_estate_privilege = estate_mages_organization_guilds
		remove_estate_privilege = estate_mages_organization_religious
		remove_estate_privilege = estate_mages_organization_covenant
		remove_estate_privilege = estate_mages_organization_elissa
		remove_estate_privilege = estate_mages_organization_bardic_college
		remove_estate_privilege = estate_mages_organization_ice_smiths
		remove_estate_privilege = estate_mages_organization_constabularies
		remove_estate_privilege = estate_mages_organization_lihos_maidens
		remove_estate_privilege = estate_mages_organization_jaherian_statute
		remove_estate_privilege = estate_mages_organization_onyxguard
		remove_estate_privilege = estate_mages_organization_proffesional_mihipha
	}
}

clear_adventurers_organization_effect = {
	hidden_effect = {
		remove_estate_privilege = estate_adventurers_organization_chronicler_grants
		remove_estate_privilege = estate_adventurers_organization_licensed_adventurers
		remove_estate_privilege = estate_adventurers_organization_land_of_adventure
		remove_estate_privilege = estate_adventurers_organization_covenant
		remove_estate_privilege = estate_adventurers_organization_slayers
		remove_estate_privilege = estate_adventurers_organization_scp_bureau
		remove_estate_privilege = estate_adventurers_organization_exploration_society
		remove_estate_privilege = estate_adventurers_suhuskar_palace
	}
}

clear_artificers_organization_effect = {
	hidden_effect = {
		remove_estate_privilege = estate_artificers_organization_international_gommo
		remove_estate_privilege = estate_artificers_organization_state
		remove_estate_privilege = estate_artificers_organization_independent_unions
		remove_estate_privilege = estate_artificers_organization_ravelian_control
		remove_estate_privilege = estate_artificers_organization_covenant
		remove_estate_privilege = estate_artificers_organization_sun_elf
		remove_estate_privilege = estate_artificers_organization_feiten_shuimu_cadre
		remove_estate_privilege = estate_artificers_organization_vazhatun_enhanced_astronomy
	}
}

count_provinces_owned_by_neighbours_effect = {
	set_variable = {
		which=$which$ value=0
	}
	
	
	every_province = {
		limit = {
			owner = {
				is_neighbor_of = ROOT
			}
		}
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_owned_by_war_enemies_effect = {
	set_variable = {
		which=$which$ 
		value=0
	}
	
	every_province = {
		limit = {
			owner = {
				war_with = ROOT
			}
		}
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}

}

count_provinces_owned_by_country_effect = {	
	set_variable = {
		which=$which$ 
		value=0
	}
	
	every_owned_province = {
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_owned_by_rivals_effect = {	
	set_variable = {
		which=$which$ 
		value=0
	}
	
	every_province = {
		limit = {
			owner = {
				ROOT = { is_rival = PREV }
			}
		}
		ROOT = {
		    change_variable = { 
			    which = $which$ 
			    value = 1 
		    }
	    }
	}
}

count_provinces_in_capital_area = {
	set_variable ={
		which=$which$ value=0
	}

	every_owned_province = {
		limit = { is_in_capital_area = yes }
		ROOT = {
			change_variable = {
				which = $which$
				value = 1
			}
		}
	}
}	

randomize_leader_pips_nonmagical_effect = {	#more chances for low pips in the random list
	set_variable = {
		which=$which$ 
		value=0
	}
	export_to_variable = {
		which = $which$
		value = MIL	
		who = ROOT
	}
	
	# if = {
		# limit = {
			# army_tradition = 20
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 40
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 60
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 80
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 100
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	
	random_list = {
		10 = {
			change_variable = {
				which = $which$
				value = 0
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 1
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 2
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 3
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 4
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 5
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 1
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 2
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 3
			}
		}
		10 = {
			subtract_variable = {
				which = $which$
				value = 1
			}
		}
	}
	
	#Invalid number checks
	if = {
		limit = {
			check_variable = {
				which = $which$
				value = 12	
			}
		}
		set_variable = {
			which = $which$
			value = 11	
		}
	}
	if = {
		limit = {
			check_variable = {
				which = $which$
				value = 0	
			}
			NOT = {
				check_variable = {
					which = $which$
					value = 1
				}
			}
		}
		set_variable = {
			which = $which$
			value = 0
		}
	}
}

randomize_leader_pips_magical_effect = {	#more chances for high pips in the random list
	set_variable = {
		which=$which$ value=0
	}
	export_to_variable = {
		which = $which$
		value = MIL
		who = ROOT
	}

	
	# if = {
		# limit = {
			# army_tradition = 20
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 40
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 60
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 80
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	# if = {
		# limit = {
			# army_tradition = 100
		# }
		# change_variable = {
			# which = $which$
			# value = 1
		# }
	# }
	
	
	random_list = {
		10 = {
			change_variable = {
				which = $which$
				value = 4
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 4
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 5
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 6
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 7
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 8
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 9
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 10
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 11
			}
		}
		10 = {
			change_variable = {
				which = $which$
				value = 12
			}
		}
	}
	
	#Invalid number checks
	if = {
		limit = {
			check_variable = {
				which = $which$
				value = 12	
			}
		}
		set_variable = {
			which = $which$
			value = 11	
		}
	}
	# if = {
		# limit = {
			# check_variable = {
				# which = $which$
				# value = 0	
			# }
			# NOT = {
				# check_variable = {
					# which = $which$
					# value = 1
				# }
			# }
		# }
		# set_variable = {
			# which = $which$
			# value = 0
		# }
	# }
}

set_add_relics_count = {
	hidden_effect = {
		REB = {
			change_variable = { num_precursor_relics = 1 }
			if = { limit = { check_variable = { num_precursor_relics = 55 } } #Relics = 55, we set the Global flag that will stop them appearing
				set_global_flag = max_precursor_relics
			}
		}
	}
}

set_add_damestear_count = {
	hidden_effect = { REB = { change_variable = { num_damestear = 1 } } }
}

set_add_orc_slaves_count = {
	hidden_effect = {
		REB = {
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = num_orc_slaves
							value = 0
						}
					}
				}
				set_variable = {
					which = num_orc_slaves
					value = 1
				}
			}
			else = {
				change_variable = {
					which = num_orc_slaves
					value = 1
				}
			}
		}
	}
}

set_add_ruin_count = {
	hidden_effect = { REB = { change_variable = { num_ruin = 1 } } }
}

adventurer_spawnable_starting_bonus = {
	event_target:spawn_province = {
		add_core = $tag$
	}


	trigger_switch = {
		on_trigger = total_development
		
		1000 = { $tag$ = { add_treasury = 2000 add_manpower = 30 } }
		700 = { $tag$ = { add_treasury = 1600 add_manpower = 23 } }
		600 = { $tag$ = { add_treasury = 1400 add_manpower = 21 } }
		500 = { $tag$ = { add_treasury = 1200 add_manpower = 18 } }
		400 = { $tag$ = { add_treasury = 1000 add_manpower = 15 } }
		350 = { $tag$ = { add_treasury = 700 add_manpower = 9 } }
		300 = { $tag$ = { add_treasury = 550 add_manpower = 7 } }
		250 = { $tag$ = { add_treasury = 450 add_manpower = 5 } }
		200 = { $tag$ = { add_treasury = 350 add_manpower = 4 } }
		150 = { $tag$ = { add_treasury = 250 add_manpower = 3 } }
		100 = { $tag$ = { add_treasury = 150 add_manpower = 2 } }
		50 = { $tag$ = { add_treasury = 50 add_manpower = 1 } }
	}
	
	while = {
		limit = { mil_tech_is_inferior = { tag=$tag$ } }
		$tag$ = { add_mil_tech = 1 }
	}
	
	while = {
		limit = { adm_tech_is_inferior = { tag=$tag$ } }
		$tag$ = { add_adm_tech = 1 }
	}
	
	while = {
		limit = { dip_tech_is_inferior = { tag=$tag$ } }
		$tag$ = { add_dip_tech = 1 }
	}
}

clear_precursor_fragments_search = {
	hidden_effect = {
		clr_country_flag = pf_chain_1
		clr_country_flag = pf_chain_2
		clr_country_flag = pf_chain_3
		clr_country_flag = pf_chain_4
		clr_country_flag = pf_chain_5
		clr_country_flag = pf_chain_flag
		set_variable = { searchPoints = 0 }
	}
	if = { limit = { has_country_modifier = pf_glowing_city } remove_country_modifier = pf_glowing_city  hidden_effect = { set_country_flag = pf_end_glowing_city_flag } }
	else_if = { limit = { has_country_modifier = pf_dragon_house } remove_country_modifier = pf_dragon_house  hidden_effect = { set_country_flag = pf_end_dragon_house_flag } }
	else_if = { limit = { has_country_modifier = pf_elfenbride_manse } remove_country_modifier = pf_elfenbride_manse  hidden_effect = { set_country_flag = pf_end_elfenbride_manse_flag } }
	else_if = { limit = { has_country_modifier = pf_god_fragment_ruin } remove_country_modifier = pf_god_fragment_ruin  hidden_effect = { set_country_flag = pf_end_god_fragment_ruin_flag } }
	else_if = { limit = { has_country_modifier = pf_vault_ruin } remove_country_modifier = pf_vault_ruin  hidden_effect = { set_country_flag = pf_end_vault_flag } }
	else_if = { limit = { has_country_modifier = pf_portal_nexus_ruin } remove_country_modifier = pf_portal_nexus_ruin hidden_effect = { set_country_flag = pf_end_portal_nexus_flag } }
	else_if = { limit = { has_country_modifier = pf_floating_city_crash_site } remove_country_modifier = pf_floating_city_crash_site  hidden_effect = { set_country_flag = pf_end_floating_city_crash_site_flag } }
	# trigger_switch = {
		# on_trigger = has_country_modifier
		
		# pf_glowing_city = { remove_country_modifier = pf_glowing_city  hidden_effect = { set_country_flag = pf_end_glowing_city_flag } }
		# pf_dragon_house = { remove_country_modifier = pf_dragon_house  hidden_effect = { set_country_flag = pf_end_dragon_house_flag } }
		# pf_elfenbride_manse = { remove_country_modifier = pf_elfenbride_manse  hidden_effect = { set_country_flag = pf_end_elfenbride_manse_flag } }
		# pf_god_fragment_ruin = { remove_country_modifier = pf_god_fragment_ruin  hidden_effect = { set_country_flag = pf_end_god_fragment_ruin_flag } }
		# pf_vault_ruin = { remove_country_modifier = pf_vault_ruin  hidden_effect = { set_country_flag = pf_end_vault_flag } }
		# pf_portal_nexus_ruin = { remove_country_modifier = pf_portal_nexus_ruin  hidden_effect = { set_country_flag = pf_end_portal_nexus_flag } }
		# pf_floating_city_crash_site = { remove_country_modifier = pf_floating_city_crash_site  hidden_effect = { set_country_flag = pf_end_floating_city_crash_site_flag } }
	# }
}

destroy_province = {
	hidden_effect = {
		cede_province = ---
		add_colonysize = -1000
		province_event = { id = anb_miscevents.13 days = 35 }
	}
}

destroy_province_permanently = {
	hidden_effect = {
		cede_province = ---
		add_permanent_province_modifier = { name = cant_colonize duration = -1 }
		add_colonysize = -1000
	}
}

decrease_monstrous_10 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_10_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 10 } }
		if = {
			limit = {
				OR = {
					has_government_attribute = forced_evolution_reform_effect
					has_estate_privilege = estate_monstrous_tribes_gozlamoir_system
				}
			}
			hidden_effect = { subtract_variable = { monstrousPoints = 4 } }
		}
	}
}

decrease_monstrous_5 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_5_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 5 } }
		if = {
			limit = {
				OR = {
					has_government_attribute = forced_evolution_reform_effect
					has_estate_privilege = estate_monstrous_tribes_gozlamoir_system
				}
			}
			hidden_effect = { subtract_variable = { monstrousPoints = 3 } }
		}
	}
}

decrease_monstrous_3 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_3_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 3 } }
		if = {
			limit = {
				OR = {
					has_government_attribute = forced_evolution_reform_effect
					has_estate_privilege = estate_monstrous_tribes_gozlamoir_system
				}
			}
			hidden_effect = { subtract_variable = { monstrousPoints = 2 } }
		}
	}
}

decrease_monstrous_2 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_2_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 2 } }
		if = {
			limit = {
				OR = {
					has_government_attribute = forced_evolution_reform_effect
					has_estate_privilege = estate_monstrous_tribes_gozlamoir_system
				}
			}
			hidden_effect = { subtract_variable = { monstrousPoints = 1 } }
		}
	}
}

decrease_monstrous_1 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = decrease_monstrous_1_tooltip
		hidden_effect = { subtract_variable = { monstrousPoints = 1 } }
		if = {
			limit = {
				OR = {
					has_government_attribute = forced_evolution_reform_effect
					has_estate_privilege = estate_monstrous_tribes_gozlamoir_system
				}
			}
			hidden_effect = { subtract_variable = { monstrousPoints = 1 } }
		}
	}
}

increase_monstrous_5 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_5_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 5 } }
	}
}

increase_monstrous_3 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_3_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 3 } }
	}
}

increase_monstrous_2 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_2_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 2 } }
	}
}

increase_monstrous_1 = {
	if = {
		limit = { has_country_flag = removing_monstrous has_country_modifier = monstrous_nation }
		custom_tooltip = increase_monstrous_1_tooltip
		hidden_effect = { change_variable = { monstrousPoints = 1 } }
	}
}

reduce_legitimacy_huge_effect = {
	add_legitimacy = -50
	add_horde_unity = -50
	add_devotion = -50
	add_republican_tradition = -25
}

target_elector_elder_pact = {
	random_elector = {
		limit = {
			is_emperor = no
			NOT = { truce_with = ROOT }
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = {
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			army_strength = {
				who = ROOT
				value = 0.5
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
			army_strength = {
				who = ROOT
				value = 0.5
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			army_strength = {
				who = ROOT
				value = 1.0
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
			army_strength = {
				who = ROOT
				value = 1.0
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			army_strength = {
				who = ROOT
				value = 1.5
			}
		}
		save_event_target_as = elector_target
	}
	random_elector = {
		limit = { 
			is_emperor = no
			NOT = { alliance_with = ROOT }
			NOT = { truce_with = ROOT }
			is_at_war = no
			is_rival = ROOT
			army_strength = {
				who = ROOT
				value = 1.5
			}
		}
		save_event_target_as = elector_target
	}
}

adventurer_legacy_effect = {
	if = {
		limit = { has_country_flag = adv_guild_integrated }
		add_country_modifier = {
			name = "legacy_of_adventurers_modifier"
			duration = 14600
		}
		add_country_modifier = {
			name = "organized_adventurer_administration"
			duration = 14600
		}
	}
	else = {
		add_country_modifier = {
			name = "legacy_of_adventurers_modifier"
			duration = 14600
		}
	}
	
	custom_tooltip = lose_reform_progress_tt
	
	country_event = { id = estate_organization.1 days = 35 }		#choose magical organization for mage estate
	country_event = { id = estate_organization.4 days = 35 }		#choose organization for adventurer estate
	country_event = { id = estate_organization.5 days = 35 }		#choose organization for artificer estate
	
	hidden_effect = { change_government_reform_progress = -1000 }
}

orc_legacy_effect = {
	if = {
		limit = { has_country_flag = orc_path_to_civil }
		add_country_modifier = {
			name = "legacy_of_greentide_invaders_modifier"
			duration = 14600
		}
		add_country_modifier = {
			name = "organized_orc_administration_modifier"
			duration = 14600
		}
	}
	else = {
		add_country_modifier = {
			name = "legacy_of_greentide_invaders_modifier"
			duration = 14600
		}
	}
}

create_war_wizard_effect = {
	custom_tooltip = war_wizard_tooltip
	hidden_effect = {
		set_saved_name = {
			key = root_name_male
			type = advisor
			scope = ROOT
		}
		set_saved_name = {
			key = root_name_female
			type = advisor
			female = yes
			scope = ROOT
		}
		if = {
			limit = {
				army_tradition = 0.00
				NOT = { army_tradition = 20 }
			}
			random_list = {
				50 = {
					define_general = {
						fire = 1
						shock = 7
						manuever = 0
						siege = 2
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						fire = 1
						shock = 7
						manuever = 0
						siege = 2
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 20
				NOT = { army_tradition = 40 }
			}
			random_list = {
				50 = {
					define_general = {
						fire = 2
						shock = 7
						manuever = 1
						siege = 3
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						fire = 2
						shock = 7
						manuever = 1
						siege = 3
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 40
				NOT = { army_tradition = 60 }
			}
			random_list = {
				50 = {
					define_general = {
						fire = 2
						shock = 8
						manuever = 1
						siege = 4
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						fire = 2
						shock = 8
						manuever = 1
						siege = 4
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 60
				NOT = { army_tradition = 80 }
			}
			random_list = {
				50 = {
					define_general = {
						fire = 2
						shock = 9
						manuever = 2
						siege = 5
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						fire = 2
						shock = 9
						manuever = 2
						siege = 5
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
		
		if = {
			limit = {
				army_tradition = 80
			}
			random_list = {
				50 = {
					define_general = {
						fire = 3
						shock = 10
						manuever = 3
						siege = 6
						trait = war_wizard_personality
						name = root_name_male
					}
				}
				50 = {
					define_general = {
						fire = 3
						shock = 10
						manuever = 3
						siege = 6
						trait = war_wizard_personality
						female = yes
						name = root_name_female
					}
				}
			}
		}
			
		clear_saved_name = root_name_male
		clear_saved_name = root_name_female
	}
}

currency_effect = { #currency (#takeFrom) #addTo #which/value
	hidden_effect = {
[[which]
		set_variable = { which = temp which = $which$ }
]
[[value]
		set_variable = { which = temp value = $value$ }
]
		if = {
			limit = {
				check_variable = { which = temp value = 0 }
			}
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=while val=819.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=409.6 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=204.8 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=102.4 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=51.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=25.6 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=12.8 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=6.4 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=3.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=1.6 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.8 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.4 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.2 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.1 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.05 }
			currency_helper = { currency=$currency$ [[addTo]addTo=$addTo$] [[takeFrom]takeFrom=$takeFrom$] type=if val=0.025 }
		}
		else = {
			multiply_variable = { which = temp value = -1 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=while val=819.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=409.6 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=204.8 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=102.4 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=51.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=25.6 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=12.8 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=6.4 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=3.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=1.6 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.8 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.4 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.2 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.1 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.05 }
			currency_helper = { currency=$currency$ [[addTo]takeFrom=$addTo$] [[takeFrom]addTo=$takeFrom$] type=if val=0.025 }
		}
		set_variable = { which = temp value = 0 }
	}
}
currency_helper = {
	$type$ = {
		limit = {
			check_variable = { which = temp value = $val$ }
		}
		subtract_variable = { which = temp value = $val$ }
[[addTo]
		$addTo$ = { add_$currency$ = $val$ }
]
[[takeFrom]
		$takeFrom$ = { add_$currency$ = -$val$ }
]
	}
}

transfer_units_in_province_from_to = {
	$province$ = {
		while = {
			limit = { infantry_in_province = $from$ }
			kill_units = {
				who = $from$
				type = infantry
				amount = 1
			}
			infantry = $to$
		}
		while = {
			limit = { cavalry_in_province = $from$ }
			kill_units = {
				who = $from$
				type = cavalry
				amount = 1
			}
			cavalry = $to$
		}
		while = {
			limit = { artillery_in_province = $from$ }
			kill_units = {
				who = $from$
				type = artillery
				amount = 1
			}
			artillery = $to$
		}
	}
}

teleport_units_in_province1_to_province2_from_for_cost = {
	$province1$ = {
		while = {
			limit = { infantry_in_province = ROOT } 
			kill_units = {
				who = owner
				type = infantry
				amount = 1
			}
			$province2$ = {spawn_units_for = { type = infantry who = ROOT amount = 1 }}
			$from$ = {
				add_treasury = $cost$
			}
		}
		while = {
			limit = { cavalry_in_province = ROOT } 
			kill_units = {
				who = owner
				type = cavalry
				amount = 1
			}
			$province2$ = {spawn_units_for = { type = cavalry who = ROOT amount = 1 }}
			$from$ = {
				add_treasury = $cost$
			}
		}
		while = {
			limit = { artillery_in_province = ROOT } 
			kill_units = {
				who = owner
				type = artillery
				amount = 1
			}
			$province2$ = {spawn_units_for = { type = artillery who = ROOT amount = 1 }}
			$from$ = {
				add_treasury = $cost$
			}
		}
	}
}

spawn_units_for = {
	hidden_effect = {
		set_variable = {
			which = spawn_unit_count value = $amount$
		}
		while = {
			limit = { check_variable = { which = spawn_unit_count value = 1 } }
			$who$ = { $type$ = PREV }
			change_variable = { which = spawn_unit_count value = -1 }
		}
	}
}

move_high_tolerance_pop_from_to = {
	if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_hobgoblin_pop_trigger = yes
					has_integrated_hobgoblin_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_hobgoblin_minority_size_effect = yes
			if = {
				limit = { OR = { has_hobgoblin_majority_trigger = yes has_large_hobgoblin_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_centaur_pop_trigger = yes
					has_integrated_centaur_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_centaur_minority_size_effect = yes
			if = {
				limit = { OR = { has_centaur_majority_trigger = yes has_large_centaur_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_ogre_pop_trigger = yes
					has_integrated_ogre_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_ogre_minority_size_effect = yes
			if = {
				limit = { OR = { has_ogre_majority_trigger = yes has_large_ogre_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_troll_pop_trigger = yes
					has_integrated_troll_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_troll_minority_size_effect = yes
			if = {
				limit = { OR = { has_troll_majority_trigger = yes has_large_troll_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_harpy_pop_trigger = yes
					has_integrated_harpy_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_harpy_minority_size_effect = yes
			if = {
				limit = { OR = { has_harpy_majority_trigger = yes has_large_harpy_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_goblin_pop_trigger = yes
					has_integrated_goblin_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_goblin_minority_size_effect = yes
			if = {
				limit = { OR = { has_goblin_majority_trigger = yes has_large_goblin_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_orcish_pop_trigger = yes
					has_integrated_orcish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_orcish_minority_size_effect = yes
			if = {
				limit = { OR = { has_orcish_majority_trigger = yes has_large_orcish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_gnollish_pop_trigger = yes
					has_integrated_gnollish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_gnollish_minority_size_effect = yes
			if = {
				limit = { OR = { has_gnollish_majority_trigger = yes has_large_gnollish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_manpower = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_kobold_pop_trigger = yes
					has_integrated_kobold_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_kobold_minority_size_effect = yes
			if = {
				limit = { OR = { has_kobold_majority_trigger = yes has_large_kobold_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_ruinborn_pop_trigger = yes
					has_integrated_ruinborn_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_ruinborn_minority_size_effect = yes
			if = {
				limit = { OR = { has_ruinborn_majority_trigger = yes has_large_ruinborn_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_half_orcish_pop_trigger = yes
					has_integrated_half_orcish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_half_orcish_minority_size_effect = yes
			if = {
				limit = { OR = { has_half_orcish_majority_trigger = yes has_large_half_orcish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_half_elven_pop_trigger = yes
					has_integrated_half_elven_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_half_elven_minority_size_effect = yes
			if = {
				limit = { OR = { has_half_elven_majority_trigger = yes has_large_half_elven_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_harimari_pop_trigger = yes
					has_integrated_harimari_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_harimari_minority_size_effect = yes
			if = {
				limit = { OR = { has_harimari_majority_trigger = yes has_large_harimari_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_halfling_pop_trigger = yes
					has_integrated_halfling_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_halfling_minority_size_effect = yes
			if = {
				limit = { OR = { has_halfling_majority_trigger = yes has_large_halfling_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_gnomish_pop_trigger = yes
					has_integrated_gnomish_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_gnomish_minority_size_effect = yes
			if = {
				limit = { OR = { has_gnomish_majority_trigger = yes has_large_gnomish_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_human_pop_trigger = yes
					has_integrated_human_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_human_minority_size_effect = yes
			if = {
				limit = { OR = { has_human_majority_trigger = yes has_large_human_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_elven_pop_trigger = yes
					has_integrated_elven_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_elven_minority_size_effect = yes
			if = {
				limit = { OR = { has_elven_majority_trigger = yes has_large_elven_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_tax = 1
				}
			}
		}
	}
	else_if = {
		limit = {
			$from$ = {
				OR = {
					has_coexisting_dwarven_pop_trigger = yes
					has_integrated_dwarven_pop_trigger = yes
				}
			}
		}
		$to$ = {
			add_dwarven_minority_size_effect = yes
			if = {
				limit = { OR = { has_dwarven_majority_trigger = yes has_large_dwarven_minority_trigger = yes } }
				random = {
					chance = 50
					add_base_production = 1
				}
			}
		}
	}
	else = {
		add_treasury = 1
	}
}

return_all_uncored_provinces = { #Make this also release nations that do not exist
	custom_tooltip = return_all_uncored_provinces_tt
	hidden_effect = {
		[[release_nations]
			every_owned_province = {
				limit = {
					NOT = { is_core = ROOT }
					any_core_country = {
						# exists = no
						NOT = { tag = ROOT }
						PREV = { previous_owner = PREV }
					}
				}
				save_event_target_as = province_to_cede
				cede_province = previous_owner
				owner = { change_religion = event_target:province_to_cede }
				if = {
					limit = { ROOT = { overlord = { has_government_attribute = is_raja } } }
					owner = {
						random_country = {
							limit = { overlord_of = ROOT }
							vassalize = PREV
						}
					}
				}
			}
		]
		every_owned_province = {
			limit = {
				NOT = { is_core = ROOT }
				any_country = {
					NOT = { tag = ROOT }
					PREV = { previous_owner = PREV }
				}
			}
			random_country = {
				limit = {
					NOT = { tag = ROOT }
					PREV = { previous_owner = PREV }
				}
				PREV = { cede_province = PREV }
			}
		}
	}
}

transfer_uncored_province_value_to_overlord = {
	if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 5
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -50
		overlord = { add_treasury = 50 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 10
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -80
		overlord = { add_treasury = 100 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 15
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -100
		overlord = { add_treasury = 100 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 20
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -150
		overlord = { add_treasury = 150 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 25
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -200
		overlord = { add_treasury = 200 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 30
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -250
		overlord = { add_treasury = 250 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 35
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -300
		overlord = { add_treasury = 300 }
	}
	else_if = {
		limit = {
			development_in_provinces = {
				value = 35
				NOT = { is_core = ROOT }
			}
			NOT = {
				development_in_provinces = {
					value = 40
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -350
		overlord = { add_treasury = 350 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 45
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -400
		overlord = { add_treasury = 400 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 50
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -450
		overlord = { add_treasury = 450 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 55
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -500
		overlord = { add_treasury = 500 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 60
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -550
		overlord = { add_treasury = 550 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 65
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -600
		overlord = { add_treasury = 600 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 70
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -650
		overlord = { add_treasury = 650 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 75
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -700
		overlord = { add_treasury = 700 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 80
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -750
		overlord = { add_treasury = 750 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 85
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -800
		overlord = { add_treasury = 800 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 90
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -850
		overlord = { add_treasury = 850 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 95
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -900
		overlord = { add_treasury = 900 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 100
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -950
		overlord = { add_treasury = 950 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 105
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1000
		overlord = { add_treasury = 1000 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 110
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1050
		overlord = { add_treasury = 1050 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 115
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1100
		overlord = { add_treasury = 1100 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 120
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1150
		overlord = { add_treasury = 1150 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 125
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1200
		overlord = { add_treasury = 1200 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 130
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1250
		overlord = { add_treasury = 1250 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 135
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1300
		overlord = { add_treasury = 1300 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 140
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1350
		overlord = { add_treasury = 1350 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 145
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1400
		overlord = { add_treasury = 1400 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 150
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1450
		overlord = { add_treasury = 1450 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 155
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1500
		overlord = { add_treasury = 1500 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 80
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1550
		overlord = { add_treasury = 1550 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 165
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1600
		overlord = { add_treasury = 1600 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 170
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1650
		overlord = { add_treasury = 1650 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 175
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1700
		overlord = { add_treasury = 1700 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 180
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1750
		overlord = { add_treasury = 1750 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 185
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1800
		overlord = { add_treasury = 1800 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 190
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1850
		overlord = { add_treasury = 1850 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 195
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1900
		overlord = { add_treasury = 1900 }
	}
	else_if = {
		limit = {
			NOT = {
				development_in_provinces = {
					value = 200
					NOT = { is_core = ROOT }
				}
			}
		}
		add_treasury = -1950
		overlord = { add_treasury = 1950 }
	}
	else = {
		add_treasury = -2000
		overlord = { add_treasury = 2000 }
	}
}

add_fort_up_to_16th = {
	if = {
		limit = { owner = { mil_tech = 14 } }
		add_building = fort_16th
	}
	else = {
		add_building = fort_15th
	}
}

remove_fortifications = {
	remove_building = fort_15th
	remove_building = fort_16th
	remove_building = fort_17th
	remove_building = fort_18th
}

calc_tributary_dev_proportion = {
	set_variable = {
		which = own_dev
		value = 0
	}
	set_variable = {
		which = tributary_dev_proportion
		value = 0
	}
	every_subject_country = {
		limit = { 
			OR = {
				is_subject_of_type = tributary_state
				is_subject_of_type = tributary_state_anb
			} 
		}
		ROOT = {
			export_to_variable = {
				which = tributary_dev_to_add
				value = total_development
				who = PREV
			}
			change_variable = {
				which = tributary_dev_proportion
				which = tributary_dev_to_add
			}
		}
	}
	export_to_variable = {
		which = own_dev
		value = total_development
	}
	divide_variable = {
		which = tributary_dev_proportion
		which = own_dev
	}
}

# increase_ruler_stat = { dip=yes amount=1 }
# increase_ruler_stat = { dip=yes adm=yes amount=2 }
increase_ruler_stat = {
	hidden_effect = { 
		set_variable = { temp_stat = $amount$ }
	}
	[[dip]
	tooltip = { change_dip = $amount$ }
	hidden_effect = {
		while = {
			limit = { check_variable = { temp_stat = 1 } }
			subtract_variable = { temp_stat = 1 }
			if = {
				limit = { NOT = { dip = 6 } }
				change_dip = 1
			}
			else = {
				add_dip_power = 100
			}
		}
	}
	]
	[[adm]
	tooltip = { change_adm = $amount$ }
	hidden_effect = {
		while = {
			limit = { check_variable = { temp_stat = 1 } }
			subtract_variable = { temp_stat = 1 }
			if = {
				limit = { NOT = { adm = 6 } }
				change_adm = 1
			}
			else = {
				add_adm_power = 100
			}
		}
	}
	]
	[[mil]
	tooltip = { change_mil = $amount$ }
	hidden_effect = {
		while = {
			limit = { check_variable = { temp_stat = 1 } }
			subtract_variable = { temp_stat = 1 }
			if = {
				limit = { NOT = { mil = 6 } }
				change_mil = 1
			}
			else = {
				add_mil_power = 100
			}
		}
	}
	]
	custom_tooltip = excess_stats_in_power_tooltip
}
decrease_ruler_stat = {
	set_variable = { temp_stat = $amount$ }
	[[dip]
	while = {
		limit = { check_variable = { temp_stat = 1 } }
		subtract_variable = { temp_stat = 1 }
		custom_tooltip = low_stats_in_power_tooltip
		if = {
			limit = { dip = 1 }
			change_dip = -1
		}
		else = {
			add_dip_power = -100
		}
	}
	]
	[[adm]
	while = {
		limit = { check_variable = { temp_stat = 1 } }
		subtract_variable = { temp_stat = 1 }
		custom_tooltip = low_stats_in_power_tooltip
		if = {
			limit = { adm = 1 }
			change_adm = -1
		}
		else = {
			add_adm_power = -100
		}
	}
	]
	[[mil]
	while = {
		limit = { check_variable = { temp_stat = 1 } }
		subtract_variable = { temp_stat = 1 }
		custom_tooltip = low_stats_in_power_tooltip
		if = {
			limit = { mil = 1 }
			change_mil = -1
		}
		else = {
			add_mil_power = -100
		}
	}
	]
}

save_ruler_stats = {
	hidden_effect = {
		export_to_variable = {
			variable_name = ruler_adm
			value = ADM
		}
		export_to_variable = {
			variable_name = ruler_dip
			value = DIP
		}
		export_to_variable = {
			variable_name = ruler_mil
			value = MIL
		}
	}	
}

restore_ruler_stats = {
	custom_tooltip = restore_reviver_stats
	
	hidden_effect = {
		set_variable = {
			which = ruler_adm_temp 
			which = ruler_adm 
		}
		set_variable = {
			which = ruler_dip_temp 
			which = ruler_dip
		}
		set_variable = {
			which = ruler_mil_temp 
			which = ruler_mil 
		}
		change_adm = -6
		change_dip = -6
		change_mil = -6
		clr_country_flag = reviving_ruler
	}
	
	while = {
		limit = {
			check_variable = {
				which = ruler_adm_temp
				value = 1
			}
		}
		change_adm = 1
		subtract_variable = {
			which = ruler_adm_temp
			value = 1
		}
	}

	while = {
		limit = {
			check_variable = {
				which = ruler_dip_temp
				value = 1
			}
		}
		change_dip = 1
		subtract_variable = {
			which = ruler_dip_temp
			value = 1
		}
	}
	
	while = {
		limit = {
			check_variable = {
				which = ruler_mil_temp
				value = 1
			}
		}
		change_mil = 1
		subtract_variable = {
			which = ruler_mil_temp
			value = 1
		}
	}
}

revival_stat_loss = {
	if = {
		limit = { 
			has_country_flag = b38_entef_ruler
			has_country_flag = b38_entef_sarcophagus
		}
		random_list = {
			25 = { }
			25 = { change_adm = -1 }
			25 = { change_dip = -1 }
			25 = { change_mil = -1 }
		}
	}
	else = {
		random_list = {
			40 = { change_adm = -1 change_dip = -1 change_mil = -1 }
			20 = { change_adm = -1 }
			20 = { change_dip = -1 }
			20 = { change_mil = -1 }
		}
	}
}

save_ruler_dynasty = {
	hidden_effect = {
		if = {
			limit = { has_heir = yes }
			exile_heir_as = temp_exile_@ROOT
			set_country_flag = had_heir_exiled
		}
		define_heir = {
			dynasty = ROOT
			age = 16
			adm = 6
			dip = 6
			mil = 6
		}
		exile_ruler_as = { name = temp_exile_ruler_@ROOT }
		add_stability = 1
		define_heir = {
			dynasty = ROOT
			age = 16
			adm = 0
			dip = 0
			mil = 0
		}
		exile_ruler_as = { name = dynastic_heir_@ROOT }
		add_stability = 1
		set_ruler = temp_exile_ruler_@ROOT
		if = {
			limit = { has_country_flag = had_heir_exiled }
			set_heir = temp_exile_@ROOT
			clr_country_flag = had_heir_exiled
		}
		else = {
			remove_heir = {}
		}
	}
}

add_legitimacy_or_monarch_power = {
	tooltip = {
		add_legitimacy = $VAL$
	}
	custom_tooltip = add_legitimacy_or_monarch_power_tt
	hidden_effect = {
		for = {
			amount = $VAL$
			effect = "
				if = {
					limit = {
						NOT = { legitimacy = 100 }
					}
					add_legitimacy = 1
				}
				else = {
					random_list = {
						1 = { add_adm_power = 2 }
						1 = { add_dip_power = 2 }
						1 = { add_mil_power = 2 }
					}
				}
			"
		}
	}
}

add_republican_tradition_excess_to_mana_effect = {
	tooltip = { add_republican_tradition = $VAL$ }
	custom_tooltip = add_republican_tradition_excess_to_mana_effect_tt
	hidden_effect = {
		change_variable = {
			which = left_to_convert
			value = $VAL$
		}
		while = {
			limit = {
				check_variable = {
					which = left_to_convert
					value = 1
				}
			}
	
			if = {
				limit = { republican_tradition = 100 }
				# Going by "Stengthen Government" button, 1 republican tradition is worth 33.3... military points (100 mil to increase RT by 3), so this is slightly less worth
				random_list = {
					1 = { add_adm_power = 30 }
					1 = { add_dip_power = 30 }
					1 = { add_mil_power = 30 }
				}
			}
			else = { add_republican_tradition = 1 }
	
			subtract_variable = {
				which = left_to_convert
				value = 1
			}
		}
	}
}

add_prestige_excess_to_splendour_effect = {
	if = { limit = { has_dlc = "Mandate of Heaven" }
		tooltip = { add_prestige = $VAL$ }
		custom_tooltip = add_prestige_excess_to_splendour_effect_tt
		hidden_effect = {
			change_variable = {
				which = left_to_convert
				value = $VAL$
			}
			while = {
				limit = {
					check_variable = {
						which = left_to_convert
						value = 1
					}
				}
	
				if = {
					limit = { prestige = 100 }
					add_splendor = 10
				}
				else = { add_prestige = 1 }
	
				subtract_variable = {
					which = left_to_convert
					value = 1
				}
			}
		}
	}
	else = {
		add_prestige = $VAL$
	}
}


remove_all_buildings = {
	remove_building = marketplace
	remove_building = workshop
	remove_building = temple
	remove_building = barracks
	remove_building = shipyard
	remove_building = fort_15th
	remove_building = coastal_defence
	remove_building = courthouse
	remove_building = dock
	remove_building = regimental_camp
	remove_building = fort_16th
	remove_building = naval_battery
	remove_building = cathedral
	remove_building = university
	remove_building = trade_depot
	remove_building = grand_shipyard
	remove_building = training_fields
	remove_building = fort_17th
	remove_building = stock_exchange
	remove_building = counting_house
	remove_building = town_hall
	remove_building = drydock
	remove_building = conscription_center
	remove_building = manufactory
	remove_building = wharf
	remove_building = weapons
	remove_building = textile
	remove_building = plantations
	remove_building = tradecompany
	remove_building = farm_estate
	remove_building = mills
	remove_building = furnace
	remove_building = ramparts
	remove_building = soldier_households
	remove_building = impressment_offices
	remove_building = state_house
	remove_building = mage_tower
}

raise_stability_to_neutral = {
	if = {
		limit = { NOT = { stability = -2 } }
		add_stability = 3
	}
	else_if = {
		limit = { NOT = { stability = -1 } }
		add_stability = 2
	}
	else_if = {
		limit = { NOT = { stability = 0 } }
		add_stability = 1
	}
}

save_trade_goods = {
	trigger_switch = {
		on_trigger = trade_goods
		grain = { set_province_flag = had_grain }
		wine = { set_province_flag = had_wine }
		wool = { set_province_flag = had_wool }
		cloth = { set_province_flag = had_cloth }
		fish = { set_province_flag = had_fish }
		fur = { set_province_flag = had_fur }
		salt = { set_province_flag = had_salt }
		naval_supplies = { set_province_flag = had_naval_supplies }
		copper = { set_province_flag = had_copper }
		gold = { set_province_flag = had_gold }
		iron = { set_province_flag = had_iron }
		slaves = { set_province_flag = had_slaves }
		ivory = { set_province_flag = had_ivory }
		tea = { set_province_flag = had_tea }
		chinaware = { set_province_flag = had_chinaware }
		spices = { set_province_flag = had_spices }
		coffee = { set_province_flag = had_coffee }
		cotton = { set_province_flag = had_cotton }
		sugar = { set_province_flag = had_sugar }
		tobacco = { set_province_flag = had_tobacco }
		cocoa = { set_province_flag = had_cocoa }
		silk = { set_province_flag = had_silk }
		dyes = { set_province_flag = had_dyes }
		tropical_wood = { set_province_flag = had_tropical_wood }
		livestock = { set_province_flag = had_livestock }
		incense = { set_province_flag = had_incense }
		glass = { set_province_flag = had_glass }
		paper = { set_province_flag = had_paper }
		gems = { set_province_flag = had_gems }
		coal = { set_province_flag = had_coal }
		cloves = { set_province_flag = had_cloves }
		unknown = { set_province_flag = had_unknown }
		damestear = { set_province_flag = had_damestear }
		precursor_relics = { set_province_flag = had_precursor_relics }
		mithril = { set_province_flag = had_mithril }
		fungi = { set_province_flag = had_fungi }
		serpentbloom = { set_province_flag = had_serpentbloom }
	}
}

set_from_saved_trade_goods = {
	hidden_effect = { change_trade_goods = unknown } 
	trigger_switch = {
		on_trigger = has_province_flag
		had_dyes = { change_trade_goods = dyes clr_province_flag = had_dyes }	#Dyes moved to the top because of flavor_vazhatun.25
		had_grain = { change_trade_goods = grain clr_province_flag = had_grain }
		had_wine = { change_trade_goods = wine clr_province_flag = had_wine }
		had_wool = { change_trade_goods = wool clr_province_flag = had_wool }
		had_cloth = { change_trade_goods = cloth clr_province_flag = had_cloth }
		had_fish = { change_trade_goods = fish clr_province_flag = had_fish }
		had_fur = { change_trade_goods = fur clr_province_flag = had_fur }
		had_salt = { change_trade_goods = salt clr_province_flag = had_salt }
		had_naval_supplies = { change_trade_goods = naval_supplies clr_province_flag = had_naval_supplies }
		had_copper = { change_trade_goods = copper clr_province_flag = had_copper }
		had_gold = { change_trade_goods = gold clr_province_flag = had_gold }
		had_iron = { change_trade_goods = iron clr_province_flag = had_iron }
		had_slaves = { change_trade_goods = slaves clr_province_flag = had_slaves }
		had_ivory = { change_trade_goods = ivory clr_province_flag = had_ivory }
		had_tea = { change_trade_goods = tea clr_province_flag = had_tea }
		had_chinaware = { change_trade_goods = chinaware clr_province_flag = had_chinaware }
		had_spices = { change_trade_goods = spices clr_province_flag = had_spices }
		had_coffee = { change_trade_goods = coffee clr_province_flag = had_coffee }
		had_cotton = { change_trade_goods = cotton clr_province_flag = had_cotton }
		had_sugar = { change_trade_goods = sugar clr_province_flag = had_sugar }
		had_tobacco = { change_trade_goods = tobacco clr_province_flag = had_tobacco }
		had_cocoa = { change_trade_goods = cocoa clr_province_flag = had_cocoa }
		had_silk = { change_trade_goods = silk clr_province_flag = had_silk }
		had_tropical_wood = { change_trade_goods = tropical_wood clr_province_flag = had_tropical_wood }
		had_livestock = { change_trade_goods = livestock clr_province_flag = had_livestock }
		had_incense = { change_trade_goods = incense clr_province_flag = had_incense }
		had_glass = { change_trade_goods = glass clr_province_flag = had_glass }
		had_paper = { change_trade_goods = paper clr_province_flag = had_paper }
		had_gems = { change_trade_goods = gems clr_province_flag = had_gems }
		had_coal = { change_trade_goods = coal clr_province_flag = had_coal }
		had_cloves = { change_trade_goods = cloves clr_province_flag = had_cloves }
		had_unknown = { change_trade_goods = unknown clr_province_flag = had_unknown }
		had_damestear = { change_trade_goods = damestear clr_province_flag = had_damestear }
		had_precursor_relics = { change_trade_goods = precursor_relics clr_province_flag = had_precursor_relics }
		had_mithril = { change_trade_goods = mithril clr_province_flag = had_mithril }
		had_fungi = { change_trade_goods = fungi clr_province_flag = had_fungi }
		had_serpentbloom = { change_trade_goods = serpentbloom clr_province_flag = had_serpentbloom }
	}
}

add_mercantilism_excess_to_diplo_power_effect = {
	tooltip = { add_mercantilism = $VAL$ }
	custom_tooltip = add_mercantilism_excess_to_diplo_power_effect_tt
	hidden_effect = {
		change_variable = {
			which = left_to_convert
			value = $VAL$
		}
		while = {
			limit = {
				check_variable = {
					which = left_to_convert
					value = 1
				}
			}
			if = {
				limit = { mercantilism = 100 }
				add_dip_power = 100
			}
			else = { add_mercantilism = 1 }

			subtract_variable = {
				which = left_to_convert
				value = 1
			}
		}
	}
}

#Skurkokli
ogre_battle_count_win = {
	if = {
		limit = { tag = J47 has_ruler_flag = is_rancor }
		change_variable = { nbCharge = 1 }
		change_variable = { totalBattle = 1 }
		set_variable = {
			which = battleWinRate
			which = nbCharge
		}
		divide_variable = {
			which = battleWinRate
			which = totalBattle
		}
		multiply_variable = {
			which = battleWinRate
			value = 100
		}
	}
}

add_mercantilism_excess_to_diplo_power_effect = {
	tooltip = { add_mercantilism = $VAL$ }
	custom_tooltip = add_mercantilism_excess_to_diplo_power_effect_tt
	hidden_effect = {
		change_variable = {
			which = left_to_convert
			value = $VAL$
		}
		while = {
			limit = {
				check_variable = {
					which = left_to_convert
					value = 1
				}
			}
			if = {
				limit = { mercantilism = 100 }
				add_dip_power = 100
			}
			else = { add_mercantilism = 1 }

			subtract_variable = {
				which = left_to_convert
				value = 1
			}
		}
	}
}

set_vampire_masquerade_opinion = {
	every_country = {
		limit = {
			has_open_vampires = yes
		}
		reverse_add_opinion = {
			who = PREV
			modifier = vampire_broke_the_masquerade
		}
	}
}

clear_vampire_masquerade_opinion = {
	every_country = {
		limit = {
			reverse_has_opinion_modifier = {
				who = PREV
				modifier = vampire_broke_the_masquerade
			}
		}
		reverse_remove_opinion = {
			who = PREV
			modifier = vampire_broke_the_masquerade
		}
	}
}

update_vampire_open_rule_opinion = {
	every_country = {
		limit = {
			has_vampire_masquerade = yes
		}
		add_opinion = {
			who = PREV
			modifier = vampire_broke_the_masquerade
		}
		if = {
			limit = {
				has_estate_privilege = estate_vampires_organization_the_blood_court
			}
			add_casus_belli = {
				target = PREV
				type = cb_vassalize_mission
				months = 60
			}
		}
	}
}

remove_vampire_open_rule_opinion = {
	every_country = {
		limit = {
			has_opinion_modifier = {
				who = PREV
				modifier = vampire_broke_the_masquerade
			}
		}
		remove_opinion = {
			who = PREV
			modifier = vampire_broke_the_masquerade
		}
	}
}

cannorian_in_ynn_rename = {
	if = {
		limit = {
			tag = H34 #Ebenmas
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = JEDONROGAI
	}
	else_if = {
		limit = {
			tag = H34 #Ebenmas
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H35 #Corinsfield
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = CORYNNPOEL
	}
	else_if = {
		limit = {
			tag = H35 #Corinsfield
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H45 #beggaston
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = BEGGAMSTO
	}
	else_if = {
		limit = {
			tag = H45 #Beggaston
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H47 #Istranar
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = LEVMORVITRE
	}
	else_if = {
		limit = {
			tag = H47 #Istranar
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H49 #Tiru Moine
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = KAZ_VELEN
	}
	else_if = {
		limit = {
			tag = H49 #Tiru Moine
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H51 #Freemarches
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = VERS_VELIK
	}
	else_if = {
		limit = {
			tag = H51 #Freemarches
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H53 #Pelodaire
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = PELOMFAN
	}
	else_if = {
		limit = {
			tag = H53 #Pelodaire
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H55 #West Tipney
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = VESTIPYNN
	}
	else_if = {
		limit = {
			tag = H55 #West Tipney
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H57 #New Havoral
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = NEBYCHAS
	}
	else_if = {
		limit = {
			tag = H57 #New Havoral
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H59 #Chippengard
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = YNNGARD
	}
	else_if = {
		limit = {
			tag = H59 #Chippengard
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H61 #Plumstead
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = LISMNY
	}
	else_if = {
		limit = {
			tag = H61 #Plumstead
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = H65 #Tellumtir
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = MARA_LUAR
	}
	else_if = {
		limit = {
			tag = H65 #Tellumtir
		}
		restore_country_name = yes
	}
	if = {
		limit = {
			tag = G94 #Argezvale
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		override_country_name = STELVYMAC
	}
	if = {
		limit = {
			tag = H24	#Dragon Dom
		}
		override_country_name = DROZMAVLAST
	}
	else_if = {
		limit = {
			tag = G94 #Argezvale
		}
		restore_country_name = yes
	}
}

#Newshire Sunwatchers
newshire_sunwatcher_update = {
	B50 = {
		if = {
			limit = { any_hired_mercenary_company = { template = merc_newshire_sunwatchers } }
			random_hired_mercenary_company = {
				limit = { template = merc_newshire_sunwatchers }
				location = {
					add_province_modifier = {
						name = newshire_sunblessing
						duration = 180
					}
				}
			}
		}
	}
}

#Newshire Squashkin
newshire_squashkin_update = {
	B50 = {
		if = {
			limit = { any_hired_mercenary_company = { template = merc_newshire_squashkin } }
			random_hired_mercenary_company = {
				limit = { template = merc_newshire_squashkin }
				location = {
					if = {
						limit = { NOT = { country_or_subject_holds = B50 } }
						add_province_modifier = {
							name = newshire_hidden_siege
							duration = 30
							hidden = yes
						}
					}
				}
			}
		}
	}
}


anbennar_building_effect = {
	owner = {
		if = {
			limit = { religion = corinite }
			hidden_effect = { add_karma = 0.3 }
		}
		if = {
			limit = {
				has_church_aspect = purple_dragon_1
			} 
			add_church_power = 10 
		}
	}
	if = {
		limit = {
			province_id = 682
			NOT = { has_province_modifier = sareyand_bulwark_of_the_sun }
			owner = {
				has_country_flag = sareyand_the_bulwark_of_the_sun
			}
		} 
		province_event = { id = flavour_sareyand.1 }
	}
}

anb_manufactory_discount = {
	if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 1 } }
		add_province_modifier = {
			name = anb_manufactory_discount_1
			duration = -1
		}
	}
	else_if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 2 } }
		remove_province_modifier = anb_manufactory_discount_1
		add_province_modifier = {
			name = anb_manufactory_discount_2
			duration = -1
		}
	}
	else_if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 3 } }
		remove_province_modifier = anb_manufactory_discount_2
		add_province_modifier = {
			name = anb_manufactory_discount_3
			duration = -1
		}
	}
	else_if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 4 } }
		remove_province_modifier = anb_manufactory_discount_3
		add_province_modifier = {
			name = anb_manufactory_discount_4
			duration = -1
		}
	}
}

anb_manufactory_discount_remove = {
	if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 0 } }
		remove_province_modifier = anb_manufactory_discount_1
	}
	if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 1 } }
		remove_province_modifier = anb_manufactory_discount_2
		add_province_modifier = {
			name = anb_manufactory_discount_1
			duration = -1
		}
	}
	if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 2 } }
		remove_province_modifier = anb_manufactory_discount_3
		add_province_modifier = {
			name = anb_manufactory_discount_2
			duration = -1
		}
	}
	if = {
		limit = { has_multiple_manufactory_trigger = { VAL = 3 } }
		remove_province_modifier = anb_manufactory_discount_4
		add_province_modifier = {
			name = anb_manufactory_discount_3
			duration = -1
		}
	}
}

anb_on_development_effect = {
	if = {
		limit = { has_province_modifier = jaddari_blessed_land }
		random = {
			chance = 25
			add_base_$development$ = 1
		}
	}

	if = {
		limit = { 
			owner = {
				has_country_flag = rending_hukai_telebei_reward_primary
			}
		}
		random = {
			chance = 25
			add_base_$development$ = 1
		}
	}

	if = {
		limit = { 
			owner = {
				has_country_flag = rending_hukai_telebei_reward
			}
		}
		random = {
			chance = 12.5
			add_base_$development$ = 1
		}
	}
	
	jaddari_deioderan_dev_counter_update = yes
	# if = {
		# limit = { owner = { has_country_flag = federation_state_council } }
		# governing_point_mil = yes
	# }
	if = {
		limit = {
			owner = { has_estate = estate_castonath_patricians }
			OR = {
				province_id = 831
				province_id = 832
				province_id = 833
			}
		}
		add_province_modifier = {
			name = devved_castonath_recently_dummy
			duration = 1825
			hidden = yes
		}
	}
	# Castanor stuff
	if = {
		limit = { owner = { tag = B32 } }
		if = {
			limit = {
				OR = {
					region = inner_castanor_region
					region = south_castanor_region
					region = west_castanor_region
				}
				owner = { mission_completed = castanor_home_of_humanity }
			}
			random = {
				chance = 25
				add_base_$development$ = 1
			}
		}
		if = {
			limit = {
				area = castonath_area
				owner = { mission_completed = castanor_modernizing_castonath }
			}
			change_variable = {
				which = numTimesCastonathDevved
				value = 1
			}
		}
	}
	
	# Ancient Dwarven Knowledge
	if = {
		limit = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
		}
		if = {
			limit = { owner = { check_variable = { ancientDwarvenKnowledge = 1 } } }
			owner = { subtract_variable = { ancientDwarvenKnowledge = 1 } }
			add_base_$development$ = 1
			add_next_institution_embracement_scaled = 5
		}
	}
	
	owner = {
		if = {
			limit = { religion = corinite }
			add_karma = 0.1
		}
		if = {
			limit = {
				has_church_aspect = copper_dragon_1
			}
			add_church_power = 4
		}
		update_nekhei_dev_modifier = yes
	}

	# Mountainshark T4 Gov Reform
	if = {
		limit = {
			owner = { has_reform = mountainshark_avatars_of_the_great_shark }
			development = 10
		}
		add_province_modifier = {
			name = H84_avatars_of_the_great_shark
			duration = -1
			hidden = yes
		}
	}
}

create_vassal_with_religion_and_culture = {
	create_vassal = $tag$
	hidden_effect = {
		$tag$ = {
			change_religion = $religion$
			change_primary_culture = $culture$
		}
	}
}

release_with_religion_and_culture = {
	release = $tag$
	hidden_effect = {
		$tag$ = { 
			change_religion = $religion$
			change_primary_culture = $culture$
		}
	}
}

estate_action_CAVERN_EXPLORATION_INITIATIVE_ADVENTURERS = {
	add_country_modifier = {
		name = "estate_adventurers_cavern_exploration_initiative_mod"
		duration = 3650
	}
	create_leader_scaling_with_tradition = {
		leader = conquistador
		type = army
	}
}

change_tag_and_keep_color = {
	hidden_effect = { save_event_target_as = colorswap }
	change_tag = $tag$
	custom_tooltip = change_tag_keep_color_tt
	hidden_effect = { change_country_color = { country = event_target:colorswap } }
}

cleanup_empty_province = {
	if = {
		limit = {
			is_empty = yes
		}
		
		province_event = {
			id = deletecolony.1
		}
	}
}



apply_owned_NZOC_country = {
	save_event_target_as = the_centaur_who_moved
	every_owned_province = {
		clr_province_flag = current_owned_NZOC
		remove_province_modifier = base_nomadic_zone_of_control
		remove_province_modifier = base_noncentaur_nomadic_zone_of_control
	}
	capital_scope = {
		set_province_flag = is_nomadic_capital
		if = {
			limit = {
				NOT = {
					OR = {
						has_centaur_minority_trigger = yes
						has_centaur_majority_trigger = yes
					}
				}
			}
			add_centaur_minority_size_effect = yes
		}
		hidden_effect = {add_local_autonomy = -100}
		#GIVE MODIFIERS TO CAPITAL
		if = {
			limit = {
				NOT = { has_province_modifier = base_nomadic_zone_of_control}
			}
			hidden_effect = {
				add_province_modifier = {
					name = base_nomadic_zone_of_control
					duration = -1
				}
			}
		}
		set_province_flag = current_owned_NZOC
		if = {
				limit = {
				culture_group = centaur
			}
			apply_owned_centaur_NZOC_province = yes
		}
		if = {
			limit = {
				owner = {has_estate_privilege = estate_monstrous_tribes_gozlamoir_system}
				NOT = {culture_group = centaur}
			}
			apply_owned_noncentaur_NZOC_province = yes
		}

		#GIVE MODIFIERS TO OWNED NEIGHBORING PROVINCES
		every_neighbor_province = {
			limit = {
				country_or_non_sovereign_subject_holds = event_target:the_centaur_who_moved
				NOT = { has_province_modifier = base_nomadic_zone_of_control}
			}
			hidden_effect = {
				add_province_modifier = {
					name = base_nomadic_zone_of_control
					duration = -1
				}
			}
			set_province_flag = current_owned_NZOC

			if = {
				limit = {
					culture_group = centaur
				}
				apply_owned_centaur_NZOC_province = yes
			}
			if = {
				limit = {
					owner = {has_estate_privilege = estate_monstrous_tribes_gozlamoir_system}
					NOT = {culture_group = centaur}
				}
				apply_owned_noncentaur_NZOC_province = yes
			}
			#GOV REFORMS that apply to ALL NZOC go here
		}
	}
	country_event = { id = centaur_nomad.200 days = 2}
}

apply_owned_centaur_NZOC_province = {

	hidden_effect = {
	#	add_province_modifier = {
	#		name = base_centaur_nomadic_zone_of_control
	#		duration = 3650
	#	}
		owner = {
			add_horde_unity = 0.5
			change_government_reform_progress = 1
			change_variable = {
       			which = NZOC_horde_unity
        		value = 0.5
    		}
			change_variable = {
       			which = NZOC_reform_progress
        		value = 1
    		}
			change_variable = {
       			which = NZOC_provinces_effected_positive
        		value = 1
    		}
		}
	}
}

apply_owned_noncentaur_NZOC_province = {
	hidden_effect = {
		add_province_modifier = {
			name = base_noncentaur_nomadic_zone_of_control
			duration = -1
		}
		owner = {
			change_government_reform_progress = 2
			change_variable = {
       			which = NZOC_reform_progress
        		value = 2
    		}
			change_variable = {
       			which = NZOC_provinces_effected_positive
        		value = 1
    		}
		}
	}
}

apply_debuff_NZOC_country_scope = {	
	save_event_target_as = the_centaur_who_moved
	#every_province = {
     #   limit = {
	#		NOT = {
	#			province_distance = {
    #                who = ROOT
    #                distance = 200
    #            }
	#		}
    #    }
    #    add_permanent_claim = event_target:the_centaur_who_moved
    #}
	capital_scope = {
		every_neighbor_province = { #add modifiers and claims to all unowned neighbor provinces
			limit = {
				NOT = {
					country_or_non_sovereign_subject_holds = event_target:the_centaur_who_moved
				}
			}
			#add normal claims
			add_claim = event_target:the_centaur_who_moved
			#add extra claims for rule from the storm
			if = {
				limit = {owner = {has_government_attribute = rule_from_the_storm_effect}}
				every_neighbor_province = {
					add_claim = event_target:the_centaur_who_moved
				}
			}
			#increment debuffed province count
			event_target:the_centaur_who_moved = {
				change_variable = {
    				which = NZOC_provinces_effected_negative
    				value = 1
   				}
			}			
		}
	}
}

apply_pre_modifiers_NZOC_country = {
	#TIER 5 CHOICE 1 CENTAUR PATRONAGE
	if = {
		limit = {
			has_government_attribute = centaur_patronage_migrate_effect
		}
		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 4
					culture_is_centaur = no
					has_province_flag = current_owned_NZOC
				}
			}
			#effects
			add_country_modifier = {
				name = centaur_patrons_of_the_arts_pre
				duration = 7300
			}	
		}
	}
	#TIER 5 CHOICE 3. GOZLAMOIR SYSTEM EXPANSION
	if = {
		limit = {
			has_government_attribute = gozlamoir_expansion_migrate_effect
		}
		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 3
					has_province_flag = current_owned_NZOC
					culture_is_human = yes
				}
			}
			#effects
			add_country_modifier = {
				name = gozlamoir_expansion_pre
				duration = -1
			}
		}
	}

	#TIER 5 CHOICE 2 OGRISH PRODUCTION METHODS
	if = {
		limit = {
			has_government_attribute = ogrish_production_migrate_effect
		}
		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 2
					has_province_flag = current_owned_NZOC
					OR = {
						trade_goods = iron
						trade_goods = copper
						trade_goods = gold
						trade_goods = coal
					}
				}
			}
			#effects
			add_country_modifier = {
				name = fires_of_industry_pre
				duration = -1
			}
		}
	}
	#TIER 5 CHOICE 4 MODERNIZE ORDSIWYN
	if = {
		limit = {
			has_government_attribute = reformed_ordsiwyn_migrate_effect
		}
		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 4
					has_province_flag = current_owned_NZOC
					culture_is_centaur = yes
				}
			}
			#effects
			add_country_modifier = {
				name = modernize_the_ordsiwyn_pre
				duration = -1
			}
		}
	}

}

centaur_consume_pre_modifiers_country = {
	#GOZLAMOIR
	if = {
		limit = {has_country_modifier = gozlamoir_expansion_pre}
		remove_country_modifier = gozlamoir_expansion_pre
		capital_scope = {	
				every_neighbor_province = { #add modifier to OWNED neighbor provinces
					limit = {
						country_or_non_sovereign_subject_holds = event_target:the_centaur_who_moved
					}
					add_province_modifier = {
						name = gozlamoir_expansion_post_province
						duration = 1825
					}
				}
			}
	}
	#OGRE
	if = {
		limit = {has_country_modifier = fires_of_industry_pre}
		remove_country_modifier = fires_of_industry_pre
		capital_scope = {
			artillery = event_target:the_centaur_who_moved
			owner = {
				add_country_modifier = {
					name = fires_of_industry_post_country
					duration = 1825
				}
			}
		}

		
	}
	#TIER 5 CHOICE 1 CENTAUR PATRONAGE
	if = {
		limit = {has_country_modifier = centaur_patrons_of_the_arts_pre}
		remove_country_modifier = centaur_patrons_of_the_arts_pre
		add_country_modifier = {
			name = centaur_patrons_of_the_arts_post
			duration = 7300
		}
		capital_scope = {
			add_next_institution_embracement = 15
		}
		
	}
	#TIER 5 CHOICE 4
	if = {
		limit = {has_country_modifier = modernize_the_ordsiwyn_pre}
		remove_country_modifier = modernize_the_ordsiwyn_pre
		add_country_modifier = {
			name = modernize_the_ordsiwyn_post
			duration = 1825
		}
	}
}




apply_reform_modifiers_NZOC_country = {
	#TIER 2 CHOICE 1. NEGEAL
	if = {
		limit = {
			has_government_attribute = centaur_negeal_reform_migrate_effect
		}
		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 4
					culture_is_centaur = yes
					has_province_flag = current_owned_NZOC
				}
			}
			#effects
			add_yearly_manpower = 0.75
				capital_scope = {
   				cavalry = event_target:the_centaur_who_moved
				cavalry = event_target:the_centaur_who_moved
			}
		}
	}
	#TIER 2 CHOICE 2. ENSURE ORDSIWYN LOYALTIES
	if = {
		limit = {
			has_government_attribute = centaur_ensure_ordsiwyn_loyalties_reform_migrate_effect
		}
		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 3
					has_province_flag = current_owned_NZOC
					OR = {
						trade_goods = wool
						trade_goods = livestock
						trade_goods = ivory
						trade_goods = fur
					}
				}
			}
			#effects
			add_country_modifier = {
				name = centaur_loyal_population
				duration = -1
			}
			capital_scope = {
				every_neighbor_province = { #add modifier to OWNED neighbor provinces
					limit = {
						country_or_non_sovereign_subject_holds = event_target:the_centaur_who_moved
					}
					add_province_modifier = {
						name = centaur_ensured_loyalties_prov
						duration = 1825
					}
				}
			}
			#add modifier to every nzoc province
		}
	}

	#TIER 2 CHOICE 3. WASTE NOT
	#REMOVED

	#TIER 5 CHOICE 1. PATRONS OF THE ARTS
	#MOVED

	#PROTECTION RACKETEERING
	#REMOVED
}

golden_highway_start_construction = {
	[[bulwar_proper]
		set_global_flag = golden_highway_bulwar_proper_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -975 # 13 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -1950 # 13 provs
			add_adm_power = -200
		}
		628 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[far_bulwar]
		set_global_flag = golden_highway_far_bulwar_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -975 # 13 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -1950 # 13 provs
			add_adm_power = -200
		}
		625 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[far_salahad]
		set_global_flag = golden_highway_far_salahad_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -525 # 7 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -1050 # 7 provs
			add_adm_power = -200
		}
		2900 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[rahen_coast]
		set_global_flag = golden_highway_rahen_coast_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -1125 # 15 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -2250 # 15 provs
			add_adm_power = -200
		}
		4361 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[dhujat]
		set_global_flag = golden_highway_dhujat_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -525 # 7 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -1050 # 7 provs
			add_adm_power = -200
		}
		4408 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[xianjie]
		set_global_flag = golden_highway_xianjie_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -1050 # 14 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -2100 # 14 provs
			add_adm_power = -200
		}
		4470 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[upper_yanshen]
		set_global_flag = golden_highway_upper_yanshen_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -725 # 10 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -1500 # 10 provs
			add_adm_power = -200
		}
		4826 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[yanshen_coast]
		set_global_flag = golden_highway_yanshen_coast_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -450 # 6 provs
			add_adm_power = -100
		}
		else = {
			add_treasury = -900 # 6 provs
			add_adm_power = -200
		}
		4873 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[shamakhad]
		set_global_flag = golden_highway_shamakhad_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -1750 # 15 provs
			add_adm_power = -150
		}	
		else = {
			add_treasury = -3500 # 15 provs
			add_adm_power = -300
		}
		4539 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
	[[south_haless]
		set_global_flag = golden_highway_south_haless_started
		if = {
			limit = {
				has_golden_highway_discount_50_percent = yes
			}
			add_treasury = -1750 # 15 provs
			add_adm_power = -150
		}	
		else = {
			add_treasury = -3500 # 15 provs
			add_adm_power = -300
		}
		4600 = {
			add_permanent_province_modifier = {
				name = golden_highway_under_construction
				duration = -1
			}
			hidden_effect = { province_event = { id = golden_highway.1 days = 180 random = 365 } }
		}
	]
}

golden_highway_cant_construct_tt = {
	if = {
		limit = {
			NOT = {
				golden_highway_$section$ = {
					type = all
					country_or_non_sovereign_subject_holds = ROOT
				}
			}
			custom_tooltip = own_all_provinces_in_golden_highway_$section$_tt
		}
	}
}

golden_highway_select_next_province = {
	random_neighbor_province = {
		limit = {
			province_group = golden_highway_$section$
			NOT = { has_province_modifier = golden_highway }
		}
		save_event_target_as = golden_highway_next_province
	}
}

increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = {
	trigger_switch = {
		on_trigger = has_country_modifier
		legitimacy_equivalent_absolutism_from_idea_groups_mod0 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod0 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod1 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod1 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod1 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod2 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod2 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod2 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod3 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod3 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod3 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod4 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod4 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod4 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod5 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod5 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod5 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod6 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod6 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod6 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod7 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod7 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod7 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod8 duration = -1 } }
	}
}

decrease_legitimacy_equivalent_absolutism_from_idea_groups_mod = {
	trigger_switch = {
		on_trigger = has_country_modifier
		legitimacy_equivalent_absolutism_from_idea_groups_mod1 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod1 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod0 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod2 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod2 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod1 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod3 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod3 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod2 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod4 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod4 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod3 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod5 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod5 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod4 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod6 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod6 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod5 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod7 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod7 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod6 duration = -1 } }
		legitimacy_equivalent_absolutism_from_idea_groups_mod8 = { remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod8 add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod7 duration = -1 } }
	}
}

calc_legitimacy_equivalent_absolutism_from_idea_groups = {
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod0
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod1
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod2
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod3
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod4
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod5
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod6
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod7
	remove_country_modifier = legitimacy_equivalent_absolutism_from_idea_groups_mod8
	if = {
		limit = {
			has_government_attribute = legitimacy_equivalent_absolutism_from_idea_groups
		}
		hidden_effect = { add_country_modifier = { name = legitimacy_equivalent_absolutism_from_idea_groups_mod0 duration = -1 } }
		if = {
			limit = { full_idea_group = aristocracy_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = plutocracy_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = horde_gov_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = theocracy_gov_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = indigenous_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = innovativeness_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = religious_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = spy_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = diplomatic_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = offensive_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = defensive_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = trade_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = economic_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = exploration_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = maritime_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = quality_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = quantity_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = expansion_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = administrative_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = humanist_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = influence_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = naval_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = court_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = mercenary_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
		if = {
			limit = { full_idea_group = infrastructure_ideas }
			increase_legitimacy_equivalent_absolutism_from_idea_groups_mod = yes
		}
	}
}

anb_add_extra_mage_tower_dev = {
	if = {
		limit = {
			owner = { has_country_flag = unlocked_extra_dev_on_mage_tower }
			NOT = { has_province_flag = built_dev_mage_tower }
		}
		add_base_production = 1
		hidden_effect = {
			set_province_flag = built_dev_mage_tower
		}
	}
}

anb_remove_extra_mage_tower_dev = {
	if = {
		limit = {
			owner = { has_country_flag = unlocked_extra_dev_on_mage_tower }
			has_province_flag = built_dev_mage_tower
		}
		add_base_production = -1
		hidden_effect = {
			set_province_flag = built_dev_mage_tower
		}
	}
}

switch_bayvic_to_bayvek = {
	723 = {
		change_culture = city_goblin
	}
	if = {
		limit = {
			Z28 = {
				exists = yes
				NOT = { has_country_flag = bayvic_to_bayvek_done }
			}
		}
		Z28 = {
			change_primary_culture = city_goblin
			set_country_flag = no_longer_monstrous
			add_accepted_culture = blue_reachman
			override_country_name = BAYVEK
			set_country_flag = bayvic_to_bayvek_done
		}
		hidden_effect = {
			723 = {
				change_province_name = "Bayvek" #avoid double rename tooltip + else the prov name switches back to Bayvic if not owned by a goblin tag
			}
		}
	}
	if = {
		limit = {
			Z28 = {
				exists = no
				NOT = { has_country_flag = bayvic_to_bayvek_done }
			}
		}
		723 = {
			change_province_name = "Bayvek"
		}
		hidden_effect = {
			Z28 = {
				change_primary_culture = city_goblin
				set_country_flag = no_longer_monstrous
				add_accepted_culture = blue_reachman
				override_country_name = BAYVEK
				set_country_flag = bayvic_to_bayvek_done
			}
		}
	}
}

select_highest_dev_province_with_limit = {
	set_variable = {
		which = highest_province_dev
		value = 0
	}
	every_owned_province = {
		limit = { $limit$ }
		export_to_variable = {
			which = temp_dev_check
			value = development
		}
		ROOT = {
			set_variable = {
				which = temp_dev_check
				which = PREV
			}
		}
		if = {
			limit = {
				ROOT = {
					check_variable = {
						which = temp_dev_check
						which = highest_province_dev
					}
				}
			}
			ROOT = {
				set_variable = {
					which = highest_province_dev
					which = temp_dev_check
				}
			}
			save_event_target_as = highest_dev_province_with_limit
		}
	}
	[[effect] event_target:highest_dev_province_with_limit = { $effect$ }]
}


#only does base-game modifications rn. do modded ones by surrounding this effect with the set and remove flag
create_flagship_with_modifications = {
	owner = {
		set_country_flag = forbid_flagship_modification_flag_captains_log
		set_country_flag = forbid_flagship_modification_flag_spare_jolly_roger
		set_country_flag = forbid_flagship_modification_flag_flag_officers
		set_country_flag = forbid_flagship_modification_flag_standardized_signal_book
		set_country_flag = forbid_flagship_modification_flag_mortars
		set_country_flag = forbid_flagship_modification_flag_improved_crows_nest
		set_country_flag = forbid_flagship_modification_flag_command_aftercastle
		set_country_flag = forbid_flagship_modification_flag_trade_route_map
		set_country_flag = forbid_flagship_modification_flag_mass_load_cannons
		set_country_flag = forbid_flagship_modification_flag_integrated_marines
		set_country_flag = forbid_flagship_modification_flag_hull_sheating

		[[captains_log] 			clr_country_flag = forbid_flagship_modification_flag_captains_log ]
		[[spare_jolly_roger] 		clr_country_flag = forbid_flagship_modification_flag_spare_jolly_roger ]
		[[flag_officers]			clr_country_flag = forbid_flagship_modification_flag_flag_officers ]
		[[standardized_signal_book]	clr_country_flag = forbid_flagship_modification_flag_standardized_signal_book ]
		[[mortars]					clr_country_flag = forbid_flagship_modification_flag_mortars ]
		[[improved_crows_nest]		clr_country_flag = forbid_flagship_modification_flag_improved_crows_nest ]
		[[command_aftercastle]		clr_country_flag = forbid_flagship_modification_flag_command_aftercastle ]
		[[trade_route_map]			clr_country_flag = forbid_flagship_modification_flag_trade_route_map ]
		[[mass_load_cannons]		clr_country_flag = forbid_flagship_modification_flag_mass_load_cannons ]
		[[integrated_marines]		clr_country_flag = forbid_flagship_modification_flag_integrated_marines ]
		[[hull_sheating]			clr_country_flag = forbid_flagship_modification_flag_hull_sheating ]
	}
	create_flagship = {
		name = "$name$"
		type = $type$
	}
	owner = {
		clr_country_flag = forbid_flagship_modification_flag_captains_log
		clr_country_flag = forbid_flagship_modification_flag_spare_jolly_roger
		clr_country_flag = forbid_flagship_modification_flag_flag_officers
		clr_country_flag = forbid_flagship_modification_flag_standardized_signal_book
		clr_country_flag = forbid_flagship_modification_flag_mortars
		clr_country_flag = forbid_flagship_modification_flag_improved_crows_nest
		clr_country_flag = forbid_flagship_modification_flag_command_aftercastle
		clr_country_flag = forbid_flagship_modification_flag_trade_route_map
		clr_country_flag = forbid_flagship_modification_flag_mass_load_cannons
		clr_country_flag = forbid_flagship_modification_flag_integrated_marines
		clr_country_flag = forbid_flagship_modification_flag_hull_sheating
	}
}

select_highest_opinion_country_with_limit = {
	set_variable = {
		which = highest_opinion_check
		value = 0
	}
	every_known_country = {
		limit = { $limit$ }
		export_to_variable = {
			which = temp_opinion_check
			value = opinion
			with = ROOT
		}
		ROOT = {
			set_variable = {
				which = temp_opinion_check
				which = PREV
			}
		}
		if = {
			limit = { 
				ROOT = {
					check_variable = {
						which = temp_opinion_check
						which = highest_opinion_check
					}
				}
			}
			ROOT = {
				set_variable = {
					which = highest_opinion_check
					which = temp_opinion_check
				}
			}
			save_event_target_as = highest_opinion_country_with_limit
		}
		[[effect] event_target:highest_opinion_country_with_limit = { $effect$ }]
	}

}

add_random_estate_loyalty = { #Used like add_random_estate_loyalty = { amount = X }
	pick_random_estate_if_present = { flag = loyalty }
	if = {
		limit = { has_country_flag = estate_brahmins_loyalty }
		add_estate_loyalty = {
			estate = estate_brahmins
			loyalty = $amount$
		}
		clr_country_flag = estate_brahmins_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_church_loyalty }
		add_estate_loyalty = {
			estate = estate_church
			loyalty = $amount$
		}
		clr_country_flag = estate_church_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_maratha_loyalty }
		add_estate_loyalty = {
			estate = estate_maratha
			loyalty = $amount$
		}
		clr_country_flag = estate_maratha_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_nobles_loyalty }
		add_estate_loyalty = {
			estate = estate_nobles
			loyalty = $amount$
		}
		clr_country_flag = estate_nobles_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_burghers_loyalty }
		add_estate_loyalty = {
			estate = estate_burghers
			loyalty = $amount$
		}
		clr_country_flag = estate_burghers_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_cossacks_loyalty }
		add_estate_loyalty = {
			estate = estate_cossacks
			loyalty = $amount$
		}
		clr_country_flag = estate_cossacks_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_nomadic_tribes_loyalty }
		add_estate_loyalty = {
			estate = estate_nomadic_tribes
			loyalty = $amount$
		}
		clr_country_flag = estate_nomadic_tribes_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_mages_loyalty }
		add_estate_loyalty = {
			estate = estate_mages
			loyalty = $amount$
		}
		clr_country_flag = estate_mages_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_adventurers_loyalty }
		add_estate_loyalty = {
			estate = estate_adventurers
			loyalty = $amount$
		}
		clr_country_flag = estate_adventurers_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_artificers_loyalty }
		add_estate_loyalty = {
			estate = estate_artificers
			loyalty = $amount$
		}
		clr_country_flag = estate_artificers_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_monstrous_tribes_loyalty }
		add_estate_loyalty = {
			estate = estate_monstrous_tribes
			loyalty = $amount$
		}
		clr_country_flag = estate_monstrous_tribes_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_raj_ministries_loyalty }
		add_estate_loyalty = {
			estate = estate_raj_ministries
			loyalty = $amount$
		}
		clr_country_flag = estate_raj_ministriesloyalty
	}
	else_if = {
		limit = { has_country_flag = estate_uppercastes_loyalty }
		add_estate_loyalty = {
			estate = estate_uppercastes
			loyalty = $amount$
		}
		clr_country_flag = estate_uppercastes_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_middlecastes_loyalty }
		add_estate_loyalty = {
			estate = estate_middlecastes
			loyalty = $amount$
		}
		clr_country_flag = estate_middlecastes_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_lowercastes_loyalty }
		add_estate_loyalty = {
			estate = estate_lowercastes
			loyalty = $amount$
		}
		clr_country_flag = estate_lowercastes_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_vampires_loyalty }
		add_estate_loyalty = {
			estate = estate_vampires
			loyalty = $amount$
		}
		clr_country_flag = estate_vampires_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_castonath_patricians_loyalty }
		add_estate_loyalty = {
			estate = estate_castonath_patricians
			loyalty = $amount$
		}
		clr_country_flag = estate_castonath_patricians_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_daulophs_loyalty }
		add_estate_loyalty = {
			estate = estate_daulophs
			loyalty = $amount$
		}
		clr_country_flag = estate_daulophs_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_eunuchs_anb_loyalty }
		add_estate_loyalty = {
			estate = estate_eunuchs_anb
			loyalty = $amount$
		}
		clr_country_flag = estate_eunuchs_anb_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_shinukhorchi_loyalty }
		add_estate_loyalty = {
			estate = estate_shinukhorchi
			loyalty = $amount$
		}
		clr_country_flag = estate_shinukhorchi_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_chumijemoya_loyalty }
		add_estate_loyalty = {
			estate = estate_chumijemoya
			loyalty = $amount$
		}
		clr_country_flag = estate_chumijemoya_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_ajgriijarul_loyalty }
		add_estate_loyalty = {
			estate = estate_ajgriijarul
			loyalty = $amount$
		}
		clr_country_flag = estate_ajgriijarul_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_kabiurgarko_loyalty }
		add_estate_loyalty = {
			estate = estate_kabiurgarko
			loyalty = $amount$
		}
		clr_country_flag = estate_kabiurgarko_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_khelorvalshi_loyalty }
		add_estate_loyalty = {
			estate = estate_khelorvalshi
			loyalty = $amount$
		}
		clr_country_flag = estate_khelorvalshi_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_wolf_command_loyalty }
		add_estate_loyalty = {
			estate = estate_wolf_command
			loyalty = $amount$
		}
		clr_country_flag = estate_wolf_command_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_boar_command_loyalty }
		add_estate_loyalty = {
			estate = estate_boar_command
			loyalty = $amount$
		}
		clr_country_flag = estate_boar_command_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_lion_command_loyalty }
		add_estate_loyalty = {
			estate = estate_lion_command
			loyalty = $amount$
		}
		clr_country_flag = estate_lion_command_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_dragon_command_loyalty }
		add_estate_loyalty = {
			estate = estate_dragon_command
			loyalty = $amount$
		}
		clr_country_flag = estate_dragon_command_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_elephant_command_loyalty }
		add_estate_loyalty = {
			estate = estate_elephant_command
			loyalty = $amount$
		}
		clr_country_flag = estate_elephant_command_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_tiger_command_loyalty }
		add_estate_loyalty = {
			estate = estate_tiger_command
			loyalty = $amount$
		}
		clr_country_flag = estate_tiger_command_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_gerunanin_loyalty }
		add_estate_loyalty = {
			estate = estate_gerunanin
			loyalty = $amount$
		}
		clr_country_flag = estate_gerunanin_loyalty
	}
	else_if = {
		limit = { has_country_flag = estate_ahati_loyalty }
		add_estate_loyalty = {
			estate = estate_ahati
			loyalty = $amount$
		}
		clr_country_flag = estate_ahati_loyalty
	}
}