ruler_ynn_zodiac = {
	export_to_variable = {
		which = ynn_ruler_age #Ruler age when taking power
		value = trigger_value:ruler_age
	}
	
	export_to_variable = {
		which = ynn_current_year #Current Year
		value = trigger_value:is_year
	}
	subtract_variable = { which = ynn_current_year which = ynn_ruler_age }     #Birth Year
	set_variable = { game_start = 1443 }                            #Our starting point


	if = {
		limit = { check_variable = { ynn_current_year = 1444 } }     #If birth after or during 1444
		set_variable = { ruler_zodiac = 6 }                 #Will determine which blessing you get
		while = {
			limit = { NOT = { check_variable = { which = game_start which = ynn_current_year } } }
			change_variable = { game_start = 4 }
			change_variable = { ruler_zodiac = 1 }
			if = {
				limit = { check_variable = { ruler_zodiac = 17 } }
				set_variable = { ruler_zodiac = 1 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_1
				duration = -1
			}
		}
	}
	else_if = { #Same thing as above but we count backward
		limit = { NOT = { check_variable = { ynn_current_year = 1444 } } }     #If birth before 1444
		set_variable = { ruler_zodiac = 7 }
		while = {
			limit = { check_variable = { which = game_start which = ynn_current_year } }
			subtract_variable = { game_start = 4 }
			subtract_variable = { ruler_zodiac = 1 }
			if = {
				limit = { NOT = { check_variable = { ruler_zodiac = 1 } } }
				set_variable = { ruler_zodiac = 16 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = ruler_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_ruler_1
				duration = -1
			}
		}
	}
}

heir_ynn_zodiac = {
	export_to_variable = {
		which = ynn_heir_age #Ruler age when taking power
		value = trigger_value:heir_age
	}
	
	export_to_variable = {
		which = ynn_current_year #Current Year
		value = trigger_value:is_year
	}
	subtract_variable = { which = ynn_current_year which = ynn_heir_age }     #Birth Year
	set_variable = { game_start = 1443 }                            #Our starting point


	if = {
		limit = { check_variable = { ynn_current_year = 1444 } }     #If birth after or during 1444
		set_variable = { heir_zodiac = 6 }                 #Will determine which blessing you get
		while = {
			limit = { NOT = { check_variable = { which = game_start which = ynn_current_year } } }
			change_variable = { game_start = 4 }
			change_variable = { heir_zodiac = 1 }
			if = {
				limit = { check_variable = { heir_zodiac = 17 } }
				set_variable = { heir_zodiac = 1 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_1
				duration = -1
			}
		}
	}
	else_if = { #Same thing as above but we count backward
		limit = { NOT = { check_variable = { ynn_current_year = 1444 } } }     #If birth before 1444
		set_variable = { heir_zodiac = 7 }
		while = {
			limit = { check_variable = { which = game_start which = ynn_current_year } }
			subtract_variable = { game_start = 4 }
			subtract_variable = { heir_zodiac = 1 }
			if = {
				limit = { NOT = { check_variable = { heir_zodiac = 1 } } }
				set_variable = { heir_zodiac = 16 }
			}
		}
		#If forest to apply the relevant modifier depending on varBlessings
		if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 16
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_16
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 15
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_15
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 14
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_14
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 13
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_13
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 12
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_12
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 11
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_11
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 10
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_10
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 9
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_9
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 8
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_8
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 7
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_7
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 6
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_6
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 5
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_5
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 4
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_4
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 3
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_3
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 2
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = heir_zodiac
					value = 1
				}
			}
			add_ruler_modifier = {
				name = ynn_zodiac_heir_1
				duration = -1
			}
		}
	}
}

yrw_iosahar_liberty_ally_1 = {
	if = {
		limit = { has_country_flag = yrw_1a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_1b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_1 = {
	if = {
		limit = { has_country_flag = yrw_1a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_1b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_1b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_liberty_ally_2 = {
	if = {
		limit = { has_country_flag = yrw_2a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_2b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_2 = {
	if = {
		limit = { has_country_flag = yrw_2a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_2b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_2b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_liberty_ally_3 = {
	if = {
		limit = { has_country_flag = yrw_3a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_3b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_3 = {
	if = {
		limit = { has_country_flag = yrw_3a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_3b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_3b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_liberty_ally_4 = {
	if = {
		limit = { has_country_flag = yrw_4a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4a }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_4b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4b }
			}
			add_liberty_desire = -5
		}
		else = { add_liberty_desire = 5 }
	}
}

yrw_iosahar_liberty_opposition_4 = {
	if = {
		limit = { has_country_flag = yrw_4a }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4a }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
	else_if = {
		limit = { has_country_flag = yrw_4b }
		if = {
			limit = {
				overlord = { has_country_flag = yrw_4b }
			}
			add_liberty_desire = 5
		}
		else = { add_liberty_desire = -5 }
	}
}

yrw_iosahar_subjugation_preparation_effect = {
	every_war_enemy_country = {
		if = {
			limit = { 
				is_in_war = {
					attacker_leader = THIS
					defender_leader = ROOT
					casus_belli = cb_independence_war
				}
			}
			white_peace = ROOT
			release_iosahar = yes
			# peace subjugated iosahars out of independence wars against vassals
			# to stop you getting the iosahar back for free, they're released - bad luck
			# because if their new overlord joins the independence war (i.e. via enforce peace)
			# then separately peaces, the game crashes
		}
	}

	every_subject_country = {
		if = {	#Breaks PUs
			limit = {
				junior_union_with = ROOT
			}
			break_union = ROOT
		}
		else_if = {		#Iosahar and countries with Ynnic diplomacy are now yours
			limit = {
				OR = {
					is_subject_of_type = ynnic_iosahar
					has_country_modifier = ynn_diplo
				}
			}
			if = {	#Subjects get transfered for Bosancovac
				limit = {
					ROOT = { tag = G32 }
					FROM = {
						tag = G33
						has_country_flag = bosancovac_chose_amacimst
					}
					NOT = { tag = G29 }
				}
				G26 = { create_iosahar = { tag = PREV } }
			}
			else_if = {
				limit = {
					ROOT = { tag = G26 }
					FROM = {
						tag = G33
						has_country_flag = bosancovac_chose_malacnar
					}
				}
				G32 = { create_iosahar = { tag = PREV } }
			}
			else = { FROM = { create_iosahar = { tag = PREV } } }
		}
		else = {	#Other subjects are released
			release_iosahar = yes
		}
	}
	hidden_effect = {	#Clears alliances for ynnic overlord
		FROM = {
			every_known_country = {
				limit = {
					alliance_with = FROM
					capital_scope = {
						superregion = ynn_superregion
					}
				}
				FROM = {
					break_alliance = PREV
				}
			}
		}
	}
		
	if = {
		limit = {
			NOT = { has_country_modifier = ynn_diplo }
		}
		add_country_modifier = {
			name = ynn_diplo
			duration = -1
		}
	}

	if = {
		limit = {
			tag = G32
			has_reform = malacnar_monarchy
		}
		FROM = { 
			country_event = { id = flavor_malacnar.200000 } #the fate of malacnar prep event
		}
	}


	if = {
		limit = {
			NOT = {
				has_country_flag = ynn_iosahar_breakup_debug
			}
		}
		ynn_iosahar_breakup_effect = yes	#Breakup of new Iosahar
	}
	else = {
		clr_country_flag = ynn_iosahar_breakup_debug
	}

	#Bosancovac
	if = {
		limit = {
			OR = {
				tag = G26
				tag = G32
			}
			FROM = {
				tag = G33
				OR = {
					has_country_flag = bosancovac_chose_amacimst
					has_country_flag = bosancovac_chose_amacimst
				}
			}
		}
		FROM = { country_event = { id = flavour_bosancovac.212 days = 1 } }
	}
}

ynn_iosahar_breakup_effect = {
	if = {		#Returns cores belonging to you
		limit = { core_claim = FROM }
		ROOT = {
			every_owned_province = {
				limit = { 
					is_core = FROM
					NOT = {
						is_capital = yes
					}
				}
				cede_province = FROM
			}
		}
	}
	ROOT = {
		every_owned_province = {
			limit = {
				any_core_country = {
					NOT = { tag = ROOT }
					exists = no
					NOT = {
						has_country_flag = ynn_iosahar_breakup_debug
					}
				}
				NOT = {
					is_capital = yes
				}
			}
			random_core_country = {
				limit = {
					NOT = { tag = ROOT }
					exists = no
					NOT = {
						has_country_flag = ynn_iosahar_breakup_debug
					}
				}
				ROOT = {
					release = PREV
					# difficult to get primary culture and sets religion later so exempt from using release_with_religion_and_culture
				}
				hidden_effect = {
					set_country_flag = ynn_iosahar_breakup_debug
					if = {
						limit = {
							culture_group = ynnic_ruinborn_elf
						}
						change_government = monarchy
						add_government_reform = feudalism_reform
						capital_scope = {
							PREV = {
								change_religion = PREV
							}
						}
					}
					else = {
						change_government = republic
						add_government_reform = oligarchy_reform
						change_religion = ROOT
					}
						
					add_opinion = {
						who = FROM
						modifier = saved_us_from_warlord
					}
				}
			}
		}
	}
	ynn_superregion = {		#Returns cores belonging to others. Also a fallback since sometimes countries are only released partly.
		limit = { 
			owned_by = ROOT
			any_core_country = {
				NOT = { 
					tag = ROOT
					tag = FROM
				} 
			}
			NOT = {
				any_province_in_state = {
					is_capital_of = ROOT	#Lets them keep their capital area
				}
			}
		}
		random_core_country = {
			limit = { 
				NOT = { 
					tag = ROOT
					tag = FROM
				} 
			}
			PREV = { cede_province = PREV }
		}
	}
	forest_of_the_cursed_ones_region = {
		limit = { 
			owned_by = ROOT
			any_core_country = {
				NOT = { 
					tag = ROOT
					tag = FROM
				} 
			}
			NOT = {
				any_province_in_state = {
					is_capital_of = ROOT	#Lets them keep their capital area
				}
			}
		}
		random_core_country = {
			limit = { 
				NOT = { 
					tag = ROOT
					tag = FROM
				} 
			}
			PREV = { cede_province = PREV }
		}
	}
	ROOT =  {
		# FROM = {
		# 	country_event = { id = ynn_events.20000 }	#scope fuckery event
		# }
		every_known_country = {
			limit = {
				has_country_flag = ynn_iosahar_breakup_debug
			}
			clr_country_flag = ynn_iosahar_breakup_debug
			add_truce_with = FROM
			add_truce_with = ROOT
		}
	}
}

clear_ynn_zodiacs_effect = {
	remove_country_modifier = ynn_zodiac_ruler_1
	remove_country_modifier = ynn_zodiac_ruler_2
	remove_country_modifier = ynn_zodiac_ruler_3
	remove_country_modifier = ynn_zodiac_ruler_4
	remove_country_modifier = ynn_zodiac_ruler_5
	remove_country_modifier = ynn_zodiac_ruler_6
	remove_country_modifier = ynn_zodiac_ruler_7
	remove_country_modifier = ynn_zodiac_ruler_8
	remove_country_modifier = ynn_zodiac_ruler_9
	remove_country_modifier = ynn_zodiac_ruler_10
	remove_country_modifier = ynn_zodiac_ruler_11
	remove_country_modifier = ynn_zodiac_ruler_12
	remove_country_modifier = ynn_zodiac_ruler_13
	remove_country_modifier = ynn_zodiac_ruler_14
	remove_country_modifier = ynn_zodiac_ruler_15
	remove_country_modifier = ynn_zodiac_ruler_16
	remove_country_modifier = ynn_zodiac_heir_1
	remove_country_modifier = ynn_zodiac_heir_2
	remove_country_modifier = ynn_zodiac_heir_3
	remove_country_modifier = ynn_zodiac_heir_4
	remove_country_modifier = ynn_zodiac_heir_5
	remove_country_modifier = ynn_zodiac_heir_6
	remove_country_modifier = ynn_zodiac_heir_7
	remove_country_modifier = ynn_zodiac_heir_8
	remove_country_modifier = ynn_zodiac_heir_9
	remove_country_modifier = ynn_zodiac_heir_10
	remove_country_modifier = ynn_zodiac_heir_11
	remove_country_modifier = ynn_zodiac_heir_12
	remove_country_modifier = ynn_zodiac_heir_13
	remove_country_modifier = ynn_zodiac_heir_14
	remove_country_modifier = ynn_zodiac_heir_15
	remove_country_modifier = ynn_zodiac_heir_16
}

clear_ynn_debate_flags_effect = {
	clr_country_flag = yrw_debate_cheat
	clr_country_flag = yrw_overlord_debating
	clr_country_flag = yrw_debate_1
	clr_country_flag = yrw_debate_2
	clr_country_flag = yrw_debate_3
	clr_country_flag = yrw_debate_4
	clr_country_flag = yrw_solo_debate
	clr_country_flag = yrw_solo_debate_2
	clr_country_flag = yrw_solo_debate_3
	clr_country_flag = yrw_solo_debate_4
	clr_country_flag = force_yrw_1b
	clr_country_flag = force_yrw_1a
	clr_country_flag = force_yrw_2b
	clr_country_flag = force_yrw_2a
	clr_country_flag = force_yrw_3b
	clr_country_flag = force_yrw_3a
	clr_country_flag = force_yrw_4b
	clr_country_flag = force_yrw_4a
	clr_country_flag = yrw_1b
	clr_country_flag = yrw_1a
	clr_country_flag = yrw_2b
	clr_country_flag = yrw_2a
	clr_country_flag = yrw_3b
	clr_country_flag = yrw_3a
	clr_country_flag = yrw_4b
	clr_country_flag = yrw_4a
}

award_ynn_reform_bonuses_effect = {
	if = {
		limit = { has_country_flag = yrw_1a_reform }
		add_country_modifier = {
			name = yrw_1a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_1b_reform }
		add_country_modifier = {
			name = yrw_1b
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_2a_reform }
		add_country_modifier = {
			name = yrw_2a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_2b_reform }
		add_country_modifier = {
			name = yrw_2b
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_3a_reform }
		add_country_modifier = {
			name = yrw_3a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_3b_reform }
		add_country_modifier = {
			name = yrw_3b
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_4a_reform }
		add_country_modifier = {
			name = yrw_4a
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = { has_country_flag = yrw_4b_reform }
		add_country_modifier = {
			name = yrw_4b
			duration = -1
			hidden = yes
		}
	}
}

clear_ynn_reform_bonuses_effect = {
	remove_country_modifier = yrw_1a
	remove_country_modifier = yrw_1b
	remove_country_modifier = yrw_2a
	remove_country_modifier = yrw_2b
	remove_country_modifier = yrw_3a
	remove_country_modifier = yrw_3b
	remove_country_modifier = yrw_4a
	remove_country_modifier = yrw_4b
}

ynnic_setup_effect = {
	#Ynnic Diplomacy and Dark Ages debuff
	if = {
		limit = {
			religion = ynn_river_worship
		}
		if = {
			limit = {
				NOT = {
					has_reform = malacnar_monarchy
					has_reform = malacnar_monarchy_reformed
					has_reform = malacnar_republic_reform
					has_country_flag = g27_breluslad_flag
				}
			}
			add_country_modifier = {
				name = ynn_diplo
				duration = -1
			}
		}
		if = {
			limit = {
				NOT = { has_dlc = "El Dorado" }
			}
			add_country_modifier = {
				name = ynn_dark_ages
				duration = -1
				hidden = yes
			}
		}
		country_event = { id = ynn_events.2 }
		yrw_add_iosahar_debug_modifier = yes	#Debug modifier for authority check
	}
}

clear_all_non_ruinborn_effect = {
	custom_tooltip = clear_all_non_ruinborn_effect_tt
	hidden_effect = {
		if = {
			limit = {
				has_any_human_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = human }
			owner = {
				small_decrease_of_human_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_human.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_dwarven_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = dwarven }
			owner = {
				small_decrease_of_dwarven_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_dwarven.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_orcish_pop_trigger = yes 
			}
			remove_racial_minority_any_size = { race = orcish }
			owner = {
				small_decrease_of_orcish_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_orcish.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_half_orcish_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = half_orcish }
			owner = {
				small_decrease_of_half_orcish_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_half_orcish.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_elven_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = elven }
			owner = {
				small_decrease_of_elven_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_elven.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_half_elven_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = half_elven }
			owner = {
				small_decrease_of_half_elven_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_half_elven.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_halfling_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = halfling }
			owner = {
				small_decrease_of_halfling_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_halfling.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_gnomish_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = gnomish }
			owner = {
				small_decrease_of_gnomish_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_gnomish.10
						days = 5
						random = 10
					}
				}
			}
		}
		if = {
			limit = {
				has_any_kobold_pop_trigger = yes
			}
			remove_racial_minority_any_size = { race = kobold }
			owner = {
				small_decrease_of_kobold_tolerance_effect = yes
				random_neighbor_country = {
					limit = {
						NOT = {
							has_country_flag = G26_dont_come_here
						}
					}
					country_event = {
						id = racial_pop_events_kobold.10
						days = 5
						random = 10
					}
				}
			}
		}
	}
}

ynn_joust_end_effect = {
	[[ynnhonour]
		$JOUSTWINNER$ = {
			clr_ruler_flag = tilts_begun
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_1 }
			clear_global_event_target = ynn_joust_opponent_1
			}
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_2 }
			clear_global_event_target = ynn_joust_opponent_2
			}
			country_event = {
				id = ynn_events.112
				days = 5
			}
		}
		$JOUSTLOSER$ = {
			clr_ruler_flag = tilts_begun
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_1 }
			clear_global_event_target = ynn_joust_opponent_1
			}
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_2 }
			clear_global_event_target = ynn_joust_opponent_2
			}
			country_event = {
				id = ynn_events.113
				days = 5
			}
		}
	]

	[[G26Joust]
		$JOUSTWINNER$ = {
			clr_ruler_flag = tilts_begun
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_1 }
			clear_global_event_target = ynn_joust_opponent_1
			}
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_2 }
			clear_global_event_target = ynn_joust_opponent_2
			}
			country_event = {
				id = flavour_amacimst.150
				days = 5
			}
		}
		$JOUSTLOSER$ = {
			clr_ruler_flag = tilts_begun
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_1 }
			clear_global_event_target = ynn_joust_opponent_1
			}
			if = {
				limit = { has_saved_global_event_target = ynn_joust_opponent_2 }
			clear_global_event_target = ynn_joust_opponent_2
			}
			country_event = {
				id = flavour_amacimst.151
				days = 5
			}
		}
	]
}

ynn_joust_death_check_effect = {
	[[OneJoustWin]
		if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 10
				}
			}
			random_list = {
				100 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 9
				}
			}
			random_list = {
				90 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 8
				}
			}
			random_list = {
				80 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 7
				}
			}
			random_list = {
				70 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 6
				}
			}
			random_list = {
				60 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 5
				}
			}
			random_list = {
				50 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 4
				}
			}
			random_list = {
				40 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 3
				}
			}
			random_list = {
				30 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 2
				}
			}
			random_list = {
				20 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				check_variable = {
					which = secondJoustPower
					value = 1
				}
			}
			random_list = {
				10 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
	]
	[[TwoJoustWin]	#FirstJoustPower
		if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 10
					}
				}
			}
			random_list = {
				100 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 9
					}
				}
			}
			random_list = {
				90 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 8
					}
				}
			}
			random_list = {
				80 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 7
					}
				}
			}
			random_list = {
				70 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 6
					}
				}
			}
			random_list = {
				60 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 5
					}
				}
			}
			random_list = {
				50 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 4
					}
				}
			}
			random_list = {
				40 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 3
					}
				}
			}
			random_list = {
				30 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 2
					}
				}
			}
			random_list = {
				20 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
		else_if = {
			limit = {
				$HasNum$ = {
					check_variable = {
						which = FirstJoustPower
						value = 1
					}
				}
			}
			random_list = {
				10 = {
					set_ruler_flag = ynn_brutally_unhorsed
				}
				100 = {
				}
			}
		}
	]
}

clear_joust_flags_effect = {
	clr_ruler_flag = ynn_joust_attack
	clr_ruler_flag = ynn_joust_defend
	clr_ruler_flag = ynn_joust_unpredictable
	clr_ruler_flag = ynn_joust_even
	clr_ruler_flag = ynn_joust_win
	clr_ruler_flag = ynn_joust_loss
}

ynn_joust_rounds_effect = {
	if = {
		limit = {
			NOT = {
				has_ruler_flag = G26_joust_round_1
				has_ruler_flag = G26_joust_round_2
				has_ruler_flag = G26_joust_round_3
				has_ruler_flag = G26_joust_round_4
				has_ruler_flag = G26_joust_round_5
			}
		}
		set_ruler_flag = G26_joust_round_1
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_joust_round_1
		}
		set_ruler_flag = G26_joust_round_2
		clr_ruler_flag = G26_joust_round_1
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_joust_round_2
		}
		set_ruler_flag = G26_joust_round_3
		clr_ruler_flag = G26_joust_round_2
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_joust_round_3
		}
		set_ruler_flag = G26_joust_round_4
		clr_ruler_flag = G26_joust_round_3
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_joust_round_4
		}
		set_ruler_flag = G26_joust_round_5
		clr_ruler_flag = G26_joust_round_4
	}
}

ynn_joust_rewards_effect = {
	[[NoWin]
		$Jouster$ = {
			add_prestige = -5 #At least you tried
		}
	]
	[[RoundOne]
		$Jouster$ = {
			add_prestige = 10
			add_mil_power = 10
			add_adm_power = 10
			add_dip_power = 10
		}
	]
	[[RoundTwo]
		$Jouster$ = {
			add_prestige = 15
			add_mil_power = 20
			add_adm_power = 20
			add_dip_power = 20
		}
	]
	[[RoundThree]
		$Jouster$ = {
			add_prestige = 20
			add_mil_power = 50
			add_adm_power = 50
			add_dip_power = 50
		}
	]
	[[RoundFour]
		$Jouster$ = {
			hidden_effect = {
				set_ruler_flag = G26_fourwins
				country_event = {
					id = flavour_amacimst.155
					days = 1
				}
			}
		}
	]
	[[RoundFive]
		$Jouster$ = {
			hidden_effect = {
				set_ruler_flag = G26_fivewins
				country_event = {
					id = flavour_amacimst.155
					days = 1
				}
			}
		}
	]
}

G26_tournament_end_effect = {
	clr_country_flag = amacimst_hosting_joust
	every_known_country = {
		limit = {
			has_country_flag = amacimst_hosting_joust
		}
		clr_country_flag = amacimst_hosting_joust
		clr_ruler_flag = G26_hosting_grand_joust
		clr_ruler_flag = G26_fivewins
		clr_ruler_flag = G26_fourwins
		clr_ruler_flag = G26_joust_round_1
		clr_ruler_flag = G26_joust_round_2
		clr_ruler_flag = G26_joust_round_3
		clr_ruler_flag = G26_joust_round_4
		clr_ruler_flag = G26_joust_round_5
		clr_ruler_flag = G26_joust_win_1
		clr_ruler_flag = G26_joust_win_2
		clr_ruler_flag = G26_joust_win_3
		clr_ruler_flag = G26_joust_win_4
		clr_ruler_flag = G26_joust_win_5
		clr_country_flag = G26_observing_joust
	}
	clr_ruler_flag = G26_hosting_grand_joust
	clr_ruler_flag = G26_fivewins
	clr_ruler_flag = G26_fourwins
	clr_ruler_flag = G26_joust_round_1
	clr_ruler_flag = G26_joust_round_2
	clr_ruler_flag = G26_joust_round_3
	clr_ruler_flag = G26_joust_round_4
	clr_ruler_flag = G26_joust_round_5
	clr_ruler_flag = G26_joust_win_1
	clr_ruler_flag = G26_joust_win_2
	clr_ruler_flag = G26_joust_win_3
	clr_ruler_flag = G26_joust_win_4
	clr_ruler_flag = G26_joust_win_5
	clr_country_flag = G26_observing_joust
}

G26_joust_experience = {
	if = {
		limit = {
			has_ruler_flag = G26_exp_1
			has_ruler_flag = G26_exp_2
			has_ruler_flag = G26_exp_3
			has_ruler_flag = G26_exp_4
			has_ruler_flag = G26_exp_5
			has_ruler_flag = G26_exp_6
			has_ruler_flag = G26_exp_7
			has_ruler_flag = G26_exp_8
			has_ruler_flag = G26_exp_9
			has_ruler_flag = G26_exp_10
		}
		set_ruler_flag = G26_exp_1
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_1
		}
		set_ruler_flag = G26_exp_2
		clr_ruler_flag = G26_exp_1
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_2
		}
		set_ruler_flag = G26_exp_2
		clr_ruler_flag = G26_exp_1
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_2
		}
		set_ruler_flag = G26_exp_3
		clr_ruler_flag = G26_exp_2
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_3
		}
		set_ruler_flag = G26_exp_4
		clr_ruler_flag = G26_exp_3
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_4
		}
		set_ruler_flag = G26_exp_5
		clr_ruler_flag = G26_exp_4
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_5
		}
		set_ruler_flag = G26_exp_6
		clr_ruler_flag = G26_exp_4
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_6
		}
		set_ruler_flag = G26_exp_7
		clr_ruler_flag = G26_exp_6
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_7
		}
		set_ruler_flag = G26_exp_8
		clr_ruler_flag = G26_exp_7
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_8
		}
		set_ruler_flag = G26_exp_9
		clr_ruler_flag = G26_exp_8
	}
	else_if = {
		limit = {
			has_ruler_flag = G26_exp_9
		}
		set_ruler_flag = G26_exp_10
		clr_ruler_flag = G26_exp_9
	}

}

create_iosahar = {
	create_subject = {
		subject_type = ynnic_iosahar
		subject = $tag$
	}
	$tag$ = { 
		hidden_effect = { 
			if = {
				limit = {
					NOT = {
						has_global_flag = dont_color_ynnic_iosahar
					}
					NOT = {
						AND = {
							$tag$ = {
								NOT = {
									has_country_modifier = ruinborn_administration
								}
							}
							has_global_flag = dont_color_cannorian_iosahars
						}
					}
				}
				change_country_color = { country = PREV }
			} 
			capital_scope = { add_province_triggered_modifier = ynnic_iosahar_debug_modifier } 
		} 
	}
}

release_iosahar = {
	grant_independence = yes
	hidden_effect = { restore_country_color = yes }
}

yrw_reform_revolts = {
	if = {
		limit = {
			yrw_choice_out_of_character = yes 
		}
		custom_tooltip = yrw_wrong_choice_tt
		random_owned_province = {
			spawn_rebels = {
				size = 2
				type = noble_rebels
			}
		}
	}
}

yrw_add_iosahar_debug_modifier = {
	if = {
		limit = {
			is_subject_of_type = ynnic_iosahar
		}
		capital_scope = {
			add_province_triggered_modifier = ynnic_iosahar_debug_modifier
		}
	}
}

yrw_move_iosahar_debug_modifier = {
	#Ynnic Authority debug modifier 
	if = {
		limit = {
			FROM = {
				has_province_modifier = ynnic_iosahar_debug_modifier
			}
		}
		add_province_triggered_modifier = ynnic_iosahar_debug_modifier
		FROM = {
			if = {
				limit = {
					has_province_flag = ynnic_iosahar_authority_debug
				}
				clr_province_flag = ynnic_iosahar_authority_debug
			}
		}
	}
}
