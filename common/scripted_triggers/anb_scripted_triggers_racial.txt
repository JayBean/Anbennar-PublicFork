province_not_in_aelantir_or_no_orc_slavery = {
	#province is not in Aelantir OR you've banned slavery
	OR = {
		OR = {
			NOT = { continent = south_america }
			NOT = { continent = north_america }
		}
		owner = {
			OR = {
				has_country_modifier = the_abolish_slavery_act
				has_country_modifier = orcish_administration
				has_country_modifier = half_orcish_administration
			}
		}
	}
}

if_you_own_aelantir_orcs_but_you_arent_enslaving_them = {
	if = {
		limit = {
			any_owned_province = {
				has_orcish_minority_trigger = yes
				OR = {
					continent = south_america
					continent = north_america
				}
			}
		}
		OR = {
			has_country_modifier = the_abolish_slavery_act
			has_country_modifier = orcish_administration
			has_country_modifier = half_orcish_administration
		}
	}
	# if = {
		# limit = {
			# any_owned_province = {
				# has_orcish_majority_trigger = yes
				# OR = {
					# continent = europe
				# }
			# }
		# }
		# OR = {
			# has_country_modifier = the_abolish_slavery_act
			# has_country_modifier = orcish_administration
			# has_country_modifier = half_orcish_administration
		# }
	# }
}

cannot_enslave_orcs = {
	OR = {
		has_country_modifier = the_abolish_slavery_act
		has_country_modifier = orcish_administration
		has_country_modifier = half_orcish_administration
	}
}

has_unmatching_administration_to_primary_culture = {
	OR = {
		AND = {
			culture_is_elven = yes
			NOT = { has_country_modifier = elven_administration }
		}
		AND = {
			culture_is_dwarven = yes
			NOT = { has_country_modifier = dwarven_administration }
		}
		AND = {
			culture_is_gnollish = yes
			NOT = { has_country_modifier = gnollish_administration }
		}
		AND = {
			culture_is_gnomish = yes
			NOT = { has_country_modifier = gnomish_administration }
		}
		AND = {
			culture_is_goblin = yes
			NOT = { has_country_modifier = goblin_administration }
		}
		AND = {
			culture_is_half_elven = yes
			NOT = { has_country_modifier = half_elven_administration }
		}
		AND = {
			culture_is_half_orcish = yes
			NOT = { has_country_modifier = half_orcish_administration }
		}
		AND = {
			culture_is_halfling = yes
			NOT = { has_country_modifier = halfling_administration }
		}
		AND = {
			culture_is_harpy = yes
			NOT = { has_country_modifier = harpy_administration }
		}
		AND = {
			culture_is_human = yes
			NOT = { has_country_modifier = human_administration }
		}
		AND = {
			culture_is_kobold = yes
			NOT = { has_country_modifier = kobold_administration }
		}
		AND = {
			culture_is_orcish = yes
			NOT = { has_country_modifier = orcish_administration }
		}
		AND = {
			culture_is_ruinborn = yes
			NOT = { has_country_modifier = ruinborn_administration }
		}
		AND = {
			culture_is_troll = yes
			NOT = { has_country_modifier = troll_administration }
		}
		AND = {
			culture_is_harimari = yes
			NOT = { has_country_modifier = harimari_administration }
		}
		AND = {
			culture_is_hobgoblin = yes
			NOT = { has_country_modifier = hobgoblin_administration }
		}
		AND = {
			culture_is_centaur = yes
			NOT = { has_country_modifier = centaur_administration }
		}
		AND = {
			culture_is_ogre = yes
			NOT = { has_country_modifier = ogre_administration }
		}
		AND = {
			culture_is_lizardfolk = yes
			NOT = { has_country_modifier = lizardfolk_administration }
		}
	}
}

has_unmatching_military_to_unit = {
	OR = {
		AND = {
			has_country_modifier = undead_military
			NOT = { unit_type = tech_undead }
		}
		AND = {
			has_country_modifier = elven_military
			NOT = { unit_type = tech_wood_elf }
			NOT = { unit_type = tech_elven }
			NOT = { unit_type = tech_east_elven }
		}
		AND = {
			has_country_modifier = dwarven_military
			NOT = { unit_type = tech_dwarven }
		}
		AND = {
			has_country_modifier = gnollish_military
			NOT = { unit_type = tech_gnollish }
		}
		AND = {
			has_country_modifier = gnomish_military
			NOT = { unit_type = tech_gnomish }
		}
		AND = {
			has_country_modifier = goblin_military
			NOT = { unit_type = tech_goblin }
			NOT = { unit_type = tech_forest_goblin }
			NOT = { unit_type = tech_cave_goblin }
			NOT = { unit_type = tech_exodus_goblin }
		}
		AND = {
			has_country_modifier = half_elven_military
			NOT = { unit_type = tech_cannorian }
		}
		AND = {
			has_country_modifier = half_orcish_military
			NOT = { unit_type = tech_cannorian }
			NOT = { unit_type = tech_gerudian }
		}
		AND = {
			has_country_modifier = halfling_military
			NOT = { unit_type = tech_halfling }
			NOT = { unit_type = tech_vyzemby }
		}
		AND = {
			has_country_modifier = harpy_military
			NOT = { unit_type = tech_firanyan_harpy }
			NOT = { unit_type = tech_siadunan_harpy }
			NOT = { unit_type = tech_nzeri_harpy }
			NOT = { unit_type = tech_pezarangi_harpy }
		}
		AND = {
			has_country_modifier = human_military
			NOT = { unit_type = tech_bulwari }
			NOT = { unit_type = tech_salahadesi }
			NOT = { unit_type = tech_cannorian }
			NOT = { unit_type = tech_gerudian }
			NOT = { unit_type = tech_raheni }
			NOT = { unit_type = tech_triunic }
			NOT = { unit_type = tech_halessi }
			NOT = { unit_type = tech_shuvuush }
			NOT = { unit_type = tech_wastelander }
			NOT = { unit_type = tech_west_sarhaly }
			NOT = { unit_type = tech_south_sarhaly }
			NOT = { unit_type = tech_east_sarhaly }
			NOT = { unit_type = tech_inyaswarosa }
			NOT = { unit_type = tech_baashidi }
			NOT = { unit_type = tech_ynnsmen }
		}
		AND = {
			has_country_modifier = kobold_military
			NOT = { unit_type = tech_kobold }
			NOT = { unit_type = tech_east_kobold }
			NOT = { unit_type = tech_darkscale_kobold }
		}
		AND = {
			has_country_modifier = orcish_military
			NOT = { unit_type = tech_orcish }
			NOT = { unit_type = tech_black_orcish }
			NOT = { unit_type = tech_east_orcish }
		}
		AND = {
			has_country_modifier = ruinborn_military
			NOT = { unit_type = tech_ynnic }
			NOT = { unit_type = tech_eordand }
			NOT = { unit_type = tech_kheionai }
			NOT = { unit_type = tech_bharbhen }
			NOT = { unit_type = tech_taychendi }
			NOT = { unit_type = tech_noruin }
			NOT = { unit_type = tech_south_aelantiri }
			NOT = { unit_type = tech_harafic }
		}
		AND = {
			has_country_modifier = troll_military
			NOT = { unit_type = tech_troll }
			NOT = { unit_type = tech_swamp_troll }
		}
		AND = {
			has_country_modifier = harimari_military
			NOT = { unit_type = tech_west_harimari }
			NOT = { unit_type = tech_east_harimari }
		}
		AND = {
			has_country_modifier = hobgoblin_military
			NOT = { unit_type = tech_hobgoblin }
		}
		AND = {
			has_country_modifier = centaur_military
			NOT = { unit_type = tech_centaur }
		}
		AND = {
			has_country_modifier = ogre_military
			NOT = { unit_type = tech_ogre }
			NOT = { unit_type = tech_eastern_ogre }
		}
		AND = {
			has_country_modifier = lizardfolk_military
			NOT = { unit_type = tech_lizardfolk }
		}
	}
}

has_unmatching_race_tolerance_trigger = {
	OR = {
		AND = {
			owner = { high_tolerance_$race$_race_trigger = yes }
			NOT = { owner = { has_country_modifier = $race$_administration } }
			OR = {
				has_coexisting_$race$_pop_trigger = yes
				has_oppressed_$race$_pop_trigger = yes
				has_province_modifier = $race$_majority_primary # should be integrated
			}
		}
		AND = {
			owner = { high_tolerance_$race$_race_trigger = yes }
			owner = { has_country_modifier = $race$_administration }
			OR = {
				has_coexisting_$race$_pop_trigger = yes
				has_oppressed_$race$_pop_trigger = yes
				has_province_modifier = $race$_majority_integrated # should be primary
			}
		}
		AND = {
			owner = { medium_tolerance_$race$_race_trigger = yes }
			OR = {
				has_integrated_$race$_pop_trigger = yes # includes primary
				has_oppressed_$race$_pop_trigger = yes
			}
		}
		AND = {
			owner = { low_tolerance_$race$_race_trigger = yes }
			OR = {
				has_integrated_$race$_pop_trigger = yes # includes primary
				has_coexisting_$race$_pop_trigger = yes
			}
		}
	}
}

has_any_racial_administration = {
	OR = {
		has_country_modifier = orcish_administration
		has_country_modifier = human_administration
		has_country_modifier = elven_administration
		has_country_modifier = half_elven_administration
		has_country_modifier = half_orcish_administration
		has_country_modifier = troll_administration
		has_country_modifier = gnollish_administration
		has_country_modifier = goblin_administration
		has_country_modifier = gnomish_administration
		has_country_modifier = dwarven_administration
		has_country_modifier = kobold_administration
		has_country_modifier = ruinborn_administration
		has_country_modifier = harpy_administration
		has_country_modifier = halfling_administration
		has_country_modifier = ogre_administration
		has_country_modifier = centaur_administration
		has_country_modifier = harimari_administration
		has_country_modifier = hobgoblin_administration
		has_country_modifier = lizardfolk_administration
	}
}

has_any_racial_military = {
	OR = {
		has_country_modifier = orcish_military
		has_country_modifier = human_military
		has_country_modifier = elven_military
		has_country_modifier = half_elven_military
		has_country_modifier = half_orcish_military
		has_country_modifier = troll_military
		has_country_modifier = gnollish_military
		has_country_modifier = goblin_military
		has_country_modifier = gnomish_military
		has_country_modifier = dwarven_military
		has_country_modifier = kobold_military
		has_country_modifier = ruinborn_military
		has_country_modifier = harpy_military
		has_country_modifier = halfling_military
		has_country_modifier = ogre_military
		has_country_modifier = centaur_military
		has_country_modifier = harimari_military
		has_country_modifier = hobgoblin_military
		has_country_modifier = lizardfolk_military

		has_country_modifier = undead_military
		has_country_modifier = spirit_military
	}
}

monstrous_government = {
}
want_to_decrease_monstrous = {
	if = {
		limit = {
			has_country_flag = removing_monstrous 
			variable_arithmetic_trigger = {
				export_to_variable = {
					which = ai_monstrous_desire
					value = trigger_value:always
				}

				#ADD

				#Personality
				if = {
					limit = { ruler_has_personality = free_thinker_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 50 } }
				}
				if = {
					limit = { ruler_has_personality = tolerant_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = naive_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = industrious_personality }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { personality = ai_diplomat }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 25 } }
				}


				#Time
				if = {
					limit = { current_age = age_of_absolutism }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 10 } }
				}
				if = {
					limit = { current_age = age_of_revolutions }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 10 } }
				}
				if = {
					limit = { has_institution = enlightenment }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 20 } }
				}
		

				#Government
				if = {
					limit = { government = republic }
					variable_arithmetic_trigger = { change_variable = { which = ai_monstrous_desire value = 10 } }
				}

				#Religion
				
				#Situation
				
				#Specific


				#SUBTRACT

				#Personality
				if = {
					limit = { ruler_has_personality = malevolent_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 50 } }
				}
				if = {
					limit = { ruler_has_personality = zealot_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = pious_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { ruler_has_personality = careful_personality }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}
				if = {
					limit = { personality = ai_militarist }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 25 } }
				}

				#Government
				if = {
					limit = { government = tribal }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 10 } }
				}

				#Religion

				#Situation
				if = {
					limit = { NOT = { stability = 1 } }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 10 } }
				}
				
				#Specific
				if = {
					limit = { has_country_modifier = centaur_administration }
					variable_arithmetic_trigger = { subtract_variable = { which = ai_monstrous_desire value = 50 } }
				}


				check_variable = { which = ai_monstrous_desire value = 0 } #If the variable is >=0, the AI will want to decrease it's monstrous level
			}
		}
		always = yes
	}
	else = { always = yes }
}

fast_owns_num_pops_of_race = {
	custom_trigger_tooltip = {
		tooltip = owns_at_least_$amount$_$race$_tooltip
		check_variable = {
			which = $race$_count
			value = $amount$
		}
	}
}
# tt defined here to avoid multiple tts being defined for the same amount
# if not defined for the number you want, place in anb_racial_pop_l_english.yml

fast_has_pop_of_race = {
	custom_trigger_tooltip = {
		tooltip = has_any_$race$_pop_trigger_tooltip
		has_province_flag = $race$_present
	}
}



has_matching_race_ruler_to_heir = {
	OR = {
		AND = {
			ruler_is_half_elven = yes
			heir_is_half_elven = yes
		}
		AND = {
			ruler_is_elven = yes
			heir_is_elven = yes
		}
		AND = {
			ruler_is_dwarven = yes
			heir_is_dwarven = yes
		}
		AND = {
			ruler_is_gnomish = yes
			heir_is_gnomish = yes
		}
		AND = {
			ruler_is_human = yes
			heir_is_human = yes
		}
		AND = {
			ruler_is_half_orcish = yes
			heir_is_half_orcish = yes
		}
		AND = {
			ruler_is_orcish = yes
			heir_is_orcish = yes
		}
		AND = {
			ruler_is_goblin = yes
			heir_is_goblin = yes
		}
		AND = {
			ruler_is_gnollish = yes
			heir_is_gnollish = yes
		}
		AND = {
			ruler_is_kobold = yes
			heir_is_kobold = yes
		}
		AND = {
			ruler_is_halfling = yes
			heir_is_halfling = yes
		}
		AND = {
			ruler_is_harimari = yes
			heir_is_harimari = yes
		}
		AND = {
			ruler_is_hobgoblin = yes
			heir_is_hobgoblin = yes
		}
		AND = {
			ruler_is_troll = yes
			heir_is_troll = yes
		}
		AND = {
			ruler_is_ogre = yes
			heir_is_ogre = yes
		}
		AND = {
			ruler_is_harpy = yes
			heir_is_harpy = yes
		}
		AND = {
			ruler_is_centaur = yes
			heir_is_centaur = yes
		}
		AND = {
			ruler_is_ruinborn = yes
			heir_is_ruinborn = yes
		}
		AND = {
			ruler_is_lizardfolk = yes
			heir_is_lizardfolk = yes
		}
	}
}

ruler_is_half_elven = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_half_elven_tt
		OR = {
			has_ruler_flag = half_elven_ruler
			ruler_culture = half_elf
			ruler_culture = bulwari_half_elf
		}
	}
}

ruler_is_elven = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_elven_tt
		OR = {
			has_ruler_flag = elven_ruler
			ruler_culture = moon_elf
			ruler_culture = sun_elf
			ruler_culture = star_elf
			ruler_culture = desert_elf
			ruler_culture = dawn_elf
			ruler_culture = horizon_elf
			ruler_culture = wood_elf
			ruler_culture = sea_elf
			ruler_culture = sunrise_elf
		}
	}
}

ruler_is_dwarven = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_dwarven_tt
		OR = {
			has_ruler_flag = dwarven_ruler
			ruler_culture = ruby_dwarf
			ruler_culture = silver_dwarf
			ruler_culture = stone_dwarf
			ruler_culture = iron_dwarf
			ruler_culture = obsidian_dwarf
			ruler_culture = gold_dwarf
			ruler_culture = copper_dwarf
			ruler_culture = kronium_dwarf
			ruler_culture = quartz_dwarf
			ruler_culture = sapphire_dwarf
			ruler_culture = ramsteel_dwarf
			ruler_culture = mithril_dwarf
			ruler_culture = dagrite_dwarf
			ruler_culture = agate_dwarf
			ruler_culture = platinum_dwarf
			ruler_culture = opal_dwarf
			ruler_culture = lead_dwarf
			ruler_culture = marble_dwarf
			ruler_culture = cobalt_dwarf
			ruler_culture = flint_dwarf
			ruler_culture = titanium_dwarf
			ruler_culture = pyrite_dwarf
			ruler_culture = basalt_dwarf
			ruler_culture = topaz_dwarf
			ruler_culture = peridot_dwarf
			ruler_culture = granite_dwarf
			ruler_culture = amethyst_dwarf
			ruler_culture = emerald_dwarf
			ruler_culture = jade_dwarf
			ruler_culture = malachite_dwarf
			ruler_culture = amber_dwarf
			ruler_culture = citrine_dwarf
			ruler_culture = garnet_dwarf
			ruler_culture = diamond_dwarf
			ruler_culture = steel_dwarf
			ruler_culture = nephrite_dwarf
			ruler_culture = alloy_dwarf
		}
	}
}

ruler_is_gnomish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_gnomish_tt
		OR = {
			has_ruler_flag = gnomish_ruler
			ruler_culture = cliff_gnome
			ruler_culture = creek_gnome
			ruler_culture = imperial_gnome
			ruler_culture = delta_gnome
			ruler_culture = tinker_gnome
		}
	}
}

ruler_is_human = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_human_tt
		OR = {
			has_ruler_flag = human_ruler
			#Anbennarian
			ruler_culture = anbenncoster
			ruler_culture = west_damerian
			ruler_culture = east_damerian
			ruler_culture = pearlsedger
			ruler_culture = crownsman
			ruler_culture = vernman
			ruler_culture = exwesser
			ruler_culture = arbarani
			ruler_culture = esmari
			ruler_culture = arannese
			ruler_culture = nathalairey
			ruler_culture = uelairey
			ruler_culture = aldresian
			ruler_culture = telgeiran
			ruler_culture = pashainey
			ruler_culture = vanburian
			ruler_culture = themarian
			ruler_culture = havoric
			ruler_culture = dhanaenno
			#Alenic
			ruler_culture = gawedi
			ruler_culture = old_alenic
			ruler_culture = blue_reachman
			ruler_culture = vertesker
			ruler_culture = moorman
			ruler_culture = wexonard
			ruler_culture = marrodic
			#Businori
			ruler_culture = busilari
			ruler_culture = tefori
			ruler_culture = ilatani
			#Escanni
			ruler_culture = black_castanorian
			ruler_culture = castanorian
			ruler_culture = castellyrian
			ruler_culture = marcher
			ruler_culture = adenner
			ruler_culture = white_reachman
			ruler_culture = merine
			ruler_culture = luciander
			ruler_culture = ancardian
			ruler_culture = rogieran
			ruler_culture = elikhander
			ruler_culture = heartman
			ruler_culture = alenori
			ruler_culture = stalboric
			ruler_culture = ravenmarcher
			ruler_culture = ionnic
			ruler_culture = estairey
			ruler_culture = anbenlander
			ruler_culture = nurcestiran
			ruler_culture = esthili
			ruler_culture = rosanda
			ruler_culture = corintari
			ruler_culture = farrani
			ruler_culture = black_demesner
			#Dostanorian
			ruler_culture = corvurian
			ruler_culture = ourdi
			ruler_culture = cardesti
			ruler_culture = dostanorian
			ruler_culture = ravenmarcher_d
			ruler_culture = neratican
			#kheteratan
			ruler_culture = hapremiti
			ruler_culture = shasouran
			ruler_culture = korosheshi
			ruler_culture = tijarikheti
			ruler_culture = irsmahapan
			ruler_culture = horakheti
			#Akasi
			ruler_culture = desha
			ruler_culture = far_akasi
			ruler_culture = khasani
			#Lencori
			ruler_culture = high_lorentish
			ruler_culture = low_lorentish
			ruler_culture = derannic
			ruler_culture = sorncosti
			ruler_culture = roilsardi
			ruler_culture = iochander
			ruler_culture = sornicandi
			#Reachman
			ruler_culture = blue_reachman_r
			ruler_culture = white_reachman_r
			ruler_culture = moorman_r
			ruler_culture = green_reachman
			ruler_culture = black_reachman
			#Gerudian
			ruler_culture = reverian
			ruler_culture = west_dalr
			ruler_culture = east_dalr
			ruler_culture = olavish
			ruler_culture = talderannic
			ruler_culture = perlatter
			#Bulwari
			ruler_culture = bahari
			ruler_culture = gelkar
			ruler_culture = brasanni
			ruler_culture = surani
			ruler_culture = zanite
			ruler_culture = maqeti
			ruler_culture = masnsih
			ruler_culture = sadnatu
			ruler_culture = kuzarami
			ruler_culture = abtazari
			#Upper Raheni
			ruler_culture = kamtarhid
			ruler_culture = khedarid
			ruler_culture = shamadhan
			ruler_culture = shandibad
			ruler_culture = rajnadhid
			ruler_culture = sobhagand
			#Middle Raheni
			ruler_culture = ghavaanaj
			ruler_culture = muthadhaya
			ruler_culture = rasarhid
			ruler_culture = sarisungi
			#Lower Raheni
			ruler_culture = sarniryabsad
			ruler_culture = dhukharuved
			ruler_culture = rabhidarubsad
			ruler_culture = ghankedhen
			ruler_culture = pasindesh
			ruler_culture = raghamidesh
			#LakeBoi
			ruler_culture = metsamic
			ruler_culture = zabatlari
			ruler_culture = khamgunai
			ruler_culture = kukatodic
			#Trollsbayer
			ruler_culture = valorman
			ruler_culture = isobeliner
			ruler_culture = zanlibi
			ruler_culture = marlliander
			ruler_culture = cestirmarker
			#Ynnsman
			ruler_culture = corinsfielder
			ruler_culture = istranari
			ruler_culture = new_havoric
			ruler_culture = steadsman
			ruler_culture = dustman
			ruler_culture = sarnik
			
			#Bom
			ruler_culture = ranilau
			ruler_culture = biengdi
			ruler_culture = gon
			ruler_culture = risbeko
			ruler_culture = chengrong
			ruler_culture = khom
			ruler_culture = teplin
			#Kai
			ruler_culture = phonan
			ruler_culture = hinphat
			ruler_culture = bokai
			ruler_culture = binhrung
			ruler_culture = sikai
			#Kelino
			ruler_culture = kelino
			ruler_culture = jahe_kelino
			ruler_culture = kano_kelino
			ruler_culture = yan_kelino
			ruler_culture = gataw
			#Yanglam
			ruler_culture = hujan
			ruler_culture = banyak
			ruler_culture = paru
			ruler_culture = sirtana
			#Yan
			ruler_culture = river_yan
			ruler_culture = hill_yan
			ruler_culture = coastal_yan
			ruler_culture = forest_yan
			ruler_culture = western_yan
			ruler_culture = northern_yan
			ruler_culture = southern_yan
			ruler_culture = eastern_yan
			ruler_culture = daxug
			ruler_culture = kuldaakin
			ruler_culture = steppe_yan
			ruler_culture = rahen_yan
			ruler_culture = bom_kai_yan
			#Odheongun
			ruler_culture = menjeotaen
			ruler_culture = sangsogha
			ruler_culture = guwaadun
			#Khantaar
			ruler_culture = shuvuush
			ruler_culture = runsukhi
			ruler_culture = plateau_runsukhi
			#Khudi
			ruler_culture = oinukhudi
			ruler_culture = anarkhudi
			#Besholgi
			ruler_culture = tuugalak
			ruler_culture = ulukungu
			ruler_culture = mogirga
			#Wuhyun
			ruler_culture = ikaniwagain
			ruler_culture = kintonan
			ruler_culture = azepyanunin
			ruler_culture = rinonokegyun
	

			#Fangaulan
			ruler_culture = mantimatu
			ruler_culture = ndurubu
			ruler_culture = kaino
			ruler_culture = tamajoba
			ruler_culture = taafi
			ruler_culture = jiromji
			ruler_culture = binwarji

			#Vurebindu
			ruler_culture = zuvunwa
			ruler_culture = kuivanhi
			ruler_culture = kudenta
			ruler_culture = gomzumu
			ruler_culture = egilshibi

			#Irsukuba
			ruler_culture = kudemtu
			ruler_culture = gumzemo
			ruler_culture = ikilshebe
			ruler_culture = zovanwe
			ruler_culture = kuivendi
			ruler_culture = echenka

			#Mengi
			ruler_culture = ofehibi
			ruler_culture = metobesebi
			ruler_culture = talilibeti
			ruler_culture = yeteferen
			ruler_culture = sitewosi

			#Baashidi
			ruler_culture = ashamadi
			ruler_culture = dhebiji
			ruler_culture = suhratbi
			ruler_culture = guryadagga
			
			#Tanizu
			ruler_culture = tanizu
			ruler_culture = dakinshi
			ruler_culture = antmvura
			ruler_culture = kombedak
			ruler_culture = umsozidak
			ruler_culture = wakoodak
		}
	}
}

ruler_is_half_orcish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_half_orcish_tt
		OR = {
			has_ruler_flag = half_orcish_ruler
			ruler_culture = half_orc
			ruler_culture = grombar_half_orc
			ruler_culture = chippengarder_half_orc
			ruler_culture = wuhyun_half_orc
			ruler_culture = yan_half_orc
		}
	}
}

ruler_is_orcish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_orcish_tt
		OR = {
			has_ruler_flag = orcish_ruler
			ruler_culture = green_orc
			ruler_culture = gray_orc
			ruler_culture = black_orc
			ruler_culture = blooded_orc
			ruler_culture = cavelurker_orc
			ruler_culture = drakeclaw_orc
			ruler_culture = highhold_orc
			ruler_culture = manhunter_orc
			ruler_culture = moltenbrand_orc
			ruler_culture = skull_orc
			ruler_culture = brown_orc
			ruler_culture = emerald_orc
			ruler_culture = grombar_orc
			ruler_culture = rugan_orc
			ruler_culture = ungulan_orc
			ruler_culture = barumand_orc
			ruler_culture = karashari_orc
			ruler_culture = redtusk_orc
			ruler_culture = ozgar_orc
		}
	}
}

ruler_is_goblin = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_goblin_tt
		OR = {
			has_ruler_flag = goblin_ruler
			ruler_culture = forest_goblin
			ruler_culture = common_goblin
			dwarovar_goblin_culture_ruler = yes
			ruler_culture = exodus_goblin
			ruler_culture = city_goblin
			ruler_culture = march_goblin
			ruler_culture = soot_goblin
		}
	}
}

ruler_is_gnollish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_gnollish_tt
		OR = {
			has_ruler_flag = gnollish_ruler
			ruler_culture = sorrowclaw_gnoll
			ruler_culture = sandfang_gnoll
			ruler_culture = seascourge_gnoll
			ruler_culture = hill_gnoll
			ruler_culture = flamemarked_gnoll
			ruler_culture = fieldstalker_gnoll
			ruler_culture = windhowler_gnoll
			ruler_culture = ruinscourge_gnoll
			ruler_culture = dovesworn_gnoll
			ruler_culture = suncrown_gnoll
		}
	}
}

ruler_is_kobold = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_kobold_tt
		OR = {
			has_ruler_flag = kobold_ruler
			ruler_culture = redscale_kobold
			ruler_culture = bluescale_kobold
			ruler_culture = greenscale_kobold
			ruler_culture = kobildzani_kobold
			ruler_culture = darkscale_kobold
			ruler_culture = goldscale_kobold
			ruler_culture = steelscale_kobold
		}
	}
}

ruler_is_lizardfolk = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_lizardfolk_tt
		OR = {
			has_ruler_flag = lizardfolk_ruler
			ruler_culture = shagashay_lizardfolk
			ruler_culture = ashhama_lizardfolk
			ruler_culture = ichiadza_lizardfolk
			ruler_culture = rhada_lizardfolk
			ruler_culture = arraskay_lizardfolk
			ruler_culture = ichyaza_lizardfolk
			ruler_culture = shagatyn_lizardfolk
			ruler_culture = skarakara_lizardfolk
			ruler_culture = mashkay_lizardfolk
			ruler_culture = karshyray_lizardfolk
			ruler_culture = adzalanas_lizardfolk
			ruler_culture = itayzemby_lizardfolk
			ruler_culture = cyazizeta_lizardfolk
		}
	}
}

ruler_is_halfling = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_halfling_tt
		OR = {
			has_ruler_flag = halfling_ruler
			ruler_culture = imperial_halfling
			ruler_culture = bluefoot_halfling
			ruler_culture = redfoot_halfling
			ruler_culture = newfoot_halfling
			ruler_culture = visfoot_halfling
			ruler_culture = towerfoot_halfling
			ruler_culture = pipefoot_halfling
			ruler_culture = amezatany
			ruler_culture = mboala
			ruler_culture = mazava
			ruler_culture = vyoronsi
			ruler_culture = fomarati
			ruler_culture = zohebidi
		}
	}
}

ruler_is_harimari = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_harimari_tt
		OR = {
			has_ruler_flag = harimari_ruler
			ruler_culture = royal_harimari
			ruler_culture = serene_harimari
			ruler_culture = primal_harimari
			ruler_culture = roaming_harimari
			ruler_culture = honourbound_harimari
			ruler_culture = silent_harimari
			ruler_culture = ashwoven_harimari
		}
	}
}

ruler_is_hobgoblin = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_hobgoblin_tt
		OR = {
			has_ruler_flag = hobgoblin_ruler
			ruler_culture = boar_command
			ruler_culture = wolf_command
			ruler_culture = lion_command
			ruler_culture = dragon_command
			ruler_culture = tiger_command
			ruler_culture = elephant_command
			ruler_culture = swallow_command
			ruler_culture = fenghuang_command
			ruler_culture = eagle_command
		}
	}
}

ruler_is_troll = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_troll_tt
		OR = {
			has_ruler_flag = troll_ruler
			ruler_culture = fjord_troll
			ruler_culture = forest_troll
			ruler_culture = swamp_troll
			ruler_culture = cave_troll
			ruler_culture = hill_troll
		}
	}
}

ruler_is_ogre = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_ogre_tt
		OR = {
			has_ruler_flag = ogre_ruler
			ruler_culture = fathide_ogre
			ruler_culture = mossmouth_ogre
			ruler_culture = bloodtooth_ogre
			ruler_culture = horned_ogre
			ruler_culture = soulseeker_ogre
		}
	}
}

ruler_is_harpy = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_harpy_tt
		OR = {
			has_ruler_flag = harpy_ruler
			ruler_culture = firanyan_harpy
			ruler_culture = siadunan_harpy
			ruler_culture = pezarangi_harpy
			ruler_culture = naleni_harpy
			ruler_culture = nzeri_harpy
			ruler_culture = jarnklo_harpy
			ruler_culture = kiohan_harpy
		}
	}
}

ruler_is_centaur = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_centaur_tt
		OR = {
			has_ruler_flag = centaur_ruler
			ruler_culture = plain_centaur
			ruler_culture = inaer_centaur
			ruler_culture = avil_centaur
			ruler_culture = irdu_centaur
			ruler_culture = ghanzamh_centaur
			ruler_culture = sochar_centaur
			ruler_culture = anuar_centaur
			ruler_culture = abalg_centaur
		}
	}
}

ruler_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_ruinborn_tt
		OR = {
			has_ruler_flag = ruinborn_ruler
			#North
			ruler_culture = boek
			ruler_culture = kwineh
			ruler_culture = cheshoshi
			ruler_culture = duskers
			ruler_culture = starborn
			ruler_culture = teira
			#South
			ruler_culture = soruinic
			#Ynnic
			ruler_culture = rzentur
			ruler_culture = old_rzentur
			ruler_culture = dolindhan
			ruler_culture = sarda
			ruler_culture = malacnari
			ruler_culture = brelari
			#Eordan
			ruler_culture = selphereg
			ruler_culture = caamas
			ruler_culture = peitar
			ruler_culture = tuathak
			ruler_culture = snecboth
			ruler_culture = fograc
			#Taychendi
			ruler_culture = larankarha
			ruler_culture = yodhanpir
			ruler_culture = kalavendhi
			ruler_culture = thekvrystana
			ruler_culture = advakhalla
			ruler_culture = sarihaddi
			#Kheionai
			ruler_culture = degabhen
			ruler_culture = oktibhen
			ruler_culture = kherkabhen
			ruler_culture = lokebhen
			ruler_culture = ormabhen
			ruler_culture = arpebhen
			ruler_culture = ambhen
			ruler_culture = kimabhen
			ruler_culture = empkhebhen
			ruler_culture = besolabhen
			ruler_culture = enebhen
			ruler_culture = deyebhen
			ruler_culture = apikhobhen
			ruler_culture = keyobhen
			ruler_culture = anisibhen
			ruler_culture = amgrebhen
			ruler_culture = eltibhen
			#Eltibhari
			ruler_culture = eltibhar
			#Harafic
			ruler_culture = harafe
			ruler_culture = kooras
			ruler_culture = mayte
			ruler_culture = chiunife
			ruler_culture = epednar
			#Amadian
			ruler_culture = quchamar
			ruler_culture = chaqanel
			ruler_culture = quruwei
			ruler_culture = chamullach
			ruler_culture = banche
			ruler_culture = faalte
			#Devandi
			ruler_culture = mteibhar
			ruler_culture = basobhar
			ruler_culture = chendhyan
			#Effelai
			ruler_culture = parura
			ruler_culture = effe
			ruler_culture = laii
			ruler_culture = thamvoii
			ruler_culture = oronoii
			ruler_culture = duguihi
			#Veykodan
			ruler_culture = veykodan
			#Degenerated
			ruler_culture = leechmen
			ruler_culture = bloodfeeders
			ruler_culture = silent_watchers
			ruler_culture = cursed_ones
			ruler_culture = ice_sleepers
			ruler_culture = seedthrall
			ruler_culture = berrirghe
			ruler_culture = mteirghe
		}
	}
}

# these triggers are much faster than the ones above,
# but they entirely rely on the flags being set in time and correctly for rulers
# this is in particular a problem if these need to be used in the triggers for events, decisions, etc that also create new rulers
# easily leads to a race condition that generates an infinite loop - to be safe just don't use these unless you really need to save performance somewhere

fast_ruler_is_half_elven = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_half_elven_tt
		has_ruler_flag = half_elven_ruler
	}
}

fast_ruler_is_elven = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_elven_tt
		has_ruler_flag = elven_ruler
	}
}

fast_ruler_is_dwarven = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_dwarven_tt
		has_ruler_flag = dwarven_ruler
	}
}

fast_ruler_is_gnomish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_gnomish_tt
		has_ruler_flag = gnomish_ruler
	}
}

fast_ruler_is_human = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_human_tt
		has_ruler_flag = human_ruler
	}
}

fast_ruler_is_half_orcish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_half_orcish_tt
		has_ruler_flag = half_orcish_ruler
	}
}

fast_ruler_is_orcish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_orcish_tt
		has_ruler_flag = orcish_ruler
	}
}

fast_ruler_is_goblin = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_goblin_tt
		has_ruler_flag = goblin_ruler
	}
}

fast_ruler_is_gnollish = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_gnollish_tt
		has_ruler_flag = gnollish_ruler
	}
}

fast_ruler_is_kobold = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_kobold_tt
		has_ruler_flag = kobold_ruler
	}
}

fast_ruler_is_lizardfolk = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_lizardfolk_tt
		has_ruler_flag = lizardfolk_ruler
	}
}

fast_ruler_is_halfling = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_halfling_tt
		has_ruler_flag = halfling_ruler
	}
}

fast_ruler_is_harimari = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_harimari_tt
		has_ruler_flag = harimari_ruler
	}
}

fast_ruler_is_hobgoblin = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_hobgoblin_tt
		has_ruler_flag = hobgoblin_ruler
	}
}

fast_ruler_is_troll = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_troll_tt
		has_ruler_flag = troll_ruler
	}
}

fast_ruler_is_ogre = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_ogre_tt
		has_ruler_flag = ogre_ruler
	}
}

fast_ruler_is_harpy = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_harpy_tt
		has_ruler_flag = harpy_ruler
	}
}

fast_ruler_is_centaur = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_centaur_tt
		has_ruler_flag = centaur_ruler
	}
}

fast_ruler_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_ruinborn_tt
		has_ruler_flag = ruinborn_ruler
	}
}

consort_is_half_elven = {
	custom_trigger_tooltip = {
		tooltip = consort_is_half_elven_tt
		OR = {
			consort_culture = half_elf
			consort_culture = bulwari_half_elf
		}
	}
}

consort_is_elven = {
	custom_trigger_tooltip = {
		tooltip = consort_is_elven_tt
		OR = {
			consort_culture = moon_elf
			consort_culture = sun_elf
			consort_culture = star_elf
			consort_culture = desert_elf
			consort_culture = dawn_elf
			consort_culture = horizon_elf
			consort_culture = wood_elf
			consort_culture = sea_elf
			consort_culture = sunrise_elf
		}
	}
}

consort_is_dwarven = {
	custom_trigger_tooltip = {
		tooltip = consort_is_dwarven_tt
		OR = {
			consort_culture = ruby_dwarf
			consort_culture = silver_dwarf
			consort_culture = stone_dwarf
			consort_culture = iron_dwarf
			consort_culture = obsidian_dwarf
			consort_culture = gold_dwarf
			consort_culture = copper_dwarf
			consort_culture = kronium_dwarf
			consort_culture = quartz_dwarf
			consort_culture = sapphire_dwarf
			consort_culture = ramsteel_dwarf
			consort_culture = mithril_dwarf
			consort_culture = dagrite_dwarf
			consort_culture = agate_dwarf
			consort_culture = platinum_dwarf
			consort_culture = opal_dwarf
			consort_culture = lead_dwarf
			consort_culture = marble_dwarf
			consort_culture = cobalt_dwarf
			consort_culture = flint_dwarf
			consort_culture = titanium_dwarf
			consort_culture = pyrite_dwarf
			consort_culture = basalt_dwarf
			consort_culture = topaz_dwarf
			consort_culture = peridot_dwarf
			consort_culture = granite_dwarf
			consort_culture = amethyst_dwarf
			consort_culture = emerald_dwarf
			consort_culture = jade_dwarf
			consort_culture = malachite_dwarf
			consort_culture = amber_dwarf
			consort_culture = citrine_dwarf
			consort_culture = garnet_dwarf
			consort_culture = diamond_dwarf
			consort_culture = steel_dwarf
			consort_culture = nephrite_dwarf
			consort_culture = alloy_dwarf
		}
	}
}

consort_is_gnomish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_gnomish_tt
		OR = {
			consort_culture = cliff_gnome
			consort_culture = creek_gnome
			consort_culture = imperial_gnome
			consort_culture = delta_gnome
			consort_culture = tinker_gnome
		}
	}
}

consort_is_human = {
	custom_trigger_tooltip = {
		tooltip = consort_is_human_tt
		OR = {
			#Anbennarian
			consort_culture = anbenncoster
			consort_culture = west_damerian
			consort_culture = east_damerian
			consort_culture = pearlsedger
			consort_culture = crownsman
			consort_culture = vernman
			consort_culture = exwesser
			consort_culture = arbarani
			consort_culture = esmari
			consort_culture = arannese
			consort_culture = nathalairey
			consort_culture = uelairey
			consort_culture = aldresian
			consort_culture = telgeiran
			consort_culture = pashainey
			consort_culture = vanburian
			consort_culture = themarian
			consort_culture = havoric
			consort_culture = dhanaenno
			#Alenic
			consort_culture = gawedi
			consort_culture = old_alenic
			consort_culture = blue_reachman
			consort_culture = vertesker
			consort_culture = moorman
			consort_culture = wexonard
			consort_culture = marrodic
			#Businori
			consort_culture = busilari
			consort_culture = tefori
			consort_culture = ilatani
			#Escanni
			consort_culture = black_castanorian
			consort_culture = castanorian
			consort_culture = castellyrian
			consort_culture = marcher
			consort_culture = adenner
			consort_culture = white_reachman
			consort_culture = merine
			consort_culture = luciander
			consort_culture = ancardian
			consort_culture = rogieran
			consort_culture = elikhander
			consort_culture = heartman
			consort_culture = alenori
			consort_culture = stalboric
			consort_culture = ravenmarcher
			consort_culture = ionnic
			consort_culture = estairey
			consort_culture = anbenlander
			consort_culture = nurcestiran
			consort_culture = esthili
			consort_culture = rosanda
			consort_culture = corintari
			consort_culture = farrani
			consort_culture = black_demesner
			#Dostanorian
			consort_culture = corvurian
			consort_culture = ourdi
			consort_culture = cardesti
			consort_culture = dostanorian
			consort_culture = ravenmarcher_d
			consort_culture = neratican
			#kheteratan
			consort_culture = hapremiti
			consort_culture = shasouran
			consort_culture = korosheshi
			consort_culture = tijarikheti
			consort_culture = irsmahapan
			consort_culture = horakheti
			#Akasi
			consort_culture = desha
			consort_culture = far_akasi
			consort_culture = khasani
			#Lencori
			consort_culture = high_lorentish
			consort_culture = low_lorentish
			consort_culture = derannic
			consort_culture = sorncosti
			consort_culture = roilsardi
			consort_culture = iochander
			consort_culture = sornicandi
			#Reachman
			consort_culture = blue_reachman_r
			consort_culture = white_reachman_r
			consort_culture = moorman_r
			consort_culture = green_reachman
			consort_culture = black_reachman
			#Gerudian
			consort_culture = reverian
			consort_culture = west_dalr
			consort_culture = east_dalr
			consort_culture = olavish
			consort_culture = talderannic
			consort_culture = perlatter
			#Bulwari
			consort_culture = bahari
			consort_culture = gelkar
			consort_culture = brasanni
			consort_culture = surani
			consort_culture = zanite
			consort_culture = maqeti
			consort_culture = masnsih
			consort_culture = sadnatu
			consort_culture = kuzarami
			consort_culture = abtazari
			#Upper Raheni
			consort_culture = kamtarhid
			consort_culture = khedarid
			consort_culture = shamadhan
			consort_culture = shandibad
			consort_culture = rajnadhid
			consort_culture = sobhagand
			#Middle Raheni
			consort_culture = ghavaanaj
			consort_culture = muthadhaya
			consort_culture = rasarhid
			consort_culture = sarisungi
			#Lower Raheni
			consort_culture = sarniryabsad
			consort_culture = dhukharuved
			consort_culture = rabhidarubsad
			consort_culture = ghankedhen
			consort_culture = pasindesh
			consort_culture = raghamidesh
			#LakeBoi
			consort_culture = metsamic
			consort_culture = zabatlari
			consort_culture = khamgunai
			consort_culture = kukatodic
			#Trollsbayer
			consort_culture = valorman
			consort_culture = isobeliner
			consort_culture = zanlibi
			consort_culture = marlliander
			consort_culture = cestirmarker
			#Ynnsman
			consort_culture = corinsfielder
			consort_culture = istranari
			consort_culture = new_havoric
			consort_culture = steadsman
			consort_culture = dustman
			consort_culture = sarnik
			
			#Bom
			consort_culture = ranilau
			consort_culture = biengdi
			consort_culture = gon
			consort_culture = risbeko
			consort_culture = chengrong
			consort_culture = khom
			consort_culture = teplin
			#Kai
			consort_culture = phonan
			consort_culture = hinphat
			consort_culture = bokai
			consort_culture = binhrung
			consort_culture = sikai
			#Kelino
			consort_culture = kelino
			consort_culture = jahe_kelino
			consort_culture = yan_kelino
			consort_culture = kano_kelino
			consort_culture = gataw
			#Yanglam
			consort_culture = hujan
			consort_culture = banyak
			consort_culture = paru
			consort_culture = sirtana
			#Yan
			consort_culture = river_yan
			consort_culture = hill_yan
			consort_culture = coastal_yan
			consort_culture = forest_yan
			consort_culture = western_yan
			consort_culture = northern_yan
			consort_culture = southern_yan
			consort_culture = eastern_yan
			consort_culture = daxug
			consort_culture = kuldaakin
			consort_culture = steppe_yan
			consort_culture = rahen_yan
			consort_culture = bom_kai_yan
			#Odheongun
			consort_culture = menjeotaen
			consort_culture = sangsogha
			consort_culture = guwaadun
			#Khantaar
			consort_culture = shuvuush
			consort_culture = runsukhi
			consort_culture = plateau_runsukhi
			#Khudi
			consort_culture = oinukhudi
			consort_culture = anarkhudi
			#Besholgi
			consort_culture = tuugalak
			consort_culture = ulukungu
			consort_culture = mogirga
			#Wuhyun
			consort_culture = ikaniwagain
			consort_culture = kintonan
			consort_culture = azepyanunin
			consort_culture = rinonokegyun

			#Fangaulan
			consort_culture = mantimatu
			consort_culture = ndurubu
			consort_culture = kaino
			consort_culture = tamajoba
			consort_culture = taafi
			consort_culture = jiromji
			consort_culture = binwarji

			#Vurebindu
			consort_culture = zuvunwa
			consort_culture = kuivanhi
			consort_culture = kudenta
			consort_culture = gomzumu
			consort_culture = egilshibi

			#Irsukuba
			consort_culture = kudemtu
			consort_culture = gumzemo
			consort_culture = ikilshebe
			consort_culture = zovanwe
			consort_culture = kuivendi
			consort_culture = echenka


			#Mengi
			consort_culture = ofehibi
			consort_culture = metobesebi
			consort_culture = talilibeti
			consort_culture = yeteferen
			consort_culture = sitewosi

			#Baashidi
			consort_culture = ashamadi
			consort_culture = dhebiji
			consort_culture = suhratbi
			consort_culture = guryadagga
			
			#Tanizu
			consort_culture = tanizu
			consort_culture = dakinshi
			consort_culture = antmvura
			consort_culture = kombedak
			consort_culture = umsozidak
			consort_culture = wakoodak
		}
	}
}

consort_is_half_orcish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_half_orc_tt
		OR = {
			consort_culture = half_orc
			consort_culture = grombar_half_orc
			consort_culture = chippengarder_half_orc
			consort_culture = wuhyun_half_orc
			consort_culture = yan_half_orc
		}
	}
}

consort_is_orcish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_orcish_tt
		OR = {
			consort_culture = green_orc
			consort_culture = gray_orc
			consort_culture = black_orc
			consort_culture = blooded_orc
			consort_culture = cavelurker_orc
			consort_culture = drakeclaw_orc
			consort_culture = highhold_orc
			consort_culture = manhunter_orc
			consort_culture = moltenbrand_orc
			consort_culture = skull_orc
			consort_culture = brown_orc
			consort_culture = emerald_orc
			consort_culture = grombar_orc
			consort_culture = rugan_orc
			consort_culture = ungulan_orc
			consort_culture = barumand_orc
			consort_culture = karashari_orc
			consort_culture = redtusk_orc
			consort_culture = ozgar_orc
		}
	}
}

consort_is_goblin = {
	custom_trigger_tooltip = {
		tooltip = consort_is_goblin_tt
		OR = {
			consort_culture = forest_goblin
			consort_culture = common_goblin
			dwarovar_goblin_culture_consort = yes
			consort_culture = exodus_goblin
			consort_culture = city_goblin
			consort_culture = march_goblin
			consort_culture = soot_goblin
		}
	}
}

consort_is_gnollish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_gnollish_tt
		OR = {
			consort_culture = sorrowclaw_gnoll
			consort_culture = sandfang_gnoll
			consort_culture = seascourge_gnoll
			consort_culture = hill_gnoll
			consort_culture = flamemarked_gnoll
			consort_culture = fieldstalker_gnoll
			consort_culture = windhowler_gnoll
			consort_culture = ruinscourge_gnoll
			consort_culture = dovesworn_gnoll
			consort_culture = suncrown_gnoll
		}
	}
}

consort_is_kobold = {
	custom_trigger_tooltip = {
		tooltip = consort_is_kobold_tt
		OR = {
			consort_culture = redscale_kobold
			consort_culture = bluescale_kobold
			consort_culture = greenscale_kobold
			consort_culture = kobildzani_kobold
			consort_culture = darkscale_kobold
			consort_culture = goldscale_kobold
			consort_culture = steelscale_kobold
		}
	}
}

consort_is_lizardfolk = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_lizardfolk_tt
		OR = {
			consort_culture = shagashay_lizardfolk
			consort_culture = ashhama_lizardfolk
			consort_culture = ichiadza_lizardfolk
			consort_culture = rhada_lizardfolk
			consort_culture = arraskay_lizardfolk
			consort_culture = ichyaza_lizardfolk
			consort_culture = shagatyn_lizardfolk
			consort_culture = skarakara_lizardfolk
			consort_culture = mashkay_lizardfolk
			consort_culture = karshyray_lizardfolk
			consort_culture = adzalanas_lizardfolk
			consort_culture = itayzemby_lizardfolk
			consort_culture = cyazizeta_lizardfolk
		}
	}
}

consort_is_halfling = {
	custom_trigger_tooltip = {
		tooltip = consort_is_halfling_tt
		OR = {
			consort_culture = imperial_halfling
			consort_culture = bluefoot_halfling
			consort_culture = redfoot_halfling
			consort_culture = newfoot_halfling
			consort_culture = visfoot_halfling
			consort_culture = towerfoot_halfling
			consort_culture = pipefoot_halfling
			consort_culture = amezatany
			consort_culture = mboala
			consort_culture = mazava
			consort_culture = vyoronsi
			consort_culture = fomarati
			consort_culture = zohebidi
		}
	}
}

consort_is_harimari = {
	custom_trigger_tooltip = {
		tooltip = consort_is_harimari_tt
		OR = {
			consort_culture = royal_harimari
			consort_culture = serene_harimari
			consort_culture = primal_harimari
			consort_culture = roaming_harimari
			consort_culture = honourbound_harimari
			consort_culture = silent_harimari
			consort_culture = ashwoven_harimari
		}
	}
}

consort_is_hobgoblin = {
	custom_trigger_tooltip = {
		tooltip = consort_is_hobgoblin_tt
		OR = {
			consort_culture = boar_command
			consort_culture = wolf_command
			consort_culture = lion_command
			consort_culture = dragon_command
			consort_culture = tiger_command
			consort_culture = elephant_command
			consort_culture = swallow_command
			consort_culture = fenghuang_command
			consort_culture = eagle_command
		}
	}
}

consort_is_troll = {
	custom_trigger_tooltip = {
		tooltip = consort_is_troll_tt
		OR = {
			consort_culture = fjord_troll
			consort_culture = forest_troll
			consort_culture = swamp_troll
			consort_culture = cave_troll
			consort_culture = hill_troll
		}
	}
}

consort_is_ogre = {
	custom_trigger_tooltip = {
		tooltip = consort_is_ogre_tt
		OR = {
			consort_culture = fathide_ogre
			consort_culture = mossmouth_ogre
			consort_culture = bloodtooth_ogre
			consort_culture = horned_ogre
			consort_culture = soulseeker_ogre
		}
	}
}

consort_is_harpy = {
	custom_trigger_tooltip = {
		tooltip = consort_is_harpy_tt
		OR = {
			consort_culture = firanyan_harpy
			consort_culture = siadunan_harpy
			consort_culture = pezarangi_harpy
			consort_culture = naleni_harpy
			consort_culture = nzeri_harpy
			consort_culture = jarnklo_harpy
			consort_culture = kiohan_harpy
		}
	}
}

consort_is_centaur = {
	custom_trigger_tooltip = {
		tooltip = consort_is_centaur_tt
		OR = {
			consort_culture = plain_centaur
			consort_culture = inaer_centaur
			consort_culture = avil_centaur
			consort_culture = irdu_centaur
			consort_culture = ghanzamh_centaur
			consort_culture = sochar_centaur
			consort_culture = anuar_centaur
			consort_culture = abalg_centaur
		}
	}
}

consort_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = consort_is_ruinborn_tt
		OR = {
			#North
			consort_culture = boek
			consort_culture = kwineh
			consort_culture = cheshoshi
			consort_culture = duskers
			consort_culture = starborn
			consort_culture = teira
			#South
			consort_culture = soruinic
			#Ynnic
			consort_culture = rzentur
			consort_culture = old_rzentur
			consort_culture = dolindhan
			consort_culture = sarda
			consort_culture = malacnari
			consort_culture = brelari
			#Eordan
			consort_culture = selphereg
			consort_culture = caamas
			consort_culture = peitar
			consort_culture = tuathak
			consort_culture = snecboth
			consort_culture = fograc
			#Taychendi
			consort_culture = larankarha
			consort_culture = yodhanpir
			consort_culture = kalavendhi
			consort_culture = thekvrystana
			#Kheionai
			consort_culture = degabhen
			consort_culture = oktibhen
			consort_culture = kherkabhen
			consort_culture = lokebhen
			consort_culture = ormabhen
			consort_culture = arpebhen
			consort_culture = ambhen
			consort_culture = kimabhen
			consort_culture = empkhebhen
			consort_culture = besolabhen
			consort_culture = enebhen
			consort_culture = deyebhen
			consort_culture = apikhobhen
			consort_culture = keyobhen
			consort_culture = anisibhen
			consort_culture = amgrebhen
			consort_culture = eltibhen
			#Eltibhari
			consort_culture = eltibhar
			#Harafic
			consort_culture = harafe
			consort_culture = kooras
			consort_culture = mayte
			consort_culture = epednar
			#Amadian
			consort_culture = quchamar
			consort_culture = chaqanel
			consort_culture = quruwei
			consort_culture = chamullach
			consort_culture = banche
			consort_culture = faalte
			#Devandi
			consort_culture = mteibhar
			consort_culture = basobhar
			consort_culture = chendhyan
			#Effelai
			consort_culture = parura
			consort_culture = effe
			consort_culture = laii
			consort_culture = thamvoii
			consort_culture = oronoii
			#Veykodan
			consort_culture = veykodan
			#Degenerated
			consort_culture = leechmen
			consort_culture = bloodfeeders
			consort_culture = silent_watchers
			consort_culture = cursed_ones
			consort_culture = ice_sleepers
			consort_culture = seedthrall
			consort_culture = berrirghe
			consort_culture = mteirghe
		}
	}
}

fast_consort_is_half_elven = {
	custom_trigger_tooltip = {
		tooltip = consort_is_half_elven_tt
		has_consort_flag = half_elven_consort
	}
}

fast_consort_is_elven = {
	custom_trigger_tooltip = {
		tooltip = consort_is_elven_tt
		has_consort_flag = elven_consort
	}
}

fast_consort_is_dwarven = {
	custom_trigger_tooltip = {
		tooltip = consort_is_dwarven_tt
		has_consort_flag = dwarven_consort
	}
}

fast_consort_is_gnomish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_gnomish_tt
		has_consort_flag = gnomish_consort
	}
}

fast_consort_is_human = {
	custom_trigger_tooltip = {
		tooltip = consort_is_human_tt
		has_consort_flag = human_consort
	}
}

fast_consort_is_half_orcish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_half_orcish_tt
		has_consort_flag = half_orcish_consort
	}
}

fast_consort_is_orcish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_orcish_tt
		has_consort_flag = orcish_consort
	}
}

fast_consort_is_goblin = {
	custom_trigger_tooltip = {
		tooltip = consort_is_goblin_tt
		has_consort_flag = goblin_consort
	}
}

fast_consort_is_gnollish = {
	custom_trigger_tooltip = {
		tooltip = consort_is_gnollish_tt
		has_consort_flag = gnollish_consort
	}
}

fast_consort_is_kobold = {
	custom_trigger_tooltip = {
		tooltip = consort_is_kobold_tt
		has_consort_flag = kobold_consort
	}
}

fast_consort_is_lizardfolk = {
	custom_trigger_tooltip = {
		tooltip = consort_is_lizardfolk_tt
		has_consort_flag = lizardfolk_consort
	}
}

fast_consort_is_halfling = {
	custom_trigger_tooltip = {
		tooltip = consort_is_halfling_tt
		has_consort_flag = halfling_consort
	}
}

fast_consort_is_harimari = {
	custom_trigger_tooltip = {
		tooltip = consort_is_harimari_tt
		has_consort_flag = harimari_consort
	}
}

fast_consort_is_hobgoblin = {
	custom_trigger_tooltip = {
		tooltip = consort_is_hobgoblin_tt
		has_consort_flag = hobgoblin_consort
	}
}

fast_consort_is_troll = {
	custom_trigger_tooltip = {
		tooltip = consort_is_troll_tt
		has_consort_flag = troll_consort
	}
}

fast_consort_is_ogre = {
	custom_trigger_tooltip = {
		tooltip = consort_is_ogre_tt
		has_consort_flag = ogre_consort
	}
}

fast_consort_is_harpy = {
	custom_trigger_tooltip = {
		tooltip = consort_is_harpy_tt
		has_consort_flag = harpy_consort
	}
}

fast_consort_is_centaur = {
	custom_trigger_tooltip = {
		tooltip = consort_is_centaur_tt
		has_consort_flag = centaur_consort
	}
}

fast_consort_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = consort_is_ruinborn_tt
		has_consort_flag = ruinborn_consort
	}
}

heir_is_half_elven = {
	custom_trigger_tooltip = {
		tooltip = heir_is_half_elven_tt
		OR = {
			heir_culture = half_elf
			heir_culture = bulwari_half_elf
		}
	}
}

heir_is_elven = {
	custom_trigger_tooltip = {
		tooltip = heir_is_elven_tt
		OR = {
			heir_culture = moon_elf
			heir_culture = sun_elf
			heir_culture = star_elf
			heir_culture = desert_elf
			heir_culture = dawn_elf
			heir_culture = horizon_elf
			heir_culture = wood_elf
			heir_culture = sea_elf
			heir_culture = sunrise_elf
		}
	}
}

heir_is_dwarven = {
	custom_trigger_tooltip = {
		tooltip = heir_is_dwarven_tt
		OR = {
			heir_culture = ruby_dwarf
			heir_culture = silver_dwarf
			heir_culture = stone_dwarf
			heir_culture = iron_dwarf
			heir_culture = obsidian_dwarf
			heir_culture = gold_dwarf
			heir_culture = copper_dwarf
			heir_culture = kronium_dwarf
			heir_culture = quartz_dwarf
			heir_culture = sapphire_dwarf
			heir_culture = ramsteel_dwarf
			heir_culture = mithril_dwarf
			heir_culture = dagrite_dwarf
			heir_culture = agate_dwarf
			heir_culture = platinum_dwarf
			heir_culture = opal_dwarf
			heir_culture = lead_dwarf
			heir_culture = marble_dwarf
			heir_culture = cobalt_dwarf
			heir_culture = flint_dwarf
			heir_culture = titanium_dwarf
			heir_culture = pyrite_dwarf
			heir_culture = basalt_dwarf
			heir_culture = topaz_dwarf
			heir_culture = peridot_dwarf
			heir_culture = granite_dwarf
			heir_culture = amethyst_dwarf
			heir_culture = emerald_dwarf
			heir_culture = jade_dwarf
			heir_culture = malachite_dwarf
			heir_culture = amber_dwarf
			heir_culture = citrine_dwarf
			heir_culture = garnet_dwarf
			heir_culture = diamond_dwarf
			heir_culture = steel_dwarf
			heir_culture = nephrite_dwarf
			heir_culture = alloy_dwarf
		}
	}
}

heir_is_gnomish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_gnomish_tt
		OR = {
			heir_culture = cliff_gnome
			heir_culture = creek_gnome
			heir_culture = imperial_gnome
			heir_culture = delta_gnome
			heir_culture = tinker_gnome
		}
	}
}

heir_is_human = {
	custom_trigger_tooltip = {
		tooltip = heir_is_human_tt
		OR = {
			#Anbennarian
			heir_culture = anbenncoster
			heir_culture = west_damerian
			heir_culture = east_damerian
			heir_culture = pearlsedger
			heir_culture = crownsman
			heir_culture = vernman
			heir_culture = exwesser
			heir_culture = arbarani
			heir_culture = esmari
			heir_culture = arannese
			heir_culture = nathalairey
			heir_culture = uelairey
			heir_culture = aldresian
			heir_culture = telgeiran
			heir_culture = pashainey
			heir_culture = vanburian
			heir_culture = themarian
			heir_culture = havoric
			heir_culture = dhanaenno
			#Alenic
			heir_culture = gawedi
			heir_culture = old_alenic
			heir_culture = blue_reachman
			heir_culture = vertesker
			heir_culture = moorman
			heir_culture = wexonard
			heir_culture = marrodic
			#Businori
			heir_culture = busilari
			heir_culture = tefori
			heir_culture = ilatani
			#Escanni
			heir_culture = black_castanorian
			heir_culture = castanorian
			heir_culture = castellyrian
			heir_culture = marcher
			heir_culture = adenner
			heir_culture = white_reachman
			heir_culture = merine
			heir_culture = luciander
			heir_culture = ancardian
			heir_culture = rogieran
			heir_culture = elikhander
			heir_culture = heartman
			heir_culture = alenori
			heir_culture = stalboric
			heir_culture = ravenmarcher
			heir_culture = ionnic
			heir_culture = estairey
			heir_culture = anbenlander
			heir_culture = nurcestiran
			heir_culture = esthili
			heir_culture = rosanda
			heir_culture = corintari
			heir_culture = farrani
			heir_culture = black_demesner
			#Dostanorian
			heir_culture = corvurian
			heir_culture = ourdi
			heir_culture = cardesti
			heir_culture = dostanorian
			heir_culture = ravenmarcher_d
			heir_culture = neratican
			#kheteratan
			heir_culture = hapremiti
			heir_culture = shasouran
			heir_culture = korosheshi
			heir_culture = tijarikheti
			heir_culture = irsmahapan
			heir_culture = horakheti
			#Akasi
			heir_culture = desha
			heir_culture = far_akasi
			heir_culture = khasani
			#Lencori
			heir_culture = high_lorentish
			heir_culture = low_lorentish
			heir_culture = derannic
			heir_culture = sorncosti
			heir_culture = roilsardi
			heir_culture = iochander
			heir_culture = sornicandi
			#Reachman
			heir_culture = blue_reachman_r
			heir_culture = white_reachman_r
			heir_culture = moorman_r
			heir_culture = green_reachman
			heir_culture = black_reachman
			#Gerudian
			heir_culture = reverian
			heir_culture = west_dalr
			heir_culture = east_dalr
			heir_culture = olavish
			heir_culture = talderannic
			heir_culture = perlatter
			#Bulwari
			heir_culture = bahari
			heir_culture = gelkar
			heir_culture = brasanni
			heir_culture = surani
			heir_culture = zanite
			heir_culture = maqeti
			heir_culture = masnsih
			heir_culture = sadnatu
			heir_culture = kuzarami
			heir_culture = abtazari
			#Upper Raheni
			heir_culture = kamtarhid
			heir_culture = khedarid
			heir_culture = shamadhan
			heir_culture = shandibad
			heir_culture = rajnadhid
			heir_culture = sobhagand
			#Middle Raheni
			heir_culture = ghavaanaj
			heir_culture = muthadhaya
			heir_culture = rasarhid
			heir_culture = sarisungi
			#Lower Raheni
			heir_culture = sarniryabsad
			heir_culture = dhukharuved
			heir_culture = rabhidarubsad
			heir_culture = ghankedhen
			heir_culture = pasindesh
			heir_culture = raghamidesh
			#LakeBoi
			heir_culture = metsamic
			heir_culture = zabatlari
			heir_culture = khamgunai
			heir_culture = kukatodic
			#Trollsbayer
			heir_culture = valorman
			heir_culture = isobeliner
			heir_culture = zanlibi
			heir_culture = marlliander
			heir_culture = cestirmarker
			#Ynnsman
			heir_culture = corinsfielder
			heir_culture = istranari
			heir_culture = new_havoric
			heir_culture = steadsman
			heir_culture = dustman
			heir_culture = sarnik
			
			#Bom
			heir_culture = ranilau
			heir_culture = biengdi
			heir_culture = gon
			heir_culture = risbeko
			heir_culture = chengrong
			heir_culture = khom
			heir_culture = teplin
			#Kai
			heir_culture = phonan
			heir_culture = hinphat
			heir_culture = bokai
			heir_culture = binhrung
			heir_culture = sikai
			#Kelino
			heir_culture = kelino
			heir_culture = jahe_kelino
			heir_culture = yan_kelino
			heir_culture = kano_kelino
			heir_culture = gataw
			#Yanglam
			heir_culture = hujan
			heir_culture = banyak
			heir_culture = paru
			heir_culture = sirtana
			#Yan
			heir_culture = river_yan
			heir_culture = hill_yan
			heir_culture = coastal_yan
			heir_culture = forest_yan
			heir_culture = western_yan
			heir_culture = northern_yan
			heir_culture = southern_yan
			heir_culture = eastern_yan
			heir_culture = daxug
			heir_culture = kuldaakin
			heir_culture = steppe_yan
			heir_culture = rahen_yan
			heir_culture = bom_kai_yan
			#Odheongun
			heir_culture = menjeotaen
			heir_culture = sangsogha
			heir_culture = guwaadun
			#Khantaar
			heir_culture = shuvuush
			heir_culture = runsukhi
			heir_culture = plateau_runsukhi
			#Khudi
			ruler_culture = oinukhudi
			ruler_culture = anarkhudi
			#Besholgi
			heir_culture = tuugalak
			heir_culture = ulukungu
			heir_culture = mogirga
			#Wuhyun
			heir_culture = ikaniwagain
			heir_culture = kintonan
			heir_culture = azepyanunin
			heir_culture = rinonokegyun

			#Fangaulan
			heir_culture = mantimatu
			heir_culture = ndurubu
			heir_culture = kaino
			heir_culture = tamajoba
			heir_culture = taafi
			heir_culture = jiromji
			heir_culture = binwarji

			#Vurebindu
			heir_culture = zuvunwa
			heir_culture = kuivanhi
			heir_culture = kudenta
			heir_culture = gomzumu
			heir_culture = egilshibi

			#Irsukuba
			heir_culture = kudemtu
			heir_culture = gumzemo
			heir_culture = ikilshebe
			heir_culture = zovanwe
			heir_culture = kuivendi
			heir_culture = echenka


			#Mengi
			heir_culture = ofehibi
			heir_culture = metobesebi
			heir_culture = talilibeti
			heir_culture = yeteferen
			heir_culture = sitewosi

			#Baashidi
			heir_culture = ashamadi
			heir_culture = dhebiji
			heir_culture = suhratbi
			heir_culture = guryadagga
			
			#Tanizu
			heir_culture = tanizu
			heir_culture = dakinshi
			heir_culture = antmvura
			heir_culture = kombedak
			heir_culture = umsozidak
			heir_culture = wakoodak
		}
	}
}

heir_is_half_orcish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_half_orc_tt
		OR = {
			heir_culture = half_orc
			heir_culture = grombar_half_orc
			heir_culture = chippengarder_half_orc
			heir_culture = wuhyun_half_orc
			heir_culture = yan_half_orc
		}
	}
}

heir_is_orcish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_orcish_tt
		OR = {
			heir_culture = green_orc
			heir_culture = gray_orc
			heir_culture = black_orc
			heir_culture = blooded_orc
			heir_culture = cavelurker_orc
			heir_culture = drakeclaw_orc
			heir_culture = highhold_orc
			heir_culture = manhunter_orc
			heir_culture = moltenbrand_orc
			heir_culture = skull_orc
			heir_culture = brown_orc
			heir_culture = emerald_orc
			heir_culture = grombar_orc
			heir_culture = rugan_orc
			heir_culture = ungulan_orc
			heir_culture = barumand_orc
			heir_culture = karashari_orc
			heir_culture = redtusk_orc
			heir_culture = ozgar_orc
		}
	}
}

heir_is_goblin = {
	custom_trigger_tooltip = {
		tooltip = heir_is_goblin_tt
		OR = {
			heir_culture = forest_goblin
			heir_culture = common_goblin
			dwarovar_goblin_culture_heir = yes
			heir_culture = exodus_goblin
			heir_culture = city_goblin
			heir_culture = march_goblin
			heir_culture = soot_goblin
		}
	}
}

heir_is_gnollish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_gnollish_tt
		OR = {
			heir_culture = sorrowclaw_gnoll
			heir_culture = sandfang_gnoll
			heir_culture = seascourge_gnoll
			heir_culture = hill_gnoll
			heir_culture = flamemarked_gnoll
			heir_culture = fieldstalker_gnoll
			heir_culture = windhowler_gnoll
			heir_culture = ruinscourge_gnoll
			heir_culture = dovesworn_gnoll
			heir_culture = suncrown_gnoll
		}
	}
}

heir_is_kobold = {
	custom_trigger_tooltip = {
		tooltip = heir_is_kobold_tt
		OR = {
			heir_culture = redscale_kobold
			heir_culture = bluescale_kobold
			heir_culture = greenscale_kobold
			heir_culture = kobildzani_kobold
			heir_culture = darkscale_kobold
			heir_culture = goldscale_kobold
			heir_culture = steelscale_kobold
		}
	}
}

heir_is_lizardfolk = {
	custom_trigger_tooltip = {
		tooltip = ruler_is_lizardfolk_tt
		OR = {
			heir_culture = shagashay_lizardfolk
			heir_culture = ashhama_lizardfolk
			heir_culture = ichiadza_lizardfolk
			heir_culture = rhada_lizardfolk
			heir_culture = arraskay_lizardfolk
			heir_culture = ichyaza_lizardfolk
			heir_culture = shagatyn_lizardfolk
			heir_culture = skarakara_lizardfolk
			heir_culture = mashkay_lizardfolk
			heir_culture = karshyray_lizardfolk
			heir_culture = adzalanas_lizardfolk
			heir_culture = itayzemby_lizardfolk
			heir_culture = cyazizeta_lizardfolk
		}
	}
}

heir_is_halfling = {
	custom_trigger_tooltip = {
		tooltip = heir_is_halfling_tt
		OR = {
			heir_culture = imperial_halfling
			heir_culture = bluefoot_halfling
			heir_culture = redfoot_halfling
			heir_culture = newfoot_halfling
			heir_culture = visfoot_halfling
			heir_culture = towerfoot_halfling
			heir_culture = pipefoot_halfling
			heir_culture = amezatany
			heir_culture = mboala
			heir_culture = mazava
			heir_culture = vyoronsi
			heir_culture = fomarati
			heir_culture = zohebidi
		}
	}
}

heir_is_harimari = {
	custom_trigger_tooltip = {
		tooltip = heir_is_harimari_tt
		OR = {
			heir_culture = royal_harimari
			heir_culture = serene_harimari
			heir_culture = primal_harimari
			heir_culture = roaming_harimari
			heir_culture = honourbound_harimari
			heir_culture = silent_harimari
			heir_culture = ashwoven_harimari
		}
	}
}

heir_is_hobgoblin = {
	custom_trigger_tooltip = {
		tooltip = heir_is_hobgoblin_tt
		OR = {
			heir_culture = boar_command
			heir_culture = wolf_command
			heir_culture = lion_command
			heir_culture = dragon_command
			heir_culture = tiger_command
			heir_culture = elephant_command
			heir_culture = swallow_command
			heir_culture = fenghuang_command
			heir_culture = eagle_command
		}
	}
}

heir_is_troll = {
	custom_trigger_tooltip = {
		tooltip = heir_is_troll_tt
		OR = {
			heir_culture = fjord_troll
			heir_culture = forest_troll
			heir_culture = swamp_troll
			heir_culture = cave_troll
			heir_culture = hill_troll
		}
	}
}

heir_is_ogre = {
	custom_trigger_tooltip = {
		tooltip = heir_is_ogre_tt
		OR = {
			heir_culture = fathide_ogre
			heir_culture = mossmouth_ogre
			heir_culture = bloodtooth_ogre
			heir_culture = horned_ogre
			heir_culture = soulseeker_ogre
		}
	}
}

heir_is_harpy = {
	custom_trigger_tooltip = {
		tooltip = heir_is_harpy_tt
		OR = {
			heir_culture = firanyan_harpy
			heir_culture = siadunan_harpy
			heir_culture = pezarangi_harpy
			heir_culture = naleni_harpy
			heir_culture = nzeri_harpy
			heir_culture = jarnklo_harpy
			heir_culture = kiohan_harpy
		}
	}
}

heir_is_centaur = {
	custom_trigger_tooltip = {
		tooltip = heir_is_centaur_tt
		OR = {
			heir_culture = plain_centaur
			heir_culture = inaer_centaur
			heir_culture = avil_centaur
			heir_culture = irdu_centaur
			heir_culture = ghanzamh_centaur
			heir_culture = sochar_centaur
			heir_culture = anuar_centaur
			heir_culture = abalg_centaur
		}
	}
}

heir_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = heir_is_ruinborn_tt
		OR = {
			#North
			heir_culture = boek
			heir_culture = kwineh
			heir_culture = cheshoshi
			heir_culture = duskers
			heir_culture = starborn
			heir_culture = teira
			#South
			heir_culture = soruinic
			#Ynnic
			heir_culture = rzentur
			heir_culture = old_rzentur
			heir_culture = dolindhan
			heir_culture = sarda
			heir_culture = malacnari
			heir_culture = brelari
			#Eordan
			heir_culture = selphereg
			heir_culture = caamas
			heir_culture = peitar
			heir_culture = tuathak
			heir_culture = snecboth
			heir_culture = fograc
			#Taychendi
			heir_culture = larankarha
			heir_culture = yodhanpir
			heir_culture = kalavendhi
			heir_culture = thekvrystana
			#Kheionai
			heir_culture = degabhen
			heir_culture = oktibhen
			heir_culture = kherkabhen
			heir_culture = lokebhen
			heir_culture = ormabhen
			heir_culture = arpebhen
			heir_culture = ambhen
			heir_culture = kimabhen
			heir_culture = empkhebhen
			heir_culture = besolabhen
			heir_culture = enebhen
			heir_culture = deyebhen
			heir_culture = apikhobhen
			heir_culture = keyobhen
			heir_culture = anisibhen
			heir_culture = amgrebhen
			heir_culture = eltibhen
			#Eltibhari
			heir_culture = eltibhar
			#Harafic
			heir_culture = harafe
			heir_culture = kooras
			heir_culture = mayte
			heir_culture = epednar
			#Amadian
			heir_culture = quchamar
			heir_culture = chaqanel
			heir_culture = quruwei
			heir_culture = chamullach
			heir_culture = banche
			heir_culture = faalte
			#Devandi
			heir_culture = mteibhar
			heir_culture = basobhar
			heir_culture = chendhyan
			#Effelai
			heir_culture = parura
			heir_culture = effe
			heir_culture = laii
			heir_culture = thamvoii
			heir_culture = oronoii
			#Veykodan
			heir_culture = veykodan
			#Degenerated
			heir_culture = leechmen
			heir_culture = bloodfeeders
			heir_culture = silent_watchers
			heir_culture = cursed_ones
			heir_culture = ice_sleepers
			heir_culture = seedthrall
			heir_culture = berrirghe
			heir_culture = mteirghe
		}
	}
}

fast_heir_is_half_elven = {
	custom_trigger_tooltip = {
		tooltip = heir_is_half_elven_tt
		has_heir_flag = half_elven_heir
	}
}

fast_heir_is_elven = {
	custom_trigger_tooltip = {
		tooltip = heir_is_elven_tt
		has_heir_flag = elven_heir
	}
}

fast_heir_is_dwarven = {
	custom_trigger_tooltip = {
		tooltip = heir_is_dwarven_tt
		has_heir_flag = dwarven_heir
	}
}

fast_heir_is_gnomish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_gnomish_tt
		has_heir_flag = gnomish_heir
	}
}

fast_heir_is_human = {
	custom_trigger_tooltip = {
		tooltip = heir_is_human_tt
		has_heir_flag = human_heir
	}
}

fast_heir_is_half_orcish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_half_orcish_tt
		has_heir_flag = half_orcish_heir
	}
}

fast_heir_is_orcish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_orcish_tt
		has_heir_flag = orcish_heir
	}
}

fast_heir_is_goblin = {
	custom_trigger_tooltip = {
		tooltip = heir_is_goblin_tt
		has_heir_flag = goblin_heir
	}
}

fast_heir_is_gnollish = {
	custom_trigger_tooltip = {
		tooltip = heir_is_gnollish_tt
		has_heir_flag = gnollish_heir
	}
}

fast_heir_is_kobold = {
	custom_trigger_tooltip = {
		tooltip = heir_is_kobold_tt
		has_heir_flag = kobold_heir
	}
}

fast_heir_is_lizardfolk = {
	custom_trigger_tooltip = {
		tooltip = heir_is_lizardfolk_tt
		has_heir_flag = lizardfolk_heir
	}
}

fast_heir_is_halfling = {
	custom_trigger_tooltip = {
		tooltip = heir_is_halfling_tt
		has_heir_flag = halfling_heir
	}
}

fast_heir_is_harimari = {
	custom_trigger_tooltip = {
		tooltip = heir_is_harimari_tt
		has_heir_flag = harimari_heir
	}
}

fast_heir_is_hobgoblin = {
	custom_trigger_tooltip = {
		tooltip = heir_is_hobgoblin_tt
		has_heir_flag = hobgoblin_heir
	}
}

fast_heir_is_troll = {
	custom_trigger_tooltip = {
		tooltip = heir_is_troll_tt
		has_heir_flag = troll_heir
	}
}

fast_heir_is_ogre = {
	custom_trigger_tooltip = {
		tooltip = heir_is_ogre_tt
		has_heir_flag = ogre_heir
	}
}

fast_heir_is_harpy = {
	custom_trigger_tooltip = {
		tooltip = heir_is_harpy_tt
		has_heir_flag = harpy_heir
	}
}

fast_heir_is_centaur = {
	custom_trigger_tooltip = {
		tooltip = heir_is_centaur_tt
		has_heir_flag = centaur_heir
	}
}

fast_heir_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = heir_is_ruinborn_tt
		has_heir_flag = ruinborn_heir
	}
}

monstrous_culture = {
	OR = {
		culture_group = kobold
		culture_group = orcish
		culture_group = gnollish
		culture_group = goblin
		culture_group = harpy
		culture_group = giantkind
		culture_group = hobgoblin
		culture_group = centaur
		culture_group = ogre
		culture_group = degenerated_elf
		culture_group = lizardfolk
	}
	NOT = {
		culture = pezarangi_harpy
		culture = jarnklo_harpy
		culture = goldscale_kobold
		culture = cyazizeta_lizardfolk
		culture = nzeri_harpy
	}
}

culture_is_short_lived = {
	OR = {
		culture_group = anbennarian
		culture_group = alenic
		culture_group = businori
		culture_group = escanni
		culture_group = dostanorian_g
		culture_group = kheteratan
		culture_group = lencori
		culture_group = reachman
		culture_group = bulwari
		culture_group = gerudian
		culture_group = upper_raheni
		culture_group = middle_raheni
		culture_group = south_raheni
		culture_group = triunic
		culture_group = trollsbayer
		culture_group = ynnsman
		culture_group = halfling
		culture_group = harimari
		culture_group = kobold
		culture_group = lizardfolk
		culture_group = orcish
		culture_group = gnollish
		culture_group = goblin
		culture_group = harpy
		culture_group = giantkind
		culture_group = hobgoblin
		culture_group = centaur
		culture_group = ogre
		culture_group = north_ruinborn_elf
		culture_group = south_ruinborn_elf
		culture_group = ynnic_ruinborn_elf
		culture_group = eordan_ruinborn_elf
		culture_group = taychendi_ruinborn_elf
		culture_group = kheionai_ruinborn_elf
		culture_group = eltibhari_ruinborn_elf
		culture_group = harafic_ruinborn_elf
		culture_group = amadian_ruinborn_elf
		culture_group = devandi_ruinborn_elf
		culture_group = effelai_ruinborn_elf
		culture_group = degenerated_elf
		culture_group = bom
		culture_group = kai
		culture_group = kelino
		culture_group = yanglam
		culture_group = yan
		culture_group = odheongun
		culture_group = khantaar
		culture_group = besholgi
		culture_group = khudi
	}
}

culture_is_troll = {
	OR = {
		culture = fjord_troll
		culture = forest_troll
		culture = swamp_troll
		culture = cave_troll
		culture = hill_troll
	}
}

culture_is_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = culture_is_ruinborn_tt
		OR = {
			culture_group = north_ruinborn_elf
			culture_group = south_ruinborn_elf
			culture_group = ynnic_ruinborn_elf
			culture_group = eordan_ruinborn_elf
			culture_group = taychendi_ruinborn_elf
			culture_group = kheionai_ruinborn_elf
			culture_group = eltibhari_ruinborn_elf
			culture_group = harafic_ruinborn_elf
			culture_group = amadian_ruinborn_elf
			culture_group = devandi_ruinborn_elf
			culture_group = effelai_ruinborn_elf
			
			culture_group = degenerated_elf

		}
	}
}

#Used for the tt
culture_is_not_ruinborn = {
	custom_trigger_tooltip = {
		tooltip = culture_is_not_ruinborn_tt
		NOT = { culture_is_ruinborn = yes }
	}
}

#NOTE: I have left most triggers stuff using the culture_group = race stuff to avoid creating a large number of conflicts, however these new triggers are the syntax used by the script for pop events
culture_is_centaur = {
	culture_group = centaur
}

culture_is_dwarven = {
	culture_group = dwarven
}

culture_is_elven = {
	culture_group = elven
}

culture_is_gnollish = {
	culture_group = gnollish
}

culture_is_gnomish = {
	culture_group = gnomish
}

culture_is_goblin = {
	culture_group = goblin
}

culture_is_halfling = {
	culture_group = halfling
}

culture_is_half_elven = {
	OR = {
		culture = half_elf
		culture = bulwari_half_elf
		#this should contain half elves of other culture groups?
	}
}

culture_is_half_orcish = {
	OR = {
		culture = half_orc
		culture = grombar_half_orc
		culture = chippengarder_half_orc
		culture = wuhyun_half_orc
		culture = yan_half_orc
	}
}

culture_is_harimari = {
	culture_group = harimari
}

culture_is_harpy = {
	culture_group = harpy
}

culture_is_human = {
	custom_trigger_tooltip = {
		tooltip = culture_is_human_tt
		OR = {
			culture_group = anbennarian
			culture_group = alenic
			culture_group = businori
			culture_group = escanni
			culture_group = dostanorian_g
			culture_group = kheteratan
			culture_group = akasi
			culture_group = lencori
			culture_group = reachman
			culture_group = bulwari
			culture_group = gerudian
			culture_group = upper_raheni
			culture_group = middle_raheni
			culture_group = south_raheni
			culture_group = triunic
			culture_group = trollsbayer
			culture_group = ynnsman
			#whatever new halessi is
			culture_group = bom
			culture_group = kai
			culture_group = kelino
			culture_group = yanglam
			culture_group = yan
			culture_group = odheongun
			culture_group = khantaar
			culture_group = besholgi
			culture_group = wuhyun
			culture_group = west_sarhaly
			culture_group = irsukuba
			culture_group = mengi
			culture_group = inyaswarosa
			culture_group = baashidi
			culture_group = vurebindu
			culture_group = khudi
		}
		NOT = { culture_is_half_orcish = yes }
		NOT = { culture_is_half_elven = yes }
	}
}

culture_is_hobgoblin = {
	culture_group = hobgoblin
}

culture_is_kobold = {
	culture_group = kobold
}

culture_is_lizardfolk = {
	culture_group = lizardfolk
}

culture_is_ogre = {
	culture_group = ogre
}

culture_is_orcish = {
	culture_group = orcish
}

#If cultures are added, update these
has_centaur_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_centaur_advisor_tt
		OR = {
			employed_advisor = { culture = plain_centaur }
			employed_advisor = { culture = inaer_centaur }
			employed_advisor = { culture = avil_centaur }
			employed_advisor = { culture = irdu_centaur }
			employed_advisor = { culture = ghanzamh_centaur }
			employed_advisor = { culture = sochar_centaur }
			employed_advisor = { culture = anuar_centaur }
			employed_advisor = { culture = abalg_centaur }
		}
	}
}
has_centaur_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_centaur_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = plain_centaur }
			employed_advisor = { category = $category$ culture = inaer_centaur }
			employed_advisor = { category = $category$ culture = avil_centaur }
			employed_advisor = { category = $category$ culture = irdu_centaur }
			employed_advisor = { category = $category$ culture = ghanzamh_centaur }
			employed_advisor = { category = $category$ culture = sochar_centaur }
			employed_advisor = { category = $category$ culture = anuar_centaur }
			employed_advisor = { category = $category$ culture = abalg_centaur }
		}
	}
}

has_dwarven_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_dwarven_advisor_tt
		OR = {
			employed_advisor = { culture = ruby_dwarf }
			employed_advisor = { culture = silver_dwarf }
			employed_advisor = { culture = stone_dwarf }
			employed_advisor = { culture = iron_dwarf }
			employed_advisor = { culture = obsidian_dwarf }
			employed_advisor = { culture = gold_dwarf }
			employed_advisor = { culture = copper_dwarf }
			employed_advisor = { culture = kronium_dwarf }
			employed_advisor = { culture = quartz_dwarf }
			employed_advisor = { culture = sapphire_dwarf }
			employed_advisor = { culture = ramsteel_dwarf }
			employed_advisor = { culture = mithril_dwarf }
			employed_advisor = { culture = dagrite_dwarf }
			employed_advisor = { culture = agate_dwarf }
			employed_advisor = { culture = platinum_dwarf }
			employed_advisor = { culture = opal_dwarf }
			employed_advisor = { culture = lead_dwarf }
			employed_advisor = { culture = marble_dwarf }
			employed_advisor = { culture = cobalt_dwarf }
			employed_advisor = { culture = flint_dwarf }
			employed_advisor = { culture = titanium_dwarf }
			employed_advisor = { culture = pyrite_dwarf }
			employed_advisor = { culture = basalt_dwarf }
			employed_advisor = { culture = topaz_dwarf }
			employed_advisor = { culture = peridot_dwarf }
			employed_advisor = { culture = granite_dwarf }
			employed_advisor = { culture = amethyst_dwarf }
			employed_advisor = { culture = emerald_dwarf }
			employed_advisor = { culture = jade_dwarf }
			employed_advisor = { culture = malachite_dwarf }
			employed_advisor = { culture = amber_dwarf }
			employed_advisor = { culture = citrine_dwarf }
			employed_advisor = { culture = garnet_dwarf }
			employed_advisor = { culture = diamond_dwarf }
			employed_advisor = { culture = steel_dwarf }
			employed_advisor = { culture = nephrite_dwarf }
			employed_advisor = { culture = alloy_dwarf }
		}
	}
}
has_dwarven_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_dwarven_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = ruby_dwarf }
			employed_advisor = { category = $category$ culture = silver_dwarf }
			employed_advisor = { category = $category$ culture = stone_dwarf }
			employed_advisor = { category = $category$ culture = iron_dwarf }
			employed_advisor = { category = $category$ culture = obsidian_dwarf }
			employed_advisor = { category = $category$ culture = gold_dwarf }
			employed_advisor = { category = $category$ culture = copper_dwarf }
			employed_advisor = { category = $category$ culture = kronium_dwarf }
			employed_advisor = { category = $category$ culture = quartz_dwarf }
			employed_advisor = { category = $category$ culture = sapphire_dwarf }
			employed_advisor = { category = $category$ culture = ramsteel_dwarf }
			employed_advisor = { category = $category$ culture = mithril_dwarf }
			employed_advisor = { category = $category$ culture = dagrite_dwarf }
			employed_advisor = { category = $category$ culture = agate_dwarf }
			employed_advisor = { category = $category$ culture = platinum_dwarf }
			employed_advisor = { category = $category$ culture = opal_dwarf }
			employed_advisor = { category = $category$ culture = lead_dwarf }
			employed_advisor = { category = $category$ culture = marble_dwarf }
			employed_advisor = { category = $category$ culture = cobalt_dwarf }
			employed_advisor = { category = $category$ culture = flint_dwarf }
			employed_advisor = { category = $category$ culture = titanium_dwarf }
			employed_advisor = { category = $category$ culture = pyrite_dwarf }
			employed_advisor = { category = $category$ culture = basalt_dwarf }
			employed_advisor = { category = $category$ culture = topaz_dwarf }
			employed_advisor = { category = $category$ culture = peridot_dwarf }
			employed_advisor = { category = $category$ culture = granite_dwarf }
			employed_advisor = { category = $category$ culture = amethyst_dwarf }
			employed_advisor = { category = $category$ culture = emerald_dwarf }
			employed_advisor = { category = $category$ culture = jade_dwarf }
			employed_advisor = { category = $category$ culture = malachite_dwarf }
			employed_advisor = { category = $category$ culture = amber_dwarf }
			employed_advisor = { category = $category$ culture = citrine_dwarf }
			employed_advisor = { category = $category$ culture = garnet_dwarf }
			employed_advisor = { category = $category$ culture = diamond_dwarf }
			employed_advisor = { category = $category$ culture = steel_dwarf }
			employed_advisor = { category = $category$ culture = nephrite_dwarf }
			employed_advisor = { category = $category$ culture = alloy_dwarf }
		}
	}
}

has_elven_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_elven_advisor_tt
		OR = {
			employed_advisor = { culture = moon_elf }
			employed_advisor = { culture = sun_elf }
			employed_advisor = { culture = star_elf }
			employed_advisor = { culture = desert_elf }
			employed_advisor = { culture = dawn_elf }
			employed_advisor = { culture = horizon_elf }
			employed_advisor = { culture = wood_elf }
			employed_advisor = { culture = sea_elf }
			employed_advisor = { culture = sunrise_elf }
		}
	}
}
has_elven_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_elven_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = moon_elf }
			employed_advisor = { category = $category$ culture = sun_elf }
			employed_advisor = { category = $category$ culture = star_elf }
			employed_advisor = { category = $category$ culture = desert_elf }
			employed_advisor = { category = $category$ culture = dawn_elf }
			employed_advisor = { category = $category$ culture = horizon_elf }
			employed_advisor = { category = $category$ culture = wood_elf }
			employed_advisor = { category = $category$ culture = sea_elf }
			employed_advisor = { category = $category$ culture = sunrise_elf }
		}
	}
}

has_gnollish_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_gnollish_advisor_tt
		OR = {
			employed_advisor = { culture = sorrowclaw_gnoll }
			employed_advisor = { culture = sandfang_gnoll }
			employed_advisor = { culture = seascourge_gnoll }
			employed_advisor = { culture = hill_gnoll }
			employed_advisor = { culture = flamemarked_gnoll }
			employed_advisor = { culture = fieldstalker_gnoll }
			employed_advisor = { culture = ruinscourge_gnoll }
			employed_advisor = { culture = dovesworn_gnoll }
			employed_advisor = { culture = suncrown_gnoll }
		}
	}
}
has_gnollish_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_gnollish_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = sorrowclaw_gnoll }
			employed_advisor = { category = $category$ culture = sandfang_gnoll }
			employed_advisor = { category = $category$ culture = seascourge_gnoll }
			employed_advisor = { category = $category$ culture = hill_gnoll }
			employed_advisor = { category = $category$ culture = flamemarked_gnoll }
			employed_advisor = { category = $category$ culture = fieldstalker_gnoll }
			employed_advisor = { category = $category$ culture = ruinscourge_gnoll }
			employed_advisor = { category = $category$ culture = dovesworn_gnoll }
			employed_advisor = { category = $category$ culture = suncrown_gnoll }
		}
	}
}

has_gnomish_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_gnomish_advisor_tt
		OR = {
			employed_advisor = { culture = cliff_gnome }
			employed_advisor = { culture = creek_gnome }
			employed_advisor = { culture = imperial_gnome }
			employed_advisor = { culture = delta_gnome }
			employed_advisor = { culture = tinker_gnome }
		}
	}
}
has_gnomish_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_gnomish_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = cliff_gnome }
			employed_advisor = { category = $category$ culture = creek_gnome }
			employed_advisor = { category = $category$ culture = imperial_gnome }
			employed_advisor = { category = $category$ culture = delta_gnome }
			employed_advisor = { category = $category$ culture = tinker_gnome}
		}
	}
}

has_goblin_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_goblin_advisor_tt
		OR = {
			employed_advisor = { culture = forest_goblin }
			employed_advisor = { culture = common_goblin }
			employed_advisor = { culture = cave_goblin }
			employed_advisor = { culture = undergrowth_goblin }
			employed_advisor = { culture = coldcave_goblin }
			employed_advisor = { culture = rustroad_goblin }
			employed_advisor = { culture = crawler_goblin }
			employed_advisor = { culture = skinburner_goblin }
			employed_advisor = { culture = straggler_goblin }
			employed_advisor = { culture = goldtooth_goblin }
			employed_advisor = { culture = trolltamer_goblin }
			employed_advisor = { culture = exodus_goblin }
			employed_advisor = { culture = city_goblin }
			employed_advisor = { culture = march_goblin }
			employed_advisor = { culture = soot_goblin }
		}
	}
}
has_goblin_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_goblin_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = forest_goblin }
			employed_advisor = { category = $category$ culture = common_goblin }
			employed_advisor = { category = $category$ culture = cave_goblin }
			employed_advisor = { category = $category$ culture = undergrowth_goblin }
			employed_advisor = { category = $category$ culture = coldcave_goblin }
			employed_advisor = { category = $category$ culture = rustroad_goblin }
			employed_advisor = { category = $category$ culture = crawler_goblin }
			employed_advisor = { category = $category$ culture = skinburner_goblin }
			employed_advisor = { category = $category$ culture = straggler_goblin }
			employed_advisor = { category = $category$ culture = goldtooth_goblin }
			employed_advisor = { category = $category$ culture = trolltamer_goblin }
			employed_advisor = { category = $category$ culture = exodus_goblin }
			employed_advisor = { category = $category$ culture = city_goblin }
			employed_advisor = { category = $category$ culture = march_goblin }
			employed_advisor = { category = $category$ culture = soot_goblin }
		}
	}
}

has_half_elven_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_half_elven_advisor_tt
		OR = {
			employed_advisor = { culture = half_elf }
			employed_advisor = { culture = bulwari_half_elf }
		}
	}
}
has_half_elven_advisor_of_category = {
	# type = adm | dip | mil, all in lowercase
	custom_trigger_tooltip = {
		tooltip = has_half_elven_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = half_elf }
			employed_advisor = { category = $category$ culture = bulwari_half_elf }
		}
	}
}

has_half_orcish_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_half_orcish_advisor_tt
		OR = {
			employed_advisor = { culture = half_orc }
			employed_advisor = { culture = grombar_half_orc }
			employed_advisor = { culture = chippengarder_half_orc }
			employed_advisor = { culture = wuhyun_half_orc }
			employed_advisor = { culture = yan_half_orc }
		}
	}
}
has_half_orcish_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_half_orcish_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = half_orc }
			employed_advisor = { category = $category$ culture = grombar_half_orc }
			employed_advisor = { category = $category$ culture = chippengarder_half_orc }
			employed_advisor = { category = $category$ culture = wuhyun_half_orc }
			employed_advisor = { category = $category$ culture = yan_half_orc }
		}
	}
}

has_halfling_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_halfling_advisor_tt
		OR = {
			employed_advisor = { culture = imperial_halfling }
			employed_advisor = { culture = bluefoot_halfling }
			employed_advisor = { culture = redfoot_halfling }
			employed_advisor = { culture = newfoot_halfling }
			employed_advisor = { culture = visfoot_halfling }
			employed_advisor = { culture = towerfoot_halfling }
			employed_advisor = { culture = pipefoot_halfling }
			employed_advisor = { culture = amezatany }
			employed_advisor = { culture = mboala }
			employed_advisor = { culture = mazava }
			employed_advisor = { culture = vyoronsi }
			employed_advisor = { culture = fomarati }
			employed_advisor = { culture = zohebidi }
		}
	}
}
has_halfling_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_halfling_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = imperial_halfling }
			employed_advisor = { category = $category$ culture = bluefoot_halfling }
			employed_advisor = { category = $category$ culture = redfoot_halfling }
			employed_advisor = { category = $category$ culture = newfoot_halfling }
			employed_advisor = { category = $category$ culture = visfoot_halfling }
			employed_advisor = { category = $category$ culture = towerfoot_halfling }
			employed_advisor = { category = $category$ culture = pipefoot_halfling }
			employed_advisor = { category = $category$ culture = amezatany }
			employed_advisor = { category = $category$ culture = mboala }
			employed_advisor = { category = $category$ culture = mazava }
			employed_advisor = { category = $category$ culture = vyoronsi }
			employed_advisor = { category = $category$ culture = fomarati }
			employed_advisor = { category = $category$ culture = zohebidi }
		}
	}
}

has_harimari_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_harimari_advisor_tt
		OR = {
			employed_advisor = { culture = royal_harimari }
			employed_advisor = { culture = serene_harimari }
			employed_advisor = { culture = primal_harimari }
			employed_advisor = { culture = roaming_harimari }
			employed_advisor = { culture = honourbound_harimari }
			employed_advisor = { culture = silent_harimari }
			employed_advisor = { culture = ashwoven_harimari }
		}
	}
}
has_harimari_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_harimari_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = royal_harimari }
			employed_advisor = { category = $category$ culture = serene_harimari }
			employed_advisor = { category = $category$ culture = primal_harimari }
			employed_advisor = { category = $category$ culture = roaming_harimari }
			employed_advisor = { category = $category$ culture = honourbound_harimari }
			employed_advisor = { category = $category$ culture = silent_harimari }
			employed_advisor = { category = $category$ culture = ashwoven_harimari }
		}
	}
}

has_harpy_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_harpy_advisor_tt
		OR = {
			employed_advisor = { culture = firanyan_harpy }
			employed_advisor = { culture = siadunan_harpy }
			employed_advisor = { culture = pezarangi_harpy }
			employed_advisor = { culture = naleni_harpy }
			employed_advisor = { culture = nzeri_harpy }
			employed_advisor = { culture = jarnklo_harpy }
			employed_advisor = { culture = kiohan_harpy }
		}
	}
}
has_harpy_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_harpy_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = firanyan_harpy }
			employed_advisor = { category = $category$ culture = siadunan_harpy }
			employed_advisor = { category = $category$ culture = pezarangi_harpy }
			employed_advisor = { category = $category$ culture = naleni_harpy }
			employed_advisor = { category = $category$ culture = nzeri_harpy }
			employed_advisor = { category = $category$ culture = jarnklo_harpy }
			employed_advisor = { category = $category$ culture = kiohan_harpy }
		}
	}
}

has_hobgoblin_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_hobgoblin_advisor_tt
		OR = {
			employed_advisor = { culture = boar_command }
			employed_advisor = { culture = wolf_command }
			employed_advisor = { culture = lion_command }
			employed_advisor = { culture = dragon_command }
			employed_advisor = { culture = tiger_command }
			employed_advisor = { culture = elephant_command }
			employed_advisor = { culture = swallow_command }
			employed_advisor = { culture = fenghuang_command }
			employed_advisor = { culture = eagle_command }
		}
	}
}
has_hobgoblin_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_hobgoblin_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = boar_command }
			employed_advisor = { category = $category$ culture = wolf_command }
			employed_advisor = { category = $category$ culture = lion_command }
			employed_advisor = { category = $category$ culture = dragon_command }
			employed_advisor = { category = $category$ culture = tiger_command }
			employed_advisor = { category = $category$ culture = elephant_command }
			employed_advisor = { category = $category$ culture = swallow_command }
			employed_advisor = { category = $category$ culture = fenghuang_command }
			employed_advisor = { category = $category$ culture = eagle_command }
		}
	}
}

has_human_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_human_advisor_tt
		OR = {
			employed_advisor = { culture = anbenncoster }
			employed_advisor = { culture = west_damerian }
			employed_advisor = { culture = east_damerian }
			employed_advisor = { culture = pearlsedger }
			employed_advisor = { culture = crownsman }
			employed_advisor = { culture = vernman }
			employed_advisor = { culture = exwesser }
			employed_advisor = { culture = arbarani }
			employed_advisor = { culture = esmari }
			employed_advisor = { culture = arannese }
			employed_advisor = { culture = nathalairey }
			employed_advisor = { culture = uelairey }
			employed_advisor = { culture = aldresian }
			employed_advisor = { culture = telgeiran }
			employed_advisor = { culture = pashainey }
			employed_advisor = { culture = vanburian }
			employed_advisor = { culture = themarian }
			employed_advisor = { culture = dhanaenno }
			employed_advisor = { culture = gawedi }
			employed_advisor = { culture = old_alenic }
			employed_advisor = { culture = blue_reachman }
			employed_advisor = { culture = vertesker }
			employed_advisor = { culture = moorman }
			employed_advisor = { culture = wexonard }
			employed_advisor = { culture = marrodic }
			employed_advisor = { culture = busilari }
			employed_advisor = { culture = tefori }
			employed_advisor = { culture = ilatani }
			employed_advisor = { culture = black_castanorian }
			employed_advisor = { culture = castanorian }
			employed_advisor = { culture = castellyrian }
			employed_advisor = { culture = marcher }
			employed_advisor = { culture = adenner }
			employed_advisor = { culture = white_reachman }
			employed_advisor = { culture = merine }
			employed_advisor = { culture = luciander }
			employed_advisor = { culture = ancardian }
			employed_advisor = { culture = rogieran }
			employed_advisor = { culture = elikhander }
			employed_advisor = { culture = heartman }
			employed_advisor = { culture = alenori }
			employed_advisor = { culture = stalboric }
			employed_advisor = { culture = ravenmarcher }
			employed_advisor = { culture = ionnic }
			employed_advisor = { culture = estairey }
			employed_advisor = { culture = anbenlander }
			employed_advisor = { culture = nurcestiran }
			employed_advisor = { culture = esthili }
			employed_advisor = { culture = rosanda }
			employed_advisor = { culture = corintari }
			employed_advisor = { culture = farrani }
			employed_advisor = { culture = black_demesner }
			employed_advisor = { culture = corvurian }
			employed_advisor = { culture = ourdi }
			employed_advisor = { culture = cardesti }
			employed_advisor = { culture = dostanorian }
			employed_advisor = { culture = neratican }
			employed_advisor = { culture = hapremiti }
			employed_advisor = { culture = shasouran }
			employed_advisor = { culture = korosheshi }
			employed_advisor = { culture = tijarikheti }
			employed_advisor = { culture = irsmahapan }
			employed_advisor = { culture = horakheti }
			employed_advisor = { culture = desha }
			employed_advisor = { culture = far_akasi }
			employed_advisor = { culture = khasani }
			employed_advisor = { culture = high_lorentish }
			employed_advisor = { culture = low_lorentish }
			employed_advisor = { culture = derannic }
			employed_advisor = { culture = sorncosti }
			employed_advisor = { culture = roilsardi }
			employed_advisor = { culture = iochander }
			employed_advisor = { culture = sornicandi }
			employed_advisor = { culture = blue_reachman_r }
			employed_advisor = { culture = white_reachman_r }
			employed_advisor = { culture = moorman_r }
			employed_advisor = { culture = green_reachman }
			employed_advisor = { culture = black_reachman }
			employed_advisor = { culture = reverian }
			employed_advisor = { culture = west_dalr }
			employed_advisor = { culture = east_dalr }
			employed_advisor = { culture = olavish }
			employed_advisor = { culture = talderannic }
			employed_advisor = { culture = perlatter }
			employed_advisor = { culture = bahari }
			employed_advisor = { culture = gelkar }
			employed_advisor = { culture = brasanni }
			employed_advisor = { culture = surani }
			employed_advisor = { culture = zanite }
			employed_advisor = { culture = maqeti }
			employed_advisor = { culture = masnsih }
			employed_advisor = { culture = sadnatu }
			employed_advisor = { culture = kuzarami }
			employed_advisor = { culture = abtazari }
			employed_advisor = { culture = kamtarhid }
			employed_advisor = { culture = khedarid }
			employed_advisor = { culture = shamadhan }
			employed_advisor = { culture = shandibad }
			employed_advisor = { culture = rajnadhid }
			employed_advisor = { culture = sobhagand }
			employed_advisor = { culture = ghavaanaj }
			employed_advisor = { culture = muthadhaya }
			employed_advisor = { culture = rasarhid }
			employed_advisor = { culture = sarisungi }
			employed_advisor = { culture = sarniryabsad }
			employed_advisor = { culture = dhukharuved }
			employed_advisor = { culture = rabhidarubsad }
			employed_advisor = { culture = ghankedhen }
			employed_advisor = { culture = pasindesh }
			employed_advisor = { culture = raghamidesh }
			employed_advisor = { culture = metsamic }
			employed_advisor = { culture = zabatlari }
			employed_advisor = { culture = khamgunai }
			employed_advisor = { culture = kukatodic }
			employed_advisor = { culture = valorman }
			employed_advisor = { culture = isobeliner }
			employed_advisor = { culture = zanlibi }
			employed_advisor = { culture = marlliander }
			employed_advisor = { culture = cestirmarker }
			employed_advisor = { culture = corinsfielder }
			employed_advisor = { culture = istranari }
			employed_advisor = { culture = new_havoric }
			employed_advisor = { culture = steadsman }
			employed_advisor = { culture = dustman }
			employed_advisor = { culture = sarnik }
			employed_advisor = { culture = ranilau }
			employed_advisor = { culture = biengdi }
			employed_advisor = { culture = gon }
			employed_advisor = { culture = risbeko }
			employed_advisor = { culture = chengrong }
			employed_advisor = { culture = khom }
			employed_advisor = { culture = teplin }
			employed_advisor = { culture = phonan }
			employed_advisor = { culture = hinphat }
			employed_advisor = { culture = bokai }
			employed_advisor = { culture = binhrung }
			employed_advisor = { culture = sikai }
			employed_advisor = { culture = kelino }
			employed_advisor = { culture = jahe_kelino }
			employed_advisor = { culture = yan_kelino }
			employed_advisor = { culture = kano_kelino }
			employed_advisor = { culture = gataw }
			employed_advisor = { culture = hujan }
			employed_advisor = { culture = banyak }
			employed_advisor = { culture = paru }
			employed_advisor = { culture = sirtana }
			employed_advisor = { culture = river_yan }
			employed_advisor = { culture = hill_yan }
			employed_advisor = { culture = coastal_yan }
			employed_advisor = { culture = forest_yan }
			employed_advisor = { culture = western_yan }
			employed_advisor = { culture = northern_yan }
			employed_advisor = { culture = southern_yan }
			employed_advisor = { culture = eastern_yan }
			employed_advisor = { culture = daxug }
			employed_advisor = { culture = kuldaakin }
			employed_advisor = { culture = steppe_yan }
			employed_advisor = { culture = rahen_yan }
			employed_advisor = { culture = bom_kai_yan }
			employed_advisor = { culture = menjeotaen }
			employed_advisor = { culture = sangsogha }
			employed_advisor = { culture = guwaadun }
			employed_advisor = { culture = shuvuush }
			employed_advisor = { culture = runsukhi }
			employed_advisor = { culture = plateau_runsukhi }
			employed_advisor = { culture = oinukhudi }
			employed_advisor = { culture = anarkhudi }
			employed_advisor = { culture = tuugalak }
			employed_advisor = { culture = ulukungu }
			employed_advisor = { culture = mogirga }
			employed_advisor = { culture = ikaniwagain }
			employed_advisor = { culture = kintonan }
			employed_advisor = { culture = azepyanunin }
			employed_advisor = { culture = mantimatu }
			employed_advisor = { culture = ndurubu }
			employed_advisor = { culture = kaino }
			employed_advisor = { culture = tamajoba }
			employed_advisor = { culture = taafi }
			employed_advisor = { culture = jiromji }
			employed_advisor = { culture = binwarji }
			employed_advisor = { culture = zuvunwa }
			employed_advisor = { culture = kuivanhi }
			employed_advisor = { culture = kudenta }
			employed_advisor = { culture = gomzumu }
			employed_advisor = { culture = egilshibi }
			employed_advisor = { culture = kudemtu }
			employed_advisor = { culture = gumzemo }
			employed_advisor = { culture = ikilshebe }
			employed_advisor = { culture = zovanwe }
			employed_advisor = { culture = kuivendi }
			employed_advisor = { culture = ofehibi }
			employed_advisor = { culture = metobesebi }
			employed_advisor = { culture = talilibeti }
			employed_advisor = { culture = yeteferen }
			employed_advisor = { culture = sitewosi }
			employed_advisor = { culture = ashamadi }
			employed_advisor = { culture = dhebiji }
			employed_advisor = { culture = suhratbi }
			employed_advisor = { culture = guryadagga }
			employed_advisor = { culture = tanizu }
			employed_advisor = { culture = guryadagga }
			employed_advisor = { culture = tanizu }
			employed_advisor = { culture = dakinshi }
			employed_advisor = { culture = antmvura }
			employed_advisor = { culture = kombedak }
			employed_advisor = { culture = umsozidak }
			employed_advisor = { culture = wakoodak }
		}
	}
}
has_human_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_human_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = anbenncoster }
			employed_advisor = { category = $category$ culture = west_damerian }
			employed_advisor = { category = $category$ culture = east_damerian }
			employed_advisor = { category = $category$ culture = pearlsedger }
			employed_advisor = { category = $category$ culture = crownsman }
			employed_advisor = { category = $category$ culture = vernman }
			employed_advisor = { category = $category$ culture = exwesser }
			employed_advisor = { category = $category$ culture = arbarani }
			employed_advisor = { category = $category$ culture = esmari }
			employed_advisor = { category = $category$ culture = arannese }
			employed_advisor = { category = $category$ culture = nathalairey }
			employed_advisor = { category = $category$ culture = uelairey }
			employed_advisor = { category = $category$ culture = aldresian }
			employed_advisor = { category = $category$ culture = telgeiran }
			employed_advisor = { category = $category$ culture = pashainey }
			employed_advisor = { category = $category$ culture = vanburian }
			employed_advisor = { category = $category$ culture = themarian }
			employed_advisor = { category = $category$ culture = dhanaenno }
			employed_advisor = { category = $category$ culture = gawedi }
			employed_advisor = { category = $category$ culture = old_alenic }
			employed_advisor = { category = $category$ culture = blue_reachman }
			employed_advisor = { category = $category$ culture = vertesker }
			employed_advisor = { category = $category$ culture = moorman }
			employed_advisor = { category = $category$ culture = wexonard }
			employed_advisor = { category = $category$ culture = marrodic }
			employed_advisor = { category = $category$ culture = busilari }
			employed_advisor = { category = $category$ culture = tefori }
			employed_advisor = { category = $category$ culture = ilatani }
			employed_advisor = { category = $category$ culture = black_castanorian }
			employed_advisor = { category = $category$ culture = castanorian }
			employed_advisor = { category = $category$ culture = castellyrian }
			employed_advisor = { category = $category$ culture = marcher }
			employed_advisor = { category = $category$ culture = adenner }
			employed_advisor = { category = $category$ culture = white_reachman }
			employed_advisor = { category = $category$ culture = merine }
			employed_advisor = { category = $category$ culture = luciander }
			employed_advisor = { category = $category$ culture = ancardian }
			employed_advisor = { category = $category$ culture = rogieran }
			employed_advisor = { category = $category$ culture = elikhander }
			employed_advisor = { category = $category$ culture = heartman }
			employed_advisor = { category = $category$ culture = alenori }
			employed_advisor = { category = $category$ culture = stalboric }
			employed_advisor = { category = $category$ culture = ravenmarcher }
			employed_advisor = { category = $category$ culture = ionnic }
			employed_advisor = { category = $category$ culture = estairey }
			employed_advisor = { category = $category$ culture = anbenlander }
			employed_advisor = { category = $category$ culture = nurcestiran }
			employed_advisor = { category = $category$ culture = esthili }
			employed_advisor = { category = $category$ culture = rosanda }
			employed_advisor = { category = $category$ culture = corintari }
			employed_advisor = { category = $category$ culture = farrani }
			employed_advisor = { category = $category$ culture = black_demesner }
			employed_advisor = { category = $category$ culture = corvurian }
			employed_advisor = { category = $category$ culture = ourdi }
			employed_advisor = { category = $category$ culture = cardesti }
			employed_advisor = { category = $category$ culture = dostanorian }
			employed_advisor = { category = $category$ culture = neratican }
			employed_advisor = { category = $category$ culture = hapremiti }
			employed_advisor = { category = $category$ culture = shasouran }
			employed_advisor = { category = $category$ culture = korosheshi }
			employed_advisor = { category = $category$ culture = tijarikheti }
			employed_advisor = { category = $category$ culture = irsmahapan }
			employed_advisor = { category = $category$ culture = horakheti }
			employed_advisor = { category = $category$ culture = desha }
			employed_advisor = { category = $category$ culture = far_akasi }
			employed_advisor = { category = $category$ culture = khasani }
			employed_advisor = { category = $category$ culture = high_lorentish }
			employed_advisor = { category = $category$ culture = low_lorentish }
			employed_advisor = { category = $category$ culture = derannic }
			employed_advisor = { category = $category$ culture = sorncosti }
			employed_advisor = { category = $category$ culture = roilsardi }
			employed_advisor = { category = $category$ culture = iochander }
			employed_advisor = { category = $category$ culture = sornicandi }
			employed_advisor = { category = $category$ culture = blue_reachman_r }
			employed_advisor = { category = $category$ culture = white_reachman_r }
			employed_advisor = { category = $category$ culture = moorman_r }
			employed_advisor = { category = $category$ culture = green_reachman }
			employed_advisor = { category = $category$ culture = black_reachman }
			employed_advisor = { category = $category$ culture = reverian }
			employed_advisor = { category = $category$ culture = west_dalr }
			employed_advisor = { category = $category$ culture = east_dalr }
			employed_advisor = { category = $category$ culture = olavish }
			employed_advisor = { category = $category$ culture = talderannic }
			employed_advisor = { category = $category$ culture = perlatter }
			employed_advisor = { category = $category$ culture = bahari }
			employed_advisor = { category = $category$ culture = gelkar }
			employed_advisor = { category = $category$ culture = brasanni }
			employed_advisor = { category = $category$ culture = surani }
			employed_advisor = { category = $category$ culture = zanite }
			employed_advisor = { category = $category$ culture = maqeti }
			employed_advisor = { category = $category$ culture = masnsih }
			employed_advisor = { category = $category$ culture = sadnatu }
			employed_advisor = { category = $category$ culture = kuzarami }
			employed_advisor = { category = $category$ culture = abtazari }
			employed_advisor = { category = $category$ culture = kamtarhid }
			employed_advisor = { category = $category$ culture = khedarid }
			employed_advisor = { category = $category$ culture = shamadhan }
			employed_advisor = { category = $category$ culture = shandibad }
			employed_advisor = { category = $category$ culture = rajnadhid }
			employed_advisor = { category = $category$ culture = sobhagand }
			employed_advisor = { category = $category$ culture = ghavaanaj }
			employed_advisor = { category = $category$ culture = muthadhaya }
			employed_advisor = { category = $category$ culture = rasarhid }
			employed_advisor = { category = $category$ culture = sarisungi }
			employed_advisor = { category = $category$ culture = sarniryabsad }
			employed_advisor = { category = $category$ culture = dhukharuved }
			employed_advisor = { category = $category$ culture = rabhidarubsad }
			employed_advisor = { category = $category$ culture = ghankedhen }
			employed_advisor = { category = $category$ culture = pasindesh }
			employed_advisor = { category = $category$ culture = raghamidesh }
			employed_advisor = { category = $category$ culture = metsamic }
			employed_advisor = { category = $category$ culture = zabatlari }
			employed_advisor = { category = $category$ culture = khamgunai }
			employed_advisor = { category = $category$ culture = kukatodic }
			employed_advisor = { category = $category$ culture = valorman }
			employed_advisor = { category = $category$ culture = isobeliner }
			employed_advisor = { category = $category$ culture = zanlibi }
			employed_advisor = { category = $category$ culture = marlliander }
			employed_advisor = { category = $category$ culture = cestirmarker }
			employed_advisor = { category = $category$ culture = corinsfielder }
			employed_advisor = { category = $category$ culture = istranari }
			employed_advisor = { category = $category$ culture = new_havoric }
			employed_advisor = { category = $category$ culture = steadsman }
			employed_advisor = { category = $category$ culture = dustman }
			employed_advisor = { category = $category$ culture = sarnik }
			employed_advisor = { category = $category$ culture = ranilau }
			employed_advisor = { category = $category$ culture = biengdi }
			employed_advisor = { category = $category$ culture = gon }
			employed_advisor = { category = $category$ culture = risbeko }
			employed_advisor = { category = $category$ culture = chengrong }
			employed_advisor = { category = $category$ culture = khom }
			employed_advisor = { category = $category$ culture = teplin }
			employed_advisor = { category = $category$ culture = phonan }
			employed_advisor = { category = $category$ culture = hinphat }
			employed_advisor = { category = $category$ culture = bokai }
			employed_advisor = { category = $category$ culture = binhrung }
			employed_advisor = { category = $category$ culture = sikai }
			employed_advisor = { category = $category$ culture = kelino }
			employed_advisor = { category = $category$ culture = jahe_kelino }
			employed_advisor = { category = $category$ culture = yan_kelino }
			employed_advisor = { category = $category$ culture = kano_kelino }
			employed_advisor = { category = $category$ culture = gataw }
			employed_advisor = { category = $category$ culture = hujan }
			employed_advisor = { category = $category$ culture = banyak }
			employed_advisor = { category = $category$ culture = paru }
			employed_advisor = { category = $category$ culture = sirtana }
			employed_advisor = { category = $category$ culture = river_yan }
			employed_advisor = { category = $category$ culture = hill_yan }
			employed_advisor = { category = $category$ culture = coastal_yan }
			employed_advisor = { category = $category$ culture = forest_yan }
			employed_advisor = { category = $category$ culture = western_yan }
			employed_advisor = { category = $category$ culture = northern_yan }
			employed_advisor = { category = $category$ culture = southern_yan }
			employed_advisor = { category = $category$ culture = eastern_yan }
			employed_advisor = { category = $category$ culture = daxug }
			employed_advisor = { category = $category$ culture = kuldaakin }
			employed_advisor = { category = $category$ culture = steppe_yan }
			employed_advisor = { category = $category$ culture = rahen_yan }
			employed_advisor = { category = $category$ culture = bom_kai_yan }
			employed_advisor = { category = $category$ culture = menjeotaen }
			employed_advisor = { category = $category$ culture = sangsogha }
			employed_advisor = { category = $category$ culture = guwaadun }
			employed_advisor = { category = $category$ culture = shuvuush }
			employed_advisor = { category = $category$ culture = runsukhi }
			employed_advisor = { category = $category$ culture = plateau_runsukhi }
			employed_advisor = { category = $category$ culture = anarkhudi }
			employed_advisor = { category = $category$ culture = oinukhudi }
			employed_advisor = { category = $category$ culture = tuugalak }
			employed_advisor = { category = $category$ culture = ulukungu }
			employed_advisor = { category = $category$ culture = mogirga }
			employed_advisor = { category = $category$ culture = ikaniwagain }
			employed_advisor = { category = $category$ culture = kintonan }
			employed_advisor = { category = $category$ culture = azepyanunin }
			employed_advisor = { category = $category$ culture = rinonokegyun }
			employed_advisor = { category = $category$ culture = mantimatu }
			employed_advisor = { category = $category$ culture = ndurubu }
			employed_advisor = { category = $category$ culture = kaino }
			employed_advisor = { category = $category$ culture = tamajoba }
			employed_advisor = { category = $category$ culture = taafi }
			employed_advisor = { category = $category$ culture = jiromji }
			employed_advisor = { category = $category$ culture = binwarji }
			employed_advisor = { category = $category$ culture = zuvunwa }
			employed_advisor = { category = $category$ culture = kuivanhi }
			employed_advisor = { category = $category$ culture = kudenta }
			employed_advisor = { category = $category$ culture = gomzumu }
			employed_advisor = { category = $category$ culture = egilshibi }
			employed_advisor = { category = $category$ culture = kudemtu }
			employed_advisor = { category = $category$ culture = gumzemo }
			employed_advisor = { category = $category$ culture = ikilshebe }
			employed_advisor = { category = $category$ culture = zovanwe }
			employed_advisor = { category = $category$ culture = kuivendi }
			employed_advisor = { category = $category$ culture = ofehibi }
			employed_advisor = { category = $category$ culture = metobesebi }
			employed_advisor = { category = $category$ culture = talilibeti }
			employed_advisor = { category = $category$ culture = yeteferen }
			employed_advisor = { category = $category$ culture = sitewosi }
			employed_advisor = { category = $category$ culture = ashamadi }
			employed_advisor = { category = $category$ culture = dhebiji }
			employed_advisor = { category = $category$ culture = suhratbi }
			employed_advisor = { category = $category$ culture = guryadagga }
			employed_advisor = { category = $category$ culture = tanizu }
			employed_advisor = { category = $category$ culture = guryadagga }
			employed_advisor = { category = $category$ culture = tanizu }
			employed_advisor = { category = $category$ culture = dakinshi }
			employed_advisor = { category = $category$ culture = antmvura }
			employed_advisor = { category = $category$ culture = kombedak }
			employed_advisor = { category = $category$ culture = umsozidak }
			employed_advisor = { category = $category$ culture = wakoodak }
		}
	}
}

has_kobold_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_kobold_advisor_tt
		OR = {
			employed_advisor = { culture = redscale_kobold }
			employed_advisor = { culture = bluescale_kobold }
			employed_advisor = { culture = greenscale_kobold }
			employed_advisor = { culture = kobildzani_kobold }
			employed_advisor = { culture = darkscale_kobold }
			employed_advisor = { culture = goldscale_kobold }
			employed_advisor = { culture = steelscale_kobold }
		}
	}
}
has_kobold_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_kobold_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = redscale_kobold }
			employed_advisor = { category = $category$ culture = bluescale_kobold }
			employed_advisor = { category = $category$ culture = greenscale_kobold }
			employed_advisor = { category = $category$ culture = kobildzani_kobold }
			employed_advisor = { category = $category$ culture = darkscale_kobold }
			employed_advisor = { category = $category$ culture = goldscale_kobold }
			employed_advisor = { category = $category$ culture = steelscale_kobold}
		}
	}
}

has_lizardfolk_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_lizardfolk_advisor_tt
		OR = {
			employed_advisor = { culture = shagashay_lizardfolk }
			employed_advisor = { culture = ashhama_lizardfolk }
			employed_advisor = { culture = ichiadza_lizardfolk }
			employed_advisor = { culture = rhada_lizardfolk }
			employed_advisor = { culture = arraskay_lizardfolk }
			employed_advisor = { culture = ichyaza_lizardfolk }
			employed_advisor = { culture = shagatyn_lizardfolk }
			employed_advisor = { culture = skarakara_lizardfolk }
			employed_advisor = { culture = mashkay_lizardfolk }
			employed_advisor = { culture = karshyray_lizardfolk }
			employed_advisor = { culture = adzalanas_lizardfolk }
			employed_advisor = { culture = itayzemby_lizardfolk } 
			employed_advisor = { culture = cyazizeta_lizardfolk }
		}
	}
}
has_lizardfolk_advisor_of_category = {
	# category = adm | dip | mil, all in lowercase
	custom_trigger_tooltip = {
		tooltip = has_lizardfolk_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = shagashay_lizardfolk }
			employed_advisor = { category = $category$ culture = ashhama_lizardfolk }
			employed_advisor = { category = $category$ culture = ichiadza_lizardfolk }
			employed_advisor = { category = $category$ culture = rhada_lizardfolk }
			employed_advisor = { category = $category$ culture = arraskay_lizardfolk }
			employed_advisor = { category = $category$ culture = ichyaza_lizardfolk }
			employed_advisor = { category = $category$ culture = shagatyn_lizardfolk }
			employed_advisor = { category = $category$ culture = skarakara_lizardfolk }
			employed_advisor = { category = $category$ culture = mashkay_lizardfolk }
			employed_advisor = { category = $category$ culture = karshyray_lizardfolk }
			employed_advisor = { category = $category$ culture = adzalanas_lizardfolk }
			employed_advisor = { category = $category$ culture = itayzemby_lizardfolk } 
			employed_advisor = { category = $category$ culture = cyazizeta_lizardfolk }
		}
	}
}

has_ogre_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_ogre_advisor_tt
		OR = {
			employed_advisor = { culture = fathide_ogre }
			employed_advisor = { culture = mossmouth_ogre }
			employed_advisor = { culture = bloodtooth_ogre }
			employed_advisor = { culture = horned_ogre }
			employed_advisor = { culture = soulseeker_ogre }
		}
	}
}
has_ogre_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_ogre_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = fathide_ogre }
			employed_advisor = { category = $category$ culture = mossmouth_ogre }
			employed_advisor = { category = $category$ culture = bloodtooth_ogre }
			employed_advisor = { category = $category$ culture = horned_ogre }
			employed_advisor = { category = $category$ culture = soulseeker_ogre }
		}
	}
}

has_orcish_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_orcish_advisor_tt
		OR = {
			employed_advisor = { culture = green_orc }
			employed_advisor = { culture = gray_orc }
			employed_advisor = { culture = black_orc }
			employed_advisor = { culture = blooded_orc }
			employed_advisor = { culture = cavelurker_orc }
			employed_advisor = { culture = drakeclaw_orc }
			employed_advisor = { culture = highhold_orc }
			employed_advisor = { culture = manhunter_orc }
			employed_advisor = { culture = moltenbrand_orc }
			employed_advisor = { culture = skull_orc }
			employed_advisor = { culture = brown_orc }
			employed_advisor = { culture = emerald_orc }
			employed_advisor = { culture = grombar_orc }
			employed_advisor = { culture = rugan_orc }
			employed_advisor = { culture = ungulan_orc }
			employed_advisor = { culture = barumand_orc }
			employed_advisor = { culture = karashari_orc }
			employed_advisor = { culture = redtusk_orc }
			employed_advisor = { culture = ozgar_orc }
		}
	}
}
has_orcish_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_orcish_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = green_orc }
			employed_advisor = { category = $category$ culture = gray_orc }
			employed_advisor = { category = $category$ culture = black_orc }
			employed_advisor = { category = $category$ culture = blooded_orc }
			employed_advisor = { category = $category$ culture = cavelurker_orc }
			employed_advisor = { category = $category$ culture = drakeclaw_orc }
			employed_advisor = { category = $category$ culture = highhold_orc }
			employed_advisor = { category = $category$ culture = manhunter_orc }
			employed_advisor = { category = $category$ culture = moltenbrand_orc }
			employed_advisor = { category = $category$ culture = skull_orc }
			employed_advisor = { category = $category$ culture = brown_orc }
			employed_advisor = { category = $category$ culture = emerald_orc }
			employed_advisor = { category = $category$ culture = grombar_orc }
			employed_advisor = { category = $category$ culture = rugan_orc }
			employed_advisor = { category = $category$ culture = ungulan_orc }
			employed_advisor = { category = $category$ culture = barumand_orc }
			employed_advisor = { category = $category$ culture = karashari_orc }
			employed_advisor = { category = $category$ culture = redtusk_orc }
			employed_advisor = { category = $category$ culture = ozgar_orc }
		}
	}
}

has_ruinborn_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_ruinborn_advisor_tt
		OR = {
			employed_advisor = { culture = boek }
			employed_advisor = { culture = kwineh }
			employed_advisor = { culture = cheshoshi }
			employed_advisor = { culture = duskers }
			employed_advisor = { culture = starborn }
			employed_advisor = { culture = teira }
			employed_advisor = { culture = soruinic }
			employed_advisor = { culture = rzentur }
			employed_advisor = { culture = old_rzentur }
			employed_advisor = { culture = dolindhan }
			employed_advisor = { culture = sarda }
			employed_advisor = { culture = malacnari }
			employed_advisor = { culture = brelari }
			employed_advisor = { culture = selphereg }
			employed_advisor = { culture = caamas }
			employed_advisor = { culture = peitar }
			employed_advisor = { culture = tuathak }
			employed_advisor = { culture = snecboth }
			employed_advisor = { culture = fograc }
			employed_advisor = { culture = larankarha }
			employed_advisor = { culture = yodhanpir }
			employed_advisor = { culture = kalavendhi }
			employed_advisor = { culture = thekvrystana }
			employed_advisor = { culture = degabhen }
			employed_advisor = { culture = oktibhen }
			employed_advisor = { culture = kherkabhen }
			employed_advisor = { culture = lokebhen }
			employed_advisor = { culture = ormabhen }
			employed_advisor = { culture = arpebhen }
			employed_advisor = { culture = ambhen }
			employed_advisor = { culture = kimabhen }
			employed_advisor = { culture = empkhebhen }
			employed_advisor = { culture = besolabhen }
			employed_advisor = { culture = enebhen }
			employed_advisor = { culture = deyebhen }
			employed_advisor = { culture = apikhobhen }
			employed_advisor = { culture = keyobhen }
			employed_advisor = { culture = anisibhen }
			employed_advisor = { culture = amgrebhen }
			employed_advisor = { culture = eltibhen }
			employed_advisor = { culture = eltibhar }
			employed_advisor = { culture = harafe }
			employed_advisor = { culture = kooras }
			employed_advisor = { culture = mayte }
			employed_advisor = { culture = epednar }
			employed_advisor = { culture = quchamar }
			employed_advisor = { culture = chaqanel }
			employed_advisor = { culture = quruwei }
			employed_advisor = { culture = chamullach }
			employed_advisor = { culture = banche }
			employed_advisor = { culture = faalte }
			employed_advisor = { culture = mteibhar }
			employed_advisor = { culture = basobhar }
			employed_advisor = { culture = chendhyan }
			employed_advisor = { culture = parura }
			employed_advisor = { culture = effe }
			employed_advisor = { culture = laii }
			employed_advisor = { culture = thamvoii }
			employed_advisor = { culture = oronoii }
			employed_advisor = { culture = veykodan }
			employed_advisor = { culture = leechmen }
			employed_advisor = { culture = bloodfeeders }
			employed_advisor = { culture = silent_watchers }
			employed_advisor = { culture = cursed_ones }
			employed_advisor = { culture = ice_sleepers }
			employed_advisor = { culture = seedthrall }
			employed_advisor = { culture = berrirghe }
			employed_advisor = { culture = mteirghe }
		}
	}
}
has_ruinborn_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_ruinborn_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = boek }
			employed_advisor = { category = $category$ culture = kwineh }
			employed_advisor = { category = $category$ culture = cheshoshi }
			employed_advisor = { category = $category$ culture = duskers }
			employed_advisor = { category = $category$ culture = starborn }
			employed_advisor = { category = $category$ culture = teira }
			employed_advisor = { category = $category$ culture = soruinic }
			employed_advisor = { category = $category$ culture = rzentur }
			employed_advisor = { category = $category$ culture = old_rzentur }
			employed_advisor = { category = $category$ culture = dolindhan }
			employed_advisor = { category = $category$ culture = sarda }
			employed_advisor = { category = $category$ culture = malacnari }
			employed_advisor = { category = $category$ culture = brelari }
			employed_advisor = { category = $category$ culture = selphereg }
			employed_advisor = { category = $category$ culture = caamas }
			employed_advisor = { category = $category$ culture = peitar }
			employed_advisor = { category = $category$ culture = tuathak }
			employed_advisor = { category = $category$ culture = snecboth }
			employed_advisor = { category = $category$ culture = fograc }
			employed_advisor = { category = $category$ culture = larankarha }
			employed_advisor = { category = $category$ culture = yodhanpir }
			employed_advisor = { category = $category$ culture = kalavendhi }
			employed_advisor = { category = $category$ culture = thekvrystana }
			employed_advisor = { category = $category$ culture = degabhen }
			employed_advisor = { category = $category$ culture = oktibhen }
			employed_advisor = { category = $category$ culture = kherkabhen }
			employed_advisor = { category = $category$ culture = lokebhen }
			employed_advisor = { category = $category$ culture = ormabhen }
			employed_advisor = { category = $category$ culture = arpebhen }
			employed_advisor = { category = $category$ culture = ambhen }
			employed_advisor = { category = $category$ culture = kimabhen }
			employed_advisor = { category = $category$ culture = empkhebhen }
			employed_advisor = { category = $category$ culture = besolabhen }
			employed_advisor = { category = $category$ culture = enebhen }
			employed_advisor = { category = $category$ culture = deyebhen }
			employed_advisor = { category = $category$ culture = apikhobhen }
			employed_advisor = { category = $category$ culture = keyobhen }
			employed_advisor = { category = $category$ culture = anisibhen }
			employed_advisor = { category = $category$ culture = amgrebhen }
			employed_advisor = { category = $category$ culture = eltibhen }
			employed_advisor = { category = $category$ culture = eltibhar }
			employed_advisor = { category = $category$ culture = harafe }
			employed_advisor = { category = $category$ culture = kooras }
			employed_advisor = { category = $category$ culture = mayte }
			employed_advisor = { category = $category$ culture = epednar }
			employed_advisor = { category = $category$ culture = quchamar }
			employed_advisor = { category = $category$ culture = chaqanel }
			employed_advisor = { category = $category$ culture = quruwei }
			employed_advisor = { category = $category$ culture = chamullach }
			employed_advisor = { category = $category$ culture = banche }
			employed_advisor = { category = $category$ culture = faalte }
			employed_advisor = { category = $category$ culture = mteibhar }
			employed_advisor = { category = $category$ culture = basobhar }
			employed_advisor = { category = $category$ culture = chendhyan }
			employed_advisor = { category = $category$ culture = parura }
			employed_advisor = { category = $category$ culture = effe }
			employed_advisor = { category = $category$ culture = laii }
			employed_advisor = { category = $category$ culture = thamvoii }
			employed_advisor = { category = $category$ culture = oronoii }
			employed_advisor = { category = $category$ culture = veykodan }
			employed_advisor = { category = $category$ culture = leechmen }
			employed_advisor = { category = $category$ culture = bloodfeeders }
			employed_advisor = { category = $category$ culture = silent_watchers }
			employed_advisor = { category = $category$ culture = cursed_ones }
			employed_advisor = { category = $category$ culture = ice_sleepers }
			employed_advisor = { category = $category$ culture = seedthrall }
			employed_advisor = { category = $category$ culture = berrirghe }
			employed_advisor = { category = $category$ culture = mteirghe }
		}
	}
}

has_troll_advisor = {
	custom_trigger_tooltip = {
		tooltip = has_troll_advisor_tt
		OR = {
			employed_advisor = { culture = fjord_troll }
			employed_advisor = { culture = forest_troll }
			employed_advisor = { culture = swamp_troll }
			employed_advisor = { culture = cave_troll }
		}
	}
}
has_troll_advisor_of_category = {
	# category = ADM | DIP | MIL, all in uppercase
	custom_trigger_tooltip = {
		tooltip = has_troll_advisor_$category$_tt
		OR = {
			employed_advisor = { category = $category$ culture = fjord_troll }
			employed_advisor = { category = $category$ culture = forest_troll }
			employed_advisor = { category = $category$ culture = swamp_troll }
			employed_advisor = { category = $category$ culture = cave_troll }
		}
	}
}

#Needs more accepted culture for new  races
has_human_accepted_culture = {
	OR = {
		#Anbennarian
		accepted_culture = anbenncoster
		accepted_culture = west_damerian
		accepted_culture = east_damerian
		accepted_culture = pearlsedger
		accepted_culture = crownsman
		accepted_culture = vernman
		accepted_culture = exwesser
		accepted_culture = arbarani
		accepted_culture = esmari
		accepted_culture = arannese
		accepted_culture = nathalairey
		accepted_culture = uelairey
		accepted_culture = aldresian
		accepted_culture = telgeiran
		accepted_culture = pashainey
		accepted_culture = vanburian
		accepted_culture = themarian
		accepted_culture = havoric
		accepted_culture = dhanaenno
		#Alenic
		accepted_culture = gawedi
		accepted_culture = old_alenic
		accepted_culture = blue_reachman
		accepted_culture = vertesker
		accepted_culture = moorman
		accepted_culture = wexonard
		accepted_culture = marrodic
		#Businori
		accepted_culture = busilari
		accepted_culture = tefori
		accepted_culture = ilatani
		#Escanni
		accepted_culture = black_castanorian
		accepted_culture = castanorian
		accepted_culture = castellyrian
		accepted_culture = marcher
		accepted_culture = adenner
		accepted_culture = white_reachman
		accepted_culture = luciander
		accepted_culture = ancardian
		accepted_culture = rogieran
		accepted_culture = elikhander
		accepted_culture = heartman
		accepted_culture = alenori
		accepted_culture = stalboric
		accepted_culture = ravenmarcher
		accepted_culture = ionnic
		accepted_culture = estairey
		accepted_culture = anbenlander
		accepted_culture = nurcestiran
		accepted_culture = esthili
		accepted_culture = rosanda
		accepted_culture = covenbladic
		accepted_culture = corintari
		accepted_culture = farrani
		accepted_culture = black_demesner
		#Dostanorian
		accepted_culture = corvurian
		accepted_culture = ourdi
		accepted_culture = cardesti
		accepted_culture = ravenmarcher_d
		accepted_culture = neratican
		#kheteratan
		accepted_culture = hapremiti
		accepted_culture = shasouran
		accepted_culture = korosheshi
		accepted_culture = tijarikheti
		accepted_culture = irsmahapan
		accepted_culture = horakheti
		#Akasi
		accepted_culture = desha
		accepted_culture = far_akasi
		accepted_culture = khasani
		#Lencori
		accepted_culture = high_lorentish
		accepted_culture = low_lorentish
		accepted_culture = derannic
		accepted_culture = sorncosti
		accepted_culture = roilsardi
		accepted_culture = iochander
		accepted_culture = sornicandi
		#Reachman
		accepted_culture = blue_reachman_r
		accepted_culture = white_reachman_r
		accepted_culture = moorman_r
		accepted_culture = green_reachman
		accepted_culture = black_reachman
		#Gerudian
		accepted_culture = reverian
		accepted_culture = west_dalr
		accepted_culture = east_dalr
		accepted_culture = olavish
		accepted_culture = talderannic
		accepted_culture = perlatter
		#Bulwari
		accepted_culture = bahari
		accepted_culture = gelkar
		accepted_culture = brasanni
		accepted_culture = surani
		accepted_culture = zanite
		accepted_culture = maqeti
		accepted_culture = masnsih
		accepted_culture = sadnatu
		accepted_culture = kuzarami
		accepted_culture = abtazari
		#Upper Raheni
		accepted_culture = kamtarhid
		accepted_culture = khedarid
		accepted_culture = shamadhan
		accepted_culture = shandibad
		accepted_culture = rajnadhid
		accepted_culture = sobhagand
		#Middle Raheni
		accepted_culture = ghavaanaj
		accepted_culture = muthadhaya
		accepted_culture = rasarhid
		accepted_culture = sarisungi
		#Lower Raheni
		accepted_culture = sarniryabsad
		accepted_culture = dhukharuved
		accepted_culture = rabhidarubsad
		accepted_culture = ghankedhen
		accepted_culture = pasindesh
		accepted_culture = raghamidesh
		#Islander
		accepted_culture = metsamic
		accepted_culture = zabatlari
		accepted_culture = khamgunai
		accepted_culture = kukatodic
		
		#Trollsbayer
		accepted_culture = valorman
		accepted_culture = isobeliner
		accepted_culture = zanlibi
		accepted_culture = marlliander
		accepted_culture = cestirmarker
		#Ynnsman
		accepted_culture = corinsfielder
		accepted_culture = istranari
		accepted_culture = new_havoric
		accepted_culture = steadsman
		accepted_culture = dustman
		accepted_culture = sarnik
		#Bom
		accepted_culture = ranilau
		accepted_culture = biengdi
		accepted_culture = gon
		accepted_culture = risbeko
		accepted_culture = chengrong
		accepted_culture = khom
		accepted_culture = teplin
		#Kai
		accepted_culture = phonan
		accepted_culture = hinphat
		accepted_culture = bokai
		accepted_culture = binhrung
		accepted_culture = sikai
		#Kelino
		accepted_culture = kelino
		accepted_culture = jahe_kelino
		accepted_culture = yan_kelino
		accepted_culture = kano_kelino
		accepted_culture = gataw
		#Yanglam
		accepted_culture = hujan
		accepted_culture = banyak
		accepted_culture = paru
		accepted_culture = sirtana
		#Yan
		accepted_culture = river_yan
		accepted_culture = hill_yan
		accepted_culture = coastal_yan
		accepted_culture = forest_yan
		accepted_culture = western_yan
		accepted_culture = northern_yan
		accepted_culture = southern_yan
		accepted_culture = eastern_yan
		accepted_culture = daxug
		accepted_culture = kuldaakin
		accepted_culture = steppe_yan
		accepted_culture = rahen_yan
		accepted_culture = bom_kai_yan
		#Odheongun
		accepted_culture = menjeotaen
		accepted_culture = sangsogha
		accepted_culture = guwaadun
		#Shuvuush
		accepted_culture = shuvuush
		accepted_culture = runsukhi
		accepted_culture = plateau_runsukhi
		#Khudi
		accepted_culture = oinukhudi
		accepted_culture = anarkhudi
		#Besholgi
		accepted_culture = tuugalak
		accepted_culture = ulukungu
		accepted_culture = mogirga
		#Wuhyun
		accepted_culture = ikaniwagain
		accepted_culture = kintonan
		accepted_culture = azepyanunin
		accepted_culture = rinonokegyun
		

		#Fangaulan
		accepted_culture = mantimatu
		accepted_culture = ndurubu
		accepted_culture = kaino
		accepted_culture = tamajoba
		accepted_culture = taafi
		accepted_culture = jiromji
		accepted_culture = binwarji

		#Vurebindu
		accepted_culture = zuvunwa
		accepted_culture = kuivanhi
		accepted_culture = kudenta
		accepted_culture = gomzumu
		accepted_culture = egilshibi

		#Irsukuba
		accepted_culture = kudemtu
		accepted_culture = gumzemo
		accepted_culture = ikilshebe
		accepted_culture = zovanwe
		accepted_culture = kuivendi
		accepted_culture = echenka

		#Mengi
		accepted_culture = ofehibi
		accepted_culture = metobesebi
		accepted_culture = talilibeti
		accepted_culture = yeteferen
		accepted_culture = sitewosi

		#Baashidi
		accepted_culture = ashamadi
		accepted_culture = dhebiji
		accepted_culture = suhratbi
		accepted_culture = guryadagga
		
		#Tanizu
		accepted_culture = tanizu
		accepted_culture = dakinshi
		accepted_culture = antmvura
		accepted_culture = kombedak
		accepted_culture = umsozidak
		accepted_culture = wakoodak

		# Break in case of emergency!
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
		# accepted_culture = nurcestiran
	}
}

has_elven_accepted_culture = {
	OR = {
		accepted_culture = moon_elf
		accepted_culture = star_elf
		accepted_culture = sun_elf
		accepted_culture = desert_elf
		accepted_culture = dawn_elf
		accepted_culture = horizon_elf
		accepted_culture = wood_elf
		accepted_culture = sea_elf
		accepted_culture = sunrise_elf
	}
}

has_cannorian_aelantir_adventurer_accepted_culture = {
	OR = {
		#Trollsbayer
		accepted_culture = valorman
		accepted_culture = isobeliner
		accepted_culture = zanlibi
		accepted_culture = marlliander
		accepted_culture = cestirmarker
		#Ynnsman
		accepted_culture = corinsfielder
		accepted_culture = istranari
		accepted_culture = new_havoric
		accepted_culture = steadsman
		accepted_culture = dustman
		accepted_culture = sarnik
		has_elven_accepted_culture = yes
		has_dwarven_accepted_culture = yes
		has_halfling_accepted_culture = yes
		has_gnomish_accepted_culture = yes
		has_half_orcish_accepted_culture = yes
		has_orcish_accepted_culture = yes
		has_harpy_accepted_culture = yes
		has_kobold_accepted_culture = yes
		has_goblin_accepted_culture = yes
	}
}

has_dwarven_accepted_culture = {
	OR = {
		accepted_culture = ruby_dwarf
		accepted_culture = silver_dwarf
		accepted_culture = stone_dwarf
		accepted_culture = iron_dwarf
		accepted_culture = obsidian_dwarf
		accepted_culture = gold_dwarf
		accepted_culture = copper_dwarf
		accepted_culture = kronium_dwarf
		accepted_culture = quartz_dwarf
		accepted_culture = sapphire_dwarf
		accepted_culture = ramsteel_dwarf
		accepted_culture = mithril_dwarf
		accepted_culture = dagrite_dwarf
		accepted_culture = agate_dwarf
		accepted_culture = platinum_dwarf
		accepted_culture = opal_dwarf
		accepted_culture = lead_dwarf
		accepted_culture = marble_dwarf
		accepted_culture = cobalt_dwarf
		accepted_culture = flint_dwarf
		accepted_culture = titanium_dwarf
		accepted_culture = pyrite_dwarf
		accepted_culture = basalt_dwarf
		accepted_culture = topaz_dwarf
		accepted_culture = peridot_dwarf
		accepted_culture = granite_dwarf
		accepted_culture = amethyst_dwarf
		accepted_culture = emerald_dwarf
		accepted_culture = jade_dwarf
		accepted_culture = malachite_dwarf
		accepted_culture = amber_dwarf
		accepted_culture = citrine_dwarf
		accepted_culture = garnet_dwarf
		accepted_culture = diamond_dwarf
		accepted_culture = steel_dwarf
		accepted_culture = nephrite_dwarf
		accepted_culture = alloy_dwarf
	}
}

has_halfling_accepted_culture = {
	OR = {
		accepted_culture = imperial_halfling
		accepted_culture = bluefoot_halfling
		accepted_culture = redfoot_halfling
		accepted_culture = newfoot_halfling
		accepted_culture = visfoot_halfling
		accepted_culture = towerfoot_halfling
		accepted_culture = pipefoot_halfling
		accepted_culture = amezatany
		accepted_culture = mboala
		accepted_culture = mazava
		accepted_culture = vyoronsi
		accepted_culture = fomarati
		accepted_culture = zohebidi
	}
}

has_gnomish_accepted_culture = {
	OR = {
		accepted_culture = cliff_gnome
		accepted_culture = creek_gnome
		accepted_culture = imperial_gnome
		accepted_culture = delta_gnome
		accepted_culture = tinker_gnome
	}
}

has_half_elven_accepted_culture = {
	OR = {
		accepted_culture = half_elf
		accepted_culture = bulwari_half_elf
	}
}

has_half_orcish_accepted_culture = {
	OR = {
		accepted_culture = half_orc
		accepted_culture = grombar_half_orc
		accepted_culture = chippengarder_half_orc
		accepted_culture = wuhyun_half_orc
		accepted_culture = yan_half_orc
	}
}

has_orcish_accepted_culture = {
	OR = {
		accepted_culture = green_orc
		accepted_culture = gray_orc
		accepted_culture = black_orc
		accepted_culture = blooded_orc
		accepted_culture = cavelurker_orc
		accepted_culture = drakeclaw_orc
		accepted_culture = highhold_orc
		accepted_culture = manhunter_orc
		accepted_culture = moltenbrand_orc
		accepted_culture = skull_orc
		accepted_culture = emerald_orc
		accepted_culture = grombar_orc
		accepted_culture = rugan_orc
		accepted_culture = ungulan_orc
		accepted_culture = barumand_orc
		accepted_culture = brown_orc
		accepted_culture = karashari_orc
		accepted_culture = redtusk_orc
		accepted_culture = ozgar_orc
	}
}

has_kobold_accepted_culture = {
	OR = {
		accepted_culture = redscale_kobold
		accepted_culture = bluescale_kobold
		accepted_culture = greenscale_kobold
		accepted_culture = kobildzani_kobold
		accepted_culture = darkscale_kobold
		accepted_culture = goldscale_kobold
		accepted_culture = steelscale_kobold
	}
}

has_lizardfolk_accepted_culture = {
	OR = {
		accepted_culture = shagashay_lizardfolk
		accepted_culture = ashhama_lizardfolk
		accepted_culture = ichiadza_lizardfolk
		accepted_culture = rhada_lizardfolk
		accepted_culture = arraskay_lizardfolk
		accepted_culture = ichyaza_lizardfolk
		accepted_culture = shagatyn_lizardfolk
		accepted_culture = skarakara_lizardfolk
		accepted_culture = mashkay_lizardfolk
		accepted_culture = karshyray_lizardfolk
		accepted_culture = adzalanas_lizardfolk
		accepted_culture = itayzemby_lizardfolk
		accepted_culture = cyazizeta_lizardfolk
	}
}

has_troll_accepted_culture = {
	OR = {
		accepted_culture = fjord_troll
		accepted_culture = forest_troll
		accepted_culture = swamp_troll
		accepted_culture = cave_troll
	}
}

has_harpy_accepted_culture = {
	OR = {
		accepted_culture = firanyan_harpy
		accepted_culture = siadunan_harpy
		accepted_culture = pezarangi_harpy
		accepted_culture = naleni_harpy
		accepted_culture = nzeri_harpy
		accepted_culture = jarnklo_harpy
		accepted_culture = kiohan_harpy
	}
}

has_ruinborn_accepted_culture = {
	OR = {
		#North
		accepted_culture = boek
		accepted_culture = kwineh
		accepted_culture = cheshoshi
		accepted_culture = duskers
		accepted_culture = starborn
		accepted_culture = teira
		accepted_culture = veykodan
		#South
		accepted_culture = soruinic
		#Ynnic
		accepted_culture = rzentur
		accepted_culture = old_rzentur
		accepted_culture = dolindhan
		accepted_culture = sarda
		accepted_culture = malacnari
		accepted_culture = brelari
		#Eordan
		accepted_culture = selphereg
		accepted_culture = caamas
		accepted_culture = peitar
		accepted_culture = tuathak
		accepted_culture = snecboth
		accepted_culture = fograc
		#Taychendi
		accepted_culture = larankarha
		accepted_culture = yodhanpir
		accepted_culture = kalavendhi
		accepted_culture = thekvrystana
		#Kheionai
		accepted_culture = degabhen
		accepted_culture = oktibhen
		accepted_culture = kherkabhen
		accepted_culture = lokebhen
		accepted_culture = ormabhen
		accepted_culture = arpebhen
		accepted_culture = ambhen
		accepted_culture = kimabhen
		accepted_culture = empkhebhen
		accepted_culture = besolabhen
		accepted_culture = enebhen
		accepted_culture = deyebhen
		accepted_culture = apikhobhen
		accepted_culture = keyobhen
		accepted_culture = anisibhen
		accepted_culture = amgrebhen
		accepted_culture = eltibhen
		#Eltibhari
		accepted_culture = eltibhar
		accepted_culture = berrirghe
		accepted_culture = mteirghe
		#Harafic
		accepted_culture = harafe
		accepted_culture = kooras
		accepted_culture = mayte
		accepted_culture = epednar
		#Amadian
		accepted_culture = quchamar
		accepted_culture = chaqanel
		accepted_culture = quruwei
		accepted_culture = chamullach
		accepted_culture = banche
		accepted_culture = faalte
		#Devandi
		accepted_culture = mteibhar
		accepted_culture = basobhar
		accepted_culture = chendhyan
		#Effelai
		accepted_culture = parura
		accepted_culture = effe
		accepted_culture = laii
		accepted_culture = thamvoii
		accepted_culture = oronoii
		#Degenerated
		accepted_culture = leechmen
		accepted_culture = bloodfeeders
		accepted_culture = silent_watchers
		accepted_culture = cursed_ones
		accepted_culture = ice_sleepers
		accepted_culture = seedthrall
	}
}

has_north_ruinborn_accepted_culture = {
	OR = {
		accepted_culture = boek
		accepted_culture = kwineh
		accepted_culture = cheshoshi
		accepted_culture = duskers
		accepted_culture = starborn
		accepted_culture = teira
		accepted_culture = veykodan
	}
}

has_south_ruinborn_accepted_culture = {
	accepted_culture = soruinic
}

has_ynnic_ruinborn_accepted_culture = {
	OR = {
		accepted_culture = rzentur
		accepted_culture = old_rzentur
		accepted_culture = dolindhan
		accepted_culture = sarda
		accepted_culture = malacnari
		accepted_culture = brelari
	}
}

has_eordan_ruinborn_accepted_culture = {
	OR = {
		accepted_culture = selphereg
		accepted_culture = caamas
		accepted_culture = peitar
		accepted_culture = tuathak
		accepted_culture = snecboth
		accepted_culture = fograc
	}
}

has_taychendi_ruinborn_accepted_culture = {
	OR = {
		accepted_culture = larankarha
		accepted_culture = yodhanpir
		accepted_culture = kalavendhi
		accepted_culture = thekvrystana
	}
}

has_kheionai_ruinborn_accepted_culture = {
	OR = {
		accepted_culture = degabhen
		accepted_culture = oktibhen
		accepted_culture = kherkabhen
		accepted_culture = lokebhen
		accepted_culture = ormabhen
		accepted_culture = arpebhen
		accepted_culture = ambhen
		accepted_culture = kimabhen
		accepted_culture = empkhebhen
		accepted_culture = besolabhen
		accepted_culture = enebhen
		accepted_culture = deyebhen
		accepted_culture = apikhobhen
		accepted_culture = keyobhen
		accepted_culture = anisibhen
		accepted_culture = amgrebhen
		accepted_culture = eltibhen
	}
}

has_elthibari_ruinborn_accepted_culture = {
	OR = {
		accepted_culture = eltibhar
		accepted_culture = berrirghe
		accepted_culture = mteirghe
	}
}

has_harafic_ruinborn_accepted_culture = {
	OR = {
		#Harafic
		accepted_culture = harafe
		accepted_culture = kooras
		accepted_culture = mayte
		accepted_culture = epednar
	}
}
has_amadian_ruinborn_accepted_culture = {
	OR = {
		#Amadian
		accepted_culture = quchamar
		accepted_culture = chaqanel
		accepted_culture = quruwei
		accepted_culture = chamullach
		accepted_culture = banche
		accepted_culture = faalte
	}
}
has_devandi_ruinborn_accepted_culture = {
	OR = {
		#Devandi
		accepted_culture = mteibhar
		accepted_culture = basobhar
		accepted_culture = chendhyan
	}
}

has_effelai_ruinborn_accepted_culture = {
	OR = {
		#Effelai
		accepted_culture = parura
		accepted_culture = effe
		accepted_culture = laii
		accepted_culture = thamvoii
		accepted_culture = oronoii
	}
}

has_goblin_accepted_culture = {
	OR = {
		accepted_culture = forest_goblin
		accepted_culture = common_goblin
		dwarovar_goblin_culture_accepted = yes
		accepted_culture = exodus_goblin
		accepted_culture = city_goblin
		accepted_culture = march_goblin
		accepted_culture = soot_goblin
	}
}

has_gnollish_accepted_culture = {
	OR = {
		accepted_culture = sorrowclaw_gnoll
		accepted_culture = sandfang_gnoll
		accepted_culture = seascourge_gnoll
		accepted_culture = hill_gnoll
		accepted_culture = flamemarked_gnoll
		accepted_culture = fieldstalker_gnoll
		accepted_culture = windhowler_gnoll
		accepted_culture = ruinscourge_gnoll
		accepted_culture = dovesworn_gnoll
		accepted_culture = suncrown_gnoll
	}
}

has_harimari_accepted_culture = {
	OR = {
		accepted_culture = royal_harimari
		accepted_culture = serene_harimari
		accepted_culture = primal_harimari
		accepted_culture = roaming_harimari
		accepted_culture = honourbound_harimari
		accepted_culture = silent_harimari
		accepted_culture = ashwoven_harimari
	}
}

has_hobgoblin_accepted_culture = {
	OR = {
		accepted_culture = boar_command
		accepted_culture = wolf_command
		accepted_culture = lion_command
		accepted_culture = dragon_command
		accepted_culture = tiger_command
		accepted_culture = elephant_command
		accepted_culture = swallow_command
		accepted_culture = fenghuang_command
		accepted_culture = eagle_command
	}
}

has_centaur_accepted_culture = {
	OR = {
		accepted_culture = plain_centaur
		accepted_culture = inaer_centaur
		accepted_culture = avil_centaur
		accepted_culture = irdu_centaur
		accepted_culture = ghanzamh_centaur
		accepted_culture = sochar_centaur
		accepted_culture = anuar_centaur
		accepted_culture = abalg_centaur
	}
}

has_ogre_accepted_culture = {
	OR = {
		accepted_culture = fathide_ogre
		accepted_culture = mossmouth_ogre
		accepted_culture = bloodtooth_ogre
		accepted_culture = horned_ogre
		accepted_culture = soulseeker_ogre
	}
}

has_no_majority_trigger = {
	has_dwarven_majority_trigger = no
	has_elven_majority_trigger = no
	has_halfling_majority_trigger = no
	has_gnomish_majority_trigger = no
	has_half_orcish_majority_trigger = no
	has_kobold_majority_trigger = no
	has_orcish_majority_trigger = no
	has_human_majority_trigger = no
	has_gnollish_majority_trigger = no
	has_ruinborn_majority_trigger = no
	has_goblin_majority_trigger = no
	has_harpy_majority_trigger = no
	has_troll_majority_trigger = no
	has_half_elven_majority_trigger = no
	has_ogre_majority_trigger = no
	has_harimari_majority_trigger = no
	has_centaur_majority_trigger = no
	has_hobgoblin_majority_trigger = no
	has_lizardfolk_majority_trigger = no
}

has_no_minority_trigger = {
	has_dwarven_minority_trigger = no
	has_elven_minority_trigger = no
	has_halfling_minority_trigger = no
	has_gnomish_minority_trigger = no
	has_half_orcish_minority_trigger = no
	has_kobold_minority_trigger = no
	has_orcish_minority_trigger = no
	has_human_minority_trigger = no
	has_gnollish_minority_trigger = no
	has_ruinborn_minority_trigger = no
	has_goblin_minority_trigger = no
	has_harpy_minority_trigger = no
	has_troll_minority_trigger = no
	has_half_elven_minority_trigger = no
	has_ogre_minority_trigger = no
	has_harimari_minority_trigger = no
	has_centaur_minority_trigger = no
	has_hobgoblin_minority_trigger = no
	has_lizardfolk_minority_trigger = no
}

has_minority_trigger = {
	OR = {
		has_dwarven_minority_trigger = yes
		has_elven_minority_trigger = yes
		has_halfling_minority_trigger = yes
		has_gnomish_minority_trigger = yes
		has_half_orcish_minority_trigger = yes
		has_kobold_minority_trigger = yes
		has_orcish_minority_trigger = yes
		has_human_minority_trigger = yes
		has_gnollish_minority_trigger = yes
		has_ruinborn_minority_trigger = yes
		has_goblin_minority_trigger = yes
		has_harpy_minority_trigger = yes
		has_troll_minority_trigger = yes
		has_half_elven_minority_trigger = yes
		has_ogre_minority_trigger = yes
		has_harimari_minority_trigger = yes
		has_centaur_minority_trigger = yes
		has_hobgoblin_minority_trigger = yes
		has_lizardfolk_minority_trigger = yes
	}
}

has_any_oppressed_minority_trigger = {
	OR = {
		has_oppressed_dwarven_minority_trigger = yes
		has_oppressed_elven_minority_trigger = yes
		has_oppressed_halfling_minority_trigger = yes
		has_oppressed_gnomish_minority_trigger = yes
		has_oppressed_half_orcish_minority_trigger = yes
		has_oppressed_kobold_minority_trigger = yes
		has_oppressed_orcish_minority_trigger = yes
		has_oppressed_human_minority_trigger = yes
		has_oppressed_gnollish_minority_trigger = yes
		has_oppressed_ruinborn_minority_trigger = yes
		has_oppressed_goblin_minority_trigger = yes
		has_oppressed_harpy_minority_trigger = yes
		has_oppressed_troll_minority_trigger = yes
		has_oppressed_half_elven_minority_trigger = yes
		has_oppressed_ogre_minority_trigger = yes
		has_oppressed_harimari_minority_trigger = yes
		has_oppressed_centaur_minority_trigger = yes
		has_oppressed_hobgoblin_minority_trigger = yes
		has_oppressed_lizardfolk_minority_trigger = yes
	}
}

has_any_coexisting_minority_trigger = {
	OR = {
		has_coexisting_dwarven_minority_trigger = yes
		has_coexisting_elven_minority_trigger = yes
		has_coexisting_halfling_minority_trigger = yes
		has_coexisting_gnomish_minority_trigger = yes
		has_coexisting_half_orcish_minority_trigger = yes
		has_coexisting_kobold_minority_trigger = yes
		has_coexisting_orcish_minority_trigger = yes
		has_coexisting_human_minority_trigger = yes
		has_coexisting_gnollish_minority_trigger = yes
		has_coexisting_ruinborn_minority_trigger = yes
		has_coexisting_goblin_minority_trigger = yes
		has_coexisting_harpy_minority_trigger = yes
		has_coexisting_troll_minority_trigger = yes
		has_coexisting_half_elven_minority_trigger = yes
		has_coexisting_ogre_minority_trigger = yes
		has_coexisting_harimari_minority_trigger = yes
		has_coexisting_centaur_minority_trigger = yes
		has_coexisting_hobgoblin_minority_trigger = yes
		has_coexisting_lizardfolk_minority_trigger = yes
	}
}

has_any_integrated_minority_trigger = {
	OR = {
		has_integrated_dwarven_minority_trigger = yes
		has_integrated_elven_minority_trigger = yes
		has_integrated_halfling_minority_trigger = yes
		has_integrated_gnomish_minority_trigger = yes
		has_integrated_half_orcish_minority_trigger = yes
		has_integrated_kobold_minority_trigger = yes
		has_integrated_orcish_minority_trigger = yes
		has_integrated_human_minority_trigger = yes
		has_integrated_gnollish_minority_trigger = yes
		has_integrated_ruinborn_minority_trigger = yes
		has_integrated_goblin_minority_trigger = yes
		has_integrated_harpy_minority_trigger = yes
		has_integrated_troll_minority_trigger = yes
		has_integrated_half_elven_minority_trigger = yes
		has_integrated_ogre_minority_trigger = yes
		has_integrated_harimari_minority_trigger = yes
		has_integrated_centaur_minority_trigger = yes
		has_integrated_hobgoblin_minority_trigger = yes
		has_integrated_lizardfolk_minority_trigger = yes
	}
}

has_any_oppressed_pop_trigger = {
	OR = {
		has_oppressed_dwarven_pop_trigger = yes
		has_oppressed_elven_pop_trigger = yes
		has_oppressed_halfling_pop_trigger = yes
		has_oppressed_gnomish_pop_trigger = yes
		has_oppressed_half_orcish_pop_trigger = yes
		has_oppressed_kobold_pop_trigger = yes
		has_oppressed_orcish_pop_trigger = yes
		has_oppressed_human_pop_trigger = yes
		has_oppressed_gnollish_pop_trigger = yes
		has_oppressed_ruinborn_pop_trigger = yes
		has_oppressed_goblin_pop_trigger = yes
		has_oppressed_harpy_pop_trigger = yes
		has_oppressed_troll_pop_trigger = yes
		has_oppressed_half_elven_pop_trigger = yes
		has_oppressed_ogre_pop_trigger = yes
		has_oppressed_harimari_pop_trigger = yes
		has_oppressed_centaur_pop_trigger = yes
		has_oppressed_hobgoblin_pop_trigger = yes
		has_oppressed_lizardfolk_pop_trigger = yes
	}
}

has_any_coexisting_pop_trigger = {
	OR = {
		has_coexisting_dwarven_pop_trigger = yes
		has_coexisting_elven_pop_trigger = yes
		has_coexisting_halfling_pop_trigger = yes
		has_coexisting_gnomish_pop_trigger = yes
		has_coexisting_half_orcish_pop_trigger = yes
		has_coexisting_kobold_pop_trigger = yes
		has_coexisting_orcish_pop_trigger = yes
		has_coexisting_human_pop_trigger = yes
		has_coexisting_gnollish_pop_trigger = yes
		has_coexisting_ruinborn_pop_trigger = yes
		has_coexisting_goblin_pop_trigger = yes
		has_coexisting_harpy_pop_trigger = yes
		has_coexisting_troll_pop_trigger = yes
		has_coexisting_half_elven_pop_trigger = yes
		has_coexisting_ogre_pop_trigger = yes
		has_coexisting_harimari_pop_trigger = yes
		has_coexisting_centaur_pop_trigger = yes
		has_coexisting_hobgoblin_pop_trigger = yes
		has_coexisting_lizardfolk_pop_trigger = yes
	}
}

has_any_integrated_pop_trigger = {
	OR = {
		has_integrated_dwarven_pop_trigger = yes
		has_integrated_elven_pop_trigger = yes
		has_integrated_halfling_pop_trigger = yes
		has_integrated_gnomish_pop_trigger = yes
		has_integrated_half_orcish_pop_trigger = yes
		has_integrated_kobold_pop_trigger = yes
		has_integrated_orcish_pop_trigger = yes
		has_integrated_human_pop_trigger = yes
		has_integrated_gnollish_pop_trigger = yes
		has_integrated_ruinborn_pop_trigger = yes
		has_integrated_goblin_pop_trigger = yes
		has_integrated_harpy_pop_trigger = yes
		has_integrated_troll_pop_trigger = yes
		has_integrated_half_elven_pop_trigger = yes
		has_integrated_ogre_pop_trigger = yes
		has_integrated_harimari_pop_trigger = yes
		has_integrated_centaur_pop_trigger = yes
		has_integrated_hobgoblin_pop_trigger = yes
		has_integrated_lizardfolk_pop_trigger = yes
	}
}

has_low_tolerance_of_any_race_trigger = {
	OR = {
		low_tolerance_dwarven_race_trigger = yes
		low_tolerance_elven_race_trigger = yes
		low_tolerance_halfling_race_trigger = yes
		low_tolerance_gnomish_race_trigger = yes
		low_tolerance_half_orcish_race_trigger = yes
		low_tolerance_kobold_race_trigger = yes
		low_tolerance_orcish_race_trigger = yes
		low_tolerance_human_race_trigger = yes
		low_tolerance_gnollish_race_trigger = yes
		low_tolerance_ruinborn_race_trigger = yes
		low_tolerance_goblin_race_trigger = yes
		low_tolerance_harpy_race_trigger = yes
		low_tolerance_troll_race_trigger = yes
		low_tolerance_half_elven_race_trigger = yes
		low_tolerance_ogre_race_trigger = yes
		low_tolerance_harimari_race_trigger = yes
		low_tolerance_centaur_race_trigger = yes
		low_tolerance_hobgoblin_race_trigger = yes
		low_tolerance_lizardfolk_race_trigger = yes
	}
}

has_low_tolerance_of_any_race_trigger_jadd = {
	OR = {
		low_tolerance_dwarven_race_trigger = yes
		low_tolerance_elven_race_trigger = yes
		low_tolerance_halfling_race_trigger = yes
		low_tolerance_gnomish_race_trigger = yes
		low_tolerance_half_orcish_race_trigger = yes
		low_tolerance_kobold_race_trigger = yes
		low_tolerance_orcish_race_trigger = yes
		low_tolerance_human_race_trigger = yes
		low_tolerance_gnollish_race_trigger = yes
		low_tolerance_ruinborn_race_trigger = yes
		low_tolerance_goblin_race_trigger = yes
		low_tolerance_harpy_race_trigger = yes
		low_tolerance_troll_race_trigger = yes
		low_tolerance_half_elven_race_trigger = yes
		low_tolerance_ogre_race_trigger = yes
		low_tolerance_harimari_race_trigger = yes
		low_tolerance_centaur_race_trigger = yes
		low_tolerance_hobgoblin_race_trigger = yes
		low_tolerance_lizardfolk_race_trigger = yes
	}
}

has_high_tolerance_of_any_race_trigger = {
	OR = {
		high_tolerance_dwarven_race_trigger = yes
		high_tolerance_elven_race_trigger = yes
		high_tolerance_halfling_race_trigger = yes
		high_tolerance_gnomish_race_trigger = yes
		high_tolerance_half_orcish_race_trigger = yes
		high_tolerance_kobold_race_trigger = yes
		high_tolerance_orcish_race_trigger = yes
		high_tolerance_human_race_trigger = yes
		high_tolerance_gnollish_race_trigger = yes
		high_tolerance_ruinborn_race_trigger = yes
		high_tolerance_goblin_race_trigger = yes
		high_tolerance_harpy_race_trigger = yes
		high_tolerance_troll_race_trigger = yes
		high_tolerance_half_elven_race_trigger = yes
		high_tolerance_ogre_race_trigger = yes
		high_tolerance_harimari_race_trigger = yes
		high_tolerance_centaur_race_trigger = yes
		high_tolerance_hobgoblin_race_trigger = yes
		high_tolerance_lizardfolk_race_trigger = yes
	}
}

# ELVEN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_elven_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_elven_minority_tooltip
		OR = {
			has_province_modifier = elven_minority_oppressed_small
			has_province_modifier = elven_minority_coexisting_small
			has_province_modifier = elven_minority_integrated_small
			has_province_modifier = elven_minority_oppressed_large
			has_province_modifier = elven_minority_coexisting_large
			has_province_modifier = elven_minority_integrated_large
		}
	}
}
has_elven_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_elven_majority_tooltip
		OR = {
			has_province_modifier = elven_majority_oppressed
			has_province_modifier = elven_majority_coexisting
			has_province_modifier = elven_majority_integrated
			has_province_modifier = elven_majority_primary
		}
	}
}
has_small_elven_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_elven_minority_tooltip
		OR = {
			has_province_modifier = elven_minority_oppressed_small
			has_province_modifier = elven_minority_coexisting_small
			has_province_modifier = elven_minority_integrated_small
		}
	}
}
has_large_elven_minority_trigger = {	# Only checks for large minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_elven_minority_tooltip
		OR = {
			has_province_modifier = elven_minority_oppressed_large
			has_province_modifier = elven_minority_coexisting_large
			has_province_modifier = elven_minority_integrated_large
		}
	}
}
has_oppressed_elven_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_elven_minority_tooltip
		OR = {
			has_province_modifier = elven_minority_oppressed_small
			has_province_modifier = elven_minority_oppressed_large
		}
	}
}
has_oppressed_elven_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_elven_pop_tooltip
		OR = {
			has_province_modifier = elven_minority_oppressed_small
			has_province_modifier = elven_minority_oppressed_large
			has_province_modifier = elven_majority_oppressed
		}
	}
}
has_integrated_elven_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_elven_minority_tooltip
		OR = {
			has_province_modifier = elven_minority_integrated_small
			has_province_modifier = elven_minority_integrated_large
		}
	}
}
has_integrated_elven_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_elven_pop_tooltip
		OR = {
			has_province_modifier = elven_minority_integrated_small
			has_province_modifier = elven_minority_integrated_large
			has_province_modifier = elven_majority_integrated
			has_province_modifier = elven_majority_primary
		}
	}
}
has_coexisting_elven_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_elven_minority_tooltip
		OR = {
			has_province_modifier = elven_minority_coexisting_small
			has_province_modifier = elven_minority_coexisting_large
		}
	}
}
has_coexisting_elven_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_elven_pop_tooltip
		OR = {
			has_province_modifier = elven_minority_coexisting_small
			has_province_modifier = elven_minority_coexisting_large
			has_province_modifier = elven_majority_coexisting
		}
	}
}
has_any_elven_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_elven_pop_trigger_tooltip
		OR = {
			has_province_modifier = elven_minority_oppressed_small
			has_province_modifier = elven_minority_oppressed_large
			has_province_modifier = elven_majority_oppressed
			has_province_modifier = elven_minority_coexisting_small
			has_province_modifier = elven_minority_coexisting_large
			has_province_modifier = elven_majority_coexisting
			has_province_modifier = elven_minority_integrated_small
			has_province_modifier = elven_minority_integrated_large
			has_province_modifier = elven_majority_integrated
			has_province_modifier = elven_majority_primary
		}
	}
}
# Country level
max_tolerance_elven_race_trigger = {	# Is elven tolerance = 100
	check_variable = {
		which = elven_race_tolerance
		which = 100
	}
}
high_tolerance_elven_race_trigger = {	# Is elven tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_elven_people_tooltip
		OR = {
			check_variable = {
				which = elven_race_tolerance
				value = 70
			}
			has_country_modifier = elven_administration
		}
	}
}
medium_tolerance_elven_race_trigger = {	# Is elven tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_elven_people_tooltip
		NOT = { has_country_modifier = elven_administration }
		check_variable = {
			which = elven_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = elven_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_elven_race_trigger = {	# Is elven tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_elven_people_tooltip
		NOT = { has_country_modifier = elven_administration }
		NOT = {
			check_variable = {
				which = elven_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_elven = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = elven_race_tolerance
			which = elven_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_elven = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = elven_race_tolerance_ai
		which = elven_race_tolerance
	}
}
wants_to_decrease_tolerance_elven = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = elven_race_tolerance
		which = elven_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = elven_race_tolerance_ai
			which = elven_race_tolerance
		}
	}
}

# DWARVEN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_dwarven_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_dwarven_minority_tooltip
		OR = {
			has_province_modifier = dwarven_minority_oppressed_small
			has_province_modifier = dwarven_minority_coexisting_small
			has_province_modifier = dwarven_minority_integrated_small
			has_province_modifier = dwarven_minority_oppressed_large
			has_province_modifier = dwarven_minority_coexisting_large
			has_province_modifier = dwarven_minority_integrated_large
		}
	}
}
has_dwarven_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_dwarven_majority_tooltip
		OR = {
			has_province_modifier = dwarven_majority_oppressed
			has_province_modifier = dwarven_majority_coexisting
			has_province_modifier = dwarven_majority_integrated
			has_province_modifier = dwarven_majority_primary
		}
	}
}
has_small_dwarven_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_dwarven_minority_tooltip
		OR = {
			has_province_modifier = dwarven_minority_oppressed_small
			has_province_modifier = dwarven_minority_coexisting_small
			has_province_modifier = dwarven_minority_integrated_small
		}
	}
}
has_large_dwarven_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_dwarven_minority_tooltip
		OR = {
			has_province_modifier = dwarven_minority_oppressed_large
			has_province_modifier = dwarven_minority_coexisting_large
			has_province_modifier = dwarven_minority_integrated_large
		}
	}
}
has_oppressed_dwarven_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_dwarven_minority_tooltip
		OR = {
			has_province_modifier = dwarven_minority_oppressed_small
			has_province_modifier = dwarven_minority_oppressed_large
		}
	}
}
has_oppressed_dwarven_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_dwarven_pop_tooltip
		OR = {
			has_province_modifier = dwarven_minority_oppressed_small
			has_province_modifier = dwarven_minority_oppressed_large
			has_province_modifier = dwarven_majority_oppressed
		}
	}
}
has_integrated_dwarven_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_dwarven_minority_tooltip
		OR = {
			has_province_modifier = dwarven_minority_integrated_small
			has_province_modifier = dwarven_minority_integrated_large
		}
	}
}
has_integrated_dwarven_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_dwarven_pop_tooltip
		OR = {
			has_province_modifier = dwarven_minority_integrated_small
			has_province_modifier = dwarven_minority_integrated_large
			has_province_modifier = dwarven_majority_integrated
			has_province_modifier = dwarven_majority_primary
		}
	}
}
has_coexisting_dwarven_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_dwarven_minority_tooltip
		OR = {
			has_province_modifier = dwarven_minority_coexisting_small
			has_province_modifier = dwarven_minority_coexisting_large
		}
	}
}
has_coexisting_dwarven_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_dwarven_pop_tooltip
		OR = {
			has_province_modifier = dwarven_minority_coexisting_small
			has_province_modifier = dwarven_minority_coexisting_large
			has_province_modifier = dwarven_majority_coexisting
		}
	}
}
has_any_dwarven_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_dwarven_pop_trigger_tooltip
		OR = {
			has_province_modifier = dwarven_minority_oppressed_small
			has_province_modifier = dwarven_minority_oppressed_large
			has_province_modifier = dwarven_majority_oppressed
			has_province_modifier = dwarven_minority_coexisting_small
			has_province_modifier = dwarven_minority_coexisting_large
			has_province_modifier = dwarven_majority_coexisting
			has_province_modifier = dwarven_minority_integrated_small
			has_province_modifier = dwarven_minority_integrated_large
			has_province_modifier = dwarven_majority_integrated
			has_province_modifier = dwarven_majority_primary
		}
	}
}
# Country level
max_tolerance_dwarven_race_trigger = {	# Is dwarven tolerance = 100
	check_variable = {
		which = dwarven_race_tolerance
		which = 100
	}
}
high_tolerance_dwarven_race_trigger = {	# Is dwarven tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_dwarven_people_tooltip
		OR = {
			check_variable = {
				which = dwarven_race_tolerance
				value = 71
			}
			has_country_modifier = dwarven_administration
		}
	}
}
medium_tolerance_dwarven_race_trigger = {	# Is dwarven tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_dwarven_people_tooltip
		NOT = { has_country_modifier = dwarven_administration }
		check_variable = {
			which = dwarven_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = dwarven_race_tolerance
				value = 71
			}
		}
	}
}
low_tolerance_dwarven_race_trigger = {	# Is dwarven tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_dwarven_people_tooltip
		NOT = { has_country_modifier = dwarven_administration }
		NOT = {
			check_variable = {
				which = dwarven_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_dwarven = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = dwarven_race_tolerance
			which = dwarven_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_dwarven = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = dwarven_race_tolerance_ai
		which = dwarven_race_tolerance
	}
}
wants_to_decrease_tolerance_dwarven = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = dwarven_race_tolerance
		which = dwarven_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = dwarven_race_tolerance_ai
			which = dwarven_race_tolerance
		}
	}
}

# HALFLING -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_halfling_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_halfling_minority_tooltip
		OR = {
			has_province_modifier = halfling_minority_oppressed_small
			has_province_modifier = halfling_minority_coexisting_small
			has_province_modifier = halfling_minority_integrated_small
			has_province_modifier = halfling_minority_oppressed_large
			has_province_modifier = halfling_minority_coexisting_large
			has_province_modifier = halfling_minority_integrated_large
		}
	}
}
has_halfling_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_halfling_majority_tooltip
		OR = {
			has_province_modifier = halfling_majority_oppressed
			has_province_modifier = halfling_majority_coexisting
			has_province_modifier = halfling_majority_integrated
			has_province_modifier = halfling_majority_primary
		}
	}
}
has_small_halfling_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_halfling_minority_tooltip
		OR = {
			has_province_modifier = halfling_minority_oppressed_small
			has_province_modifier = halfling_minority_coexisting_small
			has_province_modifier = halfling_minority_integrated_small
		}
	}
}
has_large_halfling_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_halfling_minority_tooltip
		OR = {
			has_province_modifier = halfling_minority_oppressed_large
			has_province_modifier = halfling_minority_coexisting_large
			has_province_modifier = halfling_minority_integrated_large
		}
	}
}
has_oppressed_halfling_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_halfling_minority_tooltip
		OR = {
			has_province_modifier = halfling_minority_oppressed_small
			has_province_modifier = halfling_minority_oppressed_large
		}
	}
}
has_oppressed_halfling_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_halfling_pop_tooltip
		OR = {
			has_province_modifier = halfling_minority_oppressed_small
			has_province_modifier = halfling_minority_oppressed_large
			has_province_modifier = halfling_majority_oppressed
		}
	}
}
has_integrated_halfling_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_halfling_minority_tooltip
		OR = {
			has_province_modifier = halfling_minority_integrated_small
			has_province_modifier = halfling_minority_integrated_large
		}
	}
}
has_integrated_halfling_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_halfling_pop_tooltip
		OR = {
			has_province_modifier = halfling_minority_integrated_small
			has_province_modifier = halfling_minority_integrated_large
			has_province_modifier = halfling_majority_integrated
			has_province_modifier = halfling_majority_primary
		}
	}
}
has_coexisting_halfling_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_halfling_minority_tooltip
		OR = {
			has_province_modifier = halfling_minority_coexisting_small
			has_province_modifier = halfling_minority_coexisting_large
		}
	}
}
has_coexisting_halfling_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_halfling_pop_tooltip
		OR = {
			has_province_modifier = halfling_minority_coexisting_small
			has_province_modifier = halfling_minority_coexisting_large
			has_province_modifier = halfling_majority_coexisting
		}
	}
}
has_any_halfling_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_halfling_pop_trigger_tooltip
		OR = {
			has_province_modifier = halfling_minority_oppressed_small
			has_province_modifier = halfling_minority_oppressed_large
			has_province_modifier = halfling_majority_oppressed
			has_province_modifier = halfling_minority_coexisting_small
			has_province_modifier = halfling_minority_coexisting_large
			has_province_modifier = halfling_majority_coexisting
			has_province_modifier = halfling_minority_integrated_small
			has_province_modifier = halfling_minority_integrated_large
			has_province_modifier = halfling_majority_integrated
			has_province_modifier = halfling_majority_primary
		}
	}
}
# Country level
max_tolerance_halfling_race_trigger = {	# Is halfling tolerance = 100
	check_variable = {
		which = halfling_race_tolerance
		which = 100
	}
}
high_tolerance_halfling_race_trigger = {	# Is halfling tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_halfling_people_tooltip
		OR = {
			check_variable = {
				which = halfling_race_tolerance
				value = 70
			}
			has_country_modifier = halfling_administration
		}
	}
}
medium_tolerance_halfling_race_trigger = {	# Is halfling tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_halfling_people_tooltip
		NOT = { has_country_modifier = halfling_administration }
		check_variable = {
			which = halfling_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = halfling_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_halfling_race_trigger = {	# Is halfling tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_halfling_people_tooltip
		NOT = { has_country_modifier = halfling_administration }
		NOT = {
			check_variable = {
				which = halfling_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_halfling = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = halfling_race_tolerance
			which = halfling_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_halfling = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = halfling_race_tolerance_ai
		which = halfling_race_tolerance
	}
}
wants_to_decrease_tolerance_halfling = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = halfling_race_tolerance
		which = halfling_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = halfling_race_tolerance_ai
			which = halfling_race_tolerance
		}
	}
}

# GNOMISH -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_gnomish_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_gnomish_minority_tooltip
		OR = {
			has_province_modifier = gnomish_minority_oppressed_small
			has_province_modifier = gnomish_minority_coexisting_small
			has_province_modifier = gnomish_minority_integrated_small
			has_province_modifier = gnomish_minority_oppressed_large
			has_province_modifier = gnomish_minority_coexisting_large
			has_province_modifier = gnomish_minority_integrated_large
		}
	}
}
has_gnomish_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_gnomish_majority_tooltip
		OR = {
			has_province_modifier = gnomish_majority_oppressed
			has_province_modifier = gnomish_majority_coexisting
			has_province_modifier = gnomish_majority_integrated
			has_province_modifier = gnomish_majority_primary
		}
	}
}
has_small_gnomish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_gnomish_minority_tooltip
		OR = {
			has_province_modifier = gnomish_minority_oppressed_small
			has_province_modifier = gnomish_minority_coexisting_small
			has_province_modifier = gnomish_minority_integrated_small
		}
	}
}
has_large_gnomish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_gnomish_minority_tooltip
		OR = {
			has_province_modifier = gnomish_minority_oppressed_large
			has_province_modifier = gnomish_minority_coexisting_large
			has_province_modifier = gnomish_minority_integrated_large
		}
	}
}
has_oppressed_gnomish_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_gnomish_minority_tooltip
		OR = {
			has_province_modifier = gnomish_minority_oppressed_small
			has_province_modifier = gnomish_minority_oppressed_large
		}
	}
}
has_oppressed_gnomish_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_gnomish_pop_tooltip
		OR = {
			has_province_modifier = gnomish_minority_oppressed_small
			has_province_modifier = gnomish_minority_oppressed_large
			has_province_modifier = gnomish_majority_oppressed
		}
	}
}
has_integrated_gnomish_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_gnomish_minority_tooltip
		OR = {
			has_province_modifier = gnomish_minority_integrated_small
			has_province_modifier = gnomish_minority_integrated_large
		}
	}
}
has_integrated_gnomish_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_gnomish_pop_tooltip
		OR = {
			has_province_modifier = gnomish_minority_integrated_small
			has_province_modifier = gnomish_minority_integrated_large
			has_province_modifier = gnomish_majority_integrated
			has_province_modifier = gnomish_majority_primary
		}
	}
}
has_coexisting_gnomish_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_gnomish_minority_tooltip
		OR = {
			has_province_modifier = gnomish_minority_coexisting_small
			has_province_modifier = gnomish_minority_coexisting_large
		}
	}
}
has_coexisting_gnomish_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_gnomish_pop_tooltip
		OR = {
			has_province_modifier = gnomish_minority_coexisting_small
			has_province_modifier = gnomish_minority_coexisting_large
			has_province_modifier = gnomish_majority_coexisting
		}
	}
}
has_any_gnomish_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_gnomish_pop_trigger_tooltip
		OR = {
			has_province_modifier = gnomish_minority_oppressed_small
			has_province_modifier = gnomish_minority_oppressed_large
			has_province_modifier = gnomish_majority_oppressed
			has_province_modifier = gnomish_minority_coexisting_small
			has_province_modifier = gnomish_minority_coexisting_large
			has_province_modifier = gnomish_majority_coexisting
			has_province_modifier = gnomish_minority_integrated_small
			has_province_modifier = gnomish_minority_integrated_large
			has_province_modifier = gnomish_majority_integrated
			has_province_modifier = gnomish_majority_primary
		}
	}
}
# Country level
max_tolerance_gnomish_race_trigger = {	# Is gnomish tolerance = 100
	check_variable = {
		which = gnomish_race_tolerance
		which = 100
	}
}
high_tolerance_gnomish_race_trigger = {	# Is gnomish tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_gnomish_people_tooltip
		OR = {
			check_variable = {
				which = gnomish_race_tolerance
				value = 70
			}
			has_country_modifier = gnomish_administration
		}
	}
}
medium_tolerance_gnomish_race_trigger = {	# Is gnomish tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_gnomish_people_tooltip
		NOT = { has_country_modifier = gnomish_administration }
		check_variable = {
			which = gnomish_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = gnomish_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_gnomish_race_trigger = {	# Is gnomish tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_gnomish_people_tooltip
		NOT = { has_country_modifier = gnomish_administration }
		NOT = {
			check_variable = {
				which = gnomish_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_gnomish = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = gnomish_race_tolerance
			which = gnomish_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_gnomish = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = gnomish_race_tolerance_ai
		which = gnomish_race_tolerance
	}
}
wants_to_decrease_tolerance_gnomish = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = gnomish_race_tolerance
		which = gnomish_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = gnomish_race_tolerance_ai
			which = gnomish_race_tolerance
		}
	}
}

# HALF ORCISH -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_half_orcish_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_half_orcish_minority_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_oppressed_small
			has_province_modifier = half_orcish_minority_coexisting_small
			has_province_modifier = half_orcish_minority_integrated_small
			has_province_modifier = half_orcish_minority_oppressed_large
			has_province_modifier = half_orcish_minority_coexisting_large
			has_province_modifier = half_orcish_minority_integrated_large
		}
	}
}
has_half_orcish_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_half_orcish_majority_tooltip
		OR = {
			has_province_modifier = half_orcish_majority_oppressed
			has_province_modifier = half_orcish_majority_coexisting
			has_province_modifier = half_orcish_majority_integrated
			has_province_modifier = half_orcish_majority_primary
		}
	}
}
has_small_half_orcish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_half_orcish_minority_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_oppressed_small
			has_province_modifier = half_orcish_minority_coexisting_small
			has_province_modifier = half_orcish_minority_integrated_small
		}
	}
}
has_large_half_orcish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_half_orcish_minority_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_oppressed_large
			has_province_modifier = half_orcish_minority_coexisting_large
			has_province_modifier = half_orcish_minority_integrated_large
		}
	}
}
has_oppressed_half_orcish_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_half_orcish_minority_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_oppressed_small
			has_province_modifier = half_orcish_minority_oppressed_large
		}
	}
}
has_oppressed_half_orcish_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_half_orcish_pop_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_oppressed_small
			has_province_modifier = half_orcish_minority_oppressed_large
			has_province_modifier = half_orcish_majority_oppressed
		}
	}
}
has_integrated_half_orcish_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_half_orcish_minority_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_integrated_small
			has_province_modifier = half_orcish_minority_integrated_large
		}
	}
}
has_integrated_half_orcish_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_half_orcish_pop_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_integrated_small
			has_province_modifier = half_orcish_minority_integrated_large
			has_province_modifier = half_orcish_majority_integrated
			has_province_modifier = half_orcish_majority_primary
		}
	}
}
has_coexisting_half_orcish_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_half_orcish_minority_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_coexisting_small
			has_province_modifier = half_orcish_minority_coexisting_large
		}
	}
}
has_coexisting_half_orcish_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_half_orcish_pop_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_coexisting_small
			has_province_modifier = half_orcish_minority_coexisting_large
			has_province_modifier = half_orcish_majority_coexisting
		}
	}
}
has_any_half_orcish_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_half_orcish_pop_trigger_tooltip
		OR = {
			has_province_modifier = half_orcish_minority_oppressed_small
			has_province_modifier = half_orcish_minority_oppressed_large
			has_province_modifier = half_orcish_majority_oppressed
			has_province_modifier = half_orcish_minority_coexisting_small
			has_province_modifier = half_orcish_minority_coexisting_large
			has_province_modifier = half_orcish_majority_coexisting
			has_province_modifier = half_orcish_minority_integrated_small
			has_province_modifier = half_orcish_minority_integrated_large
			has_province_modifier = half_orcish_majority_integrated
			has_province_modifier = half_orcish_majority_primary
		}
	}
}
# Country level
max_tolerance_half_orcish_race_trigger = {	# Is half_orcish tolerance = 100
	check_variable = {
		which = half_orcish_race_tolerance
		which = 100
	}
}
high_tolerance_half_orcish_race_trigger = {	# Is half_orcish tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_half_orcish_people_tooltip
		OR = {
			check_variable = {
				which = half_orcish_race_tolerance
				value = 70
			}
			has_country_modifier = half_orcish_administration
		}
	}
}
medium_tolerance_half_orcish_race_trigger = {	# Is half_orcish tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_half_orcish_people_tooltip
		NOT = { has_country_modifier = half_orcish_administration }
		check_variable = {
			which = half_orcish_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = half_orcish_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_half_orcish_race_trigger = {	# Is half_orcish tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_half_orcish_people_tooltip
		NOT = { has_country_modifier = half_orcish_administration }
		NOT = {
			check_variable = {
				which = half_orcish_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_half_orcish = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = half_orcish_race_tolerance
			which = half_orcish_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_half_orcish = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = half_orcish_race_tolerance_ai
		which = half_orcish_race_tolerance
	}
}
wants_to_decrease_tolerance_half_orcish = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = half_orcish_race_tolerance
		which = half_orcish_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = half_orcish_race_tolerance_ai
			which = half_orcish_race_tolerance
		}
	}
}

# KOBOLD -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_kobold_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_kobold_minority_tooltip
		OR = {
			has_province_modifier = kobold_minority_oppressed_small
			has_province_modifier = kobold_minority_coexisting_small
			has_province_modifier = kobold_minority_integrated_small
			has_province_modifier = kobold_minority_oppressed_large
			has_province_modifier = kobold_minority_coexisting_large
			has_province_modifier = kobold_minority_integrated_large
		}
	}
}
has_kobold_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_kobold_majority_tooltip
		OR = {
			has_province_modifier = kobold_majority_oppressed
			has_province_modifier = kobold_majority_coexisting
			has_province_modifier = kobold_majority_integrated
			has_province_modifier = kobold_majority_primary
		}
	}
}
has_small_kobold_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_kobold_minority_tooltip
		OR = {
			has_province_modifier = kobold_minority_oppressed_small
			has_province_modifier = kobold_minority_coexisting_small
			has_province_modifier = kobold_minority_integrated_small
		}
	}
}
has_large_kobold_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_kobold_minority_tooltip
		OR = {
			has_province_modifier = kobold_minority_oppressed_large
			has_province_modifier = kobold_minority_coexisting_large
			has_province_modifier = kobold_minority_integrated_large
		}
	}
}
has_oppressed_kobold_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_kobold_minority_tooltip
		OR = {
			has_province_modifier = kobold_minority_oppressed_small
			has_province_modifier = kobold_minority_oppressed_large
		}
	}
}
has_oppressed_kobold_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_kobold_pop_tooltip
		OR = {
			has_province_modifier = kobold_minority_oppressed_small
			has_province_modifier = kobold_minority_oppressed_large
			has_province_modifier = kobold_majority_oppressed
		}
	}
}
has_integrated_kobold_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_kobold_minority_tooltip
		OR = {
			has_province_modifier = kobold_minority_integrated_small
			has_province_modifier = kobold_minority_integrated_large
		}
	}
}
has_integrated_kobold_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_kobold_pop_tooltip
		OR = {
			has_province_modifier = kobold_minority_integrated_small
			has_province_modifier = kobold_minority_integrated_large
			has_province_modifier = kobold_majority_integrated
			has_province_modifier = kobold_majority_primary
		}
	}
}
has_coexisting_kobold_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_kobold_minority_tooltip
		OR = {
			has_province_modifier = kobold_minority_coexisting_small
			has_province_modifier = kobold_minority_coexisting_large
		}
	}
}
has_coexisting_kobold_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_kobold_pop_tooltip
		OR = {
			has_province_modifier = kobold_minority_coexisting_small
			has_province_modifier = kobold_minority_coexisting_large
			has_province_modifier = kobold_majority_coexisting
		}
	}
}
has_any_kobold_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_kobold_pop_trigger_tooltip
		OR = {
			has_province_modifier = kobold_minority_oppressed_small
			has_province_modifier = kobold_minority_oppressed_large
			has_province_modifier = kobold_majority_oppressed
			has_province_modifier = kobold_minority_coexisting_small
			has_province_modifier = kobold_minority_coexisting_large
			has_province_modifier = kobold_majority_coexisting
			has_province_modifier = kobold_minority_integrated_small
			has_province_modifier = kobold_minority_integrated_large
			has_province_modifier = kobold_majority_integrated
			has_province_modifier = kobold_majority_primary
		}
	}
}
# Country level
max_tolerance_kobold_race_trigger = {	# Is kobold tolerance = 100
	check_variable = {
		which = kobold_race_tolerance
		which = 100
	}
}
high_tolerance_kobold_race_trigger = {	# Is kobold tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_kobold_people_tooltip
		OR = {
			check_variable = {
				which = kobold_race_tolerance
				value = 70
			}
			has_country_modifier = kobold_administration
		}
	}
}
medium_tolerance_kobold_race_trigger = {	# Is kobold tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_kobold_people_tooltip
		NOT = { has_country_modifier = kobold_administration }
		check_variable = {
			which = kobold_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = kobold_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_kobold_race_trigger = {	# Is kobold tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_kobold_people_tooltip
		NOT = { has_country_modifier = kobold_administration }
		NOT = {
			check_variable = {
				which = kobold_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_kobold = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = kobold_race_tolerance
			which = kobold_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_kobold = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = kobold_race_tolerance_ai
		which = kobold_race_tolerance
	}
}
wants_to_decrease_tolerance_kobold = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = kobold_race_tolerance
		which = kobold_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = kobold_race_tolerance_ai
			which = kobold_race_tolerance
		}
	}
}

# HUMAN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_human_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_human_minority_tooltip
		OR = {
			has_province_modifier = human_minority_oppressed_small
			has_province_modifier = human_minority_coexisting_small
			has_province_modifier = human_minority_integrated_small
			has_province_modifier = human_minority_oppressed_large
			has_province_modifier = human_minority_coexisting_large
			has_province_modifier = human_minority_integrated_large
		}
	}
}
has_human_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_human_majority_tooltip
		OR = {
			has_province_modifier = human_majority_oppressed
			has_province_modifier = human_majority_coexisting
			has_province_modifier = human_majority_integrated
			has_province_modifier = human_majority_primary
		}
	}
}
has_small_human_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_human_minority_tooltip
		OR = {
			has_province_modifier = human_minority_oppressed_small
			has_province_modifier = human_minority_coexisting_small
			has_province_modifier = human_minority_integrated_small
		}
	}
}
has_large_human_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_human_minority_tooltip
		OR = {
			has_province_modifier = human_minority_oppressed_large
			has_province_modifier = human_minority_coexisting_large
			has_province_modifier = human_minority_integrated_large
		}
	}
}
has_oppressed_human_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_human_minority_tooltip
		OR = {
			has_province_modifier = human_minority_oppressed_small
			has_province_modifier = human_minority_oppressed_large
		}
	}
}
has_oppressed_human_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_human_pop_tooltip
		OR = {
			has_province_modifier = human_minority_oppressed_small
			has_province_modifier = human_minority_oppressed_large
			has_province_modifier = human_majority_oppressed
		}
	}
}
has_integrated_human_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_human_minority_tooltip
		OR = {
			has_province_modifier = human_minority_integrated_small
			has_province_modifier = human_minority_integrated_large
		}
	}
}
has_integrated_human_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_human_pop_tooltip
		OR = {
			has_province_modifier = human_minority_integrated_small
			has_province_modifier = human_minority_integrated_large
			has_province_modifier = human_majority_integrated
			has_province_modifier = human_majority_primary
		}
	}
}
has_coexisting_human_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_human_minority_tooltip
		OR = {
			has_province_modifier = human_minority_coexisting_small
			has_province_modifier = human_minority_coexisting_large
		}
	}
}
has_coexisting_human_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_human_pop_tooltip
		OR = {
			has_province_modifier = human_minority_coexisting_small
			has_province_modifier = human_minority_coexisting_large
			has_province_modifier = human_majority_coexisting
		}
	}
}
has_any_human_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_human_pop_trigger_tooltip
		OR = {
			has_province_modifier = human_minority_oppressed_small
			has_province_modifier = human_minority_oppressed_large
			has_province_modifier = human_majority_oppressed
			has_province_modifier = human_minority_coexisting_small
			has_province_modifier = human_minority_coexisting_large
			has_province_modifier = human_majority_coexisting
			has_province_modifier = human_minority_integrated_small
			has_province_modifier = human_minority_integrated_large
			has_province_modifier = human_majority_integrated
			has_province_modifier = human_majority_primary
		}
	}
}
# Country level
max_tolerance_human_race_trigger = {	# Is human tolerance = 100
	check_variable = {
		which = human_race_tolerance
		which = 100
	}
}
high_tolerance_human_race_trigger = {	# Is human tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_human_people_tooltip
		OR = {
			check_variable = {
				which = human_race_tolerance
				value = 70
			}
			has_country_modifier = human_administration
		}
	}
}
medium_tolerance_human_race_trigger = {	# Is human tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_human_people_tooltip
		NOT = { has_country_modifier = human_administration }
		check_variable = {
			which = human_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = human_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_human_race_trigger = {	# Is human tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_human_people_tooltip
		NOT = { has_country_modifier = human_administration }
		NOT = {
			check_variable = {
				which = human_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_human = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = human_race_tolerance
			which = human_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_human = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = human_race_tolerance_ai
		which = human_race_tolerance
	}
}
wants_to_decrease_tolerance_human = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = human_race_tolerance
		which = human_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = human_race_tolerance_ai
			which = human_race_tolerance
		}
	}
}

# GNOLLISH -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_gnollish_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_gnollish_minority_tooltip
		OR = {
			has_province_modifier = gnollish_minority_oppressed_small
			has_province_modifier = gnollish_minority_coexisting_small
			has_province_modifier = gnollish_minority_integrated_small
			has_province_modifier = gnollish_minority_oppressed_large
			has_province_modifier = gnollish_minority_coexisting_large
			has_province_modifier = gnollish_minority_integrated_large
		}
	}
}
has_gnollish_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_gnollish_majority_tooltip
		OR = {
			has_province_modifier = gnollish_majority_oppressed
			has_province_modifier = gnollish_majority_coexisting
			has_province_modifier = gnollish_majority_integrated
			has_province_modifier = gnollish_majority_primary
		}
	}
}
has_small_gnollish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_gnollish_minority_tooltip
		OR = {
			has_province_modifier = gnollish_minority_oppressed_small
			has_province_modifier = gnollish_minority_coexisting_small
			has_province_modifier = gnollish_minority_integrated_small
		}
	}
}
has_large_gnollish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_gnollish_minority_tooltip
		OR = {
			has_province_modifier = gnollish_minority_oppressed_large
			has_province_modifier = gnollish_minority_coexisting_large
			has_province_modifier = gnollish_minority_integrated_large
		}
	}
}
has_oppressed_gnollish_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_gnollish_minority_tooltip
		OR = {
			has_province_modifier = gnollish_minority_oppressed_small
			has_province_modifier = gnollish_minority_oppressed_large
		}
	}
}
has_oppressed_gnollish_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_gnollish_pop_tooltip
		OR = {
			has_province_modifier = gnollish_minority_oppressed_small
			has_province_modifier = gnollish_minority_oppressed_large
			has_province_modifier = gnollish_majority_oppressed
		}
	}
}
has_integrated_gnollish_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_gnollish_minority_tooltip
		OR = {
			has_province_modifier = gnollish_minority_integrated_small
			has_province_modifier = gnollish_minority_integrated_large
		}
	}
}
has_integrated_gnollish_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_gnollish_pop_tooltip
		OR = {
			has_province_modifier = gnollish_minority_integrated_small
			has_province_modifier = gnollish_minority_integrated_large
			has_province_modifier = gnollish_majority_integrated
			has_province_modifier = gnollish_majority_primary
		}
	}
}
has_coexisting_gnollish_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_gnollish_minority_tooltip
		OR = {
			has_province_modifier = gnollish_minority_coexisting_small
			has_province_modifier = gnollish_minority_coexisting_large
		}
	}
}
has_coexisting_gnollish_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_gnollish_pop_tooltip
		OR = {
			has_province_modifier = gnollish_minority_coexisting_small
			has_province_modifier = gnollish_minority_coexisting_large
			has_province_modifier = gnollish_majority_coexisting
		}
	}
}
has_any_gnollish_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_gnollish_pop_trigger_tooltip
		OR = {
			has_province_modifier = gnollish_minority_oppressed_small
			has_province_modifier = gnollish_minority_oppressed_large
			has_province_modifier = gnollish_majority_oppressed
			has_province_modifier = gnollish_minority_coexisting_small
			has_province_modifier = gnollish_minority_coexisting_large
			has_province_modifier = gnollish_majority_coexisting
			has_province_modifier = gnollish_minority_integrated_small
			has_province_modifier = gnollish_minority_integrated_large
			has_province_modifier = gnollish_majority_integrated
			has_province_modifier = gnollish_majority_primary
		}
	}
}
# Country level
max_tolerance_gnollish_race_trigger = {	# Is gnollish tolerance = 100
	check_variable = {
		which = gnollish_race_tolerance
		which = 100
	}
}
high_tolerance_gnollish_race_trigger = {	# Is gnollish tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_gnollish_people_tooltip
		OR = {
			check_variable = {
				which = gnollish_race_tolerance
				value = 70
			}
			has_country_modifier = gnollish_administration
		}
	}
}
medium_tolerance_gnollish_race_trigger = {	# Is gnollish tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_gnollish_people_tooltip
		NOT = { has_country_modifier = gnollish_administration }
		check_variable = {
			which = gnollish_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = gnollish_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_gnollish_race_trigger = {	# Is gnollish tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_gnollish_people_tooltip
		NOT = { has_country_modifier = gnollish_administration }
		NOT = {
			check_variable = {
				which = gnollish_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_gnollish = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = gnollish_race_tolerance
			which = gnollish_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_gnollish = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = gnollish_race_tolerance_ai
		which = gnollish_race_tolerance
	}
}
wants_to_decrease_tolerance_gnollish = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = gnollish_race_tolerance
		which = gnollish_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = gnollish_race_tolerance_ai
			which = gnollish_race_tolerance
		}
	}
}

# RUINBORN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_ruinborn_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_ruinborn_minority_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_oppressed_small
			has_province_modifier = ruinborn_minority_coexisting_small
			has_province_modifier = ruinborn_minority_integrated_small
			has_province_modifier = ruinborn_minority_oppressed_large
			has_province_modifier = ruinborn_minority_coexisting_large
			has_province_modifier = ruinborn_minority_integrated_large
		}
	}
}
has_ruinborn_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_ruinborn_majority_tooltip
		OR = {
			has_province_modifier = ruinborn_majority_oppressed
			has_province_modifier = ruinborn_majority_coexisting
			has_province_modifier = ruinborn_majority_integrated
			has_province_modifier = ruinborn_majority_primary
		}
	}
}
has_small_ruinborn_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_ruinborn_minority_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_oppressed_small
			has_province_modifier = ruinborn_minority_coexisting_small
			has_province_modifier = ruinborn_minority_integrated_small
		}
	}
}
has_large_ruinborn_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_ruinborn_minority_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_oppressed_large
			has_province_modifier = ruinborn_minority_coexisting_large
			has_province_modifier = ruinborn_minority_integrated_large
		}
	}
}
has_oppressed_ruinborn_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_ruinborn_minority_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_oppressed_small
			has_province_modifier = ruinborn_minority_oppressed_large
		}
	}
}
has_oppressed_ruinborn_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_ruinborn_pop_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_oppressed_small
			has_province_modifier = ruinborn_minority_oppressed_large
			has_province_modifier = ruinborn_majority_oppressed
		}
	}
}
has_integrated_ruinborn_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_ruinborn_minority_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_integrated_small
			has_province_modifier = ruinborn_minority_integrated_large
		}
	}
}
has_integrated_ruinborn_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_ruinborn_pop_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_integrated_small
			has_province_modifier = ruinborn_minority_integrated_large
			has_province_modifier = ruinborn_majority_integrated
			has_province_modifier = ruinborn_majority_primary
		}
	}
}
has_coexisting_ruinborn_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_ruinborn_minority_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_coexisting_small
			has_province_modifier = ruinborn_minority_coexisting_large
		}
	}
}
has_coexisting_ruinborn_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_ruinborn_pop_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_coexisting_small
			has_province_modifier = ruinborn_minority_coexisting_large
			has_province_modifier = ruinborn_majority_coexisting
		}
	}
}
has_any_ruinborn_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_ruinborn_pop_trigger_tooltip
		OR = {
			has_province_modifier = ruinborn_minority_oppressed_small
			has_province_modifier = ruinborn_minority_oppressed_large
			has_province_modifier = ruinborn_majority_oppressed
			has_province_modifier = ruinborn_minority_coexisting_small
			has_province_modifier = ruinborn_minority_coexisting_large
			has_province_modifier = ruinborn_majority_coexisting
			has_province_modifier = ruinborn_minority_integrated_small
			has_province_modifier = ruinborn_minority_integrated_large
			has_province_modifier = ruinborn_majority_integrated
			has_province_modifier = ruinborn_majority_primary
		}
	}
}
# Country level
max_tolerance_ruinborn_race_trigger = {	# Is ruinborn tolerance = 100
	check_variable = {
		which = ruinborn_race_tolerance
		which = 100
	}
}
high_tolerance_ruinborn_race_trigger = {	# Is ruinborn tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_ruinborn_people_tooltip
		OR = {
			check_variable = {
				which = ruinborn_race_tolerance
				value = 70
			}
			has_country_modifier = ruinborn_administration
		}
	}
}
medium_tolerance_ruinborn_race_trigger = {	# Is ruinborn tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_ruinborn_people_tooltip
		NOT = { has_country_modifier = ruinborn_administration }
		check_variable = {
			which = ruinborn_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = ruinborn_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_ruinborn_race_trigger = {	# Is ruinborn tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_ruinborn_people_tooltip
		NOT = { has_country_modifier = ruinborn_administration }
		NOT = {
			check_variable = {
				which = ruinborn_race_tolerance
				value = 31
			}
		}
	}
}

ynn_has_any_non_ruinborn_pop_trigger = {
	custom_trigger_tooltip = {
		tooltip = ynn_has_any_non_ruinborn_pop_trigger_tt
		OR = {
			has_any_dwarven_pop_trigger = yes
			has_any_elven_pop_trigger = yes
			has_any_halfling_pop_trigger = yes
			has_any_gnomish_pop_trigger = yes
			has_any_half_elven_pop_trigger = yes
			has_any_half_orcish_pop_trigger = yes
			has_any_kobold_pop_trigger = yes
			has_any_human_pop_trigger = yes
		}
	}
}

# For Ai Only
wants_to_increase_tolerance_ruinborn = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = ruinborn_race_tolerance
			which = ruinborn_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_ruinborn = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = ruinborn_race_tolerance_ai
		which = ruinborn_race_tolerance
	}
}
wants_to_decrease_tolerance_ruinborn = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = ruinborn_race_tolerance
		which = ruinborn_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = ruinborn_race_tolerance_ai
			which = ruinborn_race_tolerance
		}
	}
}

# GOBLIN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_goblin_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_goblin_minority_tooltip
		OR = {
			has_province_modifier = goblin_minority_oppressed_small
			has_province_modifier = goblin_minority_coexisting_small
			has_province_modifier = goblin_minority_integrated_small
			has_province_modifier = goblin_minority_oppressed_large
			has_province_modifier = goblin_minority_coexisting_large
			has_province_modifier = goblin_minority_integrated_large
		}
	}
}
has_goblin_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_goblin_majority_tooltip
		OR = {
			has_province_modifier = goblin_majority_oppressed
			has_province_modifier = goblin_majority_coexisting
			has_province_modifier = goblin_majority_integrated
			has_province_modifier = goblin_majority_primary
		}
	}
}
has_small_goblin_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_goblin_minority_tooltip
		OR = {
			has_province_modifier = goblin_minority_oppressed_small
			has_province_modifier = goblin_minority_coexisting_small
			has_province_modifier = goblin_minority_integrated_small
		}
	}
}
has_large_goblin_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_goblin_minority_tooltip
		OR = {
			has_province_modifier = goblin_minority_oppressed_large
			has_province_modifier = goblin_minority_coexisting_large
			has_province_modifier = goblin_minority_integrated_large
		}
	}
}
has_oppressed_goblin_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_goblin_minority_tooltip
		OR = {
			has_province_modifier = goblin_minority_oppressed_small
			has_province_modifier = goblin_minority_oppressed_large
		}
	}
}
has_oppressed_goblin_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_goblin_pop_tooltip
		OR = {
			has_province_modifier = goblin_minority_oppressed_small
			has_province_modifier = goblin_minority_oppressed_large
			has_province_modifier = goblin_majority_oppressed
		}
	}
}
has_integrated_goblin_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_goblin_minority_tooltip
		OR = {
			has_province_modifier = goblin_minority_integrated_small
			has_province_modifier = goblin_minority_integrated_large
		}
	}
}
has_integrated_goblin_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_goblin_pop_tooltip
		OR = {
			has_province_modifier = goblin_minority_integrated_small
			has_province_modifier = goblin_minority_integrated_large
			has_province_modifier = goblin_majority_integrated
			has_province_modifier = goblin_majority_primary
		}
	}
}
has_coexisting_goblin_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_goblin_minority_tooltip
		OR = {
			has_province_modifier = goblin_minority_coexisting_small
			has_province_modifier = goblin_minority_coexisting_large
		}
	}
}
has_coexisting_goblin_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_goblin_pop_tooltip
		OR = {
			has_province_modifier = goblin_minority_coexisting_small
			has_province_modifier = goblin_minority_coexisting_large
			has_province_modifier = goblin_majority_coexisting
		}
	}
}
has_any_goblin_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_goblin_pop_trigger_tooltip
		OR = {
			has_province_modifier = goblin_minority_oppressed_small
			has_province_modifier = goblin_minority_oppressed_large
			has_province_modifier = goblin_majority_oppressed
			has_province_modifier = goblin_minority_coexisting_small
			has_province_modifier = goblin_minority_coexisting_large
			has_province_modifier = goblin_majority_coexisting
			has_province_modifier = goblin_minority_integrated_small
			has_province_modifier = goblin_minority_integrated_large
			has_province_modifier = goblin_majority_integrated
			has_province_modifier = goblin_majority_primary
		}
	}
}
# Country level
max_tolerance_goblin_race_trigger = {	# Is goblin tolerance = 100
	check_variable = {
		which = goblin_race_tolerance
		which = 100
	}
}
high_tolerance_goblin_race_trigger = {	# Is goblin tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_goblin_people_tooltip
		OR = {
			check_variable = {
				which = goblin_race_tolerance
				value = 70
			}
			has_country_modifier = goblin_administration
		}
	}
}
medium_tolerance_goblin_race_trigger = {	# Is goblin tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_goblin_people_tooltip
		NOT = { has_country_modifier = goblin_administration }
		check_variable = {
			which = goblin_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = goblin_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_goblin_race_trigger = {	# Is goblin tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_goblin_people_tooltip
		NOT = { has_country_modifier = goblin_administration }
		NOT = {
			check_variable = {
				which = goblin_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_goblin = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = goblin_race_tolerance
			which = goblin_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_goblin = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = goblin_race_tolerance_ai
		which = goblin_race_tolerance
	}
}
wants_to_decrease_tolerance_goblin = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = goblin_race_tolerance
		which = goblin_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = goblin_race_tolerance_ai
			which = goblin_race_tolerance
		}
	}
}

# HARPY -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_harpy_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_harpy_minority_tooltip
		OR = {
			has_province_modifier = harpy_minority_oppressed_small
			has_province_modifier = harpy_minority_coexisting_small
			has_province_modifier = harpy_minority_integrated_small
			has_province_modifier = harpy_minority_oppressed_large
			has_province_modifier = harpy_minority_coexisting_large
			has_province_modifier = harpy_minority_integrated_large
		}
	}
}
has_harpy_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_harpy_majority_tooltip
		OR = {
			has_province_modifier = harpy_majority_oppressed
			has_province_modifier = harpy_majority_coexisting
			has_province_modifier = harpy_majority_integrated
			has_province_modifier = harpy_majority_primary
		}
	}
}
has_small_harpy_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_harpy_minority_tooltip
		OR = {
			has_province_modifier = harpy_minority_oppressed_small
			has_province_modifier = harpy_minority_coexisting_small
			has_province_modifier = harpy_minority_integrated_small
		}
	}
}
has_large_harpy_minority_trigger = {	# Only checks for large minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_harpy_minority_tooltip
		OR = {
			has_province_modifier = harpy_minority_oppressed_large
			has_province_modifier = harpy_minority_coexisting_large
			has_province_modifier = harpy_minority_integrated_large
		}
	}
}
has_oppressed_harpy_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_harpy_minority_tooltip
		OR = {
			has_province_modifier = harpy_minority_oppressed_small
			has_province_modifier = harpy_minority_oppressed_large
		}
	}
}
has_oppressed_harpy_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_harpy_pop_tooltip
		OR = {
			has_province_modifier = harpy_minority_oppressed_small
			has_province_modifier = harpy_minority_oppressed_large
			has_province_modifier = harpy_majority_oppressed
		}
	}
}
has_integrated_harpy_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_harpy_minority_tooltip
		OR = {
			has_province_modifier = harpy_minority_integrated_small
			has_province_modifier = harpy_minority_integrated_large
		}
	}
}
has_integrated_harpy_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_harpy_pop_tooltip
		OR = {
			has_province_modifier = harpy_minority_integrated_small
			has_province_modifier = harpy_minority_integrated_large
			has_province_modifier = harpy_majority_integrated
			has_province_modifier = harpy_majority_primary
		}
	}
}
has_coexisting_harpy_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_harpy_minority_tooltip
		OR = {
			has_province_modifier = harpy_minority_coexisting_small
			has_province_modifier = harpy_minority_coexisting_large
		}
	}
}
has_coexisting_harpy_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_harpy_pop_tooltip
		OR = {
			has_province_modifier = harpy_minority_coexisting_small
			has_province_modifier = harpy_minority_coexisting_large
			has_province_modifier = harpy_majority_coexisting
		}
	}
}
has_any_harpy_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_harpy_pop_trigger_tooltip
		OR = {
			has_province_modifier = harpy_minority_oppressed_small
			has_province_modifier = harpy_minority_oppressed_large
			has_province_modifier = harpy_majority_oppressed
			has_province_modifier = harpy_minority_coexisting_small
			has_province_modifier = harpy_minority_coexisting_large
			has_province_modifier = harpy_majority_coexisting
			has_province_modifier = harpy_minority_integrated_small
			has_province_modifier = harpy_minority_integrated_large
			has_province_modifier = harpy_majority_integrated
			has_province_modifier = harpy_majority_primary
		}
	}
}
# Country level
max_tolerance_harpy_race_trigger = {	# Is harpy tolerance = 100
	check_variable = {
		which = harpy_race_tolerance
		which = 100
	}
}
high_tolerance_harpy_race_trigger = {	# Is harpy tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_harpy_people_tooltip
		OR = {
			check_variable = {
				which = harpy_race_tolerance
				value = 70
			}
			has_country_modifier = harpy_administration
		}
	}
}
medium_tolerance_harpy_race_trigger = {	# Is harpy tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_harpy_people_tooltip
		NOT = { has_country_modifier = harpy_administration }
		check_variable = {
			which = harpy_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = harpy_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_harpy_race_trigger = {	# Is harpy tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_harpy_people_tooltip
		NOT = { has_country_modifier = harpy_administration }
		NOT = {
			check_variable = {
				which = harpy_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_harpy = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = harpy_race_tolerance
			which = harpy_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_harpy = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = harpy_race_tolerance_ai
		which = harpy_race_tolerance
	}
}
wants_to_decrease_tolerance_harpy = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = harpy_race_tolerance
		which = harpy_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = harpy_race_tolerance_ai
			which = harpy_race_tolerance
		}
	}
}

# TROLL -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_troll_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_troll_minority_tooltip
		OR = {
			has_province_modifier = troll_minority_oppressed_small
			has_province_modifier = troll_minority_coexisting_small
			has_province_modifier = troll_minority_integrated_small
			has_province_modifier = troll_minority_oppressed_large
			has_province_modifier = troll_minority_coexisting_large
			has_province_modifier = troll_minority_integrated_large
		}
	}
}
has_troll_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_troll_majority_tooltip
		OR = {
			has_province_modifier = troll_majority_oppressed
			has_province_modifier = troll_majority_coexisting
			has_province_modifier = troll_majority_integrated
			has_province_modifier = troll_majority_primary
		}
	}
}
has_small_troll_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_troll_minority_tooltip
		OR = {
			has_province_modifier = troll_minority_oppressed_small
			has_province_modifier = troll_minority_coexisting_small
			has_province_modifier = troll_minority_integrated_small
		}
	}
}
has_large_troll_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_troll_minority_tooltip
		OR = {
			has_province_modifier = troll_minority_oppressed_large
			has_province_modifier = troll_minority_coexisting_large
			has_province_modifier = troll_minority_integrated_large
		}
	}
}
has_oppressed_troll_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_troll_minority_tooltip
		OR = {
			has_province_modifier = troll_minority_oppressed_small
			has_province_modifier = troll_minority_oppressed_large
		}
	}
}
has_oppressed_troll_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_troll_pop_tooltip
		OR = {
			has_province_modifier = troll_minority_oppressed_small
			has_province_modifier = troll_minority_oppressed_large
			has_province_modifier = troll_majority_oppressed
		}
	}
}
has_integrated_troll_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_troll_minority_tooltip
		OR = {
			has_province_modifier = troll_minority_integrated_small
			has_province_modifier = troll_minority_integrated_large
		}
	}
}
has_integrated_troll_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_troll_pop_tooltip
		OR = {
			has_province_modifier = troll_minority_integrated_small
			has_province_modifier = troll_minority_integrated_large
			has_province_modifier = troll_majority_integrated
			has_province_modifier = troll_majority_primary
		}
	}
}
has_coexisting_troll_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_troll_minority_tooltip
		OR = {
			has_province_modifier = troll_minority_coexisting_small
			has_province_modifier = troll_minority_coexisting_large
		}
	}
}
has_coexisting_troll_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_troll_pop_tooltip
		OR = {
			has_province_modifier = troll_minority_coexisting_small
			has_province_modifier = troll_minority_coexisting_large
			has_province_modifier = troll_majority_coexisting
		}
	}
}
has_any_troll_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_troll_pop_trigger_tooltip
		OR = {
			has_province_modifier = troll_minority_oppressed_small
			has_province_modifier = troll_minority_oppressed_large
			has_province_modifier = troll_majority_oppressed
			has_province_modifier = troll_minority_coexisting_small
			has_province_modifier = troll_minority_coexisting_large
			has_province_modifier = troll_majority_coexisting
			has_province_modifier = troll_minority_integrated_small
			has_province_modifier = troll_minority_integrated_large
			has_province_modifier = troll_majority_integrated
			has_province_modifier = troll_majority_primary
		}
	}
}
# Country level
max_tolerance_troll_race_trigger = {	# Is troll tolerance = 100
	check_variable = {
		which = troll_race_tolerance
		which = 100
	}
}
high_tolerance_troll_race_trigger = {	# Is troll tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_troll_people_tooltip
		OR = {
			check_variable = {
				which = troll_race_tolerance
				value = 70
			}
			has_country_modifier = troll_administration
		}
	}
}
medium_tolerance_troll_race_trigger = {	# Is troll tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_troll_people_tooltip
		NOT = { has_country_modifier = troll_administration }
		check_variable = {
			which = troll_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = troll_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_troll_race_trigger = {	# Is troll tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_troll_people_tooltip
		NOT = { has_country_modifier = troll_administration }
		NOT = {
			check_variable = {
				which = troll_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_troll = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = troll_race_tolerance
			which = troll_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_troll = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = troll_race_tolerance_ai
		which = troll_race_tolerance
	}
}
wants_to_decrease_tolerance_troll = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = troll_race_tolerance
		which = troll_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = troll_race_tolerance_ai
			which = troll_race_tolerance
		}
	}
}

# HALF ELVEN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_half_elven_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_half_elven_minority_tooltip
		OR = {
			has_province_modifier = half_elven_minority_oppressed_small
			has_province_modifier = half_elven_minority_coexisting_small
			has_province_modifier = half_elven_minority_integrated_small
			has_province_modifier = half_elven_minority_oppressed_large
			has_province_modifier = half_elven_minority_coexisting_large
			has_province_modifier = half_elven_minority_integrated_large
		}
	}
}
has_half_elven_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_half_elven_majority_tooltip
		OR = {
			has_province_modifier = half_elven_majority_oppressed
			has_province_modifier = half_elven_majority_coexisting
			has_province_modifier = half_elven_majority_integrated
			has_province_modifier = half_elven_majority_primary
		}
	}
}
has_small_half_elven_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_half_elven_minority_tooltip
		OR = {
			has_province_modifier = half_elven_minority_oppressed_small
			has_province_modifier = half_elven_minority_coexisting_small
			has_province_modifier = half_elven_minority_integrated_small
		}
	}
}
has_large_half_elven_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_half_elven_minority_tooltip
		OR = {
			has_province_modifier = half_elven_minority_oppressed_large
			has_province_modifier = half_elven_minority_coexisting_large
			has_province_modifier = half_elven_minority_integrated_large
		}
	}
}
has_oppressed_half_elven_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_half_elven_minority_tooltip
		OR = {
			has_province_modifier = half_elven_minority_oppressed_small
			has_province_modifier = half_elven_minority_oppressed_large
		}
	}
}
has_oppressed_half_elven_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_half_elven_pop_tooltip
		OR = {
			has_province_modifier = half_elven_minority_oppressed_small
			has_province_modifier = half_elven_minority_oppressed_large
			has_province_modifier = half_elven_majority_oppressed
		}
	}
}
has_integrated_half_elven_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_half_elven_minority_tooltip
		OR = {
			has_province_modifier = half_elven_minority_integrated_small
			has_province_modifier = half_elven_minority_integrated_large
		}
	}
}
has_integrated_half_elven_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_half_elven_pop_tooltip
		OR = {
			has_province_modifier = half_elven_minority_integrated_small
			has_province_modifier = half_elven_minority_integrated_large
			has_province_modifier = half_elven_majority_integrated
			has_province_modifier = half_elven_majority_primary
		}
	}
}
has_coexisting_half_elven_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_half_elven_minority_tooltip
		OR = {
			has_province_modifier = half_elven_minority_coexisting_small
			has_province_modifier = half_elven_minority_coexisting_large
		}
	}
}
has_coexisting_half_elven_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_half_elven_pop_tooltip
		OR = {
			has_province_modifier = half_elven_minority_coexisting_small
			has_province_modifier = half_elven_minority_coexisting_large
			has_province_modifier = half_elven_majority_coexisting
		}
	}
}
has_any_half_elven_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_half_elven_pop_trigger_tooltip
		OR = {
			has_province_modifier = half_elven_minority_oppressed_small
			has_province_modifier = half_elven_minority_oppressed_large
			has_province_modifier = half_elven_majority_oppressed
			has_province_modifier = half_elven_minority_coexisting_small
			has_province_modifier = half_elven_minority_coexisting_large
			has_province_modifier = half_elven_majority_coexisting
			has_province_modifier = half_elven_minority_integrated_small
			has_province_modifier = half_elven_minority_integrated_large
			has_province_modifier = half_elven_majority_integrated
			has_province_modifier = half_elven_majority_primary
		}
	}
}
# Country level
max_tolerance_half_elven_race_trigger = {	# Is half_elven tolerance = 100
	check_variable = {
		which = half_elven_race_tolerance
		which = 100
	}
}
high_tolerance_half_elven_race_trigger = {	# Is half_elven tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_half_elven_people_tooltip
		OR = {
			check_variable = {
				which = half_elven_race_tolerance
				value = 70
			}
			has_country_modifier = half_elven_administration
		}
	}
}
medium_tolerance_half_elven_race_trigger = {	# Is half_elven tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_half_elven_people_tooltip
		NOT = { has_country_modifier = half_elven_administration }
		check_variable = {
			which = half_elven_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = half_elven_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_half_elven_race_trigger = {	# Is half_elven tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_half_elven_people_tooltip
		NOT = { has_country_modifier = half_elven_administration }
		NOT = {
			check_variable = {
				which = half_elven_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_half_elven = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = half_elven_race_tolerance
			which = half_elven_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_half_elven = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = half_elven_race_tolerance_ai
		which = half_elven_race_tolerance
	}
}
wants_to_decrease_tolerance_half_elven = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = half_elven_race_tolerance
		which = half_elven_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = half_elven_race_tolerance_ai
			which = half_elven_race_tolerance
		}
	}
}

# ORCISH -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_orcish_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_orcish_minority_tooltip
		OR = {
			has_province_modifier = orcish_minority_oppressed_small
			has_province_modifier = orcish_minority_coexisting_small
			has_province_modifier = orcish_minority_integrated_small
			has_province_modifier = orcish_minority_oppressed_large
			has_province_modifier = orcish_minority_coexisting_large
			has_province_modifier = orcish_minority_integrated_large
		}
	}
}
has_orcish_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_orcish_majority_tooltip
		OR = {
			has_province_modifier = orcish_majority_oppressed
			has_province_modifier = orcish_majority_coexisting
			has_province_modifier = orcish_majority_integrated
			has_province_modifier = orcish_majority_primary
		}
	}
}
has_small_orcish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_orcish_minority_tooltip
		OR = {
			has_province_modifier = orcish_minority_oppressed_small
			has_province_modifier = orcish_minority_coexisting_small
			has_province_modifier = orcish_minority_integrated_small
		}
	}
}
has_large_orcish_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_orcish_minority_tooltip
		OR = {
			has_province_modifier = orcish_minority_oppressed_large
			has_province_modifier = orcish_minority_coexisting_large
			has_province_modifier = orcish_minority_integrated_large
		}
	}
}
has_oppressed_orcish_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_orcish_minority_tooltip
		OR = {
			has_province_modifier = orcish_minority_oppressed_small
			has_province_modifier = orcish_minority_oppressed_large
		}
	}
}
has_oppressed_orcish_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_orcish_pop_tooltip
		OR = {
			has_province_modifier = orcish_minority_oppressed_small
			has_province_modifier = orcish_minority_oppressed_large
			has_province_modifier = orcish_majority_oppressed
		}
	}
}
has_integrated_orcish_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_orcish_minority_tooltip
		OR = {
			has_province_modifier = orcish_minority_integrated_small
			has_province_modifier = orcish_minority_integrated_large
		}
	}
}
has_integrated_orcish_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_orcish_pop_tooltip
		OR = {
			has_province_modifier = orcish_minority_integrated_small
			has_province_modifier = orcish_minority_integrated_large
			has_province_modifier = orcish_majority_integrated
			has_province_modifier = orcish_majority_primary
		}
	}
}
has_coexisting_orcish_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_orcish_minority_tooltip
		OR = {
			has_province_modifier = orcish_minority_coexisting_small
			has_province_modifier = orcish_minority_coexisting_large
		}
	}
}
has_coexisting_orcish_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_orcish_pop_tooltip
		OR = {
			has_province_modifier = orcish_minority_coexisting_small
			has_province_modifier = orcish_minority_coexisting_large
			has_province_modifier = orcish_majority_coexisting
		}
	}
}
has_any_orcish_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_orcish_pop_trigger_tooltip
		OR = {
			has_province_modifier = orcish_minority_oppressed_small
			has_province_modifier = orcish_minority_oppressed_large
			has_province_modifier = orcish_majority_oppressed
			has_province_modifier = orcish_minority_coexisting_small
			has_province_modifier = orcish_minority_coexisting_large
			has_province_modifier = orcish_majority_coexisting
			has_province_modifier = orcish_minority_integrated_small
			has_province_modifier = orcish_minority_integrated_large
			has_province_modifier = orcish_majority_integrated
			has_province_modifier = orcish_majority_primary
		}
	}
}
# Country level
max_tolerance_orcish_race_trigger = {	# Is orcish tolerance = 100
	check_variable = {
		which = orcish_race_tolerance
		which = 100
	}
}
high_tolerance_orcish_race_trigger = {	# Is orcish tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_orcish_people_tooltip
		OR = {
			check_variable = {
				which = orcish_race_tolerance
				value = 70
			}
			has_country_modifier = orcish_administration
		}
	}
}
medium_tolerance_orcish_race_trigger = {	# Is orcish tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_orcish_people_tooltip
		NOT = { has_country_modifier = orcish_administration }
		check_variable = {
			which = orcish_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = orcish_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_orcish_race_trigger = {	# Is orcish tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_orcish_people_tooltip
		NOT = { has_country_modifier = orcish_administration }
		NOT = {
			check_variable = {
				which = orcish_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_orcish = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = orcish_race_tolerance
			which = orcish_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_orcish = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = orcish_race_tolerance_ai
		which = orcish_race_tolerance
	}
}
wants_to_decrease_tolerance_orcish = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = orcish_race_tolerance
		which = orcish_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = orcish_race_tolerance_ai
			which = orcish_race_tolerance
		}
	}
}

# OGRE -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_ogre_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_ogre_minority_tooltip
		OR = {
			has_province_modifier = ogre_minority_oppressed_small
			has_province_modifier = ogre_minority_coexisting_small
			has_province_modifier = ogre_minority_integrated_small
			has_province_modifier = ogre_minority_oppressed_large
			has_province_modifier = ogre_minority_coexisting_large
			has_province_modifier = ogre_minority_integrated_large
		}
	}
}
has_ogre_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_ogre_majority_tooltip
		OR = {
			has_province_modifier = ogre_majority_oppressed
			has_province_modifier = ogre_majority_coexisting
			has_province_modifier = ogre_majority_integrated
			has_province_modifier = ogre_majority_primary
		}
	}
}
has_small_ogre_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_ogre_minority_tooltip
		OR = {
			has_province_modifier = ogre_minority_oppressed_small
			has_province_modifier = ogre_minority_coexisting_small
			has_province_modifier = ogre_minority_integrated_small
		}
	}
}
has_large_ogre_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_ogre_minority_tooltip
		OR = {
			has_province_modifier = ogre_minority_oppressed_large
			has_province_modifier = ogre_minority_coexisting_large
			has_province_modifier = ogre_minority_integrated_large
		}
	}
}
has_oppressed_ogre_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_ogre_minority_tooltip
		OR = {
			has_province_modifier = ogre_minority_oppressed_small
			has_province_modifier = ogre_minority_oppressed_large
		}
	}
}
has_oppressed_ogre_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_ogre_pop_tooltip
		OR = {
			has_province_modifier = ogre_minority_oppressed_small
			has_province_modifier = ogre_minority_oppressed_large
			has_province_modifier = ogre_majority_oppressed
		}
	}
}
has_integrated_ogre_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_ogre_minority_tooltip
		OR = {
			has_province_modifier = ogre_minority_integrated_small
			has_province_modifier = ogre_minority_integrated_large
		}
	}
}
has_integrated_ogre_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_ogre_pop_tooltip
		OR = {
			has_province_modifier = ogre_minority_integrated_small
			has_province_modifier = ogre_minority_integrated_large
			has_province_modifier = ogre_majority_integrated
			has_province_modifier = ogre_majority_primary
		}
	}
}
has_coexisting_ogre_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_ogre_minority_tooltip
		OR = {
			has_province_modifier = ogre_minority_coexisting_small
			has_province_modifier = ogre_minority_coexisting_large
		}
	}
}
has_coexisting_ogre_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_ogre_pop_tooltip
		OR = {
			has_province_modifier = ogre_minority_coexisting_small
			has_province_modifier = ogre_minority_coexisting_large
			has_province_modifier = ogre_majority_coexisting
		}
	}
}
has_any_ogre_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_ogre_pop_trigger_tooltip
		OR = {
			has_province_modifier = ogre_minority_oppressed_small
			has_province_modifier = ogre_minority_oppressed_large
			has_province_modifier = ogre_majority_oppressed
			has_province_modifier = ogre_minority_coexisting_small
			has_province_modifier = ogre_minority_coexisting_large
			has_province_modifier = ogre_majority_coexisting
			has_province_modifier = ogre_minority_integrated_small
			has_province_modifier = ogre_minority_integrated_large
			has_province_modifier = ogre_majority_integrated
			has_province_modifier = ogre_majority_primary
		}
	}
}
# Country level
max_tolerance_ogre_race_trigger = {	# Is ogre tolerance = 100
	check_variable = {
		which = ogre_race_tolerance
		which = 100
	}
}
high_tolerance_ogre_race_trigger = {	# Is ogre tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_ogre_people_tooltip
		OR = {
			check_variable = {
				which = ogre_race_tolerance
				value = 70
			}
			has_country_modifier = ogre_administration
		}
	}
}
medium_tolerance_ogre_race_trigger = {	# Is ogre tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_ogre_people_tooltip
		NOT = { has_country_modifier = ogre_administration }
		check_variable = {
			which = ogre_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = ogre_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_ogre_race_trigger = {	# Is ogre tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_ogre_people_tooltip
		NOT = { has_country_modifier = ogre_administration }
		NOT = {
			check_variable = {
				which = ogre_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_ogre = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = ogre_race_tolerance
			which = ogre_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_ogre = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = ogre_race_tolerance_ai
		which = ogre_race_tolerance
	}
}
wants_to_decrease_tolerance_ogre = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = ogre_race_tolerance
		which = ogre_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = ogre_race_tolerance_ai
			which = ogre_race_tolerance
		}
	}
}

# CENTAUR -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_centaur_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_centaur_minority_tooltip
		OR = {
			has_province_modifier = centaur_minority_oppressed_small
			has_province_modifier = centaur_minority_coexisting_small
			has_province_modifier = centaur_minority_integrated_small
			has_province_modifier = centaur_minority_oppressed_large
			has_province_modifier = centaur_minority_coexisting_large
			has_province_modifier = centaur_minority_integrated_large
		}
	}
}
has_centaur_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_centaur_majority_tooltip
		OR = {
			has_province_modifier = centaur_majority_oppressed
			has_province_modifier = centaur_majority_coexisting
			has_province_modifier = centaur_majority_integrated
			has_province_modifier = centaur_majority_primary
		}
	}
}
has_small_centaur_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_centaur_minority_tooltip
		OR = {
			has_province_modifier = centaur_minority_oppressed_small
			has_province_modifier = centaur_minority_coexisting_small
			has_province_modifier = centaur_minority_integrated_small
		}
	}
}
has_large_centaur_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_centaur_minority_tooltip
		OR = {
			has_province_modifier = centaur_minority_oppressed_large
			has_province_modifier = centaur_minority_coexisting_large
			has_province_modifier = centaur_minority_integrated_large
		}
	}
}
has_oppressed_centaur_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_centaur_minority_tooltip
		OR = {
			has_province_modifier = centaur_minority_oppressed_small
			has_province_modifier = centaur_minority_oppressed_large
		}
	}
}
has_oppressed_centaur_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_centaur_pop_tooltip
		OR = {
			has_province_modifier = centaur_minority_oppressed_small
			has_province_modifier = centaur_minority_oppressed_large
			has_province_modifier = centaur_majority_oppressed
		}
	}
}
has_integrated_centaur_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_centaur_minority_tooltip
		OR = {
			has_province_modifier = centaur_minority_integrated_small
			has_province_modifier = centaur_minority_integrated_large
		}
	}
}
has_integrated_centaur_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_centaur_pop_tooltip
		OR = {
			has_province_modifier = centaur_minority_integrated_small
			has_province_modifier = centaur_minority_integrated_large
			has_province_modifier = centaur_majority_integrated
			has_province_modifier = centaur_majority_primary
		}
	}
}
has_coexisting_centaur_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_centaur_minority_tooltip
		OR = {
			has_province_modifier = centaur_minority_coexisting_small
			has_province_modifier = centaur_minority_coexisting_large
		}
	}
}
has_coexisting_centaur_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_centaur_pop_tooltip
		OR = {
			has_province_modifier = centaur_minority_coexisting_small
			has_province_modifier = centaur_minority_coexisting_large
			has_province_modifier = centaur_majority_coexisting
		}
	}
}
has_any_centaur_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_centaur_pop_trigger_tooltip
		OR = {
			has_province_modifier = centaur_minority_oppressed_small
			has_province_modifier = centaur_minority_oppressed_large
			has_province_modifier = centaur_majority_oppressed
			has_province_modifier = centaur_minority_coexisting_small
			has_province_modifier = centaur_minority_coexisting_large
			has_province_modifier = centaur_majority_coexisting
			has_province_modifier = centaur_minority_integrated_small
			has_province_modifier = centaur_minority_integrated_large
			has_province_modifier = centaur_majority_integrated
			has_province_modifier = centaur_majority_primary
		}
	}
}
# Country level
max_tolerance_centaur_race_trigger = {	# Is centaur tolerance = 100
	check_variable = {
		which = centaur_race_tolerance
		which = 100
	}
}
high_tolerance_centaur_race_trigger = {	# Is centaur tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_centaur_people_tooltip
		OR = {
			check_variable = {
				which = centaur_race_tolerance
				value = 70
			}
			has_country_modifier = centaur_administration
		}
	}
}
medium_tolerance_centaur_race_trigger = {	# Is centaur tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_centaur_people_tooltip
		NOT = { has_country_modifier = centaur_administration }
		check_variable = {
			which = centaur_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = centaur_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_centaur_race_trigger = {	# Is centaur tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_centaur_people_tooltip
		NOT = { has_country_modifier = centaur_administration }
		NOT = {
			check_variable = {
				which = centaur_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_centaur = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = centaur_race_tolerance
			which = centaur_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_centaur = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = centaur_race_tolerance_ai
		which = centaur_race_tolerance
	}
}
wants_to_decrease_tolerance_centaur = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = centaur_race_tolerance
		which = centaur_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = centaur_race_tolerance_ai
			which = centaur_race_tolerance
		}
	}
}

# HARIMARI -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_harimari_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_harimari_minority_tooltip
		OR = {
			has_province_modifier = harimari_minority_oppressed_small
			has_province_modifier = harimari_minority_coexisting_small
			has_province_modifier = harimari_minority_integrated_small
			has_province_modifier = harimari_minority_oppressed_large
			has_province_modifier = harimari_minority_coexisting_large
			has_province_modifier = harimari_minority_integrated_large
		}
	}
}
has_harimari_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_harimari_majority_tooltip
		OR = {
			has_province_modifier = harimari_majority_oppressed
			has_province_modifier = harimari_majority_coexisting
			has_province_modifier = harimari_majority_integrated
			has_province_modifier = harimari_majority_primary
		}
	}
}
has_small_harimari_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_harimari_minority_tooltip
		OR = {
			has_province_modifier = harimari_minority_oppressed_small
			has_province_modifier = harimari_minority_coexisting_small
			has_province_modifier = harimari_minority_integrated_small
		}
	}
}
has_large_harimari_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_harimari_minority_tooltip
		OR = {
			has_province_modifier = harimari_minority_oppressed_large
			has_province_modifier = harimari_minority_coexisting_large
			has_province_modifier = harimari_minority_integrated_large
		}
	}
}
has_oppressed_harimari_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_harimari_minority_tooltip
		OR = {
			has_province_modifier = harimari_minority_oppressed_small
			has_province_modifier = harimari_minority_oppressed_large
		}
	}
}
has_oppressed_harimari_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_harimari_pop_tooltip
		OR = {
			has_province_modifier = harimari_minority_oppressed_small
			has_province_modifier = harimari_minority_oppressed_large
			has_province_modifier = harimari_majority_oppressed
		}
	}
}
has_integrated_harimari_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_harimari_minority_tooltip
		OR = {
			has_province_modifier = harimari_minority_integrated_small
			has_province_modifier = harimari_minority_integrated_large
		}
	}
}
has_integrated_harimari_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_harimari_pop_tooltip
		OR = {
			has_province_modifier = harimari_minority_integrated_small
			has_province_modifier = harimari_minority_integrated_large
			has_province_modifier = harimari_majority_integrated
			has_province_modifier = harimari_majority_primary
		}
	}
}
has_coexisting_harimari_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_harimari_minority_tooltip
		OR = {
			has_province_modifier = harimari_minority_coexisting_small
			has_province_modifier = harimari_minority_coexisting_large
		}
	}
}
has_coexisting_harimari_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_harimari_pop_tooltip
		OR = {
			has_province_modifier = harimari_minority_coexisting_small
			has_province_modifier = harimari_minority_coexisting_large
			has_province_modifier = harimari_majority_coexisting
		}
	}
}
has_any_harimari_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_harimari_pop_trigger_tooltip
		OR = {
			has_province_modifier = harimari_minority_oppressed_small
			has_province_modifier = harimari_minority_oppressed_large
			has_province_modifier = harimari_majority_oppressed
			has_province_modifier = harimari_minority_coexisting_small
			has_province_modifier = harimari_minority_coexisting_large
			has_province_modifier = harimari_majority_coexisting
			has_province_modifier = harimari_minority_integrated_small
			has_province_modifier = harimari_minority_integrated_large
			has_province_modifier = harimari_majority_integrated
			has_province_modifier = harimari_majority_primary
		}
	}
}
# Country level
max_tolerance_harimari_race_trigger = {	# Is harimari tolerance = 100
	check_variable = {
		which = harimari_race_tolerance
		which = 100
	}
}
high_tolerance_harimari_race_trigger = {	# Is harimari tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_harimari_people_tooltip
		OR = {
			check_variable = {
				which = harimari_race_tolerance
				value = 70
			}
			has_country_modifier = harimari_administration
		}
	}
}
medium_tolerance_harimari_race_trigger = {	# Is harimari tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_harimari_people_tooltip
		NOT = { has_country_modifier = harimari_administration }
		check_variable = {
			which = harimari_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = harimari_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_harimari_race_trigger = {	# Is harimari tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_harimari_people_tooltip
		NOT = { has_country_modifier = harimari_administration }
		NOT = {
			check_variable = {
				which = harimari_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_harimari = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = harimari_race_tolerance
			which = harimari_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_harimari = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = harimari_race_tolerance_ai
		which = harimari_race_tolerance
	}
}
wants_to_decrease_tolerance_harimari = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = harimari_race_tolerance
		which = harimari_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = harimari_race_tolerance_ai
			which = harimari_race_tolerance
		}
	}
}

# HOBGOBLIN -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_hobgoblin_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_hobgoblin_minority_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_oppressed_small
			has_province_modifier = hobgoblin_minority_coexisting_small
			has_province_modifier = hobgoblin_minority_integrated_small
			has_province_modifier = hobgoblin_minority_oppressed_large
			has_province_modifier = hobgoblin_minority_coexisting_large
			has_province_modifier = hobgoblin_minority_integrated_large
		}
	}
}
has_hobgoblin_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_hobgoblin_majority_tooltip
		OR = {
			has_province_modifier = hobgoblin_majority_oppressed
			has_province_modifier = hobgoblin_majority_coexisting
			has_province_modifier = hobgoblin_majority_integrated
			has_province_modifier = hobgoblin_majority_primary
		}
	}
}
has_small_hobgoblin_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_hobgoblin_minority_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_oppressed_small
			has_province_modifier = hobgoblin_minority_coexisting_small
			has_province_modifier = hobgoblin_minority_integrated_small
		}
	}
}
has_large_hobgoblin_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_hobgoblin_minority_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_oppressed_large
			has_province_modifier = hobgoblin_minority_coexisting_large
			has_province_modifier = hobgoblin_minority_integrated_large
		}
	}
}
has_oppressed_hobgoblin_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_hobgoblin_minority_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_oppressed_small
			has_province_modifier = hobgoblin_minority_oppressed_large
		}
	}
}
has_oppressed_hobgoblin_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_hobgoblin_pop_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_oppressed_small
			has_province_modifier = hobgoblin_minority_oppressed_large
			has_province_modifier = hobgoblin_majority_oppressed
		}
	}
}
has_integrated_hobgoblin_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_hobgoblin_minority_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_integrated_small
			has_province_modifier = hobgoblin_minority_integrated_large
		}
	}
}
has_integrated_hobgoblin_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_hobgoblin_pop_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_integrated_small
			has_province_modifier = hobgoblin_minority_integrated_large
			has_province_modifier = hobgoblin_majority_integrated
			has_province_modifier = hobgoblin_majority_primary
		}
	}
}
has_coexisting_hobgoblin_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_hobgoblin_minority_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_coexisting_small
			has_province_modifier = hobgoblin_minority_coexisting_large
		}
	}
}
has_coexisting_hobgoblin_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_hobgoblin_pop_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_coexisting_small
			has_province_modifier = hobgoblin_minority_coexisting_large
			has_province_modifier = hobgoblin_majority_coexisting
		}
	}
}
has_any_hobgoblin_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_hobgoblin_pop_trigger_tooltip
		OR = {
			has_province_modifier = hobgoblin_minority_oppressed_small
			has_province_modifier = hobgoblin_minority_oppressed_large
			has_province_modifier = hobgoblin_majority_oppressed
			has_province_modifier = hobgoblin_minority_coexisting_small
			has_province_modifier = hobgoblin_minority_coexisting_large
			has_province_modifier = hobgoblin_majority_coexisting
			has_province_modifier = hobgoblin_minority_integrated_small
			has_province_modifier = hobgoblin_minority_integrated_large
			has_province_modifier = hobgoblin_majority_integrated
			has_province_modifier = hobgoblin_majority_primary
		}
	}
}
# Country level
max_tolerance_hobgoblin_race_trigger = {	# Is hobgoblin tolerance = 100
	check_variable = {
		which = hobgoblin_race_tolerance
		which = 100
	}
}
high_tolerance_hobgoblin_race_trigger = {	# Is hobgoblin tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_hobgoblin_people_tooltip
		OR = {
			check_variable = {
				which = hobgoblin_race_tolerance
				value = 70
			}
			has_country_modifier = hobgoblin_administration
		}
	}
}
medium_tolerance_hobgoblin_race_trigger = {	# Is hobgoblin tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_hobgoblin_people_tooltip
		NOT = { has_country_modifier = hobgoblin_administration }
		check_variable = {
			which = hobgoblin_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = hobgoblin_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_hobgoblin_race_trigger = {	# Is hobgoblin tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_hobgoblin_people_tooltip
		NOT = { has_country_modifier = hobgoblin_administration }
		NOT = {
			check_variable = {
				which = hobgoblin_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_hobgoblin = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = hobgoblin_race_tolerance
			which = hobgoblin_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_hobgoblin = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = hobgoblin_race_tolerance_ai
		which = hobgoblin_race_tolerance
	}
}
wants_to_decrease_tolerance_hobgoblin = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = hobgoblin_race_tolerance
		which = hobgoblin_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = hobgoblin_race_tolerance_ai
			which = hobgoblin_race_tolerance
		}
	}
}

# LIZARDFOLK -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Province
has_lizardfolk_minority_trigger = {	# Checks on Province Level whatever there is a Orcish minority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_lizardfolk_minority_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_oppressed_small
			has_province_modifier = lizardfolk_minority_coexisting_small
			has_province_modifier = lizardfolk_minority_integrated_small
			has_province_modifier = lizardfolk_minority_oppressed_large
			has_province_modifier = lizardfolk_minority_coexisting_large
			has_province_modifier = lizardfolk_minority_integrated_large
		}
	}
}
has_lizardfolk_majority_trigger = {	# Checks on Province Level whatever there is a Orcish majority (only in province scope)
	custom_trigger_tooltip = {
		tooltip = province_has_lizardfolk_majority_tooltip
		OR = {
			has_province_modifier = lizardfolk_majority_oppressed
			has_province_modifier = lizardfolk_majority_coexisting
			has_province_modifier = lizardfolk_majority_integrated
			has_province_modifier = lizardfolk_majority_primary
		}
	}
}
has_small_lizardfolk_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_small_lizardfolk_minority_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_oppressed_small
			has_province_modifier = lizardfolk_minority_coexisting_small
			has_province_modifier = lizardfolk_minority_integrated_small
		}
	}
}
has_large_lizardfolk_minority_trigger = {	# Only checks for small minorities
	custom_trigger_tooltip = {
		tooltip = province_has_a_large_lizardfolk_minority_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_oppressed_large
			has_province_modifier = lizardfolk_minority_coexisting_large
			has_province_modifier = lizardfolk_minority_integrated_large
		}
	}
}
has_oppressed_lizardfolk_minority_trigger = {	# Only checks for oppressed minorities
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_lizardfolk_minority_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_oppressed_small
			has_province_modifier = lizardfolk_minority_oppressed_large
		}
	}
}
has_oppressed_lizardfolk_pop_trigger = {	# Only checks for oppressed any
	custom_trigger_tooltip = {
		tooltip = province_has_oppressed_lizardfolk_pop_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_oppressed_small
			has_province_modifier = lizardfolk_minority_oppressed_large
			has_province_modifier = lizardfolk_majority_oppressed
		}
	}
}
has_integrated_lizardfolk_minority_trigger = {	# Only checks for integrated minorities
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_lizardfolk_minority_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_integrated_small
			has_province_modifier = lizardfolk_minority_integrated_large
		}
	}
}
has_integrated_lizardfolk_pop_trigger = {	# Only checks for integrated any
	custom_trigger_tooltip = {
		tooltip = province_has_integrated_lizardfolk_pop_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_integrated_small
			has_province_modifier = lizardfolk_minority_integrated_large
			has_province_modifier = lizardfolk_majority_integrated
			has_province_modifier = lizardfolk_majority_primary
		}
	}
}
has_coexisting_lizardfolk_minority_trigger = {	# Only checks for coexisting minorities
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_lizardfolk_minority_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_coexisting_small
			has_province_modifier = lizardfolk_minority_coexisting_large
		}
	}
}
has_coexisting_lizardfolk_pop_trigger = {	# Only checks for coexisting any
	custom_trigger_tooltip = {
		tooltip = province_has_coexisting_lizardfolk_pop_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_coexisting_small
			has_province_modifier = lizardfolk_minority_coexisting_large
			has_province_modifier = lizardfolk_majority_coexisting
		}
	}
}
has_any_lizardfolk_pop_trigger = {	#Any pop minority or majority
	custom_trigger_tooltip = {
		tooltip = has_any_lizardfolk_pop_trigger_tooltip
		OR = {
			has_province_modifier = lizardfolk_minority_oppressed_small
			has_province_modifier = lizardfolk_minority_oppressed_large
			has_province_modifier = lizardfolk_majority_oppressed
			has_province_modifier = lizardfolk_minority_coexisting_small
			has_province_modifier = lizardfolk_minority_coexisting_large
			has_province_modifier = lizardfolk_majority_coexisting
			has_province_modifier = lizardfolk_minority_integrated_small
			has_province_modifier = lizardfolk_minority_integrated_large
			has_province_modifier = lizardfolk_majority_integrated
			has_province_modifier = lizardfolk_majority_primary
		}
	}
}
# Country level
max_tolerance_lizardfolk_race_trigger = {	# Is lizardfolk tolerance = 100
	check_variable = {
		which = lizardfolk_race_tolerance
		which = 100
	}
}
high_tolerance_lizardfolk_race_trigger = {	# Is Orcish tolerance high? (integrated)
	custom_trigger_tooltip = {
		tooltip = integrated_lizardfolk_people_tooltip
		OR = {
			check_variable = {
				which = lizardfolk_race_tolerance
				value = 70
			}
			has_country_modifier = lizardfolk_administration
		}
	}
}
medium_tolerance_lizardfolk_race_trigger = {	# Is Orcish tolerance normal? (coexisting)
	custom_trigger_tooltip = {
		tooltip = coexisting_lizardfolk_people_tooltip
		NOT = { has_country_modifier = lizardfolk_administration }
		check_variable = {
			which = lizardfolk_race_tolerance
			value = 31
		}
		NOT = {
			check_variable = {
				which = lizardfolk_race_tolerance
				value = 70
			}
		}
	}
}
low_tolerance_lizardfolk_race_trigger = {	# Is Orcish tolerance low? (oppressed)
	custom_trigger_tooltip = {
		tooltip = oppressed_lizardfolk_people_tooltip
		NOT = { has_country_modifier = lizardfolk_administration }
		NOT = {
			check_variable = {
				which = lizardfolk_race_tolerance
				value = 31
			}
		}
	}
}
# For Ai Only
wants_to_increase_tolerance_lizardfolk = {	# True if the AI want higher tolerance than the current level
	NOT = {
		check_variable = {
			which = lizardfolk_race_tolerance
			which = lizardfolk_race_tolerance_ai
		}
	}
}
wants_to_maintain_tolerance_lizardfolk = {		# True if the AI have the desired tolerance level
	is_variable_equal = {
		which = lizardfolk_race_tolerance_ai
		which = lizardfolk_race_tolerance
	}
}
wants_to_decrease_tolerance_lizardfolk = {	# True if the AI want a lower tolerance than the current level
	check_variable = {
		which = lizardfolk_race_tolerance
		which = lizardfolk_race_tolerance_ai
	}
	NOT = {
		is_variable_equal = {
			which = lizardfolk_race_tolerance_ai
			which = lizardfolk_race_tolerance
		}
	}
}

#New sun cult
is_chosen_country = {
	custom_trigger_tooltip = {
		tooltip = nsc_is_chosen_country_tt
		OR = {
			ruler_culture = sun_elf
			ruler_culture = dawn_elf
		}
		OR = {
			primary_culture = sun_elf
			primary_culture = dawn_elf
		}
	}
}

has_racial_focus = {
	OR = {
		has_country_modifier = racial_focus_centaur
		has_country_modifier = racial_focus_dwarven
		has_country_modifier = racial_focus_elven
		has_country_modifier = racial_focus_gnollish
		has_country_modifier = racial_focus_gnomish
		has_country_modifier = racial_focus_goblin
		has_country_modifier = racial_focus_half_elven
		has_country_modifier = racial_focus_half_orcish
		has_country_modifier = racial_focus_halfling
		has_country_modifier = racial_focus_harimari
		has_country_modifier = racial_focus_harpy
		has_country_modifier = racial_focus_hobgoblin
		has_country_modifier = racial_focus_human
		has_country_modifier = racial_focus_kobold
		has_country_modifier = racial_focus_lizardfolk
		has_country_modifier = racial_focus_ogre
		has_country_modifier = racial_focus_orcish
		has_country_modifier = racial_focus_ruinborn
		has_country_modifier = racial_focus_troll
	}
}

is_race_in_any_caste = {
	[[harimari]
		OR = {
			has_country_flag = harimari_in_uppercastes
			has_country_flag = harimari_in_middlecastes
			has_country_flag = harimari_in_lowercastes
		}
	]
	[[human]
		OR = {
			has_country_flag = human_in_uppercastes
			has_country_flag = human_in_middlecastes
			has_country_flag = human_in_lowercastes
		}
	]
	[[centaur]
		always = no
	]
	[[dwarven]
		OR = {
			has_country_flag = dwarf_in_uppercastes
			has_country_flag = dwarf_in_middlecastes
			has_country_flag = dwarf_in_lowercastes
		}
	]
	[[elven]
		always = no
	]
	[[gnollish]
		always = no
	]
	[[gnomish]
		always = no
	]
	[[goblin]
		always = no
	]
	[[halfling]
		always = no
	]
	[[half_elven]
		always = no
	]
	[[half_orcish]
		always = no
	]
	[[harpy]
		always = no
	]
	[[hobgoblin]
		OR = {
			has_country_flag = hobgoblin_in_uppercastes
			has_country_flag = hobgoblin_in_middlecastes
			has_country_flag = hobgoblin_in_lowercastes
		}
	]
	[[kobold]
		always = no
	]
	[[lizardfolk]
		always = no
	]
	[[ogre]
		always = no
	]
	[[orcish]
		always = no
	]
	[[ruinborn]
		always = no
	]
	[[troll]
		always = no
	]
}

can_purge_race = {
	NOT = {
		OR = {
			has_country_modifier = racial_pop_$RACE$_purge
			has_country_modifier = racial_pop_$RACE$_expulsion
		}
	}
	NOT = { has_country_modifier = $RACE$_administration }
	NOT = { has_country_modifier = $RACE$_military }
	NOT = { ruler_is_$RACE$ = yes }
	if = {
		limit = { ai = yes }
		OR = {
			any_owned_province = {
				has_$RACE$_minority_trigger = yes
			}
			any_owned_province = {
				has_$RACE$_majority_trigger = yes
			}
		}
	}
	NOT = { has_country_modifier = forced_to_end_$RACE$_purge }
	NOT = { has_government_attribute = disabled_purging }
	NOT = { has_government_attribute = disabled_purging_$RACE$ }
	if = {
		limit = { has_country_flag = has_caste_estates }
		NOT = {
			is_race_in_any_caste = {
				$RACE$ = yes
			}
		}
	}
	adm_power = 100
}

can_expel_race = {
	NOT = {
		OR = {
			has_country_modifier = racial_pop_$RACE$_purge
			has_country_modifier = racial_pop_$RACE$_expulsion
		}
	}
	NOT = { has_country_modifier = $RACE$_administration }
	NOT = { has_country_modifier = $RACE$_military }
	NOT = { ruler_is_$RACE$ = yes }
	if = {
		limit = { ai = yes }
		OR = {
			any_owned_province = {
				has_$RACE$_minority_trigger = yes
			}
			any_owned_province = {
				has_$RACE$_majority_trigger = yes
			}
		}
	}
	NOT = { has_country_modifier = forced_to_end_$RACE$_purge }
	NOT = { has_government_attribute = disabled_expelling }
	NOT = { has_government_attribute = disabled_expelling_$RACE$ }
	if = {
		limit = { has_country_flag = has_caste_estates }
		NOT = {
			is_race_in_any_caste = {
				$RACE$ = yes
			}
		}
	}
	adm_power = 50
}

is_not_purging_any_race_trigger = {
	custom_trigger_tooltip = {
		tooltip = is_not_purging_any_race_tt
		NOT = {
			has_country_modifier = racial_pop_centaur_purge
			has_country_modifier = racial_pop_dwarven_purge
			has_country_modifier = racial_pop_elven_purge
			has_country_modifier = racial_pop_half_elven_purge
			has_country_modifier = racial_pop_half_orcish_purge
			has_country_modifier = racial_pop_halfling_purge
			has_country_modifier = racial_pop_lizardfolk_purge
			has_country_modifier = racial_pop_orcish_purge
			has_country_modifier = racial_pop_ruinborn_purge
			has_country_modifier = racial_pop_gnomish_purge
			has_country_modifier = racial_pop_gnollish_purge
			has_country_modifier = racial_pop_kobold_purge
			has_country_modifier = racial_pop_goblin_purge
			has_country_modifier = racial_pop_hobgoblin_purge
			has_country_modifier = racial_pop_harimari_purge
			has_country_modifier = racial_pop_harpy_purge
			has_country_modifier = racial_pop_troll_purge
			has_country_modifier = racial_pop_ogre_purge
		}
	}
}

is_not_expelling_any_race_trigger = {
	custom_trigger_tooltip = {
		tooltip = is_not_expelling_any_race_tt
		NOT = { 
			has_country_modifier = racial_pop_centaur_expulsion
			has_country_modifier = racial_pop_dwarven_expulsion
			has_country_modifier = racial_pop_elven_expulsion
			has_country_modifier = racial_pop_half_elven_expulsion
			has_country_modifier = racial_pop_half_orcish_expulsion
			has_country_modifier = racial_pop_halfling_expulsion
			has_country_modifier = racial_pop_lizardfolk_expulsion
			has_country_modifier = racial_pop_orcish_expulsion
			has_country_modifier = racial_pop_ruinborn_expulsion
			has_country_modifier = racial_pop_gnomish_expulsion
			has_country_modifier = racial_pop_gnollish_expulsion
			has_country_modifier = racial_pop_kobold_expulsion
			has_country_modifier = racial_pop_goblin_expulsion
			has_country_modifier = racial_pop_hobgoblin_expulsion
			has_country_modifier = racial_pop_harimari_expulsion
			has_country_modifier = racial_pop_harpy_expulsion
			has_country_modifier = racial_pop_troll_expulsion
			has_country_modifier = racial_pop_ogre_expulsion
		}
	}
}

is_not_purging_or_expelling_any_race_trigger = {
	custom_trigger_tooltip = {
		tooltip = is_not_purging_or_expelling_any_race_tt
		NOT = { 
			has_country_modifier = racial_pop_centaur_expulsion
			has_country_modifier = racial_pop_dwarven_expulsion
			has_country_modifier = racial_pop_elven_expulsion
			has_country_modifier = racial_pop_half_elven_expulsion
			has_country_modifier = racial_pop_half_orcish_expulsion
			has_country_modifier = racial_pop_halfling_expulsion
			has_country_modifier = racial_pop_lizardfolk_expulsion
			has_country_modifier = racial_pop_orcish_expulsion
			has_country_modifier = racial_pop_ruinborn_expulsion
			has_country_modifier = racial_pop_gnomish_expulsion
			has_country_modifier = racial_pop_gnollish_expulsion
			has_country_modifier = racial_pop_kobold_expulsion
			has_country_modifier = racial_pop_goblin_expulsion
			has_country_modifier = racial_pop_hobgoblin_expulsion
			has_country_modifier = racial_pop_harimari_expulsion
			has_country_modifier = racial_pop_harpy_expulsion
			has_country_modifier = racial_pop_troll_expulsion
			has_country_modifier = racial_pop_ogre_expulsion
			has_country_modifier = racial_pop_centaur_purge
			has_country_modifier = racial_pop_dwarven_purge
			has_country_modifier = racial_pop_elven_purge
			has_country_modifier = racial_pop_half_elven_purge
			has_country_modifier = racial_pop_half_orcish_purge
			has_country_modifier = racial_pop_halfling_purge
			has_country_modifier = racial_pop_lizardfolk_purge
			has_country_modifier = racial_pop_orcish_purge
			has_country_modifier = racial_pop_ruinborn_purge
			has_country_modifier = racial_pop_gnomish_purge
			has_country_modifier = racial_pop_gnollish_purge
			has_country_modifier = racial_pop_kobold_purge
			has_country_modifier = racial_pop_goblin_purge
			has_country_modifier = racial_pop_hobgoblin_purge
			has_country_modifier = racial_pop_harimari_purge
			has_country_modifier = racial_pop_harpy_purge
			has_country_modifier = racial_pop_troll_purge
			has_country_modifier = racial_pop_ogre_purge
		}
	}
}

is_long_lived_ruler = {
	custom_trigger_tooltip = {
		tooltip = is_long_lived_ruler_tt
		OR = {
			fast_ruler_is_elven = yes
			fast_ruler_is_dwarven = yes
			fast_ruler_is_gnomish = yes
			fast_ruler_is_half_elven = yes
			has_ruler_flag = set_immortality
		}
	}
}

is_long_lived_heir = {
	custom_trigger_tooltip = {
		tooltip = is_long_lived_ruler_tt
		OR = {
			fast_heir_is_elven = yes
			fast_heir_is_dwarven = yes
			fast_heir_is_gnomish = yes
			fast_heir_is_half_elven = yes
			has_heir_flag = set_immortality
		}
	}
}

is_long_lived_consort = {
	custom_trigger_tooltip = {
		tooltip = is_long_lived_ruler_tt
		OR = {
			fast_consort_is_elven = yes
			fast_consort_is_dwarven = yes
			fast_consort_is_gnomish = yes
			fast_consort_is_half_elven = yes
			has_consort_flag = set_immortality
		}
	}
}

#No tooltip, only use in hidden triggers or custom tooltips.
is_uncapped_lifespan_ruler = {
	OR = {
		fast_ruler_is_kobold = yes
		fast_ruler_is_harimari = yes
	}
}

#No tooltip, only use in hidden triggers or custom tooltips.
is_uncapped_lifespan_heir = {
	OR = {
		fast_heir_is_kobold = yes
		fast_heir_is_harimari = yes
	}
}

#No tooltip, only use in hidden triggers or custom tooltips.
is_uncapped_lifespan_consort = {
	OR = {
		fast_consort_is_kobold = yes
		fast_consort_is_harimari = yes
	}
}

preferred_terrain = {
	[[centaur]
		OR = {
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = savannah
			has_terrain = steppe
			has_terrain = drylands
			has_terrain = desert
			has_terrain = coastal_desert
		}
	]
	[[dwarven]
		OR = {
			has_terrain = mountain
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[elven]
		OR = {
			has_terrain = city_terrain
			has_terrain = woods
			has_terrain = forest
			has_terrain = ancient_forest
			has_terrain = gladeway
			has_terrain = fey_gladeway
			has_terrain = farmlands
		}
	]
	[[gnollish]
		OR = {
			has_terrain = savannah
			has_terrain = steppe
			has_terrain = drylands
			has_terrain = desert
			has_terrain = coastal_desert
			has_terrain = highlands
			has_terrain = mountain
		}
	]
	[[gnomish]
		OR = {
			has_terrain = city_terrain
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = coastline
		}
	]
	[[goblin]
		OR = {
			has_terrain = woods
			has_terrain = hills
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[half_elven]
		OR = {
			has_terrain = city_terrain
			has_terrain = woods
			has_terrain = forest
			has_terrain = ancient_forest
			has_terrain = gladeway
			has_terrain = fey_gladeway
			has_terrain = farmlands
		}
	]
	[[half_orcish]
		OR = {
			has_terrain = city_terrain
			has_terrain = woods
			has_terrain = forest
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[halfling]
		OR = {
			has_terrain = city_terrain
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = hills
		}
	]
	[[harimari]
		OR = {
			has_terrain = city_terrain
			has_terrain = jungle
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = drylands
		}
	]
	[[harpy]
		OR = {
			has_terrain = coastline
			has_terrain = hills
			has_terrain = highlands
			has_terrain = mountain
		}
	]
	[[hobgoblin]
		OR = {
			has_terrain = steppe
			has_terrain = hills
			has_terrain = highlands
			has_terrain = mountain
		}
	]
	[[human] #humans have no preferences, so I'm using this to hack in a deterrence against humans in the serpentspine
		NOT = {
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[kobold]
		OR = {
			has_terrain = city_terrain
			has_terrain = hills
			has_terrain = mountain
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[lizardfolk]
		OR = {
			has_terrain = city_terrain
			has_terrain = jungle
			has_terrain = marsh
			has_terrain = farmlands
			has_terrain = coastline
		}
	]
	#[[mechanim]
	#mechanim go here
	#]
	[[ogre]
		OR = {
			has_terrain = jungle
			has_terrain = marsh
			has_terrain = grasslands
			has_terrain = hills
			has_terrain = highlands
			has_terrain = mountain
		}
	]
	[[orcish]
		OR = {
			has_terrain = city_terrain
			has_terrain = woods
			has_terrain = forest
			has_terrain = farmlands
			has_terrain = grasslands
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[ruinborn] #ruinborn have no preferences, but I got asked to put in an anti-preference for the serpentspine
		NOT = {
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	]
	[[troll]
		OR = {
			has_terrain = forest
			has_terrain = jungle
			has_terrain = marsh
			has_terrain = shadow_swamp_terrain
			has_terrain = cavern
			has_terrain = glacier
		}
	]
}
pop_internal_migration_trigger = {
	num_of_cities = 2	#you have something to migrate to
	any_owned_province = { #you have a province that they want to migrate from
		has_$race$_minority_trigger = yes
		OR = {
			devastation = 25
			unrest = 10
			NOT = { development = 10 owner = { fast_owns_num_pops_of_race = { race = $race$ amount = 20 } } }
			NOT = { preferred_terrain = { $race$ = yes } }
		}
	}
}
pop_external_migration_trigger = {
	ai = no #ai does fake migrations, not real ones
	NOT = {
		has_country_modifier = racial_pop_$race$_purge
		has_country_modifier = racial_pop_$race$_expulsion
	}
	[[neighbor]
		any_neighbor_country = {
			pop_wants_to_leave = { race = $race$ }
		}
	]
}
pop_wants_to_leave = { #for use inside of a country scope, while ROOT refers back to another country (probably the player)
	fast_owns_num_pops_of_race = { race = $race$ amount = 1 }
	if = {
		limit = {
			OR = {
				has_country_modifier = racial_pop_$race$_purge
				has_country_modifier = racial_pop_$race$_expulsion
				AND = {
					low_tolerance_$race$_race_trigger = yes
					ROOT = {
						OR = {
							low_tolerance_$race$_race_trigger = no
							has_country_modifier = racial_focus_$race$
						}
					}
				}
			}
		}
		any_owned_province = {
			fast_has_pop_of_race = { race = $race$ }
			NOT = { has_province_modifier = $race$_migration_cooldown}
		}
	}
	else = {
		any_owned_province = {
			fast_has_pop_of_race = { race = $race$ }
			NOT = { has_province_modifier = $race$_migration_cooldown}
			OR = {
				devastation = 25
				unrest = 10
				NOT = { development = 10 owner = { fast_owns_num_pops_of_race = { race = $race$ amount = 20 } } }
				AND = {
					NOT = { preferred_terrain = { $race$ = yes } }
					ROOT = {
						has_country_modifier = racial_focus_$race$
					}
				}
			}
		}
	}
}
ai_external_migration_trigger = { #ai version of migration simulation
	ai = yes
	any_neighbor_country = { ai = yes }
	any_owned_province = {
		fast_has_pop_of_race = { race = $race$ }
		NOT = { has_province_modifier = $race$_migration_cooldown }
		OR = {
			unrest = 10
			devastation = 25
			has_oppressed_$race$_pop_trigger = yes
			NOT = { development = 10 owner = { fast_owns_num_pops_of_race = { race = $race$ amount = 20 } } }
			NOT = { preferred_terrain = { $race$ = yes } }
		}
	}
}