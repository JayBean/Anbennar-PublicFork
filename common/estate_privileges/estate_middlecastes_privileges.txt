#Middlecastes

estate_middlecastes_organization_caste = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_middlecastes_organization_caste
	}
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_middlecastes_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_middlecastes_tt
	}
	penalties = {
	}
	benefits = {
	}
	
	conditional_modifier = { # Only Harimari
		trigger = {
			has_country_flag = harimari_in_middlecastes
			NOT = { has_country_flag = human_in_middlecastes }
		}
		modifier = {
			trade_efficiency = 0.10 #Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = { # Only Humans
		trigger = {
			has_country_flag = human_in_middlecastes
			NOT = { has_country_flag = harimari_in_middlecastes }
		}
		modifier = {
			global_trade_power = 0.10 #Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = { # Harimari + Humans
		trigger = {
			has_country_flag = harimari_in_middlecastes
			has_country_flag = human_in_middlecastes
		}
		modifier = {
			trade_efficiency = 0.05 #Half modifier, harimari share in the caste
			global_trade_power = 0.05 #Half modifier, humans share the caste
		}
	}
	
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_organization_caste_dhenijanraj = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_middlecastes_organization_caste_dhenijanraj
	}
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_middlecastes_dhenijanraj_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_middlecastes_dhenijanraj_tt
	}
	penalties = {
	}
	benefits = {
	}
	
	conditional_modifier = { # Only Harimari
		trigger = {
			has_country_flag = harimari_in_middlecastes
			NOT = {
				has_country_flag = human_in_middlecastes
				has_country_flag = dwarf_in_middlecastes
				has_country_flag = hobgoblin_in_middlecastes
			}
		}
		modifier = {
			trade_efficiency = 0.10 #Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = { # Only Humans
		trigger = {
			has_country_flag = human_in_middlecastes
			NOT = {
				has_country_flag = harimari_in_middlecastes
				has_country_flag = dwarf_in_middlecastes
				has_country_flag = hobgoblin_in_middlecastes
			}
		}
		modifier = {
			global_trade_power = 0.10 #Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = { # Half Harimari
		trigger = {
			has_country_flag = harimari_in_middlecastes
			OR = {
				has_country_flag = human_in_middlecastes
				has_country_flag = dwarf_in_middlecastes
				has_country_flag = hobgoblin_in_middlecastes
			}
		}
		modifier = {
			trade_efficiency = 0.05 #Half modifier, harimari share the caste
		}
	}
	conditional_modifier = { # Half Humans
		trigger = {
			has_country_flag = human_in_middlecastes
			OR = {
				has_country_flag = harimari_in_middlecastes
				has_country_flag = dwarf_in_middlecastes
				has_country_flag = hobgoblin_in_middlecastes
			}
		}
		modifier = {
			global_trade_power = 0.05 #Half modifier, humans share the caste
		}
	}
	conditional_modifier = { # Half Dwarves
		trigger = {
			has_country_flag = dwarf_in_middlecastes
			OR = {
				has_country_flag = harimari_in_middlecastes
				has_country_flag = human_in_middlecastes
				has_country_flag = hobgoblin_in_middlecastes
			}
		}
		modifier = {
			interest = -0.5 #Half modifier, dwarves share the caste
		}
	}
	conditional_modifier = { # Half Hobgoblin
		trigger = {
			has_country_flag = hobgoblin_in_middlecastes
			OR = {
				has_country_flag = harimari_in_middlecastes
				has_country_flag = human_in_middlecastes
				has_country_flag = dwarf_in_middlecastes
			}
		}
		modifier = {
			global_trade_goods_size_modifier = 0.05 #Half, hobgoblin are haring the caste
		}
	}
	
	ai_will_do = {
		factor = 0
	}
}
estate_middlecastes_organization_reformed = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_middlecastes_organization_reformed
	}
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_middlecastes_reformed_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_middlecastes_reformed_tt
	}
	penalties = {
	}
	benefits = {
		advisor_cost = -0.10 			# Reward for abolishing the castes
		trade_efficiency = 0.05 		# Half modifier, harimari share in the caste
		global_trade_power = 0.05 		# Half modifier, humans share the caste
	}
	
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_land_rights = {
	icon = privilege_grant_autonomy
	land_share = 5
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	can_select = {
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		governing_capacity = 100
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 1.4
			num_of_territories = 5
		}
		modifier = {
			factor = 1.5
			num_of_territories = 10
		}
		modifier = {
			factor = 1.5
			num_of_territories = 15
		}
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 25 }
				estate_influence = {
					estate = estate_middlecastes
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_middlecastes_land_rights }
		}
		modifier = {
			factor = 0
			NOT = { num_of_territories = 1 }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 40 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 60 }
				}
			}
			NOT = { has_estate_privilege = estate_middlecastes_land_rights }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 30 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 50 }
				}
			}
			NOT = { has_estate_privilege = estate_middlecastes_land_rights }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
	}
}

estate_middlecastes_free_enterprise = {
	icon = privilege_comission_merchant_ships_for_war
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	influence = 0.1
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0
			is_absolutism_active = yes
		}
	}
}

estate_middlecastes_sell_promotions = {
	icon = privilege_exempt_officers_from_jaziya
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.1
	loyalty = 0.05
	is_valid = {
		caste_fluidity_is_fluid = yes
	}
	can_select = {
		caste_fluidity_is_fluid = yes
	}
	penalties = {
		stability_cost_modifier = 0.1
	}
	benefits = {
		dip_advisor_cost = -0.25
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { dip = 2 }
		}
		modifier = {
			factor = 0.8
			dip = 5
		}
	}
}

estate_middlecastes_land_of_commerce = {
	icon = privilege_diplo_power
	land_share = 10
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = -0.05
	is_valid = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_rigid = yes
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_rigid = yes
		}
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		country_diplomatic_power = 1
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 30 }
				estate_influence = {
					estate = estate_middlecastes
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_middlecastes_land_of_commerce }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 35 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 55 }
				}
			}
			NOT = { has_estate_privilege = estate_middlecastes_land_of_commerce }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { dip = 2 }
		}
		modifier = {
			factor = 0.8
			dip = 5
		}
	}
}

estate_middlecastes_patronage_of_the_arts = {
	icon = privilege_build_jain_temple
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	penalties = {
		global_tax_modifier = -0.05
	}
	benefits = {
		prestige = 0.5
	}
	on_granted = {
		if = {
			limit = { prestige = 50 }
			add_prestige = 10
		}
		else_if = {
			limit = { prestige = 0 }
			add_prestige = 15
		}
		else_if = {
			limit = { prestige = -25 }
			add_prestige = 20
		}
		else_if = {
			limit = { prestige = -50 }
			add_prestige = 25
		}
		else = {
			add_prestige = 30
		}
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_admirals = {
	icon = privilege_admiral
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.10
	loyalty = 0.05
	is_valid = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	can_select = {
		navy_tradition = 30
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	on_granted = {
		add_navy_tradition = -15
	}
	penalties = {
	}
	benefits = {
		admiral_cost = -0.25
		navy_tradition_decay = -0.005
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_private_trade_fleets = {
	icon = privilege_comission_merchant_ships_for_war
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.1
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
	}
	can_select = {
		any_owned_province = {
			has_port = yes
		}
		navy_size = 1
	}
	penalties = {
	}
	benefits = {
		light_ship_cost = -0.2
		global_ship_trade_power = 0.1
	}
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 10
			num_of_light_ship = 15
			trade_income_percentage = 0.35
		}
		modifier = {
			factor = 0
			is_absolutism_active = yes
		}
	}
}

estate_middlecastes_enforced_interfaith_dialogue = {
	icon = privilege_freedom_of_religion
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	is_valid = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	penalties = {
	}
	benefits = {
		tolerance_heathen = 2
		tolerance_heretic = 2
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_control_over_monetary_policy = {
	icon = privilege_give_money
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	penalties = {
		all_power_cost = 0.05
	}
	benefits = {
		inflation_reduction = 0.15
		interest = -0.5
		production_efficiency = 0.05
	}
	ai_will_do = {
		factor = 1
		modifier = {
			factor = 10
			OR = {
				inflation = 15
				num_of_loans = 15
			}
		}
		modifier = {
			factor = 0
			is_absolutism_active = yes
		}
	}
}

estate_middlecastes_indebted_to_middlecastes = {
	can_select = {
		NOT = { has_disaster = hoardcurse }
	}
	icon = privilege_give_money
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	on_granted = {
		custom_tooltip = estate_middlecastes_indebted_to_middlecastes_effect_tooltip
		add_mercantilism = -1
		tooltip = {
			add_inflation = 0.5
		}
		hidden_effect = {
			add_loan = {
				fixed_interest = 1
				duration = 60
				estate_loan = yes
			}
			add_loan = {
				fixed_interest = 1
				duration = 60
				estate_loan = yes
			}
			add_loan = {
				fixed_interest = 1
				duration = 60
				estate_loan = yes
			}
			add_loan = {
				fixed_interest = 1
				duration = 60
				estate_loan = yes
			}
			add_loan = {
				fixed_interest = 1
				duration = 60
				estate_loan = yes
			}
		}
	}
	penalties = {
		trade_efficiency = -0.05
	}
	benefits = {
	}
	can_select = { 
		if = {
			limit = {
				has_estate_privilege = estate_middlecastes_indebted_to_middlecastes
			}
			has_estate_loan = yes
		}
	}
	can_revoke = {
		has_estate_loan = no
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_excluse_trade_rights = {
	icon = privilege_make_generous_donation
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.05
	loyalty = 0.05
	is_valid = {
		has_dlc = "Emperor"
		OR = {
			caste_fluidity_is_rigid = yes
			caste_fluidity_is_neutral = yes
		}
		num_of_owned_provinces_with = {
			value = 3
			province_has_center_of_trade_of_level = 1
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_rigid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	on_granted = {
		custom_tooltip = estate_middlecastes_exclusive_trade_rights_enact_tooltip
		random_owned_province = {
			limit = {
				province_has_center_of_trade_of_level = 1
			}
			add_province_modifier = {
				name = estate_burghers_exclusive_trade_rights_mod
				duration = -1
			}
		}
		add_mercantilism = 3
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_exclusive_trade_rights_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_burghers_exclusive_trade_rights_mod
			}
			remove_province_modifier = estate_burghers_exclusive_trade_rights_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_burghers_exclusive_trade_rights_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_burghers_exclusive_trade_rights_mod
			}
			remove_province_modifier = estate_burghers_exclusive_trade_rights_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_monopoly_of_textiles = {
	icon = privilege_monopoly_of_goods_cloth
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			OR = {
				trade_goods = cloth
				trade_goods = silk
			}
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				OR = {
					trade_goods = cloth
					trade_goods = silk
				}
			}
			custom_tooltip = MONOPOLY_INCOME_CLOTH_DESC
		}
		custom_tooltip = estate_middlecastes_monopoly_of_textiles_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = cloth
					trade_goods = silk
				}
			}
			add_province_modifier = {
				name = estate_middlecastes_monopoly_of_textiles_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_textiles_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_textiles_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_monopoly_of_textiles_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_textiles_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_textiles_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_middlecastes_monopoly_of_textiles_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_textiles_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_textiles_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.1 }
	}
	ai_will_do = { #having the AI use these could lead to an unstoppable downwards spiral if it can't work out how to get rid of them
		factor = 0
	}
}

estate_middlecastes_monopoly_of_dyes = {
	icon = privilege_monopoly_of_goods_dyes
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = dyes
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
		NOT = {
			has_estate_privilege = estate_middlecastes_indigo_guild
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = dyes
			}
			custom_tooltip = MONOPOLY_INCOME_DYE_DESC
		}
		custom_tooltip = estate_middlecastes_monopoly_of_dyes_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = dyes
			}
			add_province_modifier = {
				name = estate_middlecastes_monopoly_of_dyes_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_dyes_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_dyes_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_monopoly_of_dyes_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_dyes_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_dyes_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_middlecastes_monopoly_of_dyes_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_dyes_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_dyes_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.2 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_monopoly_of_glass = {
	icon = privilege_monopoly_of_goods_glass
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = glass
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = glass
			}
			custom_tooltip = MONOPOLY_INCOME_GLASS_DESC
		}
		custom_tooltip = estate_middlecastes_monopoly_of_glass_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = glass
			}
			add_province_modifier = {
				name = estate_middlecastes_monopoly_of_glass_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_glass_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_glass_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_monopoly_of_glass_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_glass_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_glass_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_middlecastes_monopoly_of_glass_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_glass_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_glass_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.3 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_monopoly_of_paper = {
	icon = privilege_monopoly_of_goods_paper
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = paper
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = paper
			}
			custom_tooltip = MONOPOLY_INCOME_PAPER_DESC
		}
		custom_tooltip = estate_middlecastes_monopoly_of_paper_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = paper
			}
			add_province_modifier = {
				name = estate_middlecastes_monopoly_of_paper_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_paper_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_paper_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_monopoly_of_paper_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_paper_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_paper_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_middlecastes_monopoly_of_paper_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_monopoly_of_paper_mod
			}
			remove_province_modifier = estate_middlecastes_monopoly_of_paper_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.4 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_white_guild_independent_operations = {
	icon = privilege_monopoly_of_goods_chinaware
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		# has_dlc = "Emperor"
		has_country_flag = ghavaanaj_the_white_guild_established
		NOT = { has_country_flag = estate_middlecastes_white_guild_independent_operations_disable_flag }
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
		}
		NOT = {
			has_estate_privilege = estate_middlecastes_white_guild_state_control
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = ivory
			}
			custom_tooltip = MONOPOLY_INCOME_IVORY_DESC
		}
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = chinaware
			}
			custom_tooltip = MONOPOLY_INCOME_CHINAWARE_DESC
		}
		custom_tooltip = estate_middlecastes_white_guild_independent_operations_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = ivory
					trade_goods = chinaware
				}
			}
			add_province_modifier = {
				name = estate_middlecastes_white_guild_independent_operations_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_white_guild_independent_operations_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_white_guild_independent_operations_mod
			}
			remove_province_modifier = estate_middlecastes_white_guild_independent_operations_mod
		}
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_white_guild_independent_operations_mod
			}
			remove_province_modifier = estate_middlecastes_white_guild_independent_operations_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		set_country_flag = estate_middlecastes_white_guild_independent_operations_disable_flag # on_invalid gives a notification, on_revoked does not.
	}
	on_invalid = {
		clr_country_flag = estate_middlecastes_white_guild_independent_operations_disable_flag
		country_event = { id = ghavaanaj.1 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_white_guild_state_control = {
	icon = privilege_monopoly_of_goods_chinaware
	max_absolutism = 5
	loyalty = -0.1
	is_valid = {
		# has_dlc = "Emperor"
		has_country_flag = ghavaanaj_the_white_guild_established
		NOT = { has_country_flag = estate_middlecastes_white_guild_independent_operations_disable_flag }
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
		NOT = {
			has_estate_privilege = estate_middlecastes_white_guild_independent_operations
		}
	}
	on_granted = {
		custom_tooltip = estate_middlecastes_white_guild_state_control_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = ivory
					trade_goods = chinaware
				}
			}
			add_province_modifier = {
				name = estate_middlecastes_white_guild_state_control_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_white_guild_state_control_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_white_guild_state_control_mod
			}
			remove_province_modifier = estate_middlecastes_white_guild_state_control_mod
		}
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_white_guild_state_control_mod
			}
			remove_province_modifier = estate_middlecastes_white_guild_state_control_mod
		}
	}
	penalties = {
	}
	benefits = {
	}

	cooldown_years = 10
	on_cooldown_expires = {
		set_country_flag = estate_middlecastes_white_guild_independent_operations_disable_flag # on_invalid gives a notification, on_revoked does not.
	}
	on_invalid = {
		clr_country_flag = estate_middlecastes_white_guild_independent_operations_disable_flag
		country_event = { id = ghavaanaj.1 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_middlecastes_indigo_guild = {
	icon = privilege_monopoly_of_goods_dyes
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		has_country_flag = estate_middlecastes_indigo_guild_flag 
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
		}
		NOT = {
			has_estate_privilege = estate_middlecastes_white_guild_independent_operations
		}
	}
	on_granted = {
		custom_tooltip = estate_middlecastes_indigo_guild_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					trade_goods = dyes
				}
			}
			add_province_modifier = {
				name = estate_middlecastes_indigo_guild_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_middlecastes_indigo_guild_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_indigo_guild_mod
			}
			remove_province_modifier = estate_middlecastes_indigo_guild_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_middlecastes_indigo_guild_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_middlecastes_indigo_guild_mod
			}
			remove_province_modifier = estate_middlecastes_indigo_guild_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	
	ai_will_do = {
		factor = 0
	}
}