#Lowercastes

estate_lowercastes_organization_caste = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_lowercastes_organization_caste
	}
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_lowercastes_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_lowercastes_tt
	}
	penalties = {
	}
	benefits = {
	}
	
	conditional_modifier = { # Only Harimari
		trigger = {
			has_country_flag = harimari_in_lowercastes
			NOT = { has_country_flag = human_in_lowercastes }
		}
		modifier = {
			development_cost = -0.10 #Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = { # Only Humans
		trigger = {
			has_country_flag = human_in_lowercastes
			NOT = { has_country_flag = harimari_in_lowercastes }
		}
		modifier = {
			production_efficiency = 0.10 #Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = { # Harimari + Humans
		trigger = {
			has_country_flag = harimari_in_lowercastes
			has_country_flag = human_in_lowercastes
		}
		modifier = {
			development_cost = -0.05 #Half modifier, harimari share in the caste
			production_efficiency = 0.05 #Half modifier, humans share the caste
		}
	}
	
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_organization_caste_dhenijanraj = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_lowercastes_organization_caste_dhenijanraj
	}
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_lowercastes_dhenijanraj_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_lowercastes_dhenijanraj_tt
	}
	penalties = {
	}
	benefits = {
	}
	
	conditional_modifier = { # Only Harimari
		trigger = {
			has_country_flag = harimari_in_lowercastes
			NOT = {
				has_country_flag = human_in_lowercastes
				has_country_flag = dwarf_in_lowercastes
			}
		}
		modifier = {
			development_cost = -0.10 #Full modifier, harimari are alone in the caste
		}
	}
	conditional_modifier = { # Only Humans
		trigger = {
			has_country_flag = human_in_lowercastes
			NOT = {
				has_country_flag = harimari_in_lowercastes
				has_country_flag = dwarf_in_lowercastes
			}
		}
		modifier = {
			production_efficiency = 0.10 #Full modifier, humans are alone in the caste
		}
	}
	conditional_modifier = { # Half Harimari
		trigger = {
			has_country_flag = harimari_in_lowercastes
			OR = {
				has_country_flag = human_in_lowercastes
				has_country_flag = dwarf_in_lowercastes
			}
		}
		modifier = {
			development_cost = -0.05 #Half modifier, harimari share in the caste
		}
	}
	conditional_modifier = { # Half Humans
		trigger = {
			has_country_flag = human_in_lowercastes
			OR = {
				has_country_flag = harimari_in_lowercastes
				has_country_flag = dwarf_in_lowercastes
			}
		}
		modifier = {
			production_efficiency = 0.05 #Half modifier, humans share the caste
		}
	}
	conditional_modifier = { # Half Dwarves
		trigger = {
			has_country_flag = dwarf_in_lowercastes #Are dwarves alone in caste?
			OR = {
				has_country_flag = harimari_in_lowercastes
				has_country_flag = human_in_lowercastes
			}
		}
		modifier = {
			build_cost = -0.05 #Half modifier, dwarves share in the caste
		}
	}
	
	ai_will_do = {
		factor = 0
	}
}
estate_lowercastes_organization_reformed = {
	icon = privilege_promote_maratha_nobility
	max_absolutism = 0
	loyalty = 0.05
	land_share = 0
	influence = 0.1
	is_valid = {
		has_estate_privilege = estate_lowercastes_organization_reformed
	}
	can_select = {
		always = no
	}
	can_revoke = {
		always = no
	}
	on_granted = {
		custom_tooltip = caste_races_lowercastes_reformed_tt
	}
	on_revoked = {
		custom_tooltip = caste_races_lowercastes_reformed_tt
	}
	penalties = {
	}
	benefits = {
		global_manpower_modifier = 0.20		# Reward for abolishing the castes
		development_cost = -0.05 			# Half modifier, harimari share in the caste
		production_efficiency = 0.05 		# Half modifier, humans share the caste
	}	
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_land_rights = {
	icon = privilege_grant_autonomy
	land_share = 5
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	can_select = {
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		governing_capacity = 100
	}
	ai_will_do = {
		factor = 5
		modifier = {
			factor = 1.4
			num_of_territories = 5
		}
		modifier = {
			factor = 1.5
			num_of_territories = 10
		}
		modifier = {
			factor = 1.5
			num_of_territories = 15
		}
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 25 }
				estate_influence = {
					estate = estate_lowercastes
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_lowercastes_land_rights }
		}
		modifier = {
			factor = 0
			NOT = { num_of_territories = 1 }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 40 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 60 }
				}
			}
			NOT = { has_estate_privilege = estate_lowercastes_land_rights }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 30 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 50 }
				}
			}
			NOT = { has_estate_privilege = estate_lowercastes_land_rights }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
	}
}

estate_lowercastes_less_oversight = {
	icon = privilege_tolerance_heathen
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	influence = 0.1
	penalties = {
	}
	benefits = {
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0
			is_absolutism_active = yes
		}
	}
}

estate_lowercastes_promote_schooling = {
	icon = privilege_sponsored_education
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	influence = 0.1
	loyalty = 0.05
	is_valid = {
		caste_fluidity_is_fluid = yes
	}
	can_select = {
		caste_fluidity_is_fluid = yes
	}
	penalties = {
		stability_cost_modifier = 0.1
	}
	benefits = {
		adm_advisor_cost = -0.25
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { adm = 2 }
		}
		modifier = {
			factor = 0.8
			adm = 5
		}
	}
}

estate_lowercastes_mediators = {
	icon = privilege_admin_power
	land_share = 10
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = -0.05
	is_valid = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_fluid = yes
			caste_fluidity_is_neutral = yes
		}
	}
	on_granted = {
	}
	penalties = {
	}
	benefits = {
		country_admin_power = 1
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0
			OR = {
				NOT = { crown_land_share = 30 }
				estate_influence = {
					estate = estate_lowercastes
					influence = 75
				}
			}
			NOT = { has_estate_privilege = estate_lowercastes_mediators }
		}
		modifier = {
			factor = 0.8
			OR = {
				NOT = { crown_land_share = 35 }
				AND = {
					is_absolutism_active = yes
					NOT = { crown_land_share = 55 }
				}
			}
			NOT = { has_estate_privilege = estate_lowercastes_mediators }
		}
		modifier = {
			factor = 0.8
			is_absolutism_active = yes
		}
		modifier = {
			factor = 1.25
			NOT = { adm = 2 }
		}
		modifier = {
			factor = 0.8
			adm = 5
		}
	}
}

estate_lowercastes_freedom_of_religion = {
	icon = privilege_freedom_of_religion
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	is_valid = {
		caste_fluidity_is_fluid = yes
	}
	can_select = {
		caste_fluidity_is_fluid = yes
	}
	penalties = {
	}
	benefits = {
		religious_unity = 0.2
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_supporting_philosophers = {
	icon = privilege_seek_support_of_brahmins
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.05
	influence = 0.05
	is_valid = {
		caste_fluidity_is_neutral = yes
	}
	can_select = {
		caste_fluidity_is_neutral = yes
	}
	penalties = {
	}
	benefits = {
		missionary_maintenance_cost = -0.2
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
	}
}

estate_lowercastes_prohibited_education = {
	icon = privilege_prohibited_education
	max_absolutism = 5
	loyalty = -0.05
	influence = 0.10
	is_valid = {
		caste_fluidity_is_rigid = yes
	}
	can_select = {
		caste_fluidity_is_rigid = yes
	}
	on_revoked = {
		add_estate_loyalty = {
		estate = estate_lowercastes
		loyalty = 15
		}
	}
	penalties = {
	}
	benefits = {
		global_missionary_strength = 0.02
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.6
			NOT = {
				estate_loyalty = {
					estate = estate_lowercastes
					loyalty = 50
				}
			}
		}
		modifier = {
			factor = 0
			estate_influence = {
				estate = estate_lowercastes
				influence = 60
			}
		}
	}
}

estate_lowercastes_expand_recruitment = {
	icon = privilege_demand_more_troops
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = -0.05
	influence = 0.10
	is_valid = {
		caste_fluidity_is_fluid = yes
	}
	can_select = {
		caste_fluidity_is_fluid = yes
	}
	on_revoked = {
		add_estate_loyalty = {
		estate = estate_lowercastes
		loyalty = 15
		}
	}
	penalties = {
	}
	benefits = {
		land_forcelimit_modifier = 0.05
	}
	modifier_by_land_ownership = {
		land_forcelimit_modifier = 0.25
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_right_to_bear_arms = {
	icon = privilege_promote_purbias
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.10
	influence = 0.10
	is_valid = {
		caste_fluidity_is_fluid = yes
	}
	can_select = {
		caste_fluidity_is_fluid = yes
	}
	penalties = {
		global_autonomy = 0.05
		uppercastes_loyalty_modifier = -0.05
	}
	benefits = {
		infantry_power = 0.05
		global_regiment_cost = -0.05
	}
	ai_will_do = {
		factor = 10
		modifier = {
			factor = 0.5
			is_absolutism_active = yes
		}
	}
}

estate_lowercastes_weapon_regulations = {
	icon = privilege_weapon_regulation
	loyalty = -0.05
	is_valid = {
		caste_fluidity_is_neutral = yes
	}
	can_select = {
		caste_fluidity_is_neutral = yes
	}
	on_revoked = {
		add_estate_loyalty = {
		estate = estate_lowercastes
		loyalty = 15
		}
	}
	penalties = {
	}
	benefits = {
		infantry_power = 0.05
		governing_cost = -0.05
	}
	ai_will_do = {
		factor = 10
	}
}

estate_lowercastes_weapon_ban = {
	icon = privilege_weapon_ban
	max_absolutism = 5
	loyalty = -0.15
	influence = -0.10
	is_valid = {
		caste_fluidity_is_rigid = yes
	}
	can_select = {
		caste_fluidity_is_rigid = yes
	}
	on_revoked = {
		add_estate_loyalty = {
		estate = estate_lowercastes
		loyalty = 20
		}
	}
	penalties = {
	}
	benefits = {
		uppercastes_loyalty_modifier = 0.05
		governing_cost = -0.10
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_maintained_infrastructure = {
	icon = privilege_dev_cost
	influence = 0.05
	is_valid = {
		OR = {
			caste_fluidity_is_neutral = yes
			caste_fluidity_is_rigid = yes
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_neutral = yes
			caste_fluidity_is_rigid = yes
		}
	}
	penalties = {
		global_manpower_modifier = -0.10
	}
	benefits = {
		build_cost = -0.10
		build_time = -0.20		
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_resticted_imports = {
	icon = privilege_banned_imports
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	loyalty = 0.10
	influence = 0.05
	is_valid = {
		OR = {
			caste_fluidity_is_neutral = yes
			caste_fluidity_is_rigid = yes
		}
	}
	can_select = {
		OR = {
			caste_fluidity_is_neutral = yes
			caste_fluidity_is_rigid = yes
		}
	}
	penalties = {
		global_trade_power = -0.1
		middlecastes_loyalty_modifier = -0.1	
	}
	benefits = {
		global_trade_goods_size_modifier = 0.1	
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_development_of_temples = {
	icon = privilege_religious
	loyalty = 0.1
	influence = 0.05
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	is_valid = {
		has_dlc = "Domination"
	}
	on_granted = {
		custom_tooltip = estate_lowercastes_development_of_temples_gt
		tooltip = {
			add_province_modifier = {
				name = estate_lowercastes_development_of_temples_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_lowercastes_development_of_temples_rt
	}
	on_granted_province = {
		if = {
			limit = {
				OR = {
					has_owner_religion = yes
					has_owner_harmonized_religion = yes
					has_owner_secondary_religion = yes
				}
				has_tax_building_trigger = yes
			}
			add_province_modifier = {
				name = estate_lowercastes_development_of_temples_mod
				duration = -1
			}
		}
	}
	on_invalid_province = {
		if = {
			limit = { has_province_modifier = estate_lowercastes_development_of_temples_mod }
			remove_province_modifier = estate_lowercastes_development_of_temples_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = { has_province_modifier = estate_lowercastes_development_of_temples_mod }
			remove_province_modifier = estate_lowercastes_development_of_temples_mod
		}
	}

	mechanics = {
		no_estate_crownland_loss_from_developing
	}
	conditional_modifier = {
		trigger = { has_government_mechanic = russian_modernization_mechanic }
		modifier = { monthly_russian_modernization = -0.03 }
	}
	conditional_modifier = { #Anbennar
		trigger = { has_country_flag = J53_retore_ustiqlik }
		modifier = { church_loyalty_modifier = 0.05 }
	}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = ottoman_decadence_mechanic }
	#	modifier = { monthly_ottoman_decadence = 0.02 }
	#}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_development_of_castles = {
	icon = privilege_fort
	loyalty = 0.1
	influence = 0.05
	max_absolutism = -5
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 1 } }
	is_valid = {
		has_dlc = "Domination"
	}
	on_granted = {
		custom_tooltip = estate_lowercastes_development_of_castles_gt
		tooltip = {
			add_province_modifier = {
				name = estate_lowercastes_development_of_castles_mod
				duration = -1
			}
		}
		custom_tooltip = estate_lowercastes_development_of_castles_at
		tooltip = {
			add_province_modifier = {
				name = estate_lowercastes_development_of_castles_ramparts_mod
				duration = -1
			}
		}
	}
	on_revoked = {
		custom_tooltip = estate_lowercastes_development_of_castles_rt
	}
	on_granted_province = {
		if = {
			limit = {
				has_fort_building_trigger = yes
			}
			add_province_modifier = {
				name = estate_lowercastes_development_of_castles_mod
				duration = -1
			}
		}
		if = {
			limit = {
				has_building = ramparts
			}
			add_province_modifier = {
				name = estate_lowercastes_development_of_castles_ramparts_mod
				duration = -1
			}
		}
	}
	on_invalid_province = {
		if = {
			limit = { has_province_modifier = estate_lowercastes_development_of_castles_mod }
			remove_province_modifier = estate_lowercastes_development_of_castles_mod
		}
		if = {
			limit = { has_province_modifier = estate_lowercastes_development_of_castles_ramparts_mod }
			remove_province_modifier = estate_lowercastes_development_of_castles_ramparts_mod
		}
	}
	on_revoked_province = {
		if = {
			limit = { has_province_modifier = estate_lowercastes_development_of_castles_mod }
			remove_province_modifier = estate_lowercastes_development_of_castles_mod
		}
		if = {
			limit = { has_province_modifier = estate_lowercastes_development_of_castles_ramparts_mod }
			remove_province_modifier = estate_lowercastes_development_of_castles_ramparts_mod
		}
	}

	mechanics = {
		no_estate_crownland_loss_from_developing
	}
	conditional_modifier = {
		trigger = { has_government_mechanic = russian_modernization_mechanic }
		modifier = { monthly_russian_modernization = -0.05 }
	}
	#conditional_modifier = {
	#	trigger = { has_government_mechanic = ottoman_decadence_mechanic }
	#	modifier = { monthly_ottoman_decadence = 0.02 }
	#}
	ai_will_do = {
		factor = 0
	}
}
estate_lowercastes_monopoly_of_incense = {
	icon = privilege_monopoly_of_goods_incence
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = incense
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = incense
			}
			custom_tooltip = MONOPOLY_INCOME_INCENSE_DESC
		}
		custom_tooltip = estate_lowercastes_monopoly_of_incense_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = incense
			}
			add_province_modifier = {
				name = estate_lowercastes_monopoly_of_incense_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_incense_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_incense_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_lowercastes_monopoly_of_incense_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_incense_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_incense_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_lowercastes_monopoly_of_incense_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_incense_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_incense_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.8 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_monopoly_of_wool = {
	icon = privilege_monopoly_of_goods_wool
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		any_owned_province = {
			trade_goods = wool
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = wool
			}
			custom_tooltip = MONOPOLY_INCOME_WOOL_DESC
		}
		custom_tooltip = estate_lowercastes_monopoly_of_wool_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = wool
			}
			add_province_modifier = {
				name = estate_lowercastes_monopoly_of_wool_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_wool_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_wool_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_lowercastes_monopoly_of_wool_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_wool_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_wool_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_lowercastes_monopoly_of_wool_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_wool_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_wool_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.9 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_monopoly_of_wine = {
	icon = privilege_monopoly_of_goods_wine
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		#NOT = { religion_group = muslim }
		any_owned_province = {
			trade_goods = wine
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = wine
			}
			custom_tooltip = MONOPOLY_INCOME_WINE_DESC
		}
		custom_tooltip = estate_lowercastes_monopoly_of_wine_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = wine
			}
			add_province_modifier = {
				name = estate_lowercastes_monopoly_of_wine_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_wine_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_wine_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_lowercastes_monopoly_of_wine_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_wine_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_wine_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_lowercastes_monopoly_of_wine_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_wine_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_wine_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.10 }
	}
	ai_will_do = {
		factor = 0
	}
}

estate_lowercastes_monopoly_of_slaves = {
	icon = privilege_monopoly_of_goods_slaves
	max_absolutism = -10
	conditional_modifier = { trigger = { has_absolutism_reduction_for_estate_privileges = yes } modifier = { max_absolutism = 2 } }
	loyalty = 0.1
	is_valid = {
		has_dlc = "Emperor"
		always = no
		#religion = nahuatl
		any_owned_province = {
			trade_goods = slaves
		}
	}
	can_select = {
		custom_trigger_tooltip = {
			tooltip = unavailable_during_revolution_disaster
			NOT = { has_disaster = revolution }
			NOT = {
				has_disaster_progress = {
					disaster = revolution
					value = 1
				}
			}
			tooltip = JY_LF_not_trading #Anbennar
			NOT = { has_country_modifier = JY_LF_recent_trade }
			# NOT = { has_disaster = french_revolution }
			# NOT = {
				# has_disaster_progress = {
					# disaster = french_revolution
					# value = 1
				# }
			# }
		}
	}
	on_granted = {
		add_mercantilism = 1
		add_years_of_owned_provinces_production_income = {
			years = 8
			trigger = {
				trade_goods = slaves
			}
			custom_tooltip = MONOPOLY_INCOME_SLAVES_DESC
		}
		custom_tooltip = estate_lowercastes_monopoly_of_slaves_effect_tooltip
	}
	on_granted_province = {
		if = {
			limit = {
				trade_goods = slaves
			}
			add_province_modifier = {
				name = estate_lowercastes_monopoly_of_slaves_mod
				duration = -1
			}
		}
		else_if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_slaves_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_slaves_mod
		}
	}
	on_revoked = {
		custom_tooltip = estate_lowercastes_monopoly_of_slaves_revoke_tooltip
	}
	on_revoked_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_slaves_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_slaves_mod
		}
	}
	on_invalid = {
		custom_tooltip = estate_lowercastes_monopoly_of_slaves_revoke_tooltip
	}
	on_invalid_province = {
		if = {
			limit = {
				has_province_modifier = estate_lowercastes_monopoly_of_slaves_mod
			}
			remove_province_modifier = estate_lowercastes_monopoly_of_slaves_mod
		}
	}
	penalties = {
	}
	benefits = {
	}
	cooldown_years = 10
	on_cooldown_expires = {
		country_event = { id = monopoly_privileges.11 }
	}
	ai_will_do = {
		factor = 0
	}
}
