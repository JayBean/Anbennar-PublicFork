######################################################################
# Separatist rebels used by the Effelai Retribution effect
######################################################################
seedthrall_rebels = {

	color = { 25 180 25 }

	area = nation 			# Stays within provinces of their rebel tag
	government = any				# No special preference
	defection = any			# If the country seeks independence, defection specifies what type of provinces it wants.
	independence = any 		# Seeks independence for culture. Will not spawn at all if there is no suitable tag.
	defect_delay = 60				# Can spontaneously declare independence after 60 months (earliest)
	unit_transfer = no				# Units switch allegiance after enforcing demands.
	gfx_type = culture_province	
	will_relocate = yes	
	
	resilient = no
	reinforcing = yes
	general = yes				
	smart = yes
	
	artillery = 0
	infantry = 0.6
	cavalry = 0.4
	
	morale = 1.4

	# Possible handle actions
	handle_action_negotiate = yes
	handle_action_stability = yes
	handle_action_build_core = yes
	handle_action_send_missionary = yes		
	handle_action_change_culture = yes
	
	# The rebel type with the highest modifier for this province gets picked
	spawn_chance = {
		factor = 0 #these never spawn naturally
	}
 
 	# This is checked for EACH province in the Area of Operations
	movement_evaluation = {
		factor = 1
		modifier = {
			factor = 0.1
			units_in_province = 1
		}
	}
 
 	# Province Scope
 	siege_won_trigger = {
 	}
	siege_won_effect = {
	}
	
	# Country scope
	can_negotiate_trigger = {
		is_at_war = no
	}
	
	# Country scope
	can_enforce_trigger = {
		always = yes
	}
	
	# Localisation for their demands
	demands_description = "effelai_retribution_demand"
	
	# Country scope
	demands_enforced_effect = {
		hidden_effect = {
			add_country_modifier = {
				name = just_lost_to_rebels
				duration = 10
				hidden = yes
			}
		}
		add_prestige = -10	
		if = {
			limit = {
				exists = REB
			}
			every_owned_province = {
				limit = {
					is_core = REB
				}
				cede_province = REB
			}			
		}	
	}
}
