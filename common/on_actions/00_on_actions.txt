#When adding effects directly in on_actions always consider if it would be best to do so through a scripted effect. on_actions with a lot of script in them are harder to get an overview of.
#meaningless comment
# Anbennar Added Stuff
# anbennar_setup.1
# Commented a lot of stuff
# Stuff that prob shouldnt be commented -> muslim school events

# country
on_startup = {
	########################################################################################
	# fires on every game load (including loading saves!)                                  #
	# if you want event to fire in only 1444, check if it's 1444 or make it fire_only_once #
	########################################################################################

	startup_1444_effects = yes

	events = {
	
		# muslim_school_events.20 #Pick School
		high_philosophy_events.0
		sarhalevents.2

		#Anbennar
		lilac_wars.1
		lilac_wars.2
		#lilac_wars.1c
		#initialization.1
		centaur_nomad.100
		race_setup_events.7		# set up <race>_present prov flags and majorities for uncolonised provinces
		anbennar_setup.1		#Sets up Monstrous Opinions
		anbennar_setup.2		#Sets up Lilac Wars Parties
		#anbennar_setup.3		#Sets up discovered regions #### Heavy event, might need to be broken down with the addition of new province/country if Black Screen Crash at startup ######
		anbennar_setup.4		#Pragmatic Sanction
		anbennar_setup.6		#Mage Organization Setup
		anbennar_setup.11		#Adventurer Organization Setup
		anbennar_setup.7		#Evil/Witch King opinions
		anbennar_setup.9		#Global Setup for Racial Admin Mil #### Heavy event, might need to be broken down with the addition of new province/country if Black Screen Crash at startup ######
		anbennar_setup.10		#Sets up Greentide Adventurer opinion
		anbennar_setup.12
		anbennar_setup.13		#Adds a hacky delay to prevent existing adventurers colonizing straight away
		anbennar_setup.21		#Achievement setups
		anbennar_setup.22		#Kills starting units to make adjustments to certain countries' starting army/navy compositions
		#estate_organization.1		#Give unassigned countries appropriate modifier - does anbennar_setup.6 for rest of game
		#kobold_events.1 		#Sets up for kobolds
		diggy.108				#Dwarovar Claimer event
		diggy.110				#Dwarovar setup event
		#deepwoods.100			#Deepwoods setup - this caused black screen crash and is redundant as other anbennar_setup.3 does it
		verkalgulan_events.1		#Verkal Gulan setup
		#vegan.101				#Setup abundant wood in deepwoods
		rahenraj.0				#Setup for the Raj
		jaddari_missions.1000	#AI boost for Jaddari
		centaur.3				#Horde modifier for centaur
		ogre.1					#Adds Reign of Ziltagh to Maghargma
		ogre.2					#Sets up warring northern Fathide clan opinions
		ogre.3					#Sets up Ogre Monarch v Tribal opinion
		ogre.4					#Sets up Ogre Tribal v Monarch opinion
		magic_ruler.102			#Sets up magic for rulers with undefined skills
		# anbennar_setup.17		#exodus goblin invasion
		escann_intro.1          #Sword Covenant start
		escann_intro.2			#House of Riches start
		flavor_corintar.3		#Adds Lothane Bluetusk's Leadership to Corintar
		religious_leagues.10	#Starting religious peace
		flavor_neckcliffe.1		#Neckcliffe intro event and setting up the debuffs
		flavor_arverynn.0		#Arverynn intro event
		flavor_trompolere.0		#Trompolere intro event
		flavor_fadhevych.0		#Fadhevych intro event
		flavor_stanyrhrada.0	#Stanyrhrada intro event
		flavor_toarnen.1		#The Whitecliffs burghers uprising of 1356
		xhazobkult_events.0		#Xhazobkult setup
		bulwar_flavour.28		#Sets up Surani Refugees in Bulwar
		azka_evran.1			#Azka-Evran intro event
		one_xia.9				#Setup for the Xia
		flavor_jiantsiang.1		#jiantsiang setup
		flavor_nuugdan_tsarai.1					#Faceless Queen
		flavour_balrijin.29	#Balrijin-Lanjinhui favor/trust setup
		the_command.0			#The Great Command
		zokka_jaddari_war.1 #zokka starting event
		zokka_jaddari_war.14 #jaddari starting event
		spirits.001				#Sets up temple coverage
		treasurefleet.0			#Treasure Fleet Begin Cycle
		guhe.100 				#Guhe Setup Event
		kheionai.0				#Deathwinds Setup event
		flavor_ameion.1			#Ameion Laskaris intro
		flavor_chaingrasper.1	#Chaingrasper Dak intro
		flavour_tluukt.64		#Adds Rule of Tluukt to Tluukt
		flavour_haraagtseda.01  #Adds Haraagtseda intro
		flavor_gemradcurt.1 	#Gemradcurt Immariel Intro
		eneion_events.13        #Eneion Intro
		keyolion_events.2		#Keyolion Intro
		haraf_events.1			#Haraf House system Intro
		lake.0					#Lake Federation Cohesion Setup
		diggy_spawnable.5	#Blackbeard Cartel intro
		diggy_spawnable.6	#Asra Expedition intro
		diggy_spawnable.7	#Ruby Company intro
		diggy_spawnable.12	#Duran Blueshield intro
		diggy_spawnable.13	#Forgemaster Union intro
		flavor_skewered_drake.1 #temp skewered drake drakons
		flavour_xanzerbexis.1	#Xanzerbexis general
		simegasa_events.1 #simegasa intro
		lake.500				#Lake Federation Mages Intro
		taychendi.100 #sets starting taychendi rulers as generals
		flavor_magisterium.25
        flavor_zansap.4 # Zansap intro
		medasi.20 				#medasi start event
		amadia.1				#Amadian Damestear/Goods
		flavor_gawed.200 		#Gawed truce with nimscodd
		flavour_birsartanses.0 	#birzartanses setup
		flavour_azkabar.1 #azkabar into
		flavour_velsfadhecai.1 # Vels Fadhecai Introduction
		royakottar_events.0
		empkeios_events.1299 #Empkeios variable setup/update - will only fire if player-controlled
		flavour_ordstun.0 #Arg-Ordstun setup

		#Silver Families
		silver_families.1		#Silmuna
		silver_families.2		#Siloriel
		silver_families.3		#Silcalas
		silver_families.4		#Silistra
		silver_families.5		#Silnara
		silver_families.6		#Silebor
		silver_families.7		#Silurion
		silver_families.8		#Silgarion

		#anbennar_setup_player.1	#give magic org to player
		#anbennar_setup_player.2	#give racial admin mil to player

		#########     Racial Pop Stuff     ###########
		#race_setup_events.1		#Sets up Racial Tolerance Level
		#race_setup_events.2		#Ai only event - Affects how the ai uses the system
		#race_setup_events.4		#Add minorities to province / Culture Conversion -
		#race_setup_events.7		#Its 4 but for everyone
		#race_setup_events.9		#Expel/Purge opinions
		#########     Racial Pop Stuff     ###########

		#artifice
		anbennar_setup.18
		migration_force_settle.2
		new_sun_cult.7 			#NSC setup in case MoH is disabled
		flavor_honsai.1 #Ghostempror lifetime startup

		shatteredcrown.0 #lore disclaimer
		dwarven_pantheon.300 #rubyhold and ozovar starting event

		#khet civil war
		khet_civil_war.1
		khet_civil_war.2

		#aakhetist
		aakhetist.05

		#beast memory
		beast_memory.1

		anb_settings.1			#Settings - /!\ keep it at the bottom of the list
	}

	#########     Racial Pop Stuff     ###########
	country_event = { id = race_setup_events.1 days = 1 } # tolerance
	country_event = { id = race_setup_events.2 days = 1 } # ai tolerance
	country_event = { id = race_setup_events.16 days = 1 } # owned province majority setup, <race>_present flags and pop count

	#country_event = { id = race_setup_events.20 days = 1 } # not necessary for startup

	country_event = { id = race_setup_events.6 days = 1 } #On Culture Promote
	country_event = { id = racial_modifiers.7 days = 1 } #Save primary culture
	#########     Racial Pop Stuff     ###########

}

# country
on_religion_change = {
	on_religion_change_effect = yes
	on_religion_change_estate_privileges_effect = yes
	#judaism_on_religion_change_effect = yes

	if = { #Save the EoA if the emperor is force converted
		limit = {
			is_emperor = yes
			NOT = { religion_group = cannorian }
		}
		set_emperor = no
	}

	if = {
		limit = { 
			NOT = { religion = night_coven }
			NOT = { religion = shadow_pact }
			tag = S70
		}
		#remove night coven Reforms if you convert away
		remove_country_modifier = night_coven_reform_1_m
	}

	if = {
		limit = { 
			religion = rinta_seekers 
			NOT = { isolationism = 10 }
		}
		add_isolationism = 9
	}

	#removes corinite holy order upgrade modifiers
	if = {
		limit = {
			has_country_flag = upgraded_balgar
			NOT = { religion = corinite }	#this only needs to check when you convert away from Corinite
		}
		every_owned_province = { remove_province_modifier = corinite_balgar_upgraded }
	}
	if = {
		limit = {
			has_country_flag = upgraded_corin
			NOT = { religion = corinite }	#this only needs to check when you convert away from Corinite
		}
		every_owned_province = { remove_province_modifier = corinite_corin_upgraded }
	}
	if = {
		limit = {
			has_country_flag = upgraded_falah
			NOT = { religion = corinite }	#this only needs to check when you convert away from Corinite
		}
		every_owned_province = { remove_province_modifier = corinite_falah_upgraded }
	}
	if = {
		limit = {
			has_country_flag = upgraded_munas
			NOT = { religion = corinite }	#this only needs to check when you convert away from Corinite
		}
		every_owned_province = { remove_province_modifier = corinite_munas_upgraded }
	}
	if = {
		limit = {
			has_country_flag = upgraded_ryala
			NOT = { religion = corinite }	#this only needs to check when you convert away from Corinite
		}
		every_owned_province = { remove_province_modifier = corinite_ryala_upgraded }
	}

	#removes ravelian modifiers
	if = {
		limit = { NOT = { has_dlc = "Emperor" } }
		remove_country_modifier = first_council_harsh
		remove_country_modifier = first_council_conciliatory
		remove_country_modifier = second_council_harsh
		remove_country_modifier = second_council_conciliatory
		remove_country_modifier = third_council_harsh
		remove_country_modifier = third_council_conciliatory
		remove_country_modifier = fourth_council_harsh
		remove_country_modifier = fourth_council_conciliatory
		if = {
			limit = { religion = ravelian }
			if = {
				limit = { has_global_flag = first_council_harsh }
				add_country_modifier = {
					name = first_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = first_council_conciliatory }
				add_country_modifier = {
					name = first_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = second_council_harsh }
				add_country_modifier = {
					name = second_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = second_council_conciliatory }
				add_country_modifier = {
					name = second_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = third_council_harsh }
				add_country_modifier = {
					name = third_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = third_council_conciliatory }
				add_country_modifier = {
					name = third_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = fourth_council_harsh }
				add_country_modifier = {
					name = fourth_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = fourth_council_conciliatory }
				add_country_modifier = {
					name = fourth_council_conciliatory
					duration = -1
				}
			}
		}
	}

	#remove xhazobkult modifier
	if = {
		limit = {
			NOT = { religion = xhazobkult } 
			any_owned_province = {
				OR = {
					has_province_modifier = xhazobkult_gnollish_province
					has_province_modifier = xhazobkult_non_gnollish_province
				}
			}
		}
		every_owned_province = {
			remove_province_modifier = xhazobkult_gnollish_province
			remove_province_modifier = xhazobkult_non_gnollish_province
		}
	}

	#move aakhet if the host converts
	if = {
		limit = { has_country_flag = current_aakhet_host }
		aakhet_movement = yes
	}
	#reset approval if you convert away
	if = {
		limit = { NOT = { religion = aakhetist } check_variable = { aakhet_approval = 1 } }
		set_variable = { aakhet_approval = 0 }
	}

	if = {
		limit = {
			religion = corinite
		}
		set_country_flag = converted_to_corinite
	}
	if = {
		limit = {
			religion = ravelian
		}
		set_country_flag = converted_to_ravelian
	}
	if = {
		limit = {
			religion = suhans_praxis
		}
		set_country_flag = converted_to_suhans_praxis
	}
	if = {
		limit = { has_country_modifier = bav_religious_mandate_mod }
		remove_country_modifier = bav_religious_mandate_mod
	}
	add_country_modifier = {
		name = recently_changed_religion_dummy
		duration = 10
		hidden = yes
	}

	#Mother Akasik mountain count up on conversion
	if = {
		limit = {
			owns = 383
			religion = mother_akasik
			383 = { has_owner_religion = yes }
		}
		country_event = { id = mother_akasik.3 }
		383 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 390
			religion = mother_akasik
			390 = { has_owner_religion = yes }
		}
		390 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 392
			religion = mother_akasik
			392 = { has_owner_religion = yes }
		}
		392 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 395
			religion = mother_akasik
			395 = { has_owner_religion = yes }
		}
		395 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 396
			religion = mother_akasik
			396 = { has_owner_religion = yes }
		}
		396 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 397
			religion = mother_akasik
			397 = { has_owner_religion = yes }
		}
		397 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 398
			religion = mother_akasik
			398 = { has_owner_religion = yes }
		}
		398 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 401
			religion = mother_akasik
			401 = { has_owner_religion = yes }
		}
		401 = {
			add_permanent_province_modifier = {
				name = akasik_ascetic_cult
				duration = -1
			}
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	#Mother Akasik mountain count down on conversion
	if = {
		limit = {
			owns = 383
			NOT = { religion = mother_akasik }
			383 = { has_province_modifier = akasik_ascetic_cult }
		}
		383 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 390
			NOT = { religion = mother_akasik }
			390 = { has_province_modifier = akasik_ascetic_cult }
		}
		390 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 392
			NOT = { religion = mother_akasik }
			392 = { has_province_modifier = akasik_ascetic_cult }
		}
		392 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 395
			NOT = { religion = mother_akasik }
			395 = { has_province_modifier = akasik_ascetic_cult }
		}
		395 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 396
			NOT = { religion = mother_akasik }
			396 = { has_province_modifier = akasik_ascetic_cult }
		}
		396 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 397
			NOT = { religion = mother_akasik }
			397 = { has_province_modifier = akasik_ascetic_cult }
		}
		397 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 398
			NOT = { religion = mother_akasik }
			398 = { has_province_modifier = akasik_ascetic_cult }
		}
		398 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	if = {
		limit = {
			owns = 401
			NOT = { religion = mother_akasik }
			401 = { has_province_modifier = akasik_ascetic_cult }
		}
		401 = { remove_province_modifier = akasik_ascetic_cult }
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}

	#Mother Akasik normal conversion
	if = {
		limit = {
			religion = mother_akasik
			NOT = { owns = 383 }
			NOT = { owns = 390 }
			NOT = { owns = 392 }
			NOT = { owns = 395 }
			NOT = { owns = 396 }
			NOT = { owns = 397 }
			NOT = { owns = 398 }
			NOT = { owns = 401 }
		}
		country_event = { id = mother_akasik.3 }
	}

	#Converting into Ynnic religion
	if = {
		limit = {
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		ynnic_setup_effect = yes
		if = {
			limit = {
				NOT = { has_country_flag = ynn_river_worship_flag }
			}
			set_country_flag = stuir_balia_visible	#Get Stuir Balia notification upon converting to YRW
		}
		set_country_flag = ynn_river_worship_flag	#add a tracker for cleanup when converting out
		country_event = { id = ynn_zodiac.3 }	#Ynn Worship deity set

		if = {
			limit = {
				has_regency = no
				NOT = {
					has_ruler_modifier = ynn_zodiac_ruler_1
					has_ruler_modifier = ynn_zodiac_ruler_2
					has_ruler_modifier = ynn_zodiac_ruler_3
					has_ruler_modifier = ynn_zodiac_ruler_4
					has_ruler_modifier = ynn_zodiac_ruler_5
					has_ruler_modifier = ynn_zodiac_ruler_6
					has_ruler_modifier = ynn_zodiac_ruler_7
					has_ruler_modifier = ynn_zodiac_ruler_8
					has_ruler_modifier = ynn_zodiac_ruler_9
					has_ruler_modifier = ynn_zodiac_ruler_10
					has_ruler_modifier = ynn_zodiac_ruler_11
					has_ruler_modifier = ynn_zodiac_ruler_12
					has_ruler_modifier = ynn_zodiac_ruler_13
					has_ruler_modifier = ynn_zodiac_ruler_14
					has_ruler_modifier = ynn_zodiac_ruler_15
					has_ruler_modifier = ynn_zodiac_ruler_16
				}
			}
			ruler_ynn_zodiac = yes
		}
		else_if = {
			limit = {
				has_regency = yes
				NOT = {
					has_ruler_modifier = ynn_zodiac_heir_1
					has_ruler_modifier = ynn_zodiac_heir_2
					has_ruler_modifier = ynn_zodiac_heir_3
					has_ruler_modifier = ynn_zodiac_heir_4
					has_ruler_modifier = ynn_zodiac_heir_5
					has_ruler_modifier = ynn_zodiac_heir_6
					has_ruler_modifier = ynn_zodiac_heir_7
					has_ruler_modifier = ynn_zodiac_heir_8
					has_ruler_modifier = ynn_zodiac_heir_9
					has_ruler_modifier = ynn_zodiac_heir_10
					has_ruler_modifier = ynn_zodiac_heir_11
					has_ruler_modifier = ynn_zodiac_heir_12
					has_ruler_modifier = ynn_zodiac_heir_13
					has_ruler_modifier = ynn_zodiac_heir_14
					has_ruler_modifier = ynn_zodiac_heir_15
					has_ruler_modifier = ynn_zodiac_heir_16
				}
			}
			heir_ynn_zodiac = yes
		}

		cannorian_in_ynn_rename = yes
	}
	#Reforming OR converting out of Ynn River Worship
	if = {
		limit = {
			has_country_flag = ynn_river_worship_flag
			NOT = {
				religion = ynn_river_worship
			}
		}
		if = {
			limit = {
				tag = G32
			}
			every_subject_country = {
				country_event = { id = flavor_malacnar.120 }	#Malacnar companions turn into vassal upon reformation / religion switch
			}
		}
		country_event = { id = flavor_arverynn.15 } #Hey we can get rid of those modifiers now that we can actually look at the government tab

		#Converting out of Ynnnic Religion entirely
		if = {
			limit = {
				NOT = { religion = ynn_river_reformed }
			}
			remove_country_modifier = ynn_dark_ages			#Ynn zodiac and other modifiers get cleared upon leaving religion. ynn_diplo and Iosahar system is abandoned through a decision
			clr_country_flag = ynn_river_worship_flag
			clear_ynn_zodiacs_effect = yes
			clear_ynn_debate_flags_effect = yes
			clear_ynn_reform_bonuses_effect = yes
			if = {
				limit = {	#Ynn River vassals revolt as you convert away
					ynnic_iosahar = 1
				}
				random_subject_country = {
					limit = {
						NOT = { is_companion = yes }
						is_subject_of_type = ynnic_iosahar
						liberty_desire = 30
						OR = {
							religion = ynn_river_worship
							religion = ynn_river_reformed
						}
						all_known_country = {	#Ensures it's the strongest willing Iosahar who rises up
							NOT = {
								AND = {
									NOT = { is_companion = yes }
									is_subject_of_type = ynnic_iosahar
									is_subject_of = ROOT
									PREV = { NOT = { total_development = PREV } }
									liberty_desire = 30
									OR = {
										religion = ynn_river_worship
										religion = ynn_river_reformed
									}
								}
							}
						}
					}
					set_country_flag = ynn_civil_war_religion
					country_event = { id = ynn_events.7 }
				}
			}
		}

		cannorian_in_ynn_rename = yes
	}
	if = {
		limit = {
			NOT = { religion = bulgu_orazan }
			has_country_flag = bulgu_orazan_flag
		}
		country_event = { id = bulgu_orazan.14 }
	}

	if = {
		limit = {
			tag = J47
			NOT = { religion = feast_of_the_gods }
		}
		country_event = { id = ogre.31 } #Gorger Lord positioning himself as the voice of the gods
	}

	update_nsc_level_secondary_effects = yes

	events = {
		# muslim_school_events.20 #Pick School
		high_philosophy_events.0
		sarhalevents.2
		propagate_religion_events.7 #Propagated Country is now Muslim
		new_sun_cult.10 #Getting back mage estate if NSC and not human anymore
	}

	#Converting to kheionism
	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}

	#Converting from kheionism
	if = {
		limit = {
			religion = kheionism
			OR = {
				has_country_flag = kheio_adm
				has_country_flag = kheio_dip
				has_country_flag = kheio_mil
				has_country_flag = kheio_laskaris
			}
		}
		clr_country_flag = kheio_adm
		clr_country_flag = kheio_dip
		clr_country_flag = kheio_mil
		clr_country_flag = kheio_laskaris
	}
	
	# xiaken lose their reform and become independent when religion changes
	if = {
	    limit = {
	        is_subject_of_type = daimyo_xiaken_vassal
	        NOT = { religion = righteous_path }
	    }
	    
	    #xiaken is removed instantly because RP is one of the conditions for it
	    #remove_government_reform = xiaken
	    grant_independence = yes
	}

	if = {
		limit = { 
			NOT = { tag = H66 } #Jaherian Exemplars
			NOT = { tag = H67 } #Rezankand
			OR = {
				religion_group = bulwari
				has_country_flag = updating_isolationism_window
			}
			government = theocracy
			ai = yes
		}
		add_government_reform = bulwari_temple_reform
		add_government_power = { mechanic_type = vacyntassi_temple_authority power_type = vacytassi_temple_authority_power value = 40 }
	}
	#Nakavy Avo shrine reset
	shrine_cleanup_effect = yes

	#khet mandate ahati privilege
	if = {
		limit = {
			is_emperor_of_china = yes
			empire_of_china_reform_passed = establish_ahati_reform
		}
		if = {
			limit = { religion_group = khetist NOT = { has_estate_privilege = estate_ahati_khetist_recruitment } }
			set_estate_privilege = estate_ahati_khetist_recruitment
		}
		else_if = {
			limit = { NOT = { religion_group = khetist has_estate_privilege = estate_ahati_non_khet_steward } }
			set_estate_privilege = estate_ahati_non_khet_steward
		}
	}
	
	#updates "Religion Triumphant" HRE modifiers
	country_event = { id = religious_leagues.11 }

	#Khet mandate opinion modifier for enforcing religion
	if = {
		limit = { 
			is_subject_of_type = tributary_state 
			overlord = { religion = ROOT }
		}
		add_opinion = { who = overlord modifier = khet_forced_religion }
	}

	#losing kuiika MT modifier for becoming aakhetist since this modifier is about beating up aakhetists
	if = {
		limit = { 
			religion = aakhetist
			has_country_modifier = kuiika_tale_of_tarnished_bronze
		}
		remove_country_modifier = kuiika_tale_of_tarnished_bronze
	}

}

# country.
on_secondary_religion_change = {
	# Done from code: add_prestige = -50 (Define: CHANGE_SECONDARY_PRESTIGE_HIT)
	on_secondary_religion_change_estate_privileges_effect = yes
	every_owned_province = {
		limit = { has_province_modifier = tengri_monastic_order }
		remove_province_modifier = tengri_monastic_order
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_shiite_settled_in_capital }
		remove_province_modifier = tengri_shiite_settled_in_capital
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_insincere_leadership }
		remove_province_modifier = tengri_insincere_leadership
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_religious_influx }
		remove_province_modifier = tengri_religious_influx
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_ruler_questioned }
		remove_province_modifier = tengri_ruler_questioned
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_strengthened_local_clans }
		remove_province_modifier = tengri_strengthened_local_clans
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_growing_cities }
		remove_province_modifier = tengri_growing_cities
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_christian_mission }
		remove_province_modifier = tengri_christian_mission
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_unchristian_values }
		remove_province_modifier = tengri_unchristian_values
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_monastic_order }
		remove_province_modifier = tengri_monastic_order
	}
	every_owned_province = {
		limit = { has_province_modifier = hindufication }
		remove_province_modifier = hindufication
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_influx_of_monks }
		remove_province_modifier = tengri_influx_of_monks
	}
	every_owned_province = {
		limit = { has_province_modifier = tengri_abandoning_the_old_ways }
		remove_province_modifier = tengri_abandoning_the_old_ways
	}
	remove_country_modifier = tengri_devout_muslim
	remove_country_modifier = tengri_confucian_elites_alienated
	remove_country_modifier = tengri_confucian_titles
	remove_country_modifier = tengri_traditionalists_strengthened
	remove_country_modifier = tengri_confucian_nobles
	remove_country_modifier = tengri_pali_legal_traditions
	remove_country_modifier = tengri_religious_pilgrimages
	remove_country_modifier = tengri_monks_in_capital
	remove_country_modifier = tengri_influx_of_monks
	remove_country_modifier = tengri_shiite_immigration
	remove_country_modifier = support_of_the_khojas
	remove_country_modifier = black_shamanism_modifier
	remove_country_modifier = tengri_animist_pantheon
	remove_country_modifier = zoroastrian_traders
	remove_country_modifier = spread_of_tengri_tea_ceremony
	remove_country_modifier = tengri_tea_ceremony
	remove_country_modifier = tengri_japanese_swordsmithing
	remove_country_modifier = tengri_bow_and_arrow_defended
	remove_country_modifier = tengri_support_of_shamans
	remove_country_modifier = tengri_hindu_conflict
	remove_country_modifier = tengri_hindu_syncretism
	remove_country_modifier = tengri_devout_christian_ruler
	remove_country_modifier = tengri_personal_confessor
	remove_country_modifier = tengri_confucian_administrators
	remove_country_modifier = tengri_traditional_elites_alienated
	remove_country_modifier = tengri_jihad
	remove_country_modifier = tengri_stood_up_for_yassa
	remove_country_modifier = tengri_sufi_teacher
	remove_country_modifier = tengri_qadi
	remove_country_modifier = tengri_religious_influx
	remove_country_modifier = tengri_ibadi_scholars
	remove_country_modifier = tengri_clergy_conflicts
	remove_country_modifier = tengri_shamans_spurned
	clr_country_flag = khojas_established
	clr_country_flag = tengri_christian_devout_court
	clr_ruler_flag = tengri_muslim_ruler_questioned
	if = {
		limit = {
			check_variable = { which = khojas_retained value = 1 }
		}
		set_variable = {
			which = khojas_retained value = 0
		}
	}
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war

	events = {
		flavour_brelar.13		# Boats revolt
	}
}

# country
on_colonial_liberation = {
	if = {
		limit = {
			NOT = { has_country_flag = old_world_to_new_world_flag }
		}
		country_event = { id = colonial_nation.90 days = 1 }
	}
}

# country
on_colonial_reintegration = {
	events = {
		colonial_nation.91
	}
}

# country
on_peace_actor = {
	events = {
		# usa_dlc.36			# Evacuation Day
		deepwoods.12			# Give wood elf territory back
		flavor_ameion.47		# Orenkoraim Defeated
		flavor_krakazol.42		#krakazol ale war
	}
}

# country
on_peace_recipient = {
	events = {
		flavor_krakazol.42		#krakazol ale war
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	#FROM = { country_event = { id = flavor_cri.6 } }
	if = {
		limit = {
			has_country_flag = can_gain_legendary_pirates_flag
			NOT = { has_ruler_flag = historical_pirate }
			has_government_attribute = is_pirate_republic_reform
			FROM = { total_development = ROOT }
		}
		# random = { #Anbennar: commented cause we don't have the event
			# chance = 5
			# country_event = {
				# id = pirates.25
			# }
		# }
	}
	ROOT = { country_event = { id = tributary_events.32 } }
	ROOT = { country_event = { id = xhazobkult_events.2000 } }
	ROOT = { country_event = { id = anb_miscevents.21 } } #Removing corinite buff during league war
	ROOT = { country_event = { id = flavour_plumstead.28 } }

	if = {
		limit = {
			ROOT = {
				OR = {
					has_country_flag = leader_illegitimate
					has_country_flag = leader_legitimate
				}
			}
			FROM = {
				OR = {
					has_country_flag = leader_illegitimate
					has_country_flag = leader_legitimate
				}
			}
		}
		ROOT = { country_event = { id = goldisland.13 } }
	}

	centaur_won_war_count = yes

	if = {
		limit = { tag = Z43 has_ruler_flag = sicrheior_son }
		change_variable = { nbWarWon = 1 }
	}

	xia_won_war_count = yes
	G35_won_war_count = yes
	vf_won_war_count = yes

	if = {	#temple plunder reparations
		limit = {
			has_country_flag = temple_plundered_tag@ROOT
		}
		country_event = {
			id = spirits.422
			days = 5
		}
	}
	FROM = {
		if = {
			limit = {
				has_country_flag = temple_plundered_tag@THIS
			}
			country_event = {
				id = spirits.422
				days = 5
			}
		}
	}


	if = { #Turning prabhia/senaptia into xiakens after vassalizing a country
        limit = { ROOT = { has_reform = wulin } }
        ROOT = {
            every_subject_country = {
                limit = {
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = great_daimyo_vassal
					}
				}
				grant_independence = yes
                ROOT = { create_subject = { subject_type = daimyo_xiaken_vassal subject = PREV } }
            }
        }
    }

	if = { #Turning prabhia/senaptia into regular vassal after transfer vassal
        limit = {
			ROOT = {
				NOT = { has_reform = wulin }
				NOT = { has_government_attribute = is_raja}
				any_subject_country = {
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = great_daimyo_vassal
					}
				}
			}
		}
        ROOT = {
            every_subject_country = {
                limit = {
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = great_daimyo_vassal
					}
				}
				grant_independence = yes
                ROOT = { create_subject = { subject_type = vassal subject = PREV } }
            }
        }
    }

	# federation_religious_war = yes

	# Adenica wars won counter
	if = {
		limit = {
			tag = B58
		}
		change_variable = { adenicaWarsWon = 1 }
		if = {
			limit = {
				NOT = { has_matching_religion = FROM }
				religion = regent_court
			}
			change_variable = { adenicaReligiousWarsWon = 1 }
		}
		if = {
			limit = {
				FROM = {
					is_force_converted = yes
				}
				religion = regent_court
			}
			change_variable = { adenicaReligiousWarsWon = 1 }
		}
		if = {
			limit = {
				FROM = {
					culture_group = orcish
				}
			}
			change_variable = { adenicaOrcWarsWon = 1 }
		}
	}

	#Ravenmarch Monstrous Wars
	if = {
		limit = { tag = B48 }
		if = {
			limit = {
				FROM = {
					monstrous_culture = yes
				}
			}
			change_variable = { nbRavenWon = 1 }
		}
	}

	# Castanor wars won against beasts & evil counter
	if = {
		limit = {
			tag = B32
		}
		if = {
			limit = {
				FROM = {
					OR = {
						monstrous_culture = yes
						is_evil = yes
					}
				}
			}
			change_variable = { castanorWarsWonAgainstBeastsBarbarismEvil = 1 }
		}
	}

	#Raja winning war
	if = {
		limit = { has_government_attribute = is_raja }
		FROM = { raj_cohesion_change = { amount = 10 non_monthly = yes } }
		every_subject_country = {
			# make sure all subjects of the Raja get truces with the party.
			if = {
				limit = {
					NOT = { FROM = { is_subject_of = ROOT } }	# make sure FROM is external party
					NOT = { truce_with = FROM } 			# check for truces
				}
				add_truce_with = FROM						# add truce with external party
				FROM = { add_truce_with = PREV }			# add truce with subject
			}
			if = {
				limit = { is_subject_of_type = daimyo_vassal }
				if = {
					limit = { NOT = { government = monarchy } }
					change_government = monarchy
				}
				add_government_reform = prabhi_reform
				country_event = { id = rahenraj.10 days = 35 }	#adds the raj cohesion privilege
			}
		}
	}

	if = {
		limit = {
			is_part_of_hre = yes
			FROM  = { is_part_of_hre = yes }
		}
		ROOT = { save_global_event_target_as = hre_winner }
		FROM = { save_global_event_target_as = hre_loser }
		random_known_country = {
			limit = {
				has_reform = free_city
				NOT = {
					prestige = 40
				}
				NOT = {
					has_country_modifier = fc_treatyconference_timer
				}
			}
			add_country_modifier = {
				name = fc_treatyconference_timer
				duration = 3650
				hidden = yes
			}
			country_event = {
				id = free_cities.7
				days = 7
			}
		}
	}

	#Keyolion Independence war
	if = {
		limit = {
			OR = {
				#Keyolion has won the war
				AND = {
					tag = G58
					has_country_flag = independence_war_started_flag
					FROM = {
						tag = G47
					}
				}
				#Keyolion has lost the war
				AND = {
					FROM = {
						tag = G58
						has_country_flag = independence_war_started_flag
					}
					tag = G47
				}
			}
		}
		G58 = {
			country_event = {
				id = keyolion_events.200
			}
		}
	}

	# G53 - Empkeios Independence war - adapted from Keyolion's
	if = {
		limit = {
			OR = {
				#Empkeios has won the war
				AND = {
					tag = G53
					has_country_flag = independence_war_started_flag
					FROM = {
						tag = G51
					}
				}
				#Empkeios has lost the war
				AND = {
					FROM = {
						tag = G53
						has_country_flag = independence_war_started_flag
					}
					tag = G51
				}
			}
		}
		G53 = {
			country_event = {
				id = empkeios_events.4301
			}
		}
	}

	# G53 - Empkeios Trading at a Crossroads
	if = {
		limit = {
			has_country_flag = G53_Opposed_Ultimatum
			AND = {
				tag = G53
				FROM = {
					tag = ROOT
				}
			}
		}
		clr_country_flag = G53_Opposed_Ultimatum
		remove_country_modifier = G53_Isolationism
		add_country_modifier = {
			name = G53_FreeTrade
			duration = 18250
		}
	}

	#Sun elf winning war
	if = {
		limit = {
			is_chosen_country = yes
			religion = bulwari_sun_cult
		}
		clr_country_flag = nsc_lost_war
	}

	#Bim Lau entombment of enemy general
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
		}
		random_list = {
			10 = { country_event = { id = bim_lau_flavour.6 days = 15 } }
			90 = { }
		}
	}

	# if = {
		# limit = {
			# tag = MLO
			# NOT = { has_country_flag = emp_mlo_won_war_with_swiss_mercs }
			# any_hired_mercenary_company = {
				# home_province = {
					# OR = {
						# area = switzerland_area
						# area = romandie_area
					# }
				# }
			# }
		# }
		# set_country_flag = emp_mlo_won_war_with_swiss_mercs
	# }

	# if = {
		# limit = {
			# is_hiring_condottiere_from = SWI
		# }
		# SWI = { set_country_flag = won_condottiere_war }
		# if = {
			# limit = {
				# tag = PAP
			# }
			# SWI = {
				# set_country_flag = hired_to_pope
			# }
		# }
	# }

	#Seinathil War Won Count

	if = {
		limit = {
			tag = A90
			OR = {
				has_country_modifier = A90_bardic_influence_1
				has_country_modifier = A90_bardic_influence_2
				has_country_modifier = A90_bardic_influence_3
				has_country_modifier = A90_bardic_influence_4
				has_country_modifier = A90_bardic_influence_5
			}
		}
		change_variable = {
			which = seinathilBardicAlliesWarWon
			value = 1
		}
	}

	#Seinathil Bardic Allies
	if = {
		limit = {
			OR = {
				has_country_flag = A90_bardic_ally
				tag = A90
			}
			NOT = {
				is_in_war = {
					participants = A90
				}
			}
		}
		every_country = {
			remove_country_modifier = A90_bardic_influence_1
			remove_country_modifier = A90_bardic_influence_2
			remove_country_modifier = A90_bardic_influence_3
			remove_country_modifier = A90_bardic_influence_4
			remove_country_modifier = A90_bardic_influence_5
		}
	}

	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 20 }
	}

	if = {
		limit = {
			tag = Z99
			has_country_flag = black_overseer_invasion
			any_known_country = {
				if = {
					limit = { war_with = Z99 }
					NOT = {
						any_owned_province = {
							OR = {
								region = kheterata_region
								region = akasik_region
							}
						}
					}
				}
			}
		}
		clr_country_flag = black_overseer_invasion
		remove_country_modifier = black_overseer_1
		remove_country_modifier = black_overseer_2
		remove_country_modifier = black_overseer_3
		remove_country_modifier = black_overseer_4
		remove_country_modifier = black_overseer_5
		remove_country_modifier = black_overseer_6
	}

	#Raj internal wars
	if = {
		limit = {
			OR = {
				has_government_attribute = is_raja
				overlord = { has_government_attribute = is_raja }
			}
		}
		raj_calc_internal_wars = yes
	}

	# Its a Feiten war counter cause why not
	if = {
		limit = {
			if = {
				limit = { has_saved_global_event_target = feiten_or_was_feiten_target }
				tag = event_target:feiten_or_was_feiten_target
			}
			mission_completed = feiten_developing_an_air_doctrine
		}
		change_variable = { which = feiten_wars_won value = 1 }
	}

	#Zongji Eunuch war
	if = {
        limit = {
            tag = Y25
            NOT = { has_country_flag = Y25_beaten_eunuch }
            FROM = {
                OR = {
                    has_reform = eunuch_republic
                    has_reform = eunuch_dynasty_reform
                }
            }
        }
        set_country_flag = Y25_beaten_eunuch
    }

	if = { #Bulwar incident end
		limit = {
			tag = F39
			FROM = { tag = F28 }
		}
		country_event = { id = flavour_bulwar_tag.15 }
	}

	if = {
		limit = {
			tag = F46 #Jaddari
			F45 = { vassal_of = F46 } #Jaddari
			FROM = {
				tag = F25
			}
		}
		country_event = { id = zokka_jaddari_war.13 }
	}
	
	remove_country_modifier = anb_defense_of_empire
	
	# Zansap-Tluukt War
	if = {
        limit = {
            OR = {
                AND = {
                    ROOT = {
                        tag = F43
                        has_country_flag = zansap_first_crusade
                    }
                    FROM = {
                        tag = F28
                    }
                }
                AND = {
                    ROOT = {
                        tag = F28
                    }
                    FROM = {
                        tag = F43
                        has_country_flag = zansap_first_crusade
                    }
                }
            }
        }
        F43 = {
            clr_country_flag = zansap_first_crusade
        }
    }
	
	if = {
		limit = {
			ai = no
			tag = Y00 #Sunrise Empire
			any_owned_province = {
				OR = {
					culture_group = wuhyun
					culture = honourbound_harimari
				}
				continent = asia
			}
		}
		country_event = { id = azkare.240 days = 7 }
	} # die wuhyun die
	
	if = { #Won an Absolute Domination CB, get your triumph
		limit = { 
			has_country_flag = command_leadership_flag_@FROM
		}
		clr_country_flag = command_leadership_flag_@FROM
		country_event = { id = the_command.56 } 
	}

	#Ends Wars with Allies of an Iosahar when peacing out their overlord
	if = {
		limit = {
			# winner = root, loser = from
			FROM = {
				any_subject_country = {
					is_subject_of_type = ynnic_iosahar
					any_ally = {
						war_with = ROOT
					}
				}
			}
		}
		FROM = {
			every_subject_country = {
				limit = {
					is_subject_of_type = ynnic_iosahar
				}
				every_ally = {
					limit = {
						war_with = ROOT 
					}
					white_peace = ROOT
				}
			}
		}
	}

	#Brelar
	g27_civil_war_end_effect = yes
	#Effelai
	if = {
		limit = {
			has_country_flag = effelai_attuned_path
		}
		country_event = {
			id = effelai_bloom.799
			days = 5
		}
	}
	if = {
		limit = {
			tag = R86
			mission_completed = Y26_fading_is_the_harvest_moon
			any_owned_province = {
				OR = { trade_goods = grain trade_goods = livestock }
				NOT = {
					has_province_modifier = Y26_land_redistribution
					has_province_flag = Y26_noble_autonomy
					has_province_flag = Y26_noble_rebellion
				}
			}
		}
		every_owned_province = {
			limit = {
				OR = { trade_goods = grain trade_goods = livestock }
				NOT = {
					has_province_modifier = Y26_land_redistribution
					has_province_flag = Y26_noble_autonomy
				}
			}
			set_province_flag = Y26_noble_rebellion
		}
		country_event = { id = flavour_yinquan.48 days = 30 }
	}

	update_artifice_points = yes #needs to be last
}

# country
# root = winning country, from = loser country
on_main_war_won = {
	on_main_war_won_effect = yes #1.35
}

# country
# root = winning country, from = loser country
on_separate_war_won = {
}

# country
# root = loser country, from = winner country
on_war_lost = {
	#ROOT = { country_event = { id = flavor_cri.6 } }
	ROOT = { country_event = { id = tributary_events.32 } }
	ROOT = { country_event = { id = rahenraj.1000 } }
	ROOT = { country_event = { id = xhazobkult_events.2000 } }
	ROOT = { country_event = { id = anb_miscevents.21 } } #Removing corinite buff during league war

	if = {
        limit = {
            government = republic
            is_lesser_in_union = yes
		}
		change_government_to_monarchy = yes
    }
	#Anbennar - we have no shadow kingdom
	# if = {
		# limit = {
			# FROM = { is_emperor = yes }
			# NOT = { has_country_flag = reined_in_for_shadow_kingdom }
			# NOT = { has_global_flag = italians_leave_hre }
			# is_emperor = no
			# is_part_of_hre = yes
			# OR = {
				# capital_scope = { region = italy_region }
				# AND = {
					# culture_group = latin
					# any_owned_province = {
						# region = italy_region
					# }
				# }
			# }
		# }
		# set_country_flag = reined_in_for_shadow_kingdom
	# }
	add_country_modifier = {
		name = just_lost_war_timer
		duration = 10
		hidden = yes
	}
	ROOT = {
		country_event = { id = anbennar_setup.14 }
	}
	if = {
		limit = {
			is_subject = yes
		}
		country_event = {
			id = diggy.122
		}
	}

	#Raja losing war
	if = {
		limit = { has_government_attribute = is_raja }
		FROM = { raj_cohesion_change = { amount = -10 non_monthly = yes } }

		if = {
			# make sure all subjects of the Raja get truces with the party.
			limit = { NOT = { FROM = { is_subject_of = ROOT } } }		# make sure FROM is external party

			every_subject_country = {
				if = {
					limit = {
						NOT = { truce_with = FROM } 			# check for truces
					}
					add_truce_with = FROM						# add truce with external party
					FROM = { add_truce_with = PREV }			# add truce with subject
				}
			}
		}
	}

	#Sun elf losing war
	if = {
		limit = {
			is_chosen_country = yes
			religion = bulwari_sun_cult
		}
		set_country_flag = nsc_lost_war
	}

	#Seinathil Bardic Allies
	if = {
		limit = {
			OR = {
				has_country_flag = A90_bardic_ally
				tag = A90
			}
			NOT = {
				is_in_war = {
					participants = A90
				}
			}
		}
		every_country = {
			remove_country_modifier = A90_bardic_influence_1
			remove_country_modifier = A90_bardic_influence_2
			remove_country_modifier = A90_bardic_influence_3
			remove_country_modifier = A90_bardic_influence_4
			remove_country_modifier = A90_bardic_influence_5
		}
	}

	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 20 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}

	if = {
		limit = {
			tag = Z99
			has_country_flag = black_overseer_invasion
			any_known_country = {
				if = {
					limit = { war_with = Z99 }
					NOT = {
						any_owned_province = {
							OR = {
								region = kheterata_region
								region = akasik_region
							}
						}
					}
				}
			}
		}
		clr_country_flag = black_overseer_invasion
		remove_country_modifier = black_overseer_1
		remove_country_modifier = black_overseer_2
		remove_country_modifier = black_overseer_3
		remove_country_modifier = black_overseer_4
		remove_country_modifier = black_overseer_5
		remove_country_modifier = black_overseer_6
	}

	if = {    #Clears alliances for Ynnic Overlord
        limit = {
            FROM = {                             # if the winner has,
                ynnic_iosahar = 1                    # 1+ ynnic iosahar,
                has_country_modifier = ynn_diplo    # ynn_diplo mod,
                num_of_allies = 1                    # 1+ allies,
            }                                    # then do:
        }
		every_known_country = {
			limit = {
				capital_scope = { superregion = ynn_superregion } 
				alliance_with = ROOT
			}
			ROOT = {
				break_alliance = PREV
			}
		}
        #ROOT = {
			#if = {
                #limit = {                            # if loser is iosahar of winner,
                    #is_subject_of = FROM
                    #is_subject_of_type = ynnic_iosahar
                #}                                    # then do:
				#create_subject = {                        # turn winner into vassal of loser (switcheroo)
					#subject_type = vassal
					#subject = FROM
				#}
				#FROM = {
					#grant_independence = yes            # turn winner independent again
					#create_subject = {                    # turn loser into iosahar of winner
						#subject_type = ynnic_iosahar
						#subject = ROOT
					#}
				#}
			#}
        #}
    }

	if = { #The Command is Losing Ground I
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 36
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.11 days = 1 } }
	}

	if = { #The Command is Losing Ground II
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 24
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.12 days = 1 } } #Tiltaghar
	}

	if = { #The Command is Losing Ground III
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_owned_provinces_with = {
					OR = {
						superregion = rahen_superregion
						superregion = yanshen_superregion
						superregion = south_haless_superregion
					}
					value = 13
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.13 days = 1 } } #Tiltaghar
	}

	if = { #Aftermath of the War
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
					value = 1
					region = shamakhad_region
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.14 } } #Tiltaghar
	}
	
	if = { #sanity check for Command suddenly surrendering an Absolute Domination CB
		limit = { 
			has_country_flag = command_leadership_flag_@FROM
		}
		clr_country_flag = command_leadership_flag_@FROM
	}

	if = { #Bulwar incident end
		limit = {
			tag = F39
			FROM = { tag = F28 }
		}
		country_event = { id = flavour_bulwar_tag.15 }
	}
	
	#triggered modifiers replacements
	remove_country_modifier = anb_defense_of_empire
	
	update_artifice_points = yes #needs to be last
}

on_main_war_lost = {
	#Taychend Glory
	if = {
		limit = {
			has_country_flag = taychendi_coalition_defender
		}
		clr_country_flag = taychendi_coalition_defender
	}
}

on_separate_war_lost = {
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	on_battle_lost_country_effect = yes

	random_events = {
		90 = 0
		10 = friendship_events.1 #Historical Friendship Broken
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
	random_events = {
		900 = 0


		33 = aw_ghouls.110
		67 = aw_ghouls.111	#more common one for spookier places
	}
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	on_battle_won_unit_effect = yes
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
	on_battle_won_country_effect = yes #1.35

	random_events = {
		1000 = 0

		100 = aw_zombies.100
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	on_battle_lost_unit_effect = yes #1.35
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={
	if = { #1.35
		limit = { 
			owner = { has_country_flag = adding_provinces_to_trade_c_merc_prod_flag } 
		}
		owner = { add_mercantilism = 1 } 
		add_base_production = 1 
	}
}

# province
# root = location, from = country doing it
on_removed_from_company ={
	if = { #1.35
		limit = { 
			owner = { has_country_flag = adding_provinces_to_trade_c_merc_prod_flag } 
		}
		owner = { add_mercantilism = -1 } 
		add_base_production = -1 
	}
}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	on_battle_lost_province_effect = yes
	
	###############################################################
	# EFFECTS BELOW HERE DO NOT WORK PROPERLY IN SCRIPTED EFFECTS #
	# most common causes are:                                     #
	# using a country event or similar in an else_if              #
	# or using a trigger switch                                   #
	###############################################################
	
	if = {
		limit = {
			has_province_flag = drozma_last_stand_prov_flag
		}
		if = {
			limit = {
				from = {
					tag = REB
				}
				owner = {
					OR = {
						AND = {
							ai = no
							has_country_flag = drozma_fighting_last_stand
						}
						overlord = {
							ai = no
							has_country_flag = drozma_fighting_last_stand
						}
					}
				}
			}
			owner = { country_event = { id = ynn_events.27 } }
		}
		else_if = {
			limit = {
				from = {
					tag = REB
				}
				owner = {
					OR = {
						ai = yes
						has_country_flag = drozma_fighting_last_stand
						overlord = {
							ai = yes
							has_country_flag = drozma_fighting_last_stand
						}
					}
				}
			}
			if = {
				limit = {
					NOT = {
						owner = {
							has_country_flag = drozma_ai_loss_1
						}
					}
				}
				owner = { 
					set_country_flag = drozma_ai_loss_1
				}
			}
			else = {
				owner = { country_event = { id = ynn_events.27 } }
			}
		}
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	grant_manpower_from_besieging_fort = yes
	events = {
		flavor_grombar.14
		deepwoods.22
		dotimist_flavour.2
		flavour_tluukt.8
		flavor_nuugdan_tsarai.100
		spirits.019
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 0.5 }
	}
	if = { limit = { tag = I03 }
		country_event = { id = flavor_vazhatun.25 }
	}
	if = {
		limit = { #Command is winning a war against a great power
			has_country_flag = absolute_domination_cb_unlocked_flag
			FROM = {
				owner = {
					ROOT = {
						NOT = { has_country_flag = command_leadership_flag_@PREV }
					}
				}
			}
			FROM = {
				owner = {
					ROOT = {
						is_in_war = {
							casus_belli = cb_absolute_domination
							attacker_leader = ROOT
							defender_leader = PREV
							war_score = 80
						}
					}
				}
			}
		}
		FROM = {
			owner = {
				ROOT = {
					set_country_flag = command_leadership_flag_@PREV
				}
			}
		}
	}
	clr_vampire_hideout = yes
	castanor_succession_war_shift_momentum_siege = yes
	random_events = {
		30 = flavor_ameion.5 #Laskaris
		70 = 0
	}
	random_events = {
		10 = army_professionalism_events.1 #City Sacked
		100 = 0
	}
	
	kobold_dragon_cult_won_siege = yes
}

# country
# root = losing country, from = location
on_siege_lost_country = {
	events = {
		curia.8			#curia loses its money, not sure we need new ver
		# papacy_events.5	#AnbennarNewVer
		flavour_tluukt.60
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		subtract_variable = { aInfluence = 0.25 }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# province
# root = location, from = losing country
on_siege_won_province = {
	remove_siege_spells_from_province = yes
	events = {
		flavor_vazhatun.111
	}
	if = {
		limit = {
			from = {
				tag = REB
				is_rebel_type = revolutionary_rebels
			}
			owner = {
				any_owned_province = {
					region = root
					has_revolution_in_province = yes
				}
				# NOT = { has_disaster = french_revolution }
				NOT = { has_disaster = revolution }
				NOT = { has_spawned_rebels = revolutionary_rebels }
			}
		}
		owner = { country_event = { id = center_of_revolution.1600 } }
	}
	# Anbennar
	if = {
		limit = { owner = { has_disaster = magnate_uprising } }
		magnate_uprising_siege_won_effects = yes
	}
	#luciande liandiel
	if = { 
		limit = { 
			owner = { 
				tag = B34 
				has_country_flag = B34_liandiel_rebelled
			}
			ROOT = { province_id = 261 }
		}
		owner = {
			country_event = {
				id = flavor_luciande.28
			}
		}
	}
	# G53 - Empkeios loses the Slave Rebellion
	if = { 
		limit = {
			FROM = {
				tag = G53
				has_country_flag = G53_Slave_Rebellion
			}
			ROOT = {
				is_capital_of = FROM
			}
		}
		G53 = {
			country_event = {
				id = empkeios_events.1305
				days = 1
			}
		} 
	}
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	remove_siege_spells_from_province = yes
	events = {
		diggy.13
		magic_project_lichdom.17
		vampires_estate_events.15
		cavegoblinflavor.15
		spirits.002 #Hidden event to determine if temple is damaged by siege
	}

	if = {
		limit = { FROM = { tag = Z43 has_country_flag = harvesting_connadh } } #Aelnar
		province_event = { id = aelnar.103 }
	}
	#Drozma tur last stand win the siege of svemel, mostly for AI
	if = {
		limit = {
			has_province_flag = drozma_last_stand_prov_flag
		}
		if = {
			limit = {
				from = {
					tag = REB
				}
				owner = {
					OR = {
						has_country_flag = drozma_fighting_last_stand
						overlord = {
							has_country_flag = drozma_fighting_last_stand
						}
					}
				}
			}
			owner = { country_event = { id = ynn_events.27 } }
		}
	}

	if = {	#Brelar civil war for if ur a schizo and didn't make any subjects
		limit = {
			owner = {
				tag = G27
			}
		}
		g27_civil_war_end_lost_effect = yes
	}

	if = {
		limit = {
			owner = { has_country_flag = kinstrife_funtime_flag }
			FROM = {
				OR = {
					has_country_flag = kinstrife_funtime_flag
					overlord = { has_country_flag = kinstrife_funtime_flag }
				}
			}
		}
		if = {
			limit = {
				FROM = { has_country_flag = kinstrife_funtime_flag }
			}
			cede_province = FROM
			add_core = FROM
		}
		else = {
			FROM = {
				overlord = {
					ROOT = {
						cede_province = PREV
						add_core = PREV
					}
				}
			}
		}
	}
	# G53 - Empkeios Slave Rebellion win
	if = {
		limit = {
			FROM = {
				tag = G53
				has_country_flag = G53_Slave_Rebellion
			}
			NOT = {
				FROM  = {
					num_of_rebel_armies = 1
				}
			}
			NOT = {
				FROM = {
					num_of_rebel_controlled_provinces = 1
				}
			}
		}
		G53 = {
			country_event = {
				id = empkeios_events.1306
			}
		}
	}

	#L01 Kuiika MT vs L13 Gomuvuri
	if = {
		limit = {
			has_province_flag = kuiika_threatens_us
			FROM = {
				tag = L01
			}
		}
		L01 = {
			country_event = {
				id = flavor_kuiika.6
			 }
		}
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# province
# root = location, from = country that owns it
# Fired right after the great project is constructed
on_great_project_constructed = {
	remove_province_modifier = reveria_golden_dome_leviathan
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country
on_new_monarch = {
	events = {
		flavor_sca.2				# Education Focus of the new Ruler

		#Anbennar
		#anbennar_setup.1			#Setup if new country is monstrous or not
		#anbennar_setup.6			#setup mage organization for new country - handled by mage_organization.1
		anbennar_setup.7			#Setup for evil/witch king opinions
		anbennar_setup.9			#Setup for racial admin mil
		anbennar_setup.19			#Setup for artifice system
		# racial_modifiers.5		#Racial admin change if unmatching
		# racial_modifiers.6		#Racial mil change if unmatching
		magic_ruler.102				#gives magic schools
		anb_miscevents.10 			# Make you adventurer reform if youre not - this is for released countries
		anb_miscevents.11			# Makes temples theocracies when released
		#adventuring.7	#A new Captain rises

		#anbennar_setup_player.1
		#anbennar_setup_player.2

		#Sugamber succession war
		#flavor_sugamber.14		# Pro-Lisolette rebels win the war
		#flavor_sugamber.15		# Pro-Ethelbert rebels win the war
		flavor_sugamber.999		# Lisolette's legitimacy called into question

		rahenraj.5				#To ensure Harimari rulers in Rahen
		rahenraj.1000			#To make sure newly independent Prabhi and Senapti have the proper government
		the_command.3			#Hobgoblin faction influence
		flavor_blademarches.3 	#Blademarches succession event
		aelnar.82				#Sicrheior Son
		flavor_telgeir.1		# Vanbury can replace new dynasty
		one_xia.55				#Xia heirs balance training
		one_xia.56				#Xia Keepers wield kongren

		#Black Castanor Trial
		castanortrials.12

		tribal_succession.1		# Harsh anti-tribals.
		9492 					# Remove some event modifiers

		# flavor_tur.102			# Janissary Reward

		# muslim_school_events.20 #No Religious School
		high_philosophy_events.0
		sarhalevents.2

		#Silver Families
		silver_families.1		#Silmuna
		silver_families.2		#Siloriel
		silver_families.3		#Silcalas
		silver_families.4		#Silistra
		silver_families.5		#Silnara
		silver_families.6		#Silebor
		silver_families.7		#Silurion
		silver_families.8		#Silgarion
		flavor_magisterium.24
		flavor_magisterium.30

		# Magnate Council determines whether to support monarch
		flavor_gawed.5

		#Eordand Dracball
		eordand.30

		new_sun_cult.10 #Getting back mage estate if NSC and not human anymore
		flavor_azka_sur.23	#Azka Sur incident

		rahenraj.2099 	#Raja Death

		#shadow.2	#makes troll leader into good general
		
		harpy_events.122	#Harpy parentage insight
		
		varamhar_flavour.22	#Varamhar patron

		flavour_bosancovac.381 #Bosancovac ruler modifier
		
		estate_adeen.12 #adeen ask for privs
		
		eunuchs_estate_anb_events.13 # eunuch heir education
		
		magic_ruler.110 # guarantee mage ruler for special govs
		
		black_acolytes.100 # unholy black demesne code
		
		lotdekkhang.3 # Y58 lot dekkhang gets new ruler race modifier
	}

	random_events = {
		1000 = 0

		50 = dynastic_events.4
		50 = dynastic_events.5
		25 = harpy_events.107		#Failed Policy of Fratricide
	}

	country_event = { id = estate_organization.1 days = 35 }		#choose magical organization for mage estate
	country_event = { id = estate_organization.4 days = 35 }		#choose organization for adventurer estate
	country_event = { id = estate_organization.5 days = 35 }		#choose organization for artificer estate
	country_event = { id = racial_modifiers.5 days = 1 }			#Racial admin change if unmatching
	country_event = { id = racial_modifiers.6 days = 1 }			#Racial mil change if unmatching

	country_event = { id = monstrous.100 days = 1 }

	#Anbennar
	on_new_monarch_effect = yes #1.35
	
	###############################################################
	# EFFECTS BELOW HERE DO NOT WORK PROPERLY IN SCRIPTED EFFECTS #
	# most common causes are:                                     #
	# using a country event or similar in an else_if              #
	# or using a trigger switch                                   #
	###############################################################
	
	if = { # Balrijin new heir.
		limit = { has_reform = balrijin_sage_council_reform }
		trigger_switch = {
			on_trigger = has_ruler_flag
			Y85_smoldering_claw_heir_flag = { country_event = { id = flavour_balrijin.31 } }
			Y85_kindled_scale_heir_flag = { country_event = { id = flavour_balrijin.32 } }
			Y85_knowing_eye_heir_flag = { country_event = { id = flavour_balrijin.33 } }
			Y85_grasping_tail_heir_flag = { country_event = { id = flavour_balrijin.34 } }
			Y85_golden_tongue_heir_flag = { country_event = { id = flavour_balrijin.35 } }
			Y85_teeming_arm_heir_flag = { country_event = { id = flavour_balrijin.36 } }
		}
	}
	
}

on_new_consort = {

	#apply correct racial flags
	update_consort_racial_flag = yes

	country_event = { id = consort_events.2 }
	#harpy consorts
	if = {
		limit = {
			consort_is_harpy = yes
			has_female_consort = no
		}
		clear_fast_consort_flags = yes

		if = {
			limit = {
				OR = {
					tag = F49
					was_tag = F49
				}
			}
			set_consort_culture = desert_elf
			set_consort_flag = elven_consort
		}
		else_if = {
			limit = {
				consort_culture = firanyan_harpy
			}
			set_consort_culture = gelkar
			set_consort_flag = human_consort
		}
		else_if = {
			limit = {
				consort_culture = siadunan_harpy
			}
			random_list = {
				50 = {
					set_consort_culture = surani
				}
				50 = {
					set_consort_culture = ghankedhen
				}
			}
			set_consort_flag = human_consort
		}
		else_if = {
			limit = {
				consort_culture = pezarangi_harpy
			}
			set_consort_culture = sikai
			set_consort_flag = human_consort
		}
		
	}
	if = {
		limit = {
			has_dlc = "Rights of Man"
			OR = {
				fast_consort_is_elven = yes
				fast_consort_is_dwarven = yes
				fast_consort_is_gnomish = yes
				fast_consort_is_half_elven = yes
			}
		}
		country_event = { id = anb_ruler.100 }
	}
	if = {
		limit = { has_ruler_flag = had_10_years_anniversary }
		clr_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = had_20_years_anniversary }
		clr_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_ruler_flag = consort_had_affection_of_ruler }
		clr_ruler_flag = consort_had_affection_of_ruler
	}
	if = {
		limit = { has_country_modifier = sought_after_bachelor }
		remove_country_modifier = sought_after_bachelor
	}
}

# country
on_monarch_death = {
	#Anbennar
	events = {
		witch_king.1		#Death of a Witch King
		#magic_misc_events.4	#Undead Army
		#magic_project_lichdom.14	#Force Regency Council
		jadd_empire.1		#Move the court
		aelnar.25			#Does lithiel assume control
		aelnar.39			#The Turning Point
		ynn_barges.1		#Ynnic barges
		ynn_barges.103		#Clearing flags
		cyranvar.1			#Oak Monarchy
		eordellon.1			#Funereal Season Honoring
		flavor_blademarches.3 #Blademarches succession event
		castanortrials.99	# Castanorian Interregnum
		flavor_corintar.4	#Bluetusk's Retirement
		azka_evran.11		#Deggarion's Death
		verkaldromak.71		#Verkal Dromak election from mages
		magic_project_lichdom.12 # Revival
		vampire_ruler.33 # Vampire Heir Returns
		flavor_castanor.211 # One of the Castans during disaster dies
		flavor_elikhand.7 #Entef put to rest and mummified
		ogre.25 #Rancor is killed
		flavor_azjakuma.34	#removes magic study modifier
		flavor_dhenijanraj.10 #Bim Lau Restoration Burial
		flavour_tluukt.50 #Death of Tluukt
		flavor_luciande.38 #death of lucian
		flavour_amacimst.55	#Amacimst ruler dies jousting
		flavour_amacimst.57 #Foreign ruler dies jousting in Amacimst
		flavor_gemradcurt.2 # Immariel dies without achieving shit
		government_events.3 #1.35
		blorc.300 #blorc monarchy
		flavour_haraagtseda.02 #Haraagtseda leader trials
		rag_government_events.1 #Raghamidesh Monarchy
		taychendi.0 #New Godking
		taychendi.6 #Force coalitions
		flavor_magisterium.23 
		flavor_magisterium.26
		flavor_magisterium.31
		xhazobkult_events.3000 #xhazobine dies
		thirabnir_event.1   #The Legacy of Lord Narai Chaiya
	}
	if = {
		limit = { has_government_attribute = no_stability_loss_on_monarch_death }
		add_stability = 1
	}

	if = {
		limit = {
			is_subject_of_type = pronoia_subject_type
			NOT = { liberty_desire = 50 }
		}
		overlord = {
			inherit = ROOT
			if = {
				limit = {
					has_country_flag = BYZ_inheriting_pronoia_crownland_flag
				}
				change_estate_land_share = {
					estate = all
					share = -5
				}
			}
		}
	}
	if = {
		limit = {
			has_government_attribute = civil_war_on_every_new_ruler
		}
		country_event = { id = 611 }
	}

	#Anbennar
	country_event = { id = vampires_estate_events.13  days = 1 } # Revival
	country_event = { id = magic_misc_events.4 days = 60 } #Undead Army
	country_event = { id = flavor_arverynn.52 } #Hrenvyr
	if = {
		limit = {
			has_reform = godhood_reform
			NOT = { has_country_flag = elven_constellation_done }
		}
		country_event = { id = aelnar.65 days = 10 }
	}
	if = {
		limit = {
			OR = {
				has_country_flag = no_stab_hit_on_ruler_death
				has_a_primary_cult_selected = yes
			}
			OR = {
				government = tribal
				government = monarchy
			}
			NOT = { has_country_flag = lich_ruler }
		}
		add_stability = 1
	}
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
		}
		country_event = { id = bim_lau_flavour.5 days = 3 } #Bim Lau Great Necropolis Entombment
	}
	if = {
		limit = {
			has_reform = tagharoghi_reform
		}
		clr_country_flag = oni_ruler_shinukhorchi
		clr_country_flag = oni_ruler_chumijemoya
		clr_country_flag = oni_ruler_ajgriijarul
		clr_country_flag = oni_ruler_kabiurgarko
		clr_country_flag = oni_ruler_khelorvalshi
		if = {
			limit = {
				has_country_flag = oni_heir_shinukhorchi
			}
			clr_country_flag = oni_heir_shinukhorchi
			set_country_flag = oni_ruler_shinukhorchi
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_chumijemoya
			}
			clr_country_flag = oni_heir_chumijemoya
			set_country_flag = oni_ruler_chumijemoya
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_ajgriijarul
			}
			clr_country_flag = oni_heir_ajgriijarul
			set_country_flag = oni_ruler_ajgriijarul
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_kabiurgarko
			}
			clr_country_flag = oni_heir_kabiurgarko
			set_country_flag = oni_ruler_kabiurgarko
		}
		else_if = {
			limit = {
				has_country_flag = oni_heir_khelorvalshi
			}
			clr_country_flag = oni_heir_khelorvalshi
			set_country_flag = oni_ruler_khelorvalshi
		}
	}
	# Give them a temp ruler while waiting for their vamp to revive
	if = {
		limit = {
			ruler_can_revive = yes
			has_states_general_mechanic = yes
			NOT = { has_country_flag = reviving_ruler }
		}
		set_country_flag = reviving_ruler
		define_ruler = {
			adm = 0
			mil = 0
			dip = 0
			regency = yes
		}
	}
	if = { limit = { tag = R51 }
		country_event = { id = rahenraj.90 }
	}
	if = {
		limit = {
			tag = H76
			has_country_modifier = H76_oppositionist
		}
		country_event = {
			id = flavour_ordstun.39
		}
	}
}

# country
on_regent = {

	events = {
		tribal_succession.1	# harsh anti-tribals.
	}

	# ruler optimisation (because on_new_monarch doesn't fire for queen-consort regency)
	update_ruler_racial_flag = yes

	country_event = { id = flavor_malacnar.9 days = 1 }
	#Mother Akasik set deity
	if = {
		limit = { religion = mother_akasik }
		country_event = { id = mother_akasik.3 }
	}
	#Ynn Worship set deity
	if = {
		limit = {
			OR = {
				religion = ynn_river_worship
				religion = ynn_river_reformed
			}
		}
		country_event = { id = ynn_zodiac.3 }
		heir_ynn_zodiac = yes
	}

	#Kheionism set deity
	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3 }
	}
	#Nakavy Avo shrine reset
	if = {
		limit = {
			religion = nakavy_avo	
		}
		shrine_cleanup_effect = yes
	}
}

# country
on_extend_regency = {
}

# country
on_new_term_election = {
	events = {
		700		# Election event
		elections.720		# Dutch Republic
		elections.800	# Lottery election
		pirates.1

		#Anbennar
		diggy_fallen.9
		flavor_roilsard.12	# Roilsard Special
		marlliande.1
		flavour_reuyel.1
		flavor_krak.200 #krakdhumvror clan council
		flavor_krak.201 #krakdhumvror free council
		jinqiu.1			#Jinqiu election
		sunrise.0			#Hiderion Retires
		sunrise.1			#Sunrise election
		flavour_bulwar_tag.1	#Bulwar 12 families
		flavour_bulwar_tag.35	#From Bulwar MT
		flavor_krakazol.200 #Krakazol Olzonog
		flavor_newshire.11
		flavor_cestirmark.1 #United Trollsbay elections
		mountainshark_events.28 # Mountainshark election
		medasi.1			#Medasi Succession
		allclan.1000 # Allclan Election
		haraf_events.13 	#Kinah Conclave election
		flavour_yinquan.70	#Lingyuk Huszien Council Election
	}

	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3}
	}
}

# country
on_death_election = {
	if = {
		limit = { has_reform = presidential_despot_reform }
		remove_government_reform = presidential_despot_reform
	}
	if = {
		limit = {
			has_government_attribute = is_pirate_republic_reform
		}
		set_country_flag = pirate_death_election
		country_event = { id = pirates.1 }
		clr_country_flag = matriarchal_pirate_republic_heir_elected
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		overlord = { country_event = { id = black_demesne.4 } }
	}
	if = { limit = { has_reform = bulwari_temple_reform }
		country_event = { id = flavor_vacyn.100 }
	}
	if = {
		limit = {
			has_reform = pentapandemonium_reform
		}
		set_country_flag = allclan_death_election
		country_event = { id = allclan.1000 }
	}
	events = {
		701		# Election event
		shadow.5
		elections.721		# Dutch Republic
		elections.800		# Lottery election
		#Anbennar
		diggy_fallen.9
		flavor_roilsard.13	# Roilsard Special
		ynn_barges.102
		marlliande.2
		# elections.901
		flavour_reuyel.2
		black_demesne.1
		flavor_krak.200 #krakdhumvror clan council
		flavor_krak.201 #krakdhumvror free council
		jinqiu.2			#Jinqiu election
		sunrise.2			#Sunrise election
		azkare.221			#Hiderion's death election
		yingzhen.46			#Yingshi Sinistral Republic Election
		flavour_bulwar_tag.1	#Bulwar twelve families
		flavour_bulwar_tag.35	#From Bulwar MT
		flavor_krakazol.201 #Krakazol Olzonog
		flavor_newshire.12
		flavor_newshire.41
		flavor_cestirmark.2 #United Trollsbay death election
		flavour_yinquan.0	#Land of Thousand Shrines election event
		flavour_yinquan.40	#Holi's retirement
		mountainshark_events.29 # Mountainshark election
		medasi.13			#Medasi Succession
		flavour_brelar.700	#Brelari Dynastic Republic elections
		haraf_events.13 	#Kinah Conclave election
	}

	if = {
		limit = { religion = kheionism }
		country_event = { id = kheionism.3}
	}
	#Nakavy Avo shrine reset
	if = {
		limit = {
			religion = nakavy_avo	
		}
		shrine_cleanup_effect = yes
	}
}

# country
on_death_foreign_slave_ruler = {
	events = {
		#mamluk_events.0

		#Anbennar
		slave_ruler_election.0
	}
}

# country
on_replace_governor = {
	events = {
		elections.707
	}
}

# country
on_bankruptcy = {
	events = {
		racial_modifiers.5		#Racial admin change if unmatching
	}
	clear_roadwarrior_modifiers = yes
	if = {
		limit = { has_reform = roadwarrior_great_convoy }
		add_country_modifier = {
			name = roadwarrior_main_1
			duration = -1
		}
	}
	#hoardcurse modifier
	remove_country_modifier = the_reformist
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	events = {
		610
	}

	#Mulen cancel income transfer
	if = {
		limit = { FROM = { tag = F47 } }
		country_event = { id = flavour_mulen.24 }
	}
	if = {
		limit = { tag = F72 }
		5434 = { remove_province_modifier = mulen_trade_from_kvangraak }
		5460 = { remove_trade_modifier = { who = FROM key = mulen_trade_from_kvangraak } }
	}
}

# country
on_heir_death = {
	if = {
		limit = { has_ruler_modifier = heir_mage_personality_mod }
		remove_country_modifier = heir_mage_personality_mod
	}
	if = {
		limit = { has_country_flag = heir_dip_education }
		clr_country_flag = heir_dip_education
	}
	if = {
		limit = { has_country_flag = heir_mil_education }
		clr_country_flag = heir_mil_education
	}
	if = {
		limit = { has_country_flag = heir_adm_education }
		clr_country_flag = heir_adm_education
	}
	if = {
		limit = { has_ruler_flag = well_advised_tutored_heir }
		clr_ruler_flag = well_advised_tutored_heir
	}
	if = {
		limit = { has_ruler_flag = heir_went_on_grand_tour }
		clr_ruler_flag = heir_went_on_grand_tour
	}
#	if = {
#		limit = { has_country_flag = albrecht_achilles_flag }
#		clr_country_flag = albrecht_achilles_flag #Death of original Albrecht Achilles
#	}
	if = {
		limit = { has_ruler_flag = sancaga_cikma }
		clr_ruler_flag = sancaga_cikma
		every_owned_province = {
			limit = {
				has_province_modifier = heir_in_training
			}
			remove_province_modifier = heir_in_training
		}
	}
	if = {
		limit = { has_ruler_flag = returned_from_sancaga_sikma_province }
		clr_ruler_flag = returned_from_sancaga_sikma_province
	}
	if = {
		limit = { has_reform = teplinbasiet_arena_kingdom_reform }
		clr_country_flag = Y58_allied_noble_won
		clr_country_flag = Y58_local_fighter_won
		clr_country_flag = Y58_prominent_dauloph_won
		clr_country_flag = Y58_relative_won
	}
		#Anbennar
	events = {

	}
	if = {
		limit = {
			OR = {
				has_reform = tagharoghi_reform
				has_reform = demon_empire_reform
			}
		}
		clr_country_flag = oni_heir_shinukhorchi
		clr_country_flag = oni_heir_chumijemoya
		clr_country_flag = oni_heir_ajgriijarul
		clr_country_flag = oni_heir_kabiurgarko
		clr_country_flag = oni_heir_khelorvalshi
	}
	events = {
		flavor_magisterium.23
		flavor_magisterium.29
	}
	clr_country_flag = theo_local_noble_flag #Anbennar - Fix for bugged devotion events due to being incompatible/ineligible with the same heir selection event
	clr_country_flag = theo_foreign_noble_flag
	clr_country_flag = theo_merchants_son_flag
	clr_country_flag = theo_talented_theologian_flag
	clr_country_flag = theo_local_preacher_flag
}

# country
on_queen_death = {
	if = {
		limit = { has_ruler_modifier = consort_mage_personality_mod }
		remove_country_modifier = consort_mage_personality_mod
	}
	if = {
		limit = { has_consort_flag = 10_years_anniversary }
		set_ruler_flag = had_10_years_anniversary
	}
	if = {
		limit = { has_consort_flag = 20_years_anniversary }
		set_ruler_flag = had_20_years_anniversary
	}
	if = {
		limit = { has_consort_flag = consort_has_affection_of_ruler }
		set_ruler_flag = consort_had_affection_of_ruler
	}

	if = {
		limit = {
			has_regency = no
			NOT = { has_ruler_flag = widow_widower }
		}
		set_ruler_flag = widow_widower
	}
	if = {
		limit = { has_consort_regency = no }
		random_owned_province = {
			limit = { has_province_modifier = domain_of_spouses_family }
			remove_province_modifier = domain_of_spouses_family
		}
	}
	if = {
		limit = { has_ruler_flag = accepted_help_from_spouses_family }
		clr_ruler_flag = accepted_help_from_spouses_family
	}
	if = {
		limit = { has_ruler_flag = helped_spouses_family }
		clr_ruler_flag = helped_spouses_family
	}
	if = {
		limit = { has_ruler_flag = refused_to_help_spouses_family }
		clr_ruler_flag = refused_to_help_spouses_family
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		random_owned_province = {
			limit = { has_province_modifier = home_of_consort }
			remove_province_modifier = home_of_consort
		}
	}
	if = {
		limit = { has_ruler_flag = has_lowborn_consort }
		clr_ruler_flag = has_lowborn_consort
	}
	if = {
		limit = { has_country_modifier = consort_adm_advice }
		remove_country_modifier = consort_adm_advice
	}
	if = {
		limit = { has_country_modifier = consort_dip_advice }
		remove_country_modifier = consort_dip_advice
	}
	if = {
		limit = { has_country_modifier = consort_mil_advice }
		remove_country_modifier = consort_mil_advice
	}
	if = {
		limit = { has_country_modifier = without_spouse_advice }
		remove_country_modifier = without_spouse_advice
	}
	if = {
		limit = { has_ruler_modifier = affectionate_royal_couple }
		remove_country_modifier = affectionate_royal_couple
	}
	if = {
		limit = { has_ruler_modifier = bav_woman_scorned_mod }
		remove_country_modifier = bav_woman_scorned_mod
	}
	if = {
		limit = { has_ruler_modifier = bav_building_wife_church }
		remove_country_modifier = bav_building_wife_church
	}
	clr_ruler_flag = marriage_length
}

# country
on_new_heir = {
	# if = {
	# 	limit = {
	# 		has_country_flag = enabled_cult_for_heirs
	# 	}
	# 	country_event = {
	# 		id = fetishist_flavor.600
	# 	}
	# }

	#apply correct racial flags
	update_heir_racial_flag = yes

	country_event = { id = racial_misc.1 days = 2 }		# Half-orc heirs for cross-racial marriages
	country_event = { id = racial_misc.2 days = 2 }		# Half-elf heirs for cross-racial marriages
	country_event = { id = racial_misc.3 days = 2 }		# Human heirs for half-elf human marriages
	country_event = { id = racial_misc.10 days = 1 }	# Heirs are set to their parents race since event heirs are given primary culture instead
	country_event = { id = rahenraj.6 days = 5 }		# Replace heir if incorrect race for Senapti
	country_event = { id = anb_ruler.101 days = 3 }		# Immortal/long-lived trait
	if = {
		limit = {
			has_country_flag = Y91_participating_in_festival
		}
		clr_country_flag = Y91_heir_participating

		clr_country_flag = Y91_picked_tournament_participants
		country_event = { id = flavor_nuugdan_tsarai.68 }
	}
	if = { limit = { heir_is_harpy = yes }
		if = { limit = { has_female_heir = no }
			if = { limit = { culture_group = harpy }
				define_heir = {
					dynasty = original_dynasty
					culture = ROOT
					female = yes
				}
			}
			else_if = { limit = { tag = F62 } #Duwarkani
				define_heir = {
					dynasty = original_dynasty
					culture = nzeri_harpy
					female = yes
				}
			}
			else = {
				define_heir = {
					dynasty = original_dynasty
					culture = firanyan_harpy
					female = yes
				}
			}
		}
		else = {
			country_event = { id = harpy_events.102 }
		}
	}
}

# country
on_weak_heir_claim = {
	events = {
		611		# Pretenders rise up
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		theocracy.1
		theocracy.2			#Anbennar, for Rahen Tughayasa Oracles
		flavor_sca.2			# Education Focus of the new Ruler

		#Anbennar
		magocracy.1
		adventurer.1
		flavor_azjakuma.4
		one_xia.40			#Xiaken/Wulin selection
		one_xia.41			#One Xia selection
		shatteredcrown.44	#Shat Crown heirs
		flavour_balrijin.30 #Balrijin heirs
		verkalozovar_events.1001
		flavour_bosancovac.380 #Bosancovac heirs
		effelai_worship.500 #Effelai Tribes Selection
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	emperor = {
		save_global_event_target_as = Emperor
		#Anbennar - Emperor won't denounce themselves
		if = {
			limit = {
				has_country_modifier = denounced_witch_king
			}
			remove_country_modifier = denounced_witch_king
		}
	}
	events = {
		900
	}
}

# Called whenever a new emperor is elected
# FROM = Previous Emperor
# ROOT = New Emperor
on_emperor_elected = {
	every_elector = {
		if = {
			limit = {
				preferred_emperor = root
			}
			change_variable = {
				which = supported_successive_emperors
				value = 1
			}
		}
		else = {
			set_variable = {
				which = supported_successive_emperors
				value = 0
			}
		}
	}

	emperor = {
		save_global_event_target_as = Emperor
		country_event = { id = long_lived_emperor.1 }
	}
	if = {
		limit = {
			ROOT = {
				has_country_modifier = istralari_commanders_istralore
			}
		}
		every_country = {
			if = {
				limit = {
					is_part_of_hre = yes
					NOT = { has_country_modifier = istralari_commanders_empire }
				}
				country_event = {
					id = flavor_istralore.10
				}
			}
		}
	}
	FROM = {
		if = {
			limit = { has_country_modifier = diet_occupied }
			remove_country_modifier = diet_occupied
			ROOT = {
				add_country_modifier = { name = diet_occupied duration = -1 }
			}
		}
		if = {
			limit = {
				any_country = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
			every_country = {
				limit = {
					reverse_has_opinion_modifier = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
				reverse_remove_opinion = {
					modifier = opinion_imperial_diplomacy
					who = prev
				}
				ROOT = {
					add_opinion = {
						modifier = opinion_imperial_diplomacy
						who = prev
					}
				}
			}
		}
	}
	FROM = {
		if = {
			limit = {
				has_country_modifier = giberd_gnomish_elector_mod
			}
			remove_country_modifier = giberd_gnomish_elector_mod
		}
	}
	ROOT = {
		if = {
			limit = {
				A81 = { #Giberd
					has_country_flag = gnomish_elector
					is_elector = yes
				}
				NOT = { hre_reform_passed = emperor_rechenschaft }
			}
			add_country_modifier = {
				name = giberd_gnomish_elector_mod
				duration = -1
			}
		}
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		909
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
		religious_leagues.1
		religious_leagues.8
	}
}

on_change_hre_religion = {
	events = {
		religious_leagues.2
		religious_leagues.3
	}
}

on_hre_religion_white_peace = {
	events = {
		religious_leagues.4
	}
}

# When a non-native changes government type
on_government_change = {
	on_government_change_effect = yes
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		610
	}
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	events = {
		# celestial_empire_events.1 # Empire dismantled
	}
	on_annexed_estate_privileges_effect = yes
	FROM = {
		if = {
			limit = { is_emperor_of_china = yes }
			dismantle_empire_of_china = yes
			clear_global_event_target = EmperorOfChina
			set_global_flag = empire_of_china_dismantled
		}
		if = {
			limit = { has_country_modifier = legatus_natus }
			remove_country_modifier = legatus_natus
			set_global_flag = no_legatus_natus
		}
		if = {
			limit = { has_country_modifier = primas_germaniae }
			remove_country_modifier = primas_germaniae
			set_global_flag = no_primas_germaniae
		}
		if = {
			limit = {
				OR = {
					is_companion = yes
					mission_completed = G32_with_two_companions
				}
			}
			clr_global_flag = G32_companions_active
		}
		if = {	#Can't inherit Ynnic Iosahar by annexing their Overlord unless you're a Ynnic Overlord
			limit = { ynnic_iosahar = 1 }
			every_subject_country = {
				country_event = { id = ynn_events.19 }
			}
		}

		#transfer dwarovkron fragments
		if = {
			limit = { has_dwarovkron_fragment = yes }
			transfer_dwarovkron_fragments = yes
		}

		#honderaak incident, Xanzerbexis annexed
		if = {
			limit = {
				tag = A49
				OR = {
					364 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					6513 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					377 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
					375 = { owner = { NOT = { culture_group = gnollish } is_part_of_hre = no } }
				}
			}
			ROOT = { country_event = { id = flavor_honderaak.1 days = 2 } }
		}

		#Mulen cancel income transfer
		if = {
			limit = { tag = F47 }
			ROOT = { country_event = { id = flavour_mulen.24 } }
		}
		if = {
			limit = { tag = F72 }
			5434 = { remove_province_modifier = mulen_trade_from_kvangraak }
			5460 = { remove_trade_modifier = { who = FROM key = mulen_trade_from_kvangraak } }
		}

		if = {
			limit = { has_country_flag = current_aakhet_host }
			aakhet_reset = yes
		}
	}
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	clear_global_event_target = EmperorOfChina
	events = {
	}
}

#AnbennarNewVer - change this to khetaratan yo
# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	if = {
		limit = { has_global_flag = empire_of_china_dismantled }
		dismantle_empire_of_china = no
	}
	save_global_event_target_as = EmperorOfChina
	set_mandate = 60
	remove_country_modifier = mandate_lost_steward
	add_country_modifier = {
		name = mandate_new_steward
		duration = 7300
	}
	country_event = { id = khet_mandate.01 }
	kheterata_region = {
		limit = { NOT = { is_core = ROOT } }
		add_permanent_claim = ROOT
	}
	mothers_sorrow_group = {
		limit = { NOT = { is_core = ROOT } }
		add_permanent_claim = ROOT
	}
	update_sorrow_province_count = yes
	set_meritocracy = 50
	if = {
		limit = { any_subject_country = { is_subject_of_type = tributary_state_anb } }
		every_subject_country = {
			limit = { is_subject_of_type = tributary_state_anb }
			country_event = { id = khet_mandate.02 } 
		}
	}
	if = {
		limit = { tag = U01 } #kheterata
		restore_country_name = yes
	}
	if = {
		limit = { ai = yes }
		475 = { add_core = ROOT }
		473 = { add_core = ROOT }
		463 = { add_core = ROOT }
		479 = { add_core = ROOT }
		5481 = { add_core = ROOT }
	}
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	#set_government_rank = 2
	remove_country_modifier = mandate_new_steward
	add_country_modifier = {
		name = mandate_lost_steward
		duration = 7300	# 20 years
	}
	add_stability = -2
	kheterata_region = {
		limit = { is_permanent_claim = ROOT }
		remove_claim = ROOT
	}
	mothers_sorrow_group = {
		limit = { is_permanent_claim = ROOT }
		remove_claim = ROOT
	}
	clr_mandate_modifiers = yes
	if = {
		limit = { any_subject_country = { is_subject_of_type = tributary_state } }
		every_subject_country = { 
			limit = { is_subject_of_type = tributary_state }
			country_event = { id = khet_mandate.03 } 
		}
	}
	if = {
		limit = { 
			OR = {
				tag = U02 #nirat
				tag = U04 #aakheta
				tag = L28 #koroshesh
			}
		}
		restore_country_name = yes
	}
	475 = { remove_core = ROOT }
	473 = { remove_core = ROOT }
	463 = { remove_core = ROOT }
	479 = { remove_core = ROOT }
	5481 = { remove_core = ROOT }
}

on_embrace_revolution = {
	if = {
		limit = {
			any_subject_country = {
				has_country_modifier = colony_inspired_by_revolution
			}
		}
		every_subject_country = {
			remove_country_modifier = colony_inspired_by_revolution
		}
	}
	if = {
		limit = { NOT = { government = republic } }
		change_government = republic
	}
	if = {
		limit = {
			revolution_target_exists = no
			is_great_power = yes
		}
		set_revolution_target = ROOT
		add_government_reform = revolutionary_republic_reform
		if = {
			limit = {
				any_country = {
					has_country_flag = last_revolutionary_country
				}
			}
			every_country = {
				limit = {
					has_country_flag = last_revolutionary_country
				}
				clr_country_flag = last_revolutionary_country
			}
		}
	}
	else = {
		add_government_reform = junior_revolutionary_republic_reform
	}
	if = {
		limit = { has_reform = parliamentary_reform }
		remove_government_reform = parliamentary_reform
	}
	kill_ruler = yes
	set_country_flag = revolutionary_republic_flag
	set_country_flag = had_revolution
}

# THIS = Revolutionary country being beaten, FROM = Country enforcing the peace treaty
on_dismantle_revolution = {
	events = {
		center_of_revolution.1500
	}
	if = {
		limit = {
			any_country = {
				has_country_flag = last_revolutionary_country
			}
		}
		every_country = {
			limit = {
				has_country_flag = last_revolutionary_country
			}
			clr_country_flag = last_revolutionary_country
		}
	}
	set_country_flag = last_revolutionary_country
}

# province
on_adm_development = {
	on_adm_development_effect = yes
	on_development_effect = yes

	#Anbennar
	events = {
		kheionai.4
		flavour_mulen.1
		flavour_mulen.2
	}
}

# province
on_dip_development = {
	on_dip_development_effect = yes
	on_development_effect = yes

	#Anbennar
	events = {
		kheionai.4
		flavour_mulen.1
		flavour_mulen.2
	}
}

# province
on_mil_development = {
	on_mil_development_effect = yes
	on_development_effect = yes

	#Anbennar
	events = {
		kheionai.4
		flavour_mulen.1
		flavour_mulen.2
	}
}

on_overextension_pulse = {
	random_events = {	#for future me, the numbers is weights which determine how likely they'll fire from the list
		100 = overextension.1
		100 = overextension.2
		100 = overextension.3
		100 = overextension.4
		100 = overextension.5
		100 = overextension.6
		100 = overextension.7
		100 = overextension.8
		100 = overextension.9
		100 = overextension.10
	}
}

on_colonial_pulse = {
	random_events = {
		100 = colonial.1
		100 = colonial.2
		100 = colonial.3
		100 = colonial.4
		100 = colonial.5
		#100 = colonial.8
		100 = colonial.9
		100 = colonial.10
		100 = colonial.11
		100 = colonial.12
		100 = colonial.13
		#100 = colonial.14
		100 = colonial.15
		100 = colonial.16
		100 = colonial.17
		100 = colonial.18
		#25 = dodo.1

		#Anbennar
		125 = anb_colonial.1
		125 = anb_colonial.2
		125 = anb_colonial.3
		125 = anb_colonial.4	#disabled cos its lame
		125 = anb_colonial.5
		125 = anb_colonial.6
		125 = anb_colonial.7
		100 = anb_colonial.8
		100 = anb_colonial.9
		100 = anb_colonial.10
		125 = anb_colonial.11

		1000 = flavor_grombar.27

		15000 = 0
	}
}

on_siberian_pulse = {
	random_events = {
		#Anbennar
		100 = anb_colonial_monstrous_frontier.1
		125 = anb_colonial_monstrous_frontier.2
		25 = anb_colonial_monstrous_frontier.3
		100 = anb_colonial_monstrous_frontier.4
		100 = anb_colonial_monstrous_frontier.5
		25 = anb_colonial_monstrous_frontier.6
		50 = anb_colonial_monstrous_frontier.7
		100 = anb_colonial_monstrous_frontier.8
		100 = anb_colonial_monstrous_frontier.9

		10000 = 0
	}
}


# country random events
on_monthly_pulse = {

	events = {
		magic_ruler.102
	}


	if = {
		limit = {
			ai = no
			has_factions = yes
		}
		if = {
			limit = {
				has_faction = adv_marchers
				NOT = {
					faction_influence = {
						faction = adv_marchers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = adv_marchers
				influence = 1
			}
		}
		if = {
			limit = {
				has_faction = adv_pioneers
				NOT = {
					faction_influence = {
						faction = adv_pioneers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = adv_pioneers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = adv_fortune_seekers
				NOT = {
					faction_influence = {
						faction = adv_fortune_seekers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = adv_fortune_seekers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tec_inventors
				NOT = {
					faction_influence = {
						faction = tec_inventors
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tec_inventors
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tec_manufacturers
				NOT = {
					faction_influence = {
						faction = tec_manufacturers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tec_manufacturers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tec_military_engineers
				NOT = {
					faction_influence = {
						faction = tec_military_engineers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tec_military_engineers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tec_brilliance
				NOT = {
					faction_influence = {
						faction = tec_brilliance
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tec_brilliance
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tec_technomancy
				NOT = {
					faction_influence = {
						faction = tec_technomancy
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tec_technomancy
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = aelnar_blaiddtar
				NOT = {
					faction_influence = {
						faction = aelnar_blaiddtar
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = aelnar_blaiddtar
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = aelnar_cymscal
				NOT = {
					faction_influence = {
						faction = aelnar_cymscal
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = aelnar_cymscal
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = aelnar_suir
				NOT = {
					faction_influence = {
						faction = aelnar_suir
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = aelnar_suir
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = burning_spear
				NOT = {
					faction_influence = {
						faction = burning_spear
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = burning_spear
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = verdant_bliss
				NOT = {
					faction_influence = {
						faction = verdant_bliss
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = verdant_bliss
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tiger_bane
				NOT = {
					faction_influence = {
						faction = tiger_bane
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tiger_bane
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = raging_blizzard
				NOT = {
					faction_influence = {
						faction = raging_blizzard
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = raging_blizzard
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = vine_tearer
				NOT = {
					faction_influence = {
						faction = vine_tearer
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = vine_tearer
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = rosen_rider
				NOT = {
					faction_influence = {
						faction = rosen_rider
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = rosen_rider
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = vilaechi
				NOT = {
					faction_influence = {
						faction = vilaechi
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = vilaechi
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = rosrholych
				NOT = {
					faction_influence = {
						faction = rosrholych
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = rosrholych
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = drominar
				NOT = {
					faction_influence = {
						faction = drominar
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = drominar
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = nl_cooperatists
				NOT = {
					faction_influence = {
						faction = nl_cooperatists
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = nl_cooperatists
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = nl_trade_barons
				NOT = {
					faction_influence = {
						faction = nl_trade_barons
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = nl_trade_barons
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = nl_old_guard
				NOT = {
					faction_influence = {
						faction = nl_old_guard
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = nl_old_guard
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = inf_ildran_hedine
				NOT = {
					faction_influence = {
						faction = inf_ildran_hedine
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = inf_ildran_hedine
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = inf_triad
				NOT = {
					faction_influence = {
						faction = inf_triad
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = inf_triad
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = inf_kaz_mesner
				NOT = {
					faction_influence = {
						faction = inf_kaz_mesner
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = inf_kaz_mesner
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = mykx_xhazobkult
				NOT = {
					faction_influence = {
						faction = mykx_xhazobkult
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = mykx_xhazobkult
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = bandit_kingdom_havoric_homesteaders
				NOT = {
					faction_influence = {
						faction = bandit_kingdom_havoric_homesteaders
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = bandit_kingdom_havoric_homesteaders
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = bandit_kingdom_falah_poachers
				NOT = {
					faction_influence = {
						faction = bandit_kingdom_falah_poachers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = bandit_kingdom_falah_poachers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = bandit_kingdom_bandit_captains
				NOT = {
					faction_influence = {
						faction = bandit_kingdom_bandit_captains
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = bandit_kingdom_bandit_captains
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = bandit_kingdom_ynnic_loyalists
				NOT = {
					faction_influence = {
						faction = bandit_kingdom_ynnic_loyalists
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = bandit_kingdom_ynnic_loyalists
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = tec_mechanists
				NOT = {
					faction_influence = {
						faction = tec_mechanists
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = tec_mechanists
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = enuchs
				NOT = {
					faction_influence = {
						faction = enuchs
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = enuchs
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = bureaucrats
				NOT = {
					faction_influence = {
						faction = bureaucrats
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = bureaucrats
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = mr_aristocrats
				NOT = {
					faction_influence = {
						faction = mr_aristocrats
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = mr_aristocrats
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = mr_traders
				NOT = {
					faction_influence = {
						faction = mr_traders
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = mr_traders
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = mr_guilds
				NOT = {
					faction_influence = {
						faction = mr_guilds
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = mr_guilds
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = rr_jacobins
				NOT = {
					faction_influence = {
						faction = rr_jacobins
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = rr_jacobins
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = rr_royalists
				NOT = {
					faction_influence = {
						faction = rr_royalists
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = rr_royalists
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = rr_girondists
				NOT = {
					faction_influence = {
						faction = rr_girondists
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = rr_girondists
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pr_buccaneers
				NOT = {
					faction_influence = {
						faction = pr_buccaneers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pr_buccaneers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pr_smugglers
				NOT = {
					faction_influence = {
						faction = pr_smugglers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pr_smugglers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pr_captains
				NOT = {
					faction_influence = {
						faction = pr_captains
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pr_captains
				influence = 1
			}
		}
		if = {
			limit = {
				has_faction = pen_discombobulatorium
				NOT = {
					faction_influence = {
						faction = pen_discombobulatorium
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pen_discombobulatorium
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pen_erectors
				NOT = {
					faction_influence = {
						faction = pen_erectors
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pen_erectors
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pen_harmaceuticals
				NOT = {
					faction_influence = {
						faction = pen_harmaceuticals
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pen_harmaceuticals
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pen_cloak_and_swagger
				NOT = {
					faction_influence = {
						faction = pen_cloak_and_swagger
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pen_cloak_and_swagger
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = pen_clodhoppers
				NOT = {
					faction_influence = {
						faction = pen_clodhoppers
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = pen_clodhoppers
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = four_families_kattyva
				NOT = {
					faction_influence = {
						faction = four_families_kattyva
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = four_families_kattyva
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = four_families_nymkorai
				NOT = {
					faction_influence = {
						faction = four_families_nymkorai
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = four_families_nymkorai
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = four_families_ursibadur
				NOT = {
					faction_influence = {
						faction = four_families_ursibadur
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = four_families_ursibadur
				influence = 1
			}
		} 
		if = {
			limit = {
				has_faction = four_families_vustarin
				NOT = {
					faction_influence = {
						faction = four_families_vustarin
						influence = 1
					}
				}
			}
			add_faction_influence = {
				faction = four_families_vustarin
				influence = 1
			}
		} 
	}
	
	#crusade triggered mod replacement
	if = { limit = { is_religion_enabled = ravelian }
		if = {
			limit = {
				religion = ravelian
				crusade_target = {
					exists = yes
					war_with = ROOT
					any_owned_province = {
						controlled_by = root
					}
				}
				land_maintenance = 1.0
			}
			add_country_modifier = { name = crusader duration = -1 }
		}
		else = {
			remove_country_modifier = crusader
		}
	}
	
	#defense of the empire triggered mod replacement
	if = {
		limit = {
			has_dlc = "Emperor"
			OR = {
				is_emperor = yes
				is_elector = yes
			}
			hre_reform_passed = emperor_reichskrieg
			any_known_country = {
				war_with = ROOT
				NOT = { is_part_of_hre = yes }
			}
		}
		add_country_modifier = { name = defense_of_the_empire_modifier duration = -1 }
	}
	else = {
		remove_country_modifier = defense_of_the_empire_modifier
	}
	
	#counter revolution triggered mod replacement
	if = {
		limit = {
			revolution_target_exists = yes
			is_revolutionary = no
			is_free_or_tributary_trigger = yes
			government = monarchy
			revolution_target = {
				OR = {
					capital_scope = {
						continent = ROOT
					}
					is_neighbor_of = ROOT
				}
			}
		}
		if = {
			limit = {
				revolution_target = {
					NOT = { war_with = ROOT }
				}
			}
			add_country_modifier = { name = counter_revolution duration = -1 }
			remove_country_modifier = reaction
		}
		else = {
			add_country_modifier = { name = reaction duration = -1 }
			remove_country_modifier = counter_revolution
		}
	}
	else = {
		remove_country_modifier = reaction
		remove_country_modifier = counter_revolution
	}
	
	#imperial mage triggered mod replacement
	if = {
		limit = {
			OR = {
				AND = {
					is_emperor = yes
					OR = {
						heir_has_personality = mage_personality
						has_heir_flag = heir_consort_mage_personality
					}
				}
				AND = {
					ruler_has_personality = mage_personality
					is_part_of_hre = yes
					is_emperor = no
				}
			}
		}
		add_country_modifier = { name = imperial_mage_election duration = -1 }
	}
	else = {
		remove_country_modifier = imperial_mage_election
	}

	if = {
		limit = {
			has_government_attribute = is_raja
		}
		4411 = { raj_monthy_calc = yes }
	}

	if = {
		limit = {
			owns = 4559
			if = {
				limit = {
					NOT = {
						has_global_flag = rending_active
					}
				}
				had_global_flag = {
					flag = spirit_cooldown_flag
					days = 35
				}
			}
		}
		random_province = {
			limit = {
				continent = asia
				NOT = { superregion = forbidden_lands_superregion }
				is_city = yes
				owner = { NOT = { has_country_modifier = spirit_event_cooldown } }
			}
			province_event = { id = spirits.000 }
			clr_global_flag = spirit_cooldown_flag
			set_global_flag = spirit_cooldown_flag
		}
	}

	if = {
		limit = {
			has_global_flag = rending_active
			owns = 4559
		}
		4559 = {
			subtract_variable = {
				which = rendingMonthsLeft
				value = 1
			}
		}
	}

	#harpy queendom gov mechanic
	if = {
		limit = {
			has_country_flag = hasQueendomGovBarFlag
		}
		set_variable = { which = QueendomAdditionVar value = 0 }
		set_variable = { which = QueendomPrimaryCultureVar value = 0 }
		set_variable = { which = QueendomCultureGroupVar value = 0 }
		set_variable = { which = QueendomRoostCountVar value = 0 }
		set_variable = { which = QueendomSubjectPositiveVar value = 0 }
		set_variable = { which = QueendomSubjectNegativeVar value = 0 }
		set_variable = { which = QueendomToleratedRacesVar value = 0 }
		set_variable = { which = QueendomMonumentVar value = 0 }
		ROOT = {
			subtract_variable = { which = QueendomOverallVar value = 1 }
			subtract_variable = { which = QueendomAdditionVar value = 1 }
		}
		every_owned_province = {
			if = {
				limit = {
					has_owner_culture = yes
					NOT = { development = 20 }
				}
				ROOT = {
					add_government_power = {
						mechanic_type = harpylen_queendom_claim_mechanic
						power_type = harpylen_queendom_power
						value = -0.15
					}
					change_variable = { which = QueendomAdditionVar value = -0.15 }
					change_variable = { which = QueendomPrimaryCultureVar value = -0.15 }
					change_variable = { which = QueendomOverallVar value = -0.15 }
				}
			}
			else_if = {
				limit = {
					culture_group = harpy
					has_owner_culture = no
					NOT = { development = 10 }
				}
				ROOT = {
					add_government_power = {
						mechanic_type = harpylen_queendom_claim_mechanic
						power_type = harpylen_queendom_power
						value = -0.1
					}
					change_variable = { which = QueendomAdditionVar value = -0.1 }
					change_variable = { which = QueendomCultureGroupVar value = -0.1 }
					change_variable = { which = QueendomOverallVar value = -0.1 }
				}
			}
			if = {
				limit = {
					has_active_triggered_province_modifier = harpy_roost
				}
				ROOT = {
					add_government_power = {
						mechanic_type = harpylen_queendom_claim_mechanic
						power_type = harpylen_queendom_power
						value = 0.1
					}
					change_variable = { which = QueendomAdditionVar value = 0.1 }
					change_variable = { which = QueendomRoostCountVar value = 0.1 }
					change_variable = { which = QueendomOverallVar value = 0.1 }
				}
			}
		}
		every_subject_country = {
			if = {
				limit = {
					has_opinion = {
						who = PREV
						value = 100
					}
				}
				ROOT = {
					add_government_power = {
						mechanic_type = harpylen_queendom_claim_mechanic
						power_type = harpylen_queendom_power
						value = 0.2
					}
					change_variable = { which = QueendomAdditionVar value = 0.2 }
					change_variable = { which = QueendomSubjectPositiveVar value = 0.2 }
					change_variable = { which = QueendomOverallVar value = 0.2 }
				}
			}		
			else_if = {
				limit = {
					NOT = {
						has_opinion = {
							who = PREV
							value = -100
						}
					}
				}
				ROOT = {
					add_government_power = {
						mechanic_type = harpylen_queendom_claim_mechanic
						power_type = harpylen_queendom_power
						value = -0.2
					}
					change_variable = { which = QueendomAdditionVar value = -0.2 }
					change_variable = { which = QueendomSubjectNegativeVar value = -0.2 }
					change_variable = { which = QueendomOverallVar value = -0.2 }
				}	
			}
		}
		if = {
			limit = { high_tolerance_dwarven_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_elven_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_halfling_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_gnomish_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_half_orcish_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_kobold_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_orcish_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_human_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_gnollish_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_ruinborn_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_goblin_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_troll_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_half_elven_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_ogre_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = {  high_tolerance_harimari_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_centaur_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_hobgoblin_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = { high_tolerance_lizardfolk_race_trigger = yes }
			ROOT = {
				add_government_power = {
					mechanic_type = harpylen_queendom_claim_mechanic
					power_type = harpylen_queendom_power
					value = 0.15
				}
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomToleratedRacesVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		if = {
			limit = {
				660 = {
					owned_by = ROOT
					has_great_project = {
						type = queens_throne
						tier = 3
					}
				}
			}
			ROOT = {
				change_variable = { which = QueendomAdditionVar value = 0.45 }
				change_variable = { which = QueendomMonumentVar value = 0.45 }
				change_variable = { which = QueendomOverallVar value = 0.45 }
			}
		}
		else_if = {
			limit = {
				660 = {
					owned_by = ROOT
					has_great_project = {
						type = queens_throne
						tier = 2
					}
				}
			}
			ROOT = {
				change_variable = { which = QueendomAdditionVar value = 0.3 }
				change_variable = { which = QueendomMonumentVar value = 0.3 }
				change_variable = { which = QueendomOverallVar value = 0.3 }
			}
		}
		else_if = {
			limit = {
				660 = {
					owned_by = ROOT
					has_great_project = {
						type = queens_throne
						tier = 1
					}
				}
			}
			ROOT = {
				change_variable = { which = QueendomAdditionVar value = 0.15 }
				change_variable = { which = QueendomMonumentVar value = 0.15 }
				change_variable = { which = QueendomOverallVar value = 0.15 }
			}
		}
		ROOT = {
			if = {
				limit = {
					check_variable = {
						which = QueendomOverallVar
						value = 100
					}
				}
				set_variable = { which = QueendomOverallVar value = 100 }
			}
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = QueendomOverallVar
							value = 0
						}
					}
				}
				set_variable = { which = QueendomOverallVar value = 0 }
			}
		}
	}
}

on_yearly_pulse = { #trigger 20.12 every year
	events = {
		#Pillar of Gates
		#sarhal_relics.19
		effelai_bloom.0
		the_command.7		#Command's Oni betrayal
		flavour_brelar.129	#Clockwork pulse
		flavour_yinquan.47	#sunny day pulse
	}
	if = { limit = { tag = Y65 } country_event = { id = flavour_arawkelin.10 } }
	if = { limit = { tag = Y65 } country_event = { id = flavour_arawkelin.12 } }
	if = { limit = { tag = I03 } country_event = { id = flavor_vazhatun.100 } }
	if = {
		limit = {
			has_country_modifier = lake_federation_member
		}
		random = {
			chance = 75
			country_event = {
				id = lake.506
			}
		}
		random_list = {
			33 = {
				random_owned_province = {
					province_event = {
						id = lake.508
					}
				}
			}
			33 = {
				country_event = {
					id = lake.509
				}
			}
			33 = {
				random_owned_province = {
					province_event = {
						id = lake.510
					}
				}
			}
		}
	}
	if = { limit = { is_year = 1650 NOT = { has_global_flag = rending_active } } random_country = { country_event = { id = spirits.700 } } }
	if = { 
		limit = { tag = I16 } 
		country_event = { id = flavour_gor_burad.60 }
	}

	#Deyeion decrease variable
	if = {
		limit = { has_country_modifier = G56_independence_movement_post_mt }
		subtract_variable = {
			which = G56_independence_movement_variable
			value = 1
		}
	}


	################################### Artificery ###################################
	#Failsave
	country_event = {
		id = anbennar_setup.19
	}
	#Research
	if = {
		limit = {
			has_country_flag = artifice_research_in_progress
		}
		subtract_variable = {
			which = ResearchSpeed
			value = 1
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = ResearchSpeed
						value = 1
					}
				}
			}
			if = {
				limit = {
					has_country_flag = artifice_research_in_progress
				}
				country_event = {
					id = artifice_research.4
					days = 1
					random = 120
				}
			}
		}
	}
	################################### Artificery End ###################################

}
on_yearly_pulse_2 = {
	#Ruler/Heir/Consort Death
	random_events = {
		100 = anb_ruler.1

		9900 = 0
	}
	random_events = {
		200 = anb_ruler.9

		9900 = 0
	}
	random_events = {
		200 = anb_ruler.8

		9900 = 0
	}
}
on_yearly_pulse_3 = {
}
on_yearly_pulse_4 = {
}
on_yearly_pulse_5 = {
}

# country random events
on_bi_yearly_pulse = {
	events = {
		center_of_revolution.2950
		center_of_revolution.3000
		rahenraj.2000
		rahenraj.2001
		jaddari_missions.1003
		# jaddari_missions.1004
		bulwar_flavour.0
		xhazobkult_events.2000
		spirits.500 #Temple Quest pulse
		spirits.607 #Check to see if any corrupted hearts are ready to drain
		spirits.011 #Plundering pulse
		spirits.013 #Another spirits pulse event. It's performant I swear
		harpy_events.100 #Harpy harem heir selection
		dakinshi_harem_events.1 #dakinshi harem events
		bulwar_flavour.11
		blorc.101 #blorc plunder management
		diggy.406 #dwarovar-marrhold tunnel maintenance
	}
	if = { limit = { ruler_can_revive = yes } save_ruler_stats = yes }
	if = { limit = { capital = 4411 has_government_attribute = is_raja } country_event = { id = rahenraj.2000 days = 365 } }
	if = {
		limit = {
			owns_core_province = 4565
			controls = 4565
			OR = {
				tag = Y51
				capital_scope = { region = bomdan_region }
			}
			OR = {
				religion = high_philosophy
				religion = righteous_path
				religion = lefthand_path
				religion = mystic_accord
			}
			ruler_has_mage_personality = yes
			NOT = { has_country_flag = bim_lau_mage_entombment }
		}
		set_country_flag = bim_lau_mage_entombment
	}
	if = { limit = { religion = xhazobkult } country_event = { id = xhazobkult_events.2000 days = 365 } }
	if = { limit = { tag = H77 has_country_flag = lodhum_tourism_enabled } country_event = { id = flavor_lodhum.100 } }
	if = { limit = { tag = H78 mission_completed = seghdihr_rely_ourselves } seghdihr_update_flow_modifiers = yes }
	if = {
		limit = {
			tag = H85
			has_heir = yes
			has_regency = no
			has_reform = truedagger_intrigue_court
			NOT = {
				has_country_flag = flag_truedagger_heir_done
			}
		}
		country_event = {
			id = flavor_truedagger.12
		}
	}
	random_events = {
		#Culture and Religion Events
		#125 = culture_religion_events.1 #disabled
		125 = culture_religion_events.3
		125 = culture_religion_events.4
		125 = culture_religion_events.5
		125 = culture_religion_events.6
		125 = culture_religion_events.7
		125 = culture_religion_events.8
		125 = culture_religion_events.9
		125 = culture_religion_events.10
		125 = culture_religion_events.11
		125 = culture_religion_events.12
		125 = culture_religion_events.13
		125 = culture_religion_events.14
		125 = culture_religion_events.15
		125 = culture_religion_events.16
		100 = culture_religion_events.17
		125 = culture_religion_events.18
		125 = culture_religion_events.19
		125 = culture_religion_events.20
		175 = culture_religion_events.21
		125 = culture_religion_events.22
		125 = culture_religion_events.23

		# Old Centralisation/Decentralisation
		100 = 806

		# Mercantilism
		100 = 6326
		100 = 6327
		100 = 6328
		100 = 6329

		# Trade Specific
		100 = trade.1
		100 = trade.2
		100 = trade.3
		100 = trade.4
		100 = trade.5
		100 = trade.6
		100 = trade.7
		100 = trade.8
		100 = trade.9
		100 = trade.10
		100 = trade.11
		100 = trade.12


		# Tradegoods events
		100 = 6418
		100 = 6419
		100 = 6420
		100 = 6421
		100 = 6422
		100 = 6423
		100 = 6424
		100 = 6425
		100 = 6426
		100 = 6427
		100 = 6428
		100 = 6429
		100 = 6431
		100 = 6432
		100 = 6433
		100 = 6434

		# Refoms, when having parliaments.
		100 = reforms.1
		100 = reforms.2
		100 = reforms.3
		100 = reforms.4

		100 = randomeventsstapehordes.1
		100 = randomeventsstapehordes.2
		100 = randomeventsstapehordes.3
		100 = randomeventsstapehordes.4
		100 = randomeventsstapehordes.5
		100 = randomeventsstapehordes.6
		100 = randomeventsstapehordes.7
		100 = randomeventsstapehordes.8
		100 = randomeventsstapehordes.13
		100 = randomeventsstapehordes.14
		100 = randomeventsstapehordes.17
		100 = randomeventsstapehordes.19
		100 = randomeventsstapehordes.20
		100 = randomeventsstapehordes.21
		100 = randomeventsstapehordes.22
		100 = randomeventsstapehordes.23
		100 = randomeventsstapehordes.24

		# Sailor events
		100 = sailor_event.1
		100 = sailor_event.2
		100 = sailor_event.3
		100 = sailor_event.4
		100 = sailor_event.5

		# Corruption Events
		100 = corruption_event.16
		100 = corruption_event.17
		100 = corruption_event.18
		100 = corruption_event.19
		100 = corruption_event.20


		# Institution Events
		#Feudalism Spread Events:
		150 = institution_events.8
		150 = institution_events.9
		150 = institution_events.10
		150 = institution_events.11
		#Global Trade Spread Events:
		150 = institution_events.50
		150 = institution_events.51
		150 = institution_events.52
		#Enlightenment Spread Events:
		150 = institution_events.70
		150 = institution_events.71
		150 = institution_events.72


		#Personality Events
		50 = personality_events.10 #Just Dilema
		50 = personality_events.11 #A righteous King
		50 = personality_events.12 #A Righteous Republican Ruler
		50 = personality_events.13
		50 = personality_events.14
		50 = personality_events.15
		50 = personality_events.16
		50 = personality_events.17
		50 = personality_events.18
		50 = personality_events.19
		50 = personality_events.20
		50 = personality_events.21
		50 = personality_events.22
		50 = personality_events.23
		50 = personality_events.24
		50 = personality_events.25
		50 = personality_events.26
		50 = personality_events.27
		50 = personality_events.28
		50 = personality_events.29
		50 = personality_events.30
		50 = personality_events.31
		50 = personality_events.32
		50 = personality_events.33
		50 = personality_events.34
		50 = personality_events.35
		50 = personality_events.36
		50 = personality_events.37
		50 = personality_events.38
		50 = personality_events.39
		50 = personality_events.40
		50 = personality_events.41
		50 = personality_events.42
		50 = personality_events.43
		50 = personality_events.44
		50 = personality_events.45
		50 = personality_events.46
		# 50 = personality_events.47
		50 = personality_events.48
		50 = personality_events.49
		50 = personality_events.50
		50 = personality_events.51
		50 = personality_events.52
		50 = personality_events.53
		50 = personality_events.54
		50 = personality_events.55
		50 = personality_events.56
		50 = personality_events.57
		50 = personality_events.58

		# Trade League Events
		100 = trade_league.1
		100 = trade_league.2
		100 = trade_league.3
		100 = trade_league.4
		100 = trade_league.7
		100 = trade_league.8
		100 = trade_league.9
		100 = trade_league.10
		100 = trade_league.11
		100 = trade_league.12
		100 = trade_league.13
		# 100 = trade_league.14

		#Industrial Revolution

		200 = industrialization_events.7
		200 = industrialization_events.8
		200 = industrialization_events.9
		200 = industrialization_events.10
		200 = industrialization_events.11
		200 = industrialization_events.12
		200 = industrialization_events.13
		200 = industrialization_events.14
		200 = industrialization_events.15
		200 = industrialization_events.16
		200 = industrialization_events.17
		200 = industrialization_events.18
		200 = industrialization_events.19
		200 = industrialization_events.20
		200 = industrialization_events.21
		200 = industrialization_events.22

		#Confucian Events/i.e. The Thought Harmony Events
		75 = confucian_events.19
		75 = confucian_events.20

		# Orthodox Icon Events
		# 75 = orthodox_icon_events.1
		# 75 = orthodox_icon_events.3
		# 75 = orthodox_icon_events.4
		# 75 = orthodox_icon_events.5
		# 75 = orthodox_icon_events.6

		# Grombar

		50 = flavor_grombar.16
		500 = flavor_grombar.23
		500 = flavor_grombar.24
		500 = flavor_grombar.25

		# Jaddari disaster prelim

		500 = jaddari_missions.101
		200 = jaddari_missions.102
		200 = jaddari_missions.103
		500 = jaddari_missions.104
		200 = jaddari_missions.105

		#Vampires

		300 = vampire_ruler.2
		300 = vampire_ruler.3
		300 = vampire_ruler.4
		300 = vampire_ruler.5
		300 = vampire_ruler.6
		300 = vampire_ruler.8

		2000 = 0 #was 1250

	}

	if = {
		limit = { has_estate_privilege = estate_burghers_magnate_council }
		random_list = {
			20 = { country_event = { id = flavor_gawed.6 days = 30 } }
			20 = {
				modifier = { # Less likely in influential
					factor = 0.5
					estate_influence = {
						estate = estate_burghers
						influence = 65
					}
				}
				country_event = { id = flavor_gawed.7 days = 30 }
			}
			5 = {
				modifier = {
					factor = 2
					num_of_loans = 2
				}
				modifier = {
					factor = 2
					num_of_loans = 5
				}
				modifier = {
					factor = 2
					num_of_loans = 10
				}
				modifier = {
					factor = 5
					is_bankrupt = yes
				}
				modifier = {
					factor = 2
					has_country_modifier = magnate_council_support
				}
				modifier = {
					factor = 0.25
					has_country_modifier = magnate_council_opposition
				}
				trigger = {
					num_of_loans = 1
					NOT = { has_country_modifier = magnate_offered_bailout }
				}
				country_event = { id = flavor_gawed.8 days = 30 }
			}
			20 = {
				modifier = {
					factor = 2
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 60
					}
				}
				modifier = {
					factor = 2
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 65
					}
				}
				modifier = {
					factor = 2
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 70
					}
				}
				trigger = {
					has_country_modifier = magnate_council_opposition
					NOT = { has_ruler_flag = refused_magnate_offer }
				}
				country_event = { id = flavor_gawed.9 days = 30 }
			}
			20 = {
				modifier = {
					factor = 2
					estate_influence = {
						estate = estate_burghers
						influence = 60
					}
				}
				modifier = {
					factor = 1.5
					estate_influence = {
						estate = estate_burghers
						influence = 70
					}
				}
				country_event = { id = flavor_gawed.10 days = 30 }
			}
			10 = {
				modifier = { # Relations should begin to sour a bit
					factor = 3
					is_year = 1575
				}
				modifier = {
					factor = 2
					estate_influence = {
						estate = estate_burghers
						influence = 50
					}
				}
				trigger = {
					estate_influence = {
						estate = estate_burghers
						influence = 50
					}
				}
				country_event = { id = flavor_gawed.11 days = 30 }
			}

			500 = {}
		}
	}

	#Yinquan
	if = { #not in events block/event trigger because this is only to disable this source of the event
		limit = {
			has_ruler_flag = is_holi
			NOT = { has_country_modifier = Y26_holi_retirement_cooldown }
			NOT = { check_variable = { which = holiJourneyVariable value = 10 } }
		}
		country_event = {
			id = flavour_yinquan.40
			random = 90
		}
	}

	#Bosancovac
	random_list = {
		100 = { country_event = { id = flavour_bosancovac.012 } }
		100 = { country_event = { id = flavour_bosancovac.013 } }
		100 = { country_event = { id = flavour_bosancovac.014 } }
		100 = { country_event = { id = flavour_bosancovac.015 } }
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
		100 = corruption_event.1
		100 = corruption_event.2
		100 = corruption_event.3
		100 = corruption_event.4
		100 = corruption_event.5
		100 = corruption_event.6
		100 = corruption_event.7
		100 = corruption_event.8
		100 = corruption_event.9
		100 = corruption_event.10
		200 = corruption_event.11
		200 = corruption_event.12
		200 = corruption_event.13
		200 = corruption_event.14
		200 = corruption_event.15

		4000 = 0
	}

	random_events = {
		100 = flavour_siadan.121
		100 = flavour_siadan.122
		100 = flavour_siadan.123
		100 = flavour_siadan.124
		100 = flavour_siadan.125

		200 = 0
	}

	random_events = {
		100 = allclan.2000
		100 = allclan.2002
		100 = allclan.2003
		100 = allclan.2004
		100 = allclan.2005
		100 = allclan.2006
		100 = allclan.2007
		100 = allclan.2008
		100 = allclan.2009
		100 = allclan.2010
		100 = allclan.2011
		100 = allclan.2012
		100 = allclan.2013
		100 = allclan.2014
		100 = allclan.2015
		100 = allclan.2016
		100 = allclan.2017
		100 = allclan.2018
		100 = allclan.2019
		100 = allclan.2020
		100 = allclan.2021
		100 = allclan.2022
		100 = allclan.2023
		100 = allclan.2024
		100 = allclan.2025
		100 = allclan.2026
		100 = allclan.2027
		100 = allclan.2028
		100 = allclan.2029
		100 = allclan.2030
		100 = allclan.2031
		100 = allclan.2032
		100 = allclan.2033
		100 = allclan.2034
		100 = allclan.2035
		100 = allclan.2036

		2500 = 0
	}

	#Long-lived Pulse
	random_events = {
		50 = anb_ruler.5
		10 = anb_ruler.12

		2000 = 0
	}

	events = {
		the_command.999
		flavour_bosancovac.140
	}

	#this is here as a fallback in case something slips through the crack

	update_artifice_points = yes #needs to be last
}

on_bi_yearly_pulse_3 = {

	#Fire estate agenda if you have that privilege
	# NOTE DOING THIS THROUGH RANDOM EVENT NOW WITH estate_privileges_and_agendas_events.4 INSTEAD!
	#on_bi_yearly_pulse_estate_privileges_effect = yes

	events = {
		#muslim_school_events.20 #Pick School
		#promoting_art_events.2	#Art finished!
		high_philosophy_events.0	#Pick School
		sarhalevents.2

		flavor_grombar.11
		flavor_grombar.12
		flavor_grombar.13
		flavor_grombar.17
		flavor_grombar.18
		flavor_grombar.22
		flavor_grombar.26
		flavor_grombar.99
		flavor_honsai.2

		akasik_flavour.1


		flavor_malacnar.8 #checks if you have fought lately

		flavor_castanor.38 # Adds coal to a random Deepwoods province if coal is unlocked and you've burned down the Deepwoods

		bianfang.16 #Bianfang hunting down LHP
		bianfang.201 #Bianfang hunting down Oni
		bianfang.30 #Eunuch assassination manager event

		flavour_plumstead.2 #plumstead pulse

		empkeios_events.1299 #Empkeios variable update - will only fire if player-controlled

	}
	random_events = {
		100 = new_court_flavour_events.25 #blood is thicker than water

		200 = ghavaanaj.3 # +Herd Growth
		150 = ghavaanaj.4 # +Herd Growth
		150 = ghavaanaj.5 # +Herd Growth
		150 = ghavaanaj.6 # +Herd Growth
		150 = ghavaanaj.7 # -Herd Growth
		150 = ghavaanaj.8 # -Herd Growth
		150 = ghavaanaj.9 # -Herd Growth
		150 = ghavaanaj.10 # -Herd Growth

		200 = the_command.11
		50 = the_command.12
		100 = the_command.13
		100 = the_command.40

		10 = the_command.1001
		10 = the_command.1002
		10 = the_command.1003
		10 = the_command.1004
		10 = the_command.1005
		# 20 = the_command.1006
		# 20 = the_command.1007

		1000 = the_command.2020
		1000 = the_command.2021
		1000 = the_command.2022
		1000 = the_command.2023

		#Jadequest events
		200 = verkalozovar_events.27
		200 = verkalozovar_events.28
		200 = verkalozovar_events.29
		200 = verkalozovar_events.30
		200 = verkalozovar_events.31
		200 = verkalozovar_events.32
		200 = verkalozovar_events.33
		200 = verkalozovar_events.34
		
		# Yinquan events
		50 = flavour_yinquan.23
		50 = flavour_yinquan.24

		50 = flavour_bosancovac.010

		# Mire Maw swamp events
		200 = flavor_miremaw.14
		200 = flavor_miremaw.15
		200 = flavor_miremaw.16
		200 = flavor_miremaw.17
		200 = flavor_miremaw.18
		200 = flavor_miremaw.19
		2 = flavor_miremaw.20

		200 = 0 #was 200
	}

	random_events = {
		300 = flavour_mulen.11
		300 = flavour_mulen.12
		100 = flavour_mulen.13
		100 = flavour_mulen.14
		100 = flavour_mulen.15
		100 = flavour_mulen.16
		100 = flavour_mulen.17
		100 = flavour_mulen.18
		100 = flavour_mulen.19
		100 = flavour_mulen.20
	}
	
	if = {
		limit = {
			has_reform = bulwari_temple_reform
			or = {
				NOT = { has_country_flag = vacyntassi_faction_event_flag }
				had_country_flag = { flag = vacyntassi_faction_event_flag days = 365 }
			}
		}
		random_list = {
			33 = { country_event = { id = flavor_vacyn.1001 } }
			33 = { country_event = { id = flavor_vacyn.1002 } }
			33 = { country_event = { id = flavor_vacyn.1003 } }
		}
	}

	if = { #Bulwar Age 1 Ability
		limit = {
			has_age_ability = ab_monstrous_rule
			development_in_provinces = {
				OR = {
					culture_is_human = yes
					culture_is_elven = yes
				}
				value = 100
			}
			OR = {
				had_country_flag = { flag = age_ability_monstrous_rule_cooldown_flag days = 1825 }
				NOT = { has_country_flag = age_ability_monstrous_rule_cooldown_flag }
			}
		}
		country_event = { id = bulwar_flavour.200 }
	}

	if = {
		limit = {
			owns = 4559
		}
		random_province = {
			limit = {
				province_group = temple_province_group
			}
			province_event = { id = spirits.400 }
		}
	}
}

on_bi_yearly_pulse_4 = {

	#Gommo global expansion
	if = { limit = { owns = 536 } #Aqatbar
		random = {
			chance = 70
			536 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 365 } #Port Jaher
		random = {
			chance = 70
			365 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4435 } #Rayavhashapal
		random = {
			chance = 70
			4435 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4879 } #Feiten
		random = {
			chance = 70
			4879 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 2773 } #Kherka
		random = {
			chance = 70
			2773 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4701 } #Cay Cam Sinh
		random = {
			chance = 70
			4701 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4963 } #Arawkelin
		random = {
			chance = 70
			4963 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4871 } #Tianlou
		random = {
			chance = 70
			4871 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4500 } #Sarisung
		random = {
			chance = 70
			4500 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	if = { limit = { owns = 4936 } #Mao Ji
		random = {
			chance = 70
			4936 = {
				province_event = {
					id = gommo_expansion_events.3
					days = 1
					random = 720
				}
			}
		}
	}
	#luciande
    if = {
        limit = { 
            tag = B34 
            has_country_flag = B34_slave_economy
        }
        
        random_list = {
            70 = {
            }
            30 = {
                country_event = {
                    id = orc_slavery.13
                }
            }
        }
    }

	if = {
		limit = {
			tag = G27 #Brelar
		}
		g27_malacnar_production_check_effect = yes 
	}

	#Birsartanses
	if = {
		limit = {
			OR = {
				tag = F21
				was_tag = F21
			}
			has_reform = birsartanses_central_administration_2
			has_country_flag = birsartanses_plans_enacted
			NOT = {
				has_country_modifier = F21_admin_plan
				has_country_modifier = F21_diplo_plan
				has_country_modifier = F21_milit_plan
				has_country_modifier = F21_admin_plan_upgrade
				has_country_modifier = F21_diplo_plan_upgrade
				has_country_modifier = F21_milit_plan_upgrade
				has_country_modifier = F21_plan_failure
				has_country_modifier = F21_not_proving_yourself
				has_country_flag = birsartanses_taking_test
			}
		}
		country_event = { id = flavour_birsartanses.7 }
	}

	random_events = { #all these were shifted from on_bi_yearly_pulse_1
		#randomevents
		100 = 730
		100 = 731
		100 = 732
		100 = 733
		100 = 734
		100 = 735
		100 = 736
		100 = 737
		100 = 738
		#100 = 739
		100 = 740
		100 = 741
		100 = 742

		100 = 850
		100 = 851
		100 = 852
		100 = 853
		100 = 854
		100 = 855
		100 = 857
		100 = 858
		100 = 859
		100 = 860
		100 = 861
		100 = 862
		100 = 863
		100 = 864
		#100 = 865
		100 = 866
		100 = 867
		100 = 868
		100 = 869
		100 = 870
		100 = 871
		100 = 872
		100 = 873
		#100 = 874
		#100 = 875
		#100 = 876
		100 = 877
		100 = 878
		100 = 879
		100 = 880
		100 = 881
		#100 = 882
		100 = 883
		100 = 884
		100 = 885
		100 = 836
		100 = 837
		100 = 838

		100 = 9472
		100 = 3097
		# 100 = 5005
		100 = 5026
		# 100 = 5037
		100 = 5063
		100 = 6014


		# Innovativeness
		100 = innovativeness_events.1
		100 = innovativeness_events.2
		50 = innovativeness_events.3
		100 = innovativeness_events.4
		100 = innovativeness_events.5
		100 = innovativeness_events.6
		100 = innovativeness_events.7
		# 100 = innovativeness_events.8
		100 = innovativeness_events.9
		100 = innovativeness_events.10
		100 = innovativeness_events.11
		100 = innovativeness_events.12
		100 = innovativeness_events.13
		100 = innovativeness_events.14
		100 = innovativeness_events.15

		# Trade Company Investments
		100 = investment_events.1
		100 = investment_events.2
		100 = investment_events.3
		100 = investment_events.4
		100 = investment_events.5
		100 = investment_events.6
		100 = investment_events.7
		100 = investment_events.8
		100 = investment_events.9
		100 = investment_events.10

		# Catholic Order Events
		#100 = order_events.1
		#100 = order_events.2
		#100 = order_events.3
		#100 = order_events.4
		#100 = order_events.5
		#100 = order_events.6
		#100 = order_events.7
		#100 = order_events.8
		#100 = order_events.9

		# Minority Expulsion Events
		100 = expel_minority_events.1
		100 = expel_minority_events.2
		100 = expel_minority_events.3
		100 = expel_minority_events.4
		100 = expel_minority_events.5

		# Papal Tithe Events	#Anbennarized
		100 = curia.1
		#100 = curia.2	#its italian bankers so
		100 = curia.4
		100 = curia.9
		100 = curia.10
		# 100 = curia.11
		100 = curia.12

		# Defender of the Faith
		100 = dotf.1
		100 = dotf.4
		# 100 = dotf.6
		100 = dotf.7

		# Mercenaries
		100 = mercs.1
		100 = mercs.2
		100 = mercs.3
		100 = mercs.4
		#100 = mercs.7 1.35
		100 = mercs.8
		100 = mercs.10
		100 = mercs.11

		# Espionage
		#100 = espionage_events.1
		# 100 = espionage_events.4
		100 = espionage_events.8
		80 = espionage_events.9

		#Reign of Terror
		# 150 = french_revolution.302
		# 100 = french_revolution.303

		# Papacy events
		100 = papacy_events.6

		# Professionalism
		100 = army_professionalism_events.4
		100 = army_professionalism_events.5
		75 = army_professionalism_events.6
		100 = army_professionalism_events.8
		100 = army_professionalism_events.9
		100 = army_professionalism_events.10
		100 = army_professionalism_events.11
		75 = army_professionalism_events.12
		100 = army_professionalism_events.13
		75 = army_professionalism_events.16

		# Agenda from the Estates
		1000 = estate_privileges_and_agendas_events.4

		#Anbennar
		150 = adventuring.1
		150 = adventuring.2
		150 = adventuring.3
		150 = adventuring.4
		150 = adventuring.5
		150 = adventuring.6
		150 = adventuring.8
		150 = adventuring.9
		150 = adventuring.10

		# Adenica random chance to proc horse and hunt events on a per ruler basis after requisite missions completed
		100 = flavor_adenica.10
		100 = flavor_adenica.1

		2000 = 0
	}
}

on_bi_yearly_pulse_5 = {
	random_events = { #all these were shifted from on_bi_yearly_pulse_1
		# # Anglican Events
		# 100 = anglican_events.1
		# 100 = anglican_events.2
		# 100 = anglican_events.3
		# 100 = anglican_events.4
		# 100 = anglican_events.5
		# 100 = anglican_events.6
		# 100 = anglican_events.7
		# 100 = anglican_events.8
		# 100 = anglican_events.9
		# 100 = anglican_events.10
		# 100 = anglican_events.11
		# 100 = anglican_events.12
		# 100 = anglican_events.13
		# 150 = anglican_events.15

		# # Hussite Events
		# 100 = hussite.1
		# 100 = hussite.2
		# 100 = hussite.3
		# 100 = hussite.4
		# 100 = hussite.5
		# 100 = hussite.6
		# 100 = hussite.7


		# #Mamluk Events

		# 175 = mamluk_events.1
		# 175 = mamluk_events.2
		# 175 = mamluk_events.3
		# 235 = mamluk_events.4
		# 185 = mamluk_events.5
		# 175 = mamluk_events.6
		# 250 = mamluk_events.7
		# 185 = mamluk_events.10
		# 185 = mamluk_events.11
		# 235 = mamluk_events.12

		# #Colonization of Siberia
		# 125 = siberian_events.2
		# 125 = siberian_events.3
		# 125 = siberian_events.4
		# 125 = siberian_events.5
		# 125 = siberian_events.6

		# #Russian Principalities

		# 100 = russian_principality_events.1
		# 125 = russian_principality_events.2
		# 125 = russian_principality_events.3
		# 125 = russian_principality_events.4
		# 125 = russian_principality_events.6
		# 125 = russian_principality_events.5
		# 125 = russian_principality_events.7
		# 100 = russian_principality_events.8
		# 75 = russian_principality_events.9
		# 125 = russian_principality_events.10

		# #Tsardoms

		# 125 = russian_tsardom_events.1
		# 125 = russian_tsardom_events.2
		# 125 = russian_tsardom_events.3
		# 100 = russian_tsardom_events.4
		# 125 = russian_tsardom_events.5
		# 100 = russian_tsardom_events.6
		# 100 = russian_tsardom_events.7
		# 100 = russian_tsardom_events.8
		# 125 = russian_tsardom_events.9
		# 125 = russian_tsardom_events.10
		# 100 = russian_tsardom_events.11

		# #Streltsy Events
		# 125 = streltsy_events.1
		# 125 = streltsy_events.3
		# 125 = streltsy_events.4
		# 125 = streltsy_events.5
		# 100 = streltsy_events.6

		# #Orthodox Metropolitans
		# 125 = patriarch_events.1
		# 125 = patriarch_events.2
		# 125 = patriarch_events.3
		# 75 = patriarch_events.4
		# 75 = patriarch_events.5

		# Catholic  Events
		# 100 = catholic_flavor.4
		# 100 = catholic_flavor.5
		# 100 = catholic_flavor.6
		# 100 = catholic_flavor.7
		# 100 = catholic_flavor.8
		# 100 = catholic_flavor.9
		# 100 = catholic_flavor.10
		#ravelian equivalent

		#Ravelian Society Events
		100 = ravelian.103
		100 = ravelian.104
		100 = ravelian.105
		100 = ravelian.106
		100 = ravelian.107
		100 = ravelian.108
		100 = ravelian.109

		100 = ravelian.200
		100 = ravelian.201
		100 = ravelian.202
		100 = ravelian.203
		100 = ravelian.204
		100 = ravelian.205
		100 = ravelian.206
		100 = ravelian.207

		#Ravelian Reform Events
		100 = ravelian.301
		100 = ravelian.302
		100 = ravelian.304
		100 = ravelian.305
		100 = ravelian.306
		100 = ravelian.307
		100 = ravelian.308
		100 = ravelian.309
		100 = ravelian.310
		100 = ravelian.311
		100 = ravelian.312

		100 = ravelian.400
		100 = ravelian.401
		100 = ravelian.402
		100 = ravelian.403
		100 = ravelian.404

		100 = ravelian.500
		100 = ravelian.501
		100 = ravelian.502
		100 = ravelian.503
		100 = ravelian.504

		100 = ravelian.600
		100 = ravelian.601
		100 = ravelian.602
		100 = ravelian.603
		100 = ravelian.604

		100 = ravelian.700
		100 = ravelian.701
		100 = ravelian.702
		100 = ravelian.703

		100 = corinite.200
		100 = corinite.201
		100 = corinite.202
		100 = corinite.203
		100 = corinite.204
		100 = corinite.205
		100 = corinite.206
		100 = corinite.207
		100 = corinite.208
		100 = corinite.209
		100 = corinite.210
		100 = corinite.211
		# 100 = corinite.212
		# 100 = corinite.213
		# 100 = corinite.214
		# 100 = corinite.215

		100 = xhazobkult_events.10
		100 = xhazobkult_events.11
		100 = xhazobkult_events.12
		100 = xhazobkult_events.13
		100 = xhazobkult_events.14
		200 = xhazobkult_events.15 #xhazobkult ai crutch
		200 = xhazobkult_events.16


		# # Japanese Daimyos
		# 15 = flavor_jap.10
		# 50 = flavor_jap.28
		# 100 = flavor_jap.40
		# 100 = flavor_jap.42
		# 100 = flavor_jap.43
		# 100 = flavor_jap.45
		# 100 = flavor_jap.49
		# 100 = flavor_jap.51
		# 100 = flavor_jap.52
		# 100 = flavor_jap.53
		# 100 = flavor_jap.54
		# 100 = flavor_jap.55



		# # China
		# 75 = meritocracy_events.1
		# 75 = meritocracy_events.2
		# 75 = meritocracy_events.3
		# 75 = meritocracy_events.4
		# 75 = meritocracy_events.5
		# 50 = china_events.11
		# 25 = china_events.12
		# 25 = china_events.24

		2000 = 0
	}
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
		# Republics
		100 = republics.4
		100 = republics.5
		100 = republics.6
		100 = republics.7
		# 100 = republics.8
		100 = republics.9
		100 = republics.10
		100 = republics.11
		100 = republics.12
		100 = republics.13
		100 = republics.14
		100 = republics.15
		100 = republics.16
		100 = republics.17
		100 = republics.18
		100 = republics.19
		100 = republics.20
		100 = republics.21
		100 = republics.22
		100 = republics.23
		100 = republics.24
		100 = republics.25
		100 = republics.26
		100 = republics.27
		100 = republics.28
		100 = republics.29
		100 = republics.30
		100 = republics.31
		100 = republics.32
		100 = republics.33
		100 = republics.34
		100 = republics.35
		100 = republics.36
		100 = republics.37
		100 = republics.38
		100 = republics.39
		100 = republics.40
		100 = republics.41
		100 = republics.42
		100 = republics.43

		# Theocracies
		100 = devotion_events.1
		100 = devotion_events.2
		100 = devotion_events.3
		100 = devotion_events.4
		100 = devotion_events.5
		#100 = devotion_events.6
		100 = devotion_events.7
		100 = devotion_events.8
		100 = devotion_events.9
		100 = devotion_events.10
		100 = devotion_events.11
		100 = devotion_events.12
		100 = devotion_events.13
		100 = devotion_events.14
		100 = devotion_events.15
		100 = devotion_events.16
		100 = devotion_events.18
		100 = devotion_events.19
		100 = devotion_events.22
		100 = devotion_events.23
		100 = devotion_events.24
		#100 = devotion_events.26
		# 100 = devotion_events.100
		# 100 = devotion_events.101
		# 100 = devotion_events.102
		# 100 = devotion_events.104
		# 100 = devotion_events.107
		# 100 = devotion_events.110
		# 100 = devotion_events.117
		# 100 = devotion_events.118
		# 100 = devotion_events.119
		# 100 = devotion_events.200
		# 100 = devotion_events.201
		# 100 = devotion_events.202
		# 100 = devotion_events.203
		# 100 = devotion_events.204
		# 100 = devotion_events.205
		# 100 = devotion_events.207
		# 100 = devotion_events.208
		# 100 = devotion_events.209
		# 100 = devotion_events.210
		# 100 = devotion_events.211
		# 100 = devotion_events.212
		# 100 = devotion_events.213
		# 100 = devotion_events.214
		# 100 = devotion_events.215
		# 100 = devotion_events.216
		# 100 = devotion_events.217
		# 100 = devotion_events.218
		# 100 = devotion_events.219

		#Center of Revolution - post-spawn (higher weighting than others as they are only relevant briefly)
		200 = center_of_revolution.1
		150 = center_of_revolution.2
		200 = center_of_revolution.3
		200 = center_of_revolution.8
		250 = center_of_revolution.9
		250 = center_of_revolution.10
		200 = center_of_revolution.12
		#Center of Revolution - pre-spawn
		100 = center_of_revolution.2000
		100 = center_of_revolution.2002
		100 = center_of_revolution.2003
		100 = center_of_revolution.2010
		
		#Anbennar
		#Harpy harem events
		600 = harpy_events.103
		300 = harpy_events.108
		300 = harpy_events.109
		300 = harpy_events.110
		300 = harpy_events.115
		300 = harpy_events.116
		300 = harpy_events.117
		300 = harpy_events.118
		300 = harpy_events.120

		1000 = 0
	}
}

on_thri_yearly_pulse_2 = {
	#port jaher to brasan
	if = { limit = { owns = 365 }
		if = { limit = { NOT = { has_global_flag = institutions_spread_to_aqatbar } }
			365 = {
				province_event = {
					id = institution_events.100
					days = 60
					random = 60
				}
			}
		}
		else = {
			365 = {
				province_event = {
					id = azka_evran.9
					days = 60
					random = 60
				}
			}
		}
	}
	if = { limit = { owns = 565 }
		if = { limit = { NOT = { has_global_flag = institutions_spread_to_aqatbar } }
			565 = {
				province_event = {
					id = institution_events.100
					days = 60
					random = 60
				}
			}
		}
		else = {
			536 = {
				province_event = {
					id = azka_evran.9
					days = 60
					random = 60
				}
			}
		}
	}

	#sareyand to davharral
	if = {
		limit = { owns = 625 }
		625 = {
			province_event = {
				id = institution_events.102
				days = 60
				random = 60
			}
		}
	}
	if = {
		limit = { owns = 2913 }
		2913 = {
			province_event = {
				id = institution_events.102
				days = 60
				random = 60
			}
		}
	}

	#Adeen stuff
	if = {
		limit = {
			has_estate = estate_adeen
			culture_group = baashidi
			NOT = {
				has_estate_privilege = estate_adeen_adeen_curtailed
				has_estate_privilege = estate_adeen_adeen_integrated
			}
		}
		if = {
			limit = {
				government = republic
			}
			random_list = {
				9 = {}
				1 = { country_event = { id = estate_adeen.11 } }
			}
		}
		random_list = {
			13 = {}
			4 = {
				country_event = { id = estate_adeen.10 }
				modifier = {
					factor = 1.5
					check_variable = {
						which = adeen_appease_count
						value = 3
					}
				}
				modifier = {
					factor = 1.5
					check_variable = {
						which = adeen_appease_count
						value = 6
					}
				}
				modifier = {
					factor = 1.5
					check_variable = {
						which = adeen_appease_count
						value = 9
					}
				}
				modifier = {
					factor = 1.5
					check_variable = {
						which = adeen_appease_count
						value = 12
					}
				}
				modifier = {
					factor = 2
					check_variable = {
						which = adeen_appease_count
						value = 15
					}
				}
			}
		}
	}

	random_events = {
		# Random to increase or decrease patriarch authority.
		# 25 = orthodox_flavor.1
		# 25 = orthodox_flavor.2
		# 25 = orthodox_flavor.3
		# 25 = orthodox_flavor.4
		# 25 = orthodox_flavor.5

		# 40 = muslim_piety.1
		# 40 = muslim_piety.2
		# 40 = muslim_piety.3
		# 20 = muslim_piety.4
		# 40 = muslim_piety.5
		# 40 = muslim_piety.6
		# 40 = muslim_piety.7
		# 40 = muslim_piety.8
		# 40 = muslim_piety.9
		# 40 = muslim_piety.10
		# 40 = muslim_piety.11
		# 40 = muslim_piety.12
		# 40 = muslim_piety.13
		# 40 = muslim_piety.14
		# 40 = muslim_piety.15
		# 40 = muslim_piety.16
		# 40 = muslim_piety.22
		# 300 = 0

		#Fey Piety Events
		40 = fey_alignment.1
		40 = fey_alignment.2
		40 = fey_alignment.3
		#40 = fey_alignment.4
		#40 = fey_alignment.5
		40 = fey_alignment.6
		40 = fey_alignment.7
		40 = fey_alignment.8
		40 = fey_alignment.9
		40 = fey_alignment.12
		40 = fey_alignment.13
		40 = fey_alignment.14
		40 = fey_alignment.15
		40 = fey_alignment.16

		#Anbennar - Goblinic Shamanism events
		4 = goblinic_shamanism_flavor.40
		4 = goblinic_shamanism_flavor.50
		4 = goblinic_shamanism_flavor.51
		4 = goblinic_shamanism_flavor.55
		4 = goblinic_shamanism_flavor.58
		4 = goblinic_shamanism_flavor.59
		4 = goblinic_shamanism_flavor.100
		4 = goblinic_shamanism_flavor.101
		4 = goblinic_shamanism_flavor.102
		4 = goblinic_shamanism_flavor.103
		4 = goblinic_shamanism_flavor.104
		4 = goblinic_shamanism_flavor.105
		4 = goblinic_shamanism_flavor.106
		4 = goblinic_shamanism_flavor.107
		4 = goblinic_shamanism_flavor.108
		4 = goblinic_shamanism_flavor.109
		4 = goblinic_shamanism_flavor.110
		4 = goblinic_shamanism_flavor.111
		4 = goblinic_shamanism_flavor.112
		4 = goblinic_shamanism_flavor.113
		4 = goblinic_shamanism_flavor.114
		4 = goblinic_shamanism_flavor.115
		4 = goblinic_shamanism_flavor.116
		4 = goblinic_shamanism_flavor.117
		4 = goblinic_shamanism_flavor.118
		4 = goblinic_shamanism_flavor.119
		4 = goblinic_shamanism_flavor.120
		4 = goblinic_shamanism_flavor.121
		4 = goblinic_shamanism_flavor.122
		4 = goblinic_shamanism_flavor.123
		4 = goblinic_shamanism_flavor.124
		4 = goblinic_shamanism_flavor.125
		4 = goblinic_shamanism_flavor.126
		4 = goblinic_shamanism_flavor.127
		4 = goblinic_shamanism_flavor.128
		4 = goblinic_shamanism_flavor.129
		4 = goblinic_shamanism_flavor.130
		4 = goblinic_shamanism_flavor.131
		4 = goblinic_shamanism_flavor.132
		4 = goblinic_shamanism_flavor.133
		8 = goblinic_shamanism_flavor.134 # Higher cause it requires war
		4 = goblinic_shamanism_flavor.135
		4 = goblinic_shamanism_flavor.136
		4 = goblinic_shamanism_flavor.137
		4 = goblinic_shamanism_flavor.138
		4 = goblinic_shamanism_flavor.139
		4 = goblinic_shamanism_flavor.140
		4 = goblinic_shamanism_flavor.141
		4 = goblinic_shamanism_flavor.142
		4 = goblinic_shamanism_flavor.143
		4 = goblinic_shamanism_flavor.144
		4 = goblinic_shamanism_flavor.145
		4 = goblinic_shamanism_flavor.146

		40 = eordellon.2

		30 = 0
	}

	events = {
		#Moved here so it fires more often
		#race_setup_events.9		#Expel/Purge opinionsrace_setup_events.9		#Expel/Purge opinions
		race_setup_events.20 # Update expel/purge opinions only for newly spawned nations, existing ones will be kept up to date by the expel/purge events

		# migration_force_settle.1
		new_sun_cult.241
		new_sun_cult.255		#Amussu incident trigger event
		bulwar_flavour.10
		dartaxagerdim_events.20

		#Ynn Buycev events, were on yearly but that was too frequent 
		ynn_buycev_events.999
		flavour_brelar.169	#ravelians in Breluslad


		spirits.298	#rending events

		#Mulen institution spread
		flavour_mulen.26
	}

	random_events = {
		#Fey Court 2.0 Events
		10 = fey_court.13
		30 = fey_court.14 # Question of Loyalty, event to make it harder to keep high relations with both courts
		10 = fey_court.15
		10 = fey_court.16
		10 = fey_court.17
		10 = fey_court.18
		10 = fey_court.19
		10 = fey_court.20
		10 = fey_court.21
		10 = fey_court.22
		10 = fey_court.23
		10 = fey_court.24
		10 = fey_court.25
		10 = fey_court.26
		10 = fey_court.27
		10 = fey_court.29
		10 = fey_court.30
		10 = fey_court.31
		10 = fey_court.32
		10 = fey_court.33
		10 = fey_court.34
		10 = fey_court.35
		10 = fey_court.36
		10 = fey_court.40
		10 = fey_court.41
		10 = fey_court.42
		10 = fey_court.43
		10 = fey_court.44
		10 = fey_court.45
		10 = fey_court.46
		10 = fey_court.47
		10 = fey_court.48
		20 = fey_court.49 # Caught in the Middle, event to force relations down

		50 = 0
	}

	random_events = {
		75 = 0

		100 = aw_bandits.1
		100 = aw_ghouls.1
		100 = aw_goblins.1
		100 = aw_hags.1
		100 = aw_haunted_house.1
		100 = aw_orcs.1
		100 = aw_satyrs.1
		100 = aw_thieves_guild.1
		100 = aw_trolls.1
		100 = aw_vampires.1
		100 = aw_werewolves.1
		100 = aw_wyvern.1
		100 = aw_zombies.1
		100 = aw_eldritch_cultists.1
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
		# Subject Interactions
		50 = subject_interaction_events.1
		50 = subject_interaction_events.4
		50 = subject_interaction_events.5
		50 = subject_interaction_events.6
		50 = subject_interaction_events.7
		50 = subject_interaction_events.9
		50 = subject_interaction_events.11
		50 = subject_interaction_events.14
		50 = subject_interaction_events.15
		50 = subject_interaction_events.17
		50 = subject_interaction_events.18
		50 = subject_interaction_events.19
		50 = subject_interaction_events.20
		50 = subject_interaction_events.21
		50 = subject_interaction_events.22
		50 = subject_interaction_events.23
		50 = subject_interaction_events.24
		50 = subject_interaction_events.25
		50 = subject_interaction_events.26
		50 = subject_interaction_events.27
		50 = subject_interaction_events.29
		50 = subject_interaction_events.30
		50 = subject_interaction_events.31
		50 = subject_interaction_events.32
		50 = subject_interaction_events.34
		50 = subject_interaction_events.35
		50 = subject_interaction_events.36
		50 = subject_interaction_events.38
		50 = subject_interaction_events.40
		50 = subject_interaction_events.43
		75 = tributary_events.1
		75 = tributary_events.2
		75 = tributary_events.3
		75 = tributary_events.4
		75 = tributary_events.5
		75 = tributary_events.6
		75 = tributary_events.7
		75 = tributary_events.8
		75 = tributary_events.9
		75 = tributary_events.10
		75 = tributary_events.13
		75 = tributary_events.16
		# 75 = tributary_events.17
		75 = tributary_events.18
		75 = tributary_events.19
		75 = tributary_events.23
		75 = tributary_events.24
		75 = tributary_events.26
		75 = tributary_events.25
		75 = tributary_events.27

		1000 = 0
	}

	events = {
		flavour_mulen.1000
	}
	#isobelin urban renewal pulse

	if = {
		limit = {
			tag = G91
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_architecture_institute
			}
			change_variable = {
				which = isobelin_variable_comissioners_plan
				value = 1.5
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_argezvale_help
			}
			change_variable = {
				which = isobelin_variable_comissioners_plan
				value = 6
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_other_country_help
			}
			change_variable = {
				which = isobelin_variable_comissioners_plan
				value = 3
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_other_country_help
			}
			change_variable = {
				which = isobelin_variable_comissioners_plan
				value = 1.5
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_embraced_industrailization
			}
			change_variable = {
				which = isobelin_variable_comissioners_plan
				value = 6
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_nabchel_coal_mine
			}
			change_variable = {
				which = isobelin_variable_comissioners_plan
				value = 6
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_comissioners_plan
			}
			random_list = {	
				100 = {
					country_event = {
						id = flavor_isobelin.303
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.309
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.315
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.325
					}
				}
			}
		}
		if = {
			limit = {
				has_country_flag = isobelin_country_flag_comissioners_plan
			}
			random_list = {
				100 = {
					country_event = {
						id = flavor_isobelin.323
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.324
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = isobelin_variable_comissioners_plan
					value = 1
				}
				NOT = {
					check_variable = {
						which = isobelin_variable_comissioners_plan
						value = 50
					}				
				}
			}
			random_list = {	
				100 = {
					country_event = {
						id = flavor_isobelin.305
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.306
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.307
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = isobelin_variable_comissioners_plan
					value = 50
				}
				NOT = {
					check_variable = {
						which = isobelin_variable_comissioners_plan
						value = 100
					}				
				}
			}
			random_list = {	
				100 = {
					country_event = {
						id = flavor_isobelin.311
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.312
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.313
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.314
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.304
					}
				}
			}
		}
		if = {
			limit = {
				check_variable = {
					which = isobelin_variable_comissioners_plan
					value = 100
				}
				NOT = {
					check_variable = {
						which = isobelin_variable_comissioners_plan
						value = 151
					}				
				}
			}
			random_list = {
				100 = {
					country_event = {
						id = flavor_isobelin.318
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.319
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.320
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.321
					}
				}
				100 = {
					country_event = {
						id = flavor_isobelin.322
					}
				}
			}
		}
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
		#Low Mandate Events
		# 10 = china_events.45
		# 10 = china_events.46
		# 50 = china_events.47
		# 10 = china_events.48
		# 10 = china_events.49
		# 10 = china_events.50
		# 50 = china_events.51
		# 10 = china_events.52
		# 10 = china_events.53
		# 50 = china_events.54
		# 10 = china_events.55 (triggers via neighbors)
		# 10 = china_events.56
		# 75 = china_events.57
		# 50 = china_events.58
		# 10 = china_events.59
		# 50 = china_events.60
	}

	random_events = {
		10 = rahenraj.2111
		10 = rahenraj.2113
		10 = rahenraj.2115
		10 = rahenraj.2117
		10 = rahenraj.2121
		10 = rahenraj.2123

		10 = the_command.10

		20 = 0
	}
	##aakhetist events
	random_events = {
		550 = 0

		50 = aakhetist.50
		80 = aakhetist.51
		80 = aakhetist.52
		80 = aakhetist.53
		80 = aakhetist.54
		60 = aakhetist.55
		60 = aakhetist.56
		80 = aakhetist.57
		80 = aakhetist.58
		80 = aakhetist.59
		60 = aakhetist.60
	}
	#ahati events
	random_events = {
		100 = ahati_events.30
		100 = ahati_events.31
		100 = ahati_events.32
		100 = ahati_events.33
		150 = ahati_events.34
		150 = ahati_events.35
		150 = ahati_events.36
		100 = ahati_events.38
		100 = ahati_events.39
		100 = ahati_events.40
		100 = ahati_events.41
		100 = ahati_events.42
	}
}

on_four_year_pulse = {
	#tanizu
    if = {
        limit = {
            owns = 5641
			NOT = { has_global_flag = beast_cycle_timer }
        }
        set_global_flag = beast_cycle_timer
    }
	else_if = {
		limit = {
			owns = 5641
			has_global_flag = beast_cycle_timer
		}
		clr_global_flag = beast_cycle_timer
		country_event = { id = beast_memory.2 }
	}
	#Gommo global expansion
	if = { limit = { owns = 536 } #Aqatbar
		536 = {
			province_event = {
				id = gommo_expansion_events.20
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 365 } #Port Jaher
		365 = {
			province_event = {
				id = gommo_expansion_events.21
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4435 } #Rayavhashapal
		4435 = {
			province_event = {
				id = gommo_expansion_events.22
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4879 } #Feiten
		4879 = {
			province_event = {
				id = gommo_expansion_events.23
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 2773 } #Kherka
		2773 = {
			province_event = {
				id = gommo_expansion_events.24
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4701 } #Cam Cy Sinh
		4701 = {
			province_event = {
				id = gommo_expansion_events.25
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4963 } #Arawkelin
		4963 = {
			province_event = {
				id = gommo_expansion_events.26
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4871 } #Tianlou
        4871 = {
			province_event = {
				id = gommo_expansion_events.27
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4500 } #Sarisung
        4500 = {
			province_event = {
				id = gommo_expansion_events.28
				days = 1
				random = 90
			}
		}
    }
	if = { limit = { owns = 4936 } #Mao Ji
        4936 = {
			province_event = {
				id = gommo_expansion_events.29
				days = 1
				random = 90
			}
		}
    }

	events = {
		lake.102 #Lake Federation Elections

		#Breluslad revolts
		flavour_brelar.61
	}
	random_events = {
		# randomevents.txt 1.35: moved here from biyearly
		100 = 3051
		100 = 5008
		100 = 5014
		100 = 5015
		100 = 5017
		100 = 5018
		100 = 5019
		100 = 5020
		100 = 5021
		100 = 5022
		100 = 5023
		100 = 5024
		100 = 5025
		100 = 5027
		100 = 5032
		100 = 5040
		100 = 5045
		#100 = 5050
		100 = 5051
		100 = 5052
		100 = 5053
		10 = 5054
		100 = 5055
		100 = 5056
		100 = 5058
		100 = 5059
		100 = 5060
		#100 = 5061
		100 = 5064
		100 = 5065
		#100 = 5066
		100 = 5068
		100 = 5070
		100 = 5071
		100 = 5072
		100 = 5074
		100 = 5075
		100 = 5076
		100 = 5077
		100 = 5082
		100 = 5083
		100 = 5084
		100 = 5085
		#100 = 5086
		100 = 5088
		100 = 5089
		100 = 5090
		100 = 5091
		100 = 5092
		100 = 5093
		100 = 5094
		100 = 5095
		10 = 5096
		100 = 5097
		100 = 5098
		100 = 5099
		100 = 6000
		100 = 6001
		100 = 6003
		#100 = 6004
		#100 = 6005
		#100 = 6006
		100 = 6012
		# 100 = 6013
		100 = 6015
		100 = 710
		#100 = 711
		100 = 712
		100 = 713
		100 = 714
		100 = 715
		100 = 716
		100 = 717
		100 = 718
		100 = 719
		100 = 720
		100 = 722
		100 = 723
		#100 = 724
		100 = 725
		100 = 726
		100 = 727
		100 = 728
		100 = 729

		# 100 = random_event.1
		# 100 = random_event.2	#this is America culture shift
		100 = random_event.3
		#100 = random_event.4
		100 = random_event.5
		100 = random_event.6
		100 = random_event.7
		#100 = random_event.8
		150 = random_event.9
		100 = random_event.10
		100 = random_event.11
		100 = random_event.12
		#100 = random_event.13	#refers to mecca so
		100 = random_event.14
		100 = random_event.15
		100 = random_event.16

		100 = random_event.26

		# Colonial Nations
		100 = colonial_nation.1
		100 = colonial_nation.4
		100 = colonial_nation.10
		100 = colonial_nation.12
		100 = colonial_nation.14
		100 = colonial_nation.77
		100 = colonial_nation.100
		100 = colonial_nation.102
		100 = colonial_nation.104
		100 = colonial_nation.106
		100 = colonial_nation.108
		100 = colonial_nation.110
		100 = colonial_nation.112
		100 = colonial_nation.114
		100 = colonial_nation.116
		100 = colonial_nation.118
		100 = colonial_nation.120
		100 = colonial_nation.122
		100 = colonial_nation.124
		100 = colonial_nation.126
		100 = colonial_nation.128
		100 = colonial_nation.130
		100 = colonial_nation.132
		100 = colonial_nation.134
		100 = colonial_nation.182
		100 = colonial_nation.183
		100 = colonial_nation.184
		100 = colonial_nation.185
		100 = colonial_nation.186
		100 = colonial_nation.187
		100 = colonial_nation.188
		100 = colonial_nation.189
		10 = colonial_nation.140
		10 = colonial_nation.142
		10 = colonial_nation.144
		10 = colonial_nation.146
		10 = colonial_nation.148
		10 = colonial_nation.150
		10 = colonial_nation.152
		10 = colonial_nation.154
		10 = colonial_nation.156
		10 = colonial_nation.158
		10 = colonial_nation.160
		10 = colonial_nation.162
		10 = colonial_nation.164
		10 = colonial_nation.166
		10 = colonial_nation.168
		10 = colonial_nation.170
		10 = colonial_nation.172
		10 = colonial_nation.174
		10 = colonial_nation.176

		# Dutch Republic
		100 = dutch_republic.1
		100 = dutch_republic.2
		100 = dutch_republic.3
		100 = dutch_republic.4
		100 = dutch_republic.5
		100 = dutch_republic.6
		100 = dutch_republic.7
		100 = dutch_republic.8
		100 = dutch_republic.9
		100 = dutch_republic.10
		150 = dutch_republic.11
		100 = dutch_republic.13
		100 = dutch_republic.14
		100 = dutch_republic.15
		100 = dutch_republic.16
		100 = dutch_republic.17
		100 = dutch_republic.18
		100 = dutch_republic.19
		100 = dutch_republic.20
		100 = dutch_republic.21
		100 = dutch_republic.22
		100 = dutch_republic.23
		100 = dutch_republic.24
		100 = dutch_republic.25
		100 = dutch_republic.27

		# Republic Factions
		100 = republic_factions.2
		100 = republic_factions.5
		100 = republic_factions.7
		100 = republic_factions.9
		100 = republic_factions.10
		100 = republic_factions.12
		100 = republic_factions.13
		100 = republic_factions.14
		100 = republic_factions.15
		100 = republic_factions.16
		100 = republic_factions.17
		100 = republic_factions.18
		100 = republic_factions.19
		100 = republic_factions.20
		100 = republic_factions.22
		100 = republic_factions.23
		100 = republic_factions.24

		# Anbennar - Technocracy Factions
		100 = artificer_factions.2
		100 = artificer_factions.3
		100 = artificer_factions.4
		100 = artificer_factions.5
		100 = artificer_factions.6
		100 = artificer_factions.7
		100 = artificer_factions.8
		100 = artificer_factions.9
		100 = artificer_factions.10
		100 = artificer_factions.11

		# Anbennar - Northern League Mangate Factions

		100 = flavor_gawed.14
		100 = flavor_gawed.15
		100 = flavor_gawed.16
		100 = flavor_gawed.17
		100 = flavor_gawed.18
		100 = flavor_gawed.19
		100 = flavor_gawed.20
		100 = flavor_gawed.21
		100 = flavor_gawed.22
		100 = flavor_gawed.23

		# Revolutionary Republic Factions

		100 = revolutionary_republic_factions.0
		100 = revolutionary_republic_factions.1
		100 = revolutionary_republic_factions.2
		100 = revolutionary_republic_factions.3
		100 = revolutionary_republic_factions.4
		100 = revolutionary_republic_factions.5
		100 = revolutionary_republic_factions.6
		100 = revolutionary_republic_factions.7
		100 = revolutionary_republic_factions.8
		100 = revolutionary_republic_factions.9

		# Revolutionary Empires
		100 = napoleon.1
		100 = napoleon.2

		# Pirate Factions
		100 = pirates.10
		100 = pirates.11
		100 = pirates.12
		100 = pirates.13
		100 = pirates.14
		100 = pirates.15
		100 = pirates.16
		100 = pirates.17
		100 = pirates.18
		100 = pirates.19

		# Republican Dictatorship
		100 = republican_dictatorship.1
		100 = republican_dictatorship.2
		100 = republican_dictatorship.3
		100 = republican_dictatorship.4
		100 = republican_dictatorship.5
		100 = republican_dictatorship.6
		100 = republican_dictatorship.7
		100 = republican_dictatorship.8

		# Elective Monarchy
		150 = elective_monarchy.1
		150 = elective_monarchy.2
		25 = elective_monarchy.3
		25 = elective_monarchy.4
		150 = elective_monarchy.6
		150 = elective_monarchy.8
		150 = elective_monarchy.9
		150 = elective_monarchy.10
		150 = elective_monarchy.11
		150 = elective_monarchy.12
		150 = elective_monarchy.14
		150 = elective_monarchy.17
		25 = elective_monarchy.18

		# Free Cities
		25 = free_cities.3
		25 = free_cities.8
		25 = free_cities.10
		25 = free_cities.13
		25 = free_cities.17
		25 = free_cities.19

		#Tribal Federations
		50 = tribal_federation_events.1
		50 = tribal_federation_events.2
		50 = tribal_federation_events.3
		#50 = tribal_federation_events.4
		#50 = tribal_federation_events.5
		50 = tribal_federation_events.6
		50 = tribal_federation_events.7
		50 = tribal_federation_events.8
		50 = tribal_federation_events.10

		#Empire of China
		# 100 = china_events.1
		# 100 = china_events.2
		# 100 = china_events.3
		# 100 = china_events.4
		# 75 = china_events.5
		# 100 = china_events.6
		# 100 = china_events.7
		# 100 = china_events.8
		# 100 = china_events.9
		# 100 = china_events.10
		# 100 = china_events.11
		# 100 = china_events.12
		# 100 = china_events.13
		# 100 = china_events.14
		# 100 = china_events.15
		# 100 = china_events.16
		# 100 = china_events.17
		# 100 = china_events.18
		# 100 = china_events.19
		# 100 = china_events.20
		# 100 = china_events.21
		# 100 = china_events.22
		# 100 = china_events.23
		# 100 = china_events.24
		# 100 = china_events.25
		# 100 = china_events.26
		# 100 = china_events.27
		# 100 = china_events.28
		# 100 = china_events.29
		# 100 = china_events.30
		# 100 = china_events.33
		# 100 = china_events.34
		# 100 = china_events.35
		# 100 = china_events.36
		# 100 = china_events.37
		# 100 = china_events.38
		# 100 = china_events.39
		# 50 = china_events.40
		# 100 = china_events.41
		# 100 = china_events.42
		# 100 = china_events.44

		# 10 = tortoise.1 # Galapagos Island Tortoises

		# 100 = flavor_pue.5

		# #Totemism Events	- we need to do our own of this eventually when we use totemism properly
		# 100 = totemism_flavor.1
		# 100 = totemism_flavor.7
		# 100 = totemism_flavor.8
		# 100 = totemism_flavor.10
		# 100 = totemism_flavor.11
		# 100 = totemism_flavor.13
		# 100 = totemism_flavor.14
		# 100 = totemism_flavor.15
		# 100 = totemism_flavor.16
		# 100 = totemism_flavor.17
		# 100 = totemism_flavor.18

		# #Volcano Events
		# 75 = volcano_events.2

		1000 = 0
	}
}

on_four_year_pulse_2 = {
	random_events = {

		#Made these four year as its a bit repetitive - once more events are in will move it back to bi or yearly!

		#for all tolerance events, generic or no
		800 = dwarven_tolerance_events.0 # Event organizer for all the dwarven events
		800 = gnomish_tolerance_events.0 # Ditto
		800 = half_elf_tolerance_events.0 # Ditto
		800 = halfling_tolerance_events.0 # Ditto
		800 = half_orc_tolerance_events.0 # Ditto
		800 = harpy_tolerance_events.0 # Ditto
		800 = human_tolerance_events.0 # Ditto
		800 = kobold_tolerance_events.0 # Ditto
		800 = orcish_tolerance_events.0 # Ditto
		800 = elven_tolerance_events.0 # Ditto
		800 = goblin_tolerance_events.0 # Ditto
		800 = harimari_tolerance_events.0 # Ditto
		800 = hobgoblin_tolerance_events.0 # Ditto
		800 = gnoll_tolerance_events.0 # Ditto
		800 = troll_tolerance_events.0 # Ditto
		800 = ruinborn_tolerance_events.0 # Ditto
		800 = ogre_tolerance_events.0 # Ditto
		800 = centaur_tolerance_events.0 # Ditto
		800 = lizardfolk_tolerance_events.0 # Ditto

		800 = 0
	}

	events = {

		race_setup_events.1		#Sets up Racial Tolerance Level (in case a country appears later)
		race_setup_events.2		#Ai only event
		#Moved to on_thri_yearly_pulse_2
		# race_setup_events.9		#Expel/Purge opinions

		# #TODO: add event 5

		# racial_modifiers.6		#just in case

		#Ynn Pulse Events, moved back to 3 year since there should be more events for variety
		ynn_events.100

		flavour_amacimst.300 #Amacimst event for converting rzentur
	}
	#country_event = { id = race_setup_events.3 days = 1 } #Unmatching Tolerances - Fixes level of tolerance towards other races
	#I moved this to be more frequent.
}

on_four_year_pulse_3 = {
	events = {
		fragments.2000
		anb_ruler.10		#Long-lived theocracy abdication
		corins_circle.101	#Arosha Oakbreaker Startup
		corins_circle.20	#Arosha Oakbreaker Corinite
		corins_circle.21	#Arosha Oakbreaker Monstrousness Down
		new_sun_cult.160		#tension increase event in Bulwar
		khet_mandate.60		#Hedonism event manager
	}

	random_events = {
		#dwarovar flavor events, don't put anything else here
		1000 = 0

		#100 = diggy.552 #cave goblin technocracy mil reform
		100 = diggy.553 #venombrew surplus
		100 = diggy.554 #railway breaks down
		100 = diggy.555 #wandering ettins
		100 = diggy.556 #restored machine
		100 = diggy.557 #halannas breath
		100 = diggy.558 #spider raid
		100 = diggy.559 #native orcs submit
		100 = diggy.560 #natives kill eachother
		100 = diggy.561 #treasure chamber
		90 = diggy.562 #ancient war golem
		100 = diggy.563 #ancestor statue
		100 = diggy.564 #ancient armory
		70 = diggy.565 #expedition monsters
		100 = diggy.566 #cave bats
		100 = diggy.567 #bugbears attack colony
		100 = diggy.568 #train wreck
		100 = diggy.569 #shoddy mine
		100 = diggy.570 #old battlefield
		70 = diggy.571 #ancient text
		100 = diggy.573 #family heirloom
		100 = diggy.574 #treasure map
		100 = diggy.575 #diggy hole
		100 = diggy.576 #lantern oil
		100 = diggy.577 #serpents gift
		100 = diggy.578 #serpents curse
		70 = diggy.579 #mushroom people event chain
		70 = diggy.583 #minotaur raid
		100 = diggy.586 #mushroom mining ritual
		100 = diggy.587 #fungrum impersonator
		50 = diggy.588  #fungrum mithril mine
		100 = diggy.589 #roth� herd
		25 = diggy.590 	#echoes event chain
		90 = diggy.592 #norker attack
		75 = diggy.593 #veladklufar infestation
		15 = diggy.594 #cave crab farms
		80 = diggy.595 #lumimoth migration begins
		100 = diggy.596 #bnunin horde

		100 = ancestor_worship.1	#Discover Krummul
		100 = ancestor_worship.2	#Discover Balgar
		100 = ancestor_worship.3	#Discover Murri
		100 = ancestor_worship.100	#New Ancestor
		100 = ancestor_worship.101	#Ancient Knowledge unearthed
		100 = ancestor_worship.102	#Conflicting Records lead to conflict
		100 = ancestor_worship.103	#Krummul Stories Inspire Warriors
		100 = ancestor_worship.104	#Balgar stories inspire architects
		100 = ancestor_worship.105	#Quila Stories inspire farming
		100 = ancestor_worship.106	#Urist Stories inspire spelunkers
		100 = ancestor_worship.107	#Mellegar stories inspire inventors
		100 = ancestor_worship.108	#Hehogrim Stories inspire joy
		100 = ancestor_worship.109	#Gimron Stories inspire justice
		100 = ancestor_worship.110	#Murri Stories inspire adventurers
		100 = ancestor_worship.111	#Dagrin stories inspire missionaries
		100 = ancestor_worship.112	#Outsider stories become popular
		100 = ancestor_worship.113	#Grave of local ancestor
		100 = ancestor_worship.114	#Ancestor Holiday Celebration
		100 = ancestor_worship.115	#Clan leader is making a shrine before even dying
		100 = ancestor_worship.116	#Tales of a noble foreigner
		100 = ancestor_worship.117	#Celebrate the ancestors
		100 = ancestor_worship.118	#Monsters destroy ancestor's grave
	}

	random_events = {
		#Sarhal flavor events, don't put anything else here. Yes this is all of Sarhal
		1000 = 0
		100 = vyzemby_flavour.4
		100 = vyzemby_flavour.7
		100 = vyzemby_flavour.10
		100 = vyzemby_flavour.11
		100 = vyzemby_flavour.12
		100 = vyzemby_flavour.13
		100 = vyzemby_flavour.16
		100 = vyzemby_flavour.19
		100 = vyzemby_flavour.20
		100 = lizard.1
		100 = lizard.2
		100 = lizard.3
		100 = lizard.4
		100 = lizard.5
		100 = lizard.6
		750 = medasi.21
		750 = medasi.22
		750 = medasi.23
		750 = medasi.24
		750 = medasi.25
		750 = medasi.26
		750 = medasi.29
		750 = medasi.30
		750 = medasi.31
		750 = medasi.32
		750 = medasi.33
		750 = medasi.34
		750 = medasi.35
	}
}

on_four_year_pulse_4 = {
	events = {
		harpy_events.115
		rinta_seeker_events.0
	}
	random_events = {
		1000 = bulwar_flavour.31
		30 = bulwar_flavour.32
		30 = bulwar_flavour.33	
		20 = bulwar_flavour.37
		100 = bulwar_flavour.40
		200 = bulwar_flavour.41
		1000 = bulwar_flavour.42
		100 = bulwar_flavour.43
		100 = bulwar_flavour.101
		100 = bulwar_flavour.102
		100 = bulwar_flavour.103
		100 = bulwar_flavour.104
		100 = bulwar_flavour.105
		100 = bulwar_flavour.106
		100 = bulwar_flavour.107
		100 = bulwar_flavour.108
		100 = bulwar_flavour.109
		100 = bulwar_flavour.110
		100 = bulwar_flavour.114
		100 = bulwar_flavour.115
		100 = bulwar_flavour.116
		100 = bulwar_flavour.117
		100 = bulwar_flavour.118
		100 = bulwar_flavour.127
		1000 = 0
	}

	#cardesti flavour events
	random_owned_province = {
		limit = {
			has_province_modifier = cardesti_minority_modifier
		}
		random_list = {
			15 = {
				province_event = {
					id = cardesti_events.7
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.8
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.9
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.10
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.11
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.12
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.14
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.17
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.18
					days = 1
					random = 185
				}
			}
			15 = {
				province_event = {
					id = cardesti_events.20
					days = 1
					random = 185
				}
			}
			100 = {
			}
		}
	}

	
	#Effelai Bloom Trigger
	if = {
		limit = {
			NOT = {
				has_global_flag = effelai_blooming_happening
				has_global_flag = effelai_blooming_over
			}
			#Fires the country event to cause the blooming for whoever owns this province(perf reasons) event is hidden, and is just a manager for handing out proper intro events
			owns = 1
			NOT = {
				calc_true_if = {
					amount = 20
					effelai_superregion = {
						type = all
						OR = {
							has_province_modifier = effelai_roots_dormant
							has_province_modifier = effelai_hub_dormant
						}
						OR = {
							religion = senanset
							religion = song_servants
							religion = chahinanito
							religion = tswohvwohii
						}
					}
				}
			}
		}
		country_event = {
			id = effelai_bloom.2
		}
	}
}

on_five_year_pulse = {
	random_events = {
		# Aristocracy 		13  (8g 5b)
		100 = ideagroups.100
		100 = ideagroups.101
		100 = ideagroups.102
		100 = ideagroups.103
		100 = ideagroups.104
		100 = ideagroups.105
		100 = ideagroups.106
		100 = ideagroups.107
		100 = ideagroups.108
		100 = ideagroups.109
		100 = ideagroups.110
		100 = ideagroups.111
		100 = ideagroups.112


		# Plutocracy 		19 (12g 7b)
		100 = ideagroups.200
		100 = ideagroups.201
		100 = ideagroups.202
		100 = ideagroups.203
		100 = ideagroups.204
		100 = ideagroups.205
		100 = ideagroups.206
		100 = ideagroups.207
		100 = ideagroups.208
		100 = ideagroups.209
		100 = ideagroups.210
		100 = ideagroups.211
		100 = ideagroups.212
		100 = ideagroups.213
		100 = ideagroups.214
		100 = ideagroups.215
		100 = ideagroups.216
		100 = ideagroups.217
		100 = ideagroups.218

		# Innovativenes		11 (7g 4b)
		100 = ideagroups.300
		100 = ideagroups.301
		100 = ideagroups.302
		100 = ideagroups.303
		100 = ideagroups.304
		100 = ideagroups.305
		100 = ideagroups.306
		100 = ideagroups.307
		100 = ideagroups.308
		100 = ideagroups.309
		100 = ideagroups.310

		# Religious		18 (11g 7b)
		# 100 = ideagroups.400
		100 = ideagroups.401
		100 = ideagroups.402
		100 = ideagroups.403
		100 = ideagroups.404
		100 = ideagroups.405
		# 100 = ideagroups.406
		100 = ideagroups.407
		100 = ideagroups.408
		100 = ideagroups.409
		100 = ideagroups.410
		100 = ideagroups.411
		100 = ideagroups.412
		100 = ideagroups.413
		100 = ideagroups.414
		100 = ideagroups.415
		100 = ideagroups.416
		100 = ideagroups.417


		# Spy			9 (6g 3b)
		100 = ideagroups.500
		100 = ideagroups.501
		100 = ideagroups.502
		100 = ideagroups.503
		100 = ideagroups.504
		100 = ideagroups.505
		# 100 = ideagroups.506
		100 = ideagroups.507
		100 = ideagroups.508


		# Diplomatic		9 (6g 3b)
		100 = ideagroups.600
		100 = ideagroups.601
		100 = ideagroups.602
		100 = ideagroups.603
		100 = ideagroups.604
		100 = ideagroups.605
		100 = ideagroups.606
		100 = ideagroups.607
		100 = ideagroups.608


		# Offensive 		14 (9g 5b)
		100 = ideagroups.700
		100 = ideagroups.701
		100 = ideagroups.702
		100 = ideagroups.703
		100 = ideagroups.704
		100 = ideagroups.705
		100 = ideagroups.706
		100 = ideagroups.707
		100 = ideagroups.708
		100 = ideagroups.709
		100 = ideagroups.710
		100 = ideagroups.711
		100 = ideagroups.712
		100 = ideagroups.713


		# Defensive		11 (5g 6b)
		100 = ideagroups.800
		100 = ideagroups.801
		100 = ideagroups.802
		100 = ideagroups.803
		100 = ideagroups.804
		100 = ideagroups.805
		100 = ideagroups.806
		100 = ideagroups.807
		100 = ideagroups.808
		100 = ideagroups.809
		100 = ideagroups.810
		100 = ideagroups.811
		100 = ideagroups.812
		100 = ideagroups.813
		100 = ideagroups.814
		100 = ideagroups.815


		# Trade			6 (7g 4b)
		100 = ideagroups.900
		100 = ideagroups.901
		100 = ideagroups.902
		100 = ideagroups.903
		100 = ideagroups.904
		100 = ideagroups.905
		100 = ideagroups.906
		100 = ideagroups.907
		100 = ideagroups.908
		100 = ideagroups.909
		100 = ideagroups.910

		# Maritime			22 (14g 8b)
		100 = ideagroups.1000
		100 = ideagroups.1001
		100 = ideagroups.1002
		100 = ideagroups.1003
		100 = ideagroups.1004
		100 = ideagroups.1005
		100 = ideagroups.1006
		100 = ideagroups.1007
		100 = ideagroups.1008
		100 = ideagroups.1009
		100 = ideagroups.1010
		100 = ideagroups.1011
		100 = ideagroups.1012
		100 = ideagroups.1013
		100 = ideagroups.1014
		100 = ideagroups.1015
		100 = ideagroups.1016
		100 = ideagroups.1017
		100 = ideagroups.1018
		100 = ideagroups.1019
		100 = ideagroups.1020
		100 = ideagroups.1021

		# Economic		11 (7g 4b)
		100 = ideagroups.1100
		100 = ideagroups.1101
		100 = ideagroups.1102
		100 = ideagroups.1103
		100 = ideagroups.1104
		100 = ideagroups.1105
		100 = ideagroups.1106
		100 = ideagroups.1107
		100 = ideagroups.1108
		100 = ideagroups.1109
		100 = ideagroups.1110

		# Exploration		11 (7g 4b)
		100 = ideagroups.1200
		100 = ideagroups.1201
		100 = ideagroups.1202
		100 = ideagroups.1203
		100 = ideagroups.1204
		100 = ideagroups.1205
		100 = ideagroups.1206
		100 = ideagroups.1207
		# 100 = ideagroups.1208
		100 = ideagroups.1209
		100 = ideagroups.1210

		# Quality		11 (7g 4b)
		100 = ideagroups.1300
		100 = ideagroups.1301
		100 = ideagroups.1302
		100 = ideagroups.1303
		100 = ideagroups.1304
		100 = ideagroups.1305
		100 = ideagroups.1306
		100 = ideagroups.1307
		100 = ideagroups.1308
		100 = ideagroups.1309
		100 = ideagroups.1310

		# Quantity		11 (7g 4b)
		100 = ideagroups.1400
		100 = ideagroups.1401
		100 = ideagroups.1402
		100 = ideagroups.1403
		100 = ideagroups.1404
		100 = ideagroups.1405
		100 = ideagroups.1406
		100 = ideagroups.1407
		100 = ideagroups.1408
		100 = ideagroups.1409
		100 = ideagroups.1410


		# Expansion		11 (7g 4b)
		100 = ideagroups.1500
		100 = ideagroups.1501
		100 = ideagroups.1502
		100 = ideagroups.1503
		100 = ideagroups.1504
		100 = ideagroups.1505
		100 = ideagroups.1506
		100 = ideagroups.1507
		100 = ideagroups.1508
		100 = ideagroups.1509
		100 = ideagroups.1510

		# Administrative	8 (5g 3b) #1.35 adjusted
		100 = ideagroups.1600
		100 = ideagroups.1601
		100 = ideagroups.1602
		100 = ideagroups.1605
		100 = ideagroups.1606
		100 = ideagroups.1607
		100 = ideagroups.1608
		100 = ideagroups.1609

		# Naval		11 (7g 4b)
		100 = ideagroups.1700
		100 = ideagroups.1701
		100 = ideagroups.1702
		100 = ideagroups.1703
		100 = ideagroups.1704
		100 = ideagroups.1705
		100 = ideagroups.1706
		100 = ideagroups.1707
		100 = ideagroups.1708
		100 = ideagroups.1709
		100 = ideagroups.1710

		# Influence		11 (7g 4b)
		100 = ideagroups.1800
		100 = ideagroups.1801
		100 = ideagroups.1802
		100 = ideagroups.1803
		100 = ideagroups.1804
		100 = ideagroups.1805
		100 = ideagroups.1806
		100 = ideagroups.1807
		100 = ideagroups.1808
		100 = ideagroups.1809
		100 = ideagroups.1810

		# Humanist		11 (7g 4b)
		100 = ideagroups.1900
		100 = ideagroups.1901
		100 = ideagroups.1902
		100 = ideagroups.1903
		100 = ideagroups.1904
		100 = ideagroups.1905
		100 = ideagroups.1906
		100 = ideagroups.1907
		# 100 = ideagroups.1908
		100 = ideagroups.1909
		100 = ideagroups.1910

		# Horde Ideas		10 (8g 2b)
		100 = ideagroups.1922
		100 = ideagroups.1923
		100 = ideagroups.1924
		100 = ideagroups.1925
		100 = ideagroups.1926
		100 = ideagroups.1927
		100 = ideagroups.1928
		100 = ideagroups.1929
		100 = ideagroups.1930
		100 = ideagroups.1931

		#Theocracy Ideas		11 (9g 2b)
		100 = ideagroups.1911
		100 = ideagroups.1912
		100 = ideagroups.1913
		100 = ideagroups.1914
		100 = ideagroups.1915
		100 = ideagroups.1916
		100 = ideagroups.1917
		100 = ideagroups.1918
		100 = ideagroups.1919
		100 = ideagroups.1920
		# 100 = ideagroups.1921

		# Indigenous		10 (6g 4b)
		100 = ideagroups.1932
		100 = ideagroups.1933
		100 = ideagroups.1934
		100 = ideagroups.1935
		100 = ideagroups.1936
		100 = ideagroups.1937
		100 = ideagroups.1938
		100 = ideagroups.1939
		100 = ideagroups.1940
		100 = ideagroups.1941

		#1.35 INfrastructure, Court, Mercenary
		# Infrastructure		10 (5g 5b)
		100 = ideagroups.2000
		100 = ideagroups.2001
		100 = ideagroups.2002
		100 = ideagroups.2003
		100 = ideagroups.2004
		100 = ideagroups.2005
		100 = ideagroups.2006
		100 = ideagroups.2007
		100 = ideagroups.2008
		100 = ideagroups.2009
		
		#Court Events			8 (6g 2b)
		100 = ideagroups.2010
		100 = ideagroups.2011
		100 = ideagroups.2012
		100 = ideagroups.2013
		100 = ideagroups.2014
		100 = ideagroups.2015
		100 = ideagroups.2016
		100 = ideagroups.2017
		
		#Mercenary Ideas		9 (6g 3b)
		100 = ideagroups.2020
		100 = ideagroups.2021
		100 = ideagroups.1603
		100 = ideagroups.1604
		100 = ideagroups.1610
		100 = ideagroups.2025
		100 = ideagroups.2026
		100 = ideagroups.2027
		100 = ideagroups.2028

		1000 = 0
	}

	events = {
		#seven_cities_events.1000 #Clearing of Seven Cities Hunt when goal is no longer possible
		# fragments.2000	#Already done in the four years pulse
		racial_modifiers.3  #Military Force Switch if Oppressed - Civilized races
		racial_modifiers.4  #Military Force Switch if Oppressed - Monstrous races

		#Favored by the Gods Regent Court Events
		favored_RC.1
		favored_RC.4
		favored_RC.7
		favored_RC.10
		favored_RC.13
		favored_RC.16
		favored_RC.19
		favored_RC.22
		favored_RC.25
		favored_RC.28
		favored_RC.31
		favored_RC.34
		favored_RC.37
		favored_RC.40
		bulwar_flavour.30 #Surani Refugees Settling
		anb_miscevents.15
		flavor_rogieria.20 #Emulant of Rogier
		spirits.900 #Ancestral Communion pulse event
		flavor_cestirmark.4 #Random Trollsbayer Advisors
		flavour_zongji.1 #Li�ngzhu examination
		#flavor_cestirmark.300 #Special Cases events
		flavour_orldhum.53 #Enables Aml-az-Orlz random events

		ynnsman_events.242	#Iess�l, we need to cook
		ynnsman_events.105 #Poachers Kill Patrol

		blorc.101 #blorc plunder management, yes again
		flavor_newhavoral.14
		flavour_plumstead.6
		
		flavor_crathanor.15	#Crathanor Lightfather Emulant
	}

	#Shadowmoon handler
	if = {
		limit = {
			has_country_flag = in_shadowmoon_conspiracy
			B37 = {
				has_country_flag = shadowmoon_begin_covert_actions
			}
		}
		if = {
			limit = {
				OR = {
					AND = {
						has_opinion = {
							who = B37
							value = 100
						}
						exists = B37
					}
					tag = B37
				}
			}
			random_list = {
				25 = {
					# Hurt Legitimacy
					country_event = {
						id = flavor_rogieria.24
						random = 185
					}
				}
				25 = {
					# Hurt Prestige
					country_event = {
						id = flavor_rogieria.25
						random = 185
					}
				}
				10 = {
					# Hurt Relations
					trigger = {
						tag = B37
					}
					country_event = {
						id = flavor_rogieria.26
						random = 185
					}
				}
				25 = {
				}
			}
		}
		else = {
			clr_country_flag = in_shadowmoon_conspiracy
			B37 = {
				country_event = { id = flavor_rogieria.27 days = 7 }
			}
		}
	}

	#Railskulker train stuff
	if = {
		limit = {
			tag = H75
			has_reform = railskulker_capital_on_train_tracks
		}
		country_event = { id = flavour_railskulker.18 }
	}

	# Gommo research division
	country_event = { id = gommo_expansion_events.10 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.11 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.12 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.13 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.14 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.15 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.16 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.17 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.18 days = 1 random = 90 }
	country_event = { id = gommo_expansion_events.19 days = 1 random = 90 }

	if = { limit = { owns = 536 } #Aqatbar
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.30 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 365 } #Port Jaher
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.31 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4435 } #Rayavhashapal
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.32 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4879 } #Feiten
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.33 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 2773 } #Kherka
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.34 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4701 } #Cay Cam Sinh
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.35 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4963 } #Arawkelin
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.36 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4871 } #Tianlou
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.37 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4500 } #Sarisung
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.38 days = 1 random = 90 }
		}
	}
	if = { limit = { owns = 4936 } #Aqatbar
		random = {
			chance = 35
			country_event = { id = gommo_expansion_events.39 days = 1 random = 90 }
		}
	}
	if = {
		limit = { mission_completed = A73_carver_influence }
		random = {
			chance = 25
			A73 = {
				country_event = { id = silverforge.21 days = 1 random = 90 }
			}
		}
	}

	#flip zyujyut bokai province if occupied by yan nation for 10+ years
	if = {
		limit = {
			culture_group = yan
			zyujyut_bokai_provinces = {
				type = any
				owned_by = ROOT
				culture = bokai
				had_province_flag = {
					flag = zyujyut_integrating_bokai_flag
					days = 3650
				}
			}
		}
		random_owned_province = {
			limit = {
				province_group = zyujyut_bokai_provinces
				culture = bokai
				had_province_flag = {
					flag = zyujyut_integrating_bokai_flag
					days = 3650
				}
			}
			clr_province_flag = zyujyut_integrating_bokai_flag
			province_event = { id = flavour_zyujyut.900 }
		}
	}
	#LF mage event
	if = {
		limit = {
			has_country_modifier = lake_federation_member
		}
		random = {
			chance = 25
			country_event = {
				id = lake.507
			}
		}
	}

}

# Estates pulse
on_five_year_pulse_2 = {
	random_events = {
		# Burghers
		100 = burghers_estate_events.1
		100 = burghers_estate_events.2
		100 = burghers_estate_events.3
		100 = burghers_estate_events.4
		100 = burghers_estate_events.5
		100 = burghers_estate_events.6
		100 = burghers_estate_events.7
		100 = burghers_estate_events.8
		100 = burghers_estate_events.9
		400 = burghers_estate_events.10 #Demands
		100 = burghers_estate_events.11 #Bonus
		100 = burghers_estate_events.12
		100 = burghers_estate_events.13
		400 = burghers_estate_events.14 #Demands
		100 = burghers_estate_events.15 #Disloyal
		# Nobles
		100 = nobles_estate_events.1 #Demands
		100 = nobles_estate_events.2
		100 = nobles_estate_events.3
		100 = nobles_estate_events.4
		400 = nobles_estate_events.5 #Demands
		100 = nobles_estate_events.6
		100 = nobles_estate_events.7
		400 = nobles_estate_events.8 #Disloyal
		400 = nobles_estate_events.9 #Disloyal
		50 = nobles_estate_events.10
		100 = nobles_estate_events.11 #Bonus
		# Clergy
		# 100 = church_estate_events.1
			#Regional Variations:
			# 100 = church_estate_events.101
			# 100 = church_estate_events.102
			# 100 = church_estate_events.103
			100 = church_estate_events.104
			# 100 = church_estate_events.105
		100 = church_estate_events.2
		100 = church_estate_events.3
		100 = church_estate_events.4
		400 = church_estate_events.5 #Disloyal
		400 = church_estate_events.6 #Demands
		100 = church_estate_events.7 #Bonus
		100 = church_estate_events.8
		100 = church_estate_events.9
		100 = church_estate_events.10
		# Dhimmi
		# 100 = dhimmi_estate_events.1
		# 400 = dhimmi_estate_events.2 #Demands
		# 100 = dhimmi_estate_events.3
		# 100 = dhimmi_estate_events.4
		# 100 = dhimmi_estate_events.5
		# 100 = dhimmi_estate_events.6
		# 400 = dhimmi_estate_events.7 #Disloyal
		# 100 = dhimmi_estate_events.8
		# Cossacks
		# 100 = cossack_estate_events.1
		#100 = cossack_estate_events.2 (triggers in neighbor country) was already commented
		# 100 = cossack_estate_events.6
		# 100 = cossack_estate_events.7
		# 100 = cossack_estate_events.8
		# 100 = cossack_estate_events.9
		# 100 = cossack_estate_events.10
		# 100 = cossack_estate_events.11
		# 400 = cossack_estate_events.12 #Disloyal
		# 100 = cossack_estate_events.13
		# 400 = cossack_estate_events.14 #Demands
		# Tribes
		100 = tribal_estate_events.1
		100 = tribal_estate_events.2
		100 = tribal_estate_events.3
		100 = tribal_estate_events.4
		100 = tribal_estate_events.5
		100 = tribal_estate_events.6
		100 = tribal_estate_events.7
		100 = tribal_estate_events.8
		100 = tribal_estate_events.9
		150 = tribal_estate_events.11 #Demands
		150 = tribal_estate_events.12 #Demands
		150 = tribal_estate_events.13 #Demands
		150 = tribal_estate_events.14 #Demands

		#Anbennar
		# Artificers
		100 = artificers_estate_events.1
		100 = artificers_estate_events.2
		100 = artificers_estate_events.3
		100 = artificers_estate_events.4
		100 = artificers_estate_events.5
		400 = artificers_estate_events.6 #Demands
		100 = artificers_estate_events.7
		100 = artificers_estate_events.8
		100 = artificers_estate_events.9
		100 = artificers_estate_events.10
		100 = artificers_estate_events.11
		400 = artificers_estate_events.15 #Disloyal

		# Adventurers
		100 = adventurers_estate_events.1
		100 = adventurers_estate_events.2
		100 = adventurers_estate_events.3
		100 = adventurers_estate_events.4
		100 = adventurers_estate_events.5
		400 = adventurers_estate_events.6
		100 = adventurers_estate_events.7
		100 = adventurers_estate_events.8
		100 = adventurers_estate_events.9
		400 = adventurers_estate_events.10	#Demands
		400 = adventurers_estate_events.11	#Demands
		100 = adventurers_estate_events.12
		100 = adventurers_estate_events.13	#Bonus
		#400 = adventurers_estate_events.15 #Disloyal - this is commented as .15 is not an valid events its one of those revolt events

		# Mages
		100 = mages_estate_events.1
		100 = mages_estate_events.2
		100 = mages_estate_events.3
		100 = mages_estate_events.4
		100 = mages_estate_events.5
		100 = mages_estate_events.6
		100 = mages_estate_events.7
		100 = mages_estate_events.8
		100 = mages_estate_events.9
		100 = mages_estate_events.10
		100 = mages_estate_events.11	#Demands
		400 = mages_estate_events.12	#Demands
		100 = mages_estate_events.13	#Bonus
		100 = mages_estate_events.14
		100 = mages_estate_events.15
		100 = mages_estate_events.16
		100 = mages_estate_events.17
		100 = mages_estate_events.18
		400 = mages_estate_events.19	#Disloyal
		100 = mages_estate_events.20	#Bonus
		#400 = mages_estate_events.21 #Disloyal - same as above
		100 = mages_estate_events.22
		400 = mages_estate_events.24	#Disloyal

		#sebhuliamnoblerivalry
		100 = dartaxagerdim_events.50
		100 = dartaxagerdim_events.51

		# Raj Ministries
		100 = rajministries.1
		100 = rajministries.2
		100 = rajministries.3
		100 = rajministries.4
		100 = rajministries.5
		100 = rajministries.6
		100 = rajministries.7
		100 = rajministries.8
		100 = rajministries.9
		100 = rajministries.10
		100 = rajministries.11 #Bonus
		100 = rajministries.12 #Bonus
		400 = rajministries.101 #Raja pissed off ministries
		400 = rajministries.102 #Subject of the Raj slipping away
		800 = rajministries.2022 #A wedding

		# Castes
		25 = estate_castes_events.1 # easter egg
		155 = estate_castes_events.103
		155 = estate_castes_events.104
		155 = estate_castes_events.105
		155 = estate_castes_events.106
		155 = estate_castes_events.107
		155 = estate_castes_events.108
		155 = estate_castes_events.109
		155 = estate_castes_events.110
		155 = estate_castes_events.111
		155 = estate_castes_events.112
		155 = estate_castes_events.113
		155 = estate_castes_events.114
		155 = estate_castes_events.115
		155 = estate_castes_events.116
		155 = estate_castes_events.117
		25 = estate_castes_events.118 # easter egg 2
		155 = estate_castes_events.119
		155 = estate_castes_events.120
		155 = estate_castes_events.121
		155 = estate_castes_events.122
		155 = estate_castes_events.123
		155 = estate_castes_events.124
		155 = estate_castes_events.125
		155 = estate_castes_events.126
		155 = estate_castes_events.127
		155 = estate_castes_events.128
		155 = estate_castes_events.129
		155 = estate_castes_events.130
		155 = estate_castes_events.131
		155 = estate_castes_events.132
		155 = estate_castes_events.133
		155 = estate_castes_events.134

		# Castonath Patricians
		100 = castonath_patricians_events.101
		100 = castonath_patricians_events.102
		100 = castonath_patricians_events.103
		100 = castonath_patricians_events.104
		100 = castonath_patricians_events.105
		100 = castonath_patricians_events.106
		100 = castonath_patricians_events.107
		100 = castonath_patricians_events.108
		100 = castonath_patricians_events.109
		100 = castonath_patricians_events.110
		100 = castonath_patricians_events.111
		400 = castonath_patricians_events.112 # Revolt
		100 = castonath_patricians_events.113
		100 = castonath_patricians_events.114
		100 = castonath_patricians_events.117
		100 = castonath_patricians_events.118

		#Eunuchs
		100 = eunuchs_estate_anb_events.1 #Demands
		100 = eunuchs_estate_anb_events.2
		100 = eunuchs_estate_anb_events.3
		100 = eunuchs_estate_anb_events.4
		400 = eunuchs_estate_anb_events.5 #Demands
		100 = eunuchs_estate_anb_events.6
		100 = eunuchs_estate_anb_events.7
		400 = eunuchs_estate_anb_events.8 #Disloyal
		400 = eunuchs_estate_anb_events.9 #Disloyal
		50 = eunuchs_estate_anb_events.10
		100 = eunuchs_estate_anb_events.11 #Bonus

		1000 = 0
	}

	# country_event = { id = estate_castes_events.100 days = 60 } # Debug Caste event to allow Caste Fluidity changes
}

on_five_year_pulse_3 = {
	if = {
		limit = {
			tag = REB
			has_global_flag = runetimer
		}
		clr_global_flag = runetimer
	}
	else = {
		set_global_flag = runetimer
	}

		#cardesti migration
		if = {
			limit = { owns = 8 }
		
			if = {
				limit = {
					has_global_flag = cardesti_migrate_pulse
				}
				country_event = { id = cardesti_events.3 }
				clr_global_flag = cardesti_migrate_pulse
			}
			else = {
				set_global_flag = cardesti_migrate_pulse
			}
		}

	random_events = {
		# 100 = estate_regency_events.2 # Anbennar: randomly add privileges, even country specific ones
		100 = estate_regency_events.3
		100 = estate_regency_events.4
		100 = estate_regency_events.5
		100 = estate_regency_events.6
		100 = estate_regency_events.7
		100 = estate_regency_events.9
		100 = propagate_religion_events.1
		100 = propagate_religion_events.2
		100 = propagate_religion_events.3
		100 = propagate_religion_events.4
		100 = propagate_religion_events.5
		100 = propagate_religion_events.6
		100 = propagate_religion_events.8
		100 = propagate_religion_events.9
		100 = propagate_religion_events.10
		#100 = propagate_religion_events.11 #Province event
		
		1000 = 0

		#high philosophy invite scholar flavor events
		25 = high_philosophy_events.4
		25 = high_philosophy_events.5
		25 = high_philosophy_events.6
		25 = high_philosophy_events.7
		25 = high_philosophy_events.8
		25 = high_philosophy_events.9
		25 = high_philosophy_events.10

		#high philosophy/suhan's praxis random events
		25 = high_philosophy_events.11

		#high philosophy printing press
		25 = high_philosophy_events.13

		#Orange Sash School flavor events
		25 = high_philosophy_events.14
		25 = high_philosophy_events.15

		#Ascendant Soul School Flavor events
		25 = high_philosophy_events.16
		25 = high_philosophy_events.17
	}
	events = {
		aw_spawner.0	#Spawns Adventurers Wanted! encounters

		corins_circle.100
		diggy_fallen.10			#Runefather's Maw upkeep Increase
		bulwar_flavour.34		#Avamezan horse race
		# race_setup_events.3 #Unmatching Tolerances - Fixes level of tolerance towards other races
		eordand.42 #seasonal MT
		#ynn_events.17 #Drozma Tur abandon the Iosahar system to centralize
		flavor_arverynn.5 #Predyvens Reform
    }
	# if = {
		# limit = { ynnic_iosahar = 1 }
		# random = {
			# chance = 25
			# country_event = { id = ynn_events.6 }	#Distant Iosahar slips away from your control
		# }
	# }

	random_events = { #Centaur FP flavor events
		100 = 0
		50 = centaur.25
		50 = centaur.26
		
	}
}

on_five_year_pulse_4 = {
	# if = { #fail-safe for flavor_pap.7, making religious leagues happen at some point if there is no PAP
		# limit = {
			# is_year = 1610
			# NOT = { exists = PAP }
			# NOT = { has_global_flag = counter_reformation }
		# }
		# set_global_flag = counter_reformation
	# }
	#fail-safe if for whatever reason these flags stay after being used in events
	if = {
		limit = {
			had_country_flag = {
				flag = advisor_events_adm
				days = 720
			}
		}
		clr_country_flag = advisor_events_adm
	}
	if = {
		limit = {
			had_country_flag = {
				flag = advisor_events_dip
				days = 720
			}
		}
		clr_country_flag = advisor_events_dip
	}
	if = {
		limit = {
			had_country_flag = {
				flag = advisor_events_mil
				days = 720
			}
		}
		clr_country_flag = advisor_events_mil
	}

	random_events = {
		#Anbennar: we don't have these
		# 200 = 0
		# 100 = kalmar_union_events.7
		# 100 = kalmar_union_events.8
		# 100 = kalmar_union_events.9

		#Gommo expansion
		50 = gommo_expansion_events.1
		20 = gommo_expansion_events.2

		1000 = 0
	}
	random_events = {
		5 = precursor_relics.1
		110 = precursor_relics.2

		800 = 0
	}
	country_event = { id = precursor_relics.4 }
	country_event = { id = precursor_relics.5 }
	country_event = { id = precursor_relics.6 }

	random_events = { #for all migration/pop change events
		800 = racial_pop_events_centaur.0
		800 = racial_pop_events_dwarven.0
		800 = racial_pop_events_elven.0
		800 = racial_pop_events_gnollish.0
		800 = racial_pop_events_gnomish.0
		800 = racial_pop_events_goblin.0
		800 = racial_pop_events_half_elven.0
		800 = racial_pop_events_half_orcish.0
		800 = racial_pop_events_halfling.0
		800 = racial_pop_events_harimari.0
		800 = racial_pop_events_harpy.0
		800 = racial_pop_events_hobgoblin.0
		800 = racial_pop_events_human.0
		800 = racial_pop_events_kobold.0
		800 = racial_pop_events_ogre.0
		800 = racial_pop_events_orcish.0
		800 = racial_pop_events_ruinborn.0
		800 = racial_pop_events_troll.0
		800 = racial_pop_events_lizardfolk.0
		800 = 0
	}
}

# El Dorado
on_explore_coast = {
	random_events = {
		10 = exploration_events.1
		10 = exploration_events.2
		10 = exploration_events.3
		10 = exploration_events.4
		10 = exploration_events.5
		10 = exploration_events.6
		10 = exploration_events.7
		10 = exploration_events.8
		10 = exploration_events.9
		10 = exploration_events.10
		10 = exploration_events.11
		10 = exploration_events.12
		10 = exploration_events.13
		10 = exploration_events.14
		10 = exploration_events.15
	}
	
	kobold_dragon_cult_exploration = yes
}

on_conquistador_empty = {
	 random_events = {
		# 10 = seven_cities_events.1
		# 10 = seven_cities_events.2
		# 10 = seven_cities_events.3
		# 10 = seven_cities_events.4
		# 10 = seven_cities_events.5
		# 10 = seven_cities_events.6
		# 10 = seven_cities_events.7
		# 10 = seven_cities_events.8

		# 10 = seven_cities_events.100
		# 10 = seven_cities_events.101
		# 10 = seven_cities_events.102
		# 10 = seven_cities_events.103
		# 10 = seven_cities_events.104
		# 10 = seven_cities_events.105

		# 50 = seven_cities_events.200
		# 50 = seven_cities_events.201
		# 50 = seven_cities_events.202
		# 50 = seven_cities_events.203
		# 50 = seven_cities_events.204
		# 50 = seven_cities_events.205
		# 50 = seven_cities_events.206
		# 50 = seven_cities_events.207
		# 50 = seven_cities_events.208
		# 50 = seven_cities_events.209
		# 50 = seven_cities_events.210
		# 50 = seven_cities_events.211
		# 50 = seven_cities_events.212
		# 50 = seven_cities_events.213
		# 50 = seven_cities_events.214
		# 50 = seven_cities_events.215
		# 50 = seven_cities_events.216
		# 50 = seven_cities_events.217
		# 50 = seven_cities_events.218
		# 50 = seven_cities_events.219
		# 50 = seven_cities_events.220
		# 50 = seven_cities_events.221
		# 50 = seven_cities_events.222
		# 50 = seven_cities_events.223

		# 10 = seven_cities_events.302
		# 10 = seven_cities_events.303
		# 10 = seven_cities_events.308
		# 10 = seven_cities_events.309

		# 10 = seven_cities_events.400
		# 10 = seven_cities_events.401
		# 10 = seven_cities_events.402
		# 10 = seven_cities_events.405
		# 10 = seven_cities_events.406
		# 10 = seven_cities_events.407
		# 10 = seven_cities_events.408
		# 10 = seven_cities_events.409
		# 10 = seven_cities_events.410
		# 10 = seven_cities_events.413
		# 10 = seven_cities_events.414

		20 = fragments.1 #Glowing City
		350 = fragments.2 #Dragon House
		350 = fragments.3 #Elfenbride's Manse
		350 = fragments.4 #God Fragment
		100 = fragments.5 #Vault Ruin
		20 = fragments.6 #Portal Nexus
		350 = fragments.7 #Floating City Crash Site

		#Glowing City
		50 = fragments.101
		50 = fragments.102
		50 = fragments.103
		50 = fragments.104
		50 = fragments.105
		50 = fragments.106

		#The Dragon House, approx 19% to finish
		350 = fragments.201
		350 = fragments.202
		350 = fragments.203
		350 = fragments.204
		350 = fragments.205
		350 = fragments.206

		#The Elfenbride's Manse, approx 24% to finish
		350 = fragments.301
		350 = fragments.302
		350 = fragments.303
		350 = fragments.304
		350 = fragments.305
		350 = fragments.306

		#The God's Fragment Ruin, approx 15% to finish
		350 = fragments.401
		350 = fragments.402
		350 = fragments.403
		350 = fragments.404
		350 = fragments.405
		350 = fragments.406

		#Vault Ruin, approx 26% to finish
		100 = fragments.501
		100 = fragments.502
		100 = fragments.503
		100 = fragments.504
		100 = fragments.505
		100 = fragments.506

		#Portal Nexus
		50 = fragments.601
		50 = fragments.602
		50 = fragments.603
		50 = fragments.604
		50 = fragments.605
		50 = fragments.606

		##Floating City Crash Site, approx 15% to finish
		350 = fragments.701
		350 = fragments.702
		350 = fragments.703
		350 = fragments.704
		350 = fragments.705
		350 = fragments.706


		1800 = 0
	}
	
	kobold_dragon_cult_exploration = yes
}

on_conquistador_native = {
	# random_events = {
		# 10 = seven_cities_events.300
		# 10 = seven_cities_events.301
		# 10 = seven_cities_events.303
		# 10 = seven_cities_events.304
		# 10 = seven_cities_events.305
		# 10 = seven_cities_events.306
		# 10 = seven_cities_events.307
		# 10 = seven_cities_events.308
		# 10 = seven_cities_events.309
		# 10 = seven_cities_events.310

		# 250 = 0
	# }
	
	kobold_dragon_cult_exploration = yes
}

on_buy_religious_reform = {
	events = {
		#religious_reforms.1
		#religious_reforms.2
		#religious_reforms.3
		religious_reforms.4
		religious_reforms.5
		religious_reforms.6
		religious_reforms.7
	}
}

on_circumnavigation = {
	events = {
		exploration_events.17
		exploration_events.16 #First Circumnavigation Europe
	}
}

on_become_free_city = {
	events = {
		free_cities.1
	}
}

on_remove_free_city = {
	events = {
		free_cities.2
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
	add_province_modifier = {
		name = revoked_estate_modifier
		duration = 5475 #15 years
	}
}

on_revoke_estate_land = {
	# Anbennar - This stuff is all unused as of 1.30 as it is handled through seizing land

	# add_province_modifier = {
	# 	name = revoked_estate_modifier
	# 	duration = 5475 #15 years
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_cossacks
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_cossacks
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = cossack_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = cossack_estate_events.15 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_dhimmi
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_dhimmi
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = religious_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = dhimmi_estate_events.9 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_church
	# 		has_owner_religion = yes
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_church
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = religious_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = church_estate_events.11 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_church
	# 		has_owner_religion = no
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_church
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = church_estate_events.11 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_nobles
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_nobles
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = noble_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = nobles_estate_events.12 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_burghers
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_burghers
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = burghers_estate_events.16 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_nomadic_tribes
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_nomadic_tribes
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = tribal_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = tribal_estate_events.10 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_artificers
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_artificers
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = artificers_estate_events.16 }
	# }
	# if = {
	# 	limit = {
	# 		has_estate = estate_adventurers
	# 		owner = {
	# 			NOT = {
	# 				estate_loyalty = {
	# 					estate = estate_adventurers
	# 					loyalty = 40
	# 				}
	# 			}
	# 		}
	# 	}
	# 	spawn_rebels = {
	# 		type = particularist_rebels
	# 		size = 1
	# 	}
	# 	province_event = { id = adventurers_estate_events.15 }
	# }
}

on_revoke_estate_land_ai_post = {
	add_local_autonomy = 25
}

on_revoke_estate_land_post = {
	add_local_autonomy = 25
}

on_grant_estate_land = {
	if = {
		limit = {
			has_province_modifier = revoked_estate_modifier
		}
		remove_province_modifier = revoked_estate_modifier
	}
}

on_death_has_harem = {
	if = { limit = { has_heir = no }
		if = { 
			limit = {
				eligble_for_harpy_harem_events = yes
				NOT = { has_reform = matriarchal_pirate_republic }
			}
			country_event = { id = harpy_events.101 }
		}
		else_if = {
			limit = {
				OR = {
					has_reform = dakinshi_warlord_reform
					has_reform = namasonamingo_reform
				}
			}
			country_event = { id = dakinshi_harem_events.2 }
		}
	}
}

on_select_heir_from_harem = {
}

#Tus Astral Shamanism
on_fetishist_cult_change = {
	# country_event = { id = fetishist_flavor.302 days = 10 } #removing tomb if incompatible cult is picked
	# country_event = { id = fetishist_flavor.304 days = 10 } #rebuilding tomb if lost
	# if = {
		# limit = {
			# has_country_flag = lost_ancestral_lands
			# NOT = { has_adopted_cult = zanahary_cult }
			# NOT = { has_adopted_cult = central_african_ancestor_cult }
		# }
		# clr_country_flag = lost_ancestral_lands
	# }
}

# country
on_gain_great_power_status = {
	if = {
		limit = {
			NOT = { has_country_flag = became_great_power_flag }
		}
		set_country_flag = became_great_power_flag
	}
	#Subjects cannot become GPs
	# if = {
		# limit = { is_subject_of_type = acolyte_dominion }
		# multiply_variable = { aInfluence = 2 }
	# }
}

# country
on_lose_great_power_status = {
	# if = {
		# limit = { is_subject_of_type = acolyte_dominion }
		# multiply_variable = { aInfluence = 0.5 }
	# }
}

# province
on_province_religion_converted = {
	on_province_religion_converted_effect = yes #1.35
    # don't use this, it doesn't account for religion change by effect - use on_province_religion_changed
}

#1.35
on_province_religion_changed = {
	on_province_religion_changed_effect = yes #1.35
	on_province_religion_converted_effect = yes #1.35 (Ignore this)

	###############################################################
	# EFFECTS BELOW HERE DO NOT WORK PROPERLY IN SCRIPTED EFFECTS #
	# most common causes are:                                     #
	# using a country event or similar in an else_if              #
	# or using a trigger switch                                   #
	###############################################################

	if = {
		limit = {
			region = akasik_region
			has_terrain = mountain
			religion = mother_akasik
			owner = { religion = mother_akasik }
		}
		add_permanent_province_modifier = {
			name = akasik_ascetic_cult
			duration = -1
		}
		REB = { change_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
	else_if = {
		limit = {
			region = akasik_region
			has_terrain = mountain
			has_province_modifier = akasik_ascetic_cult
		}
		remove_province_modifier = akasik_ascetic_cult
		REB = { subtract_variable = { akasik_mountains = 1 } }
		every_country = {
			limit = { religion = mother_akasik }
			country_event = { id = mother_akasik.3 }
		}
	}
}

# province
on_province_culture_converted = {
	on_province_culture_converted_estate_privilges_effect = yes
	#judaism_on_province_culture_converted_effect = yes
	#imperial_modifiers_on_province_change_culture_or_change_owner_effect = yes
	on_province_culture_converted_effect = yes
	# don't use this, it doesn't account for culture change by effect, use on_province_culture_changed
}

# province, general conversion through effects 1.35
on_province_culture_changed = {

	events = {
		race_setup_events.18 # handle the majority to minority and cleanup on this province, has special handling for migratory tribes migrating in/out of provinces
	}

	on_province_culture_converted_estate_privilges_effect = yes
	on_province_culture_change_effect = yes
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
}

# province
# FROM = old owner
on_province_owner_change = {
	events = {
		# japan.1
		race_setup_events.21 # re-add province flags for present races to newly emptied provinces (we have the define that clears these on uncolonise) - must fire before race_setup_events.17
		race_setup_events.22 # if the nation receiving this province is lacking init flags, set up their tolerances
		race_setup_events.17 # update tolerances for new owner
		one_xia.1
		rahenraj.1
		unraveling.10
		spirits.006 #Temple restoration/corruption/purification cleanup
		spirits.010 #More temple stuff
		flavor_nuugdan_tsarai.84 #fanwang system
		flavor_nuugdan_tsarai.8	#giving land to subjects part of scripted peace with daengun
		anb_miscevents.20 #Command warcamp replacement
	}
	
	on_province_owner_change_effect = yes
	
	###############################################################
	# EFFECTS BELOW HERE DO NOT WORK PROPERLY IN SCRIPTED EFFECTS #
	# most common causes are:                                     #
	# using a country event or similar in an else_if              #
	# or using a trigger switch                                   #
	###############################################################
	
	#Black Orc trophies
	if = { # take trophy for blorc.
		limit = { owner = { primary_culture = black_orc } }
		trigger_switch = {
			on_trigger = province_id
			2863 = { province_event = { id = blorc.1 } }
			2868 = { province_event = { id = blorc.2 } }
			4119 = { province_event = { id = blorc.3 } }
			4208 = { province_event = { id = blorc.4 } }
			4020 = { province_event = { id = blorc.5 } }
			4147 = { province_event = { id = blorc.6 } }
			4236 = { province_event = { id = blorc.7 } }
			2931 = { province_event = { id = blorc.8 } }
			4056 = { province_event = { id = blorc.9 } }
			2963 = { province_event = { id = blorc.10 } }
			4238 = { province_event = { id = blorc.11 } }
			2942 = { province_event = { id = blorc.12 } }
			4093 = { province_event = { id = blorc.13 } }
			4100 = { province_event = { id = blorc.14 } }
			2973 = { province_event = { id = blorc.15 } }
			4039 = { province_event = { id = blorc.16 } }
			4217 = { province_event = { id = blorc.17 } }
			4078 = { province_event = { id = blorc.18 } }
			4124 = { province_event = { id = blorc.19 } }
			2914 = { province_event = { id = blorc.20 } }
			4218 = { province_event = { id = blorc.21 } }
			4247 = { province_event = { id = blorc.22 } }
			4265 = { province_event = { id = blorc.23 } }
			4284 = { province_event = { id = blorc.24 } }
			4266 = { province_event = { id = blorc.25 } }
			4350 = { province_event = { id = blorc.26 } }
			4311 = { province_event = { id = blorc.27 } }
			4323 = { province_event = { id = blorc.28 } }
		}

		# grant massive dev cost malus to holds to prevent devving
		if = {
			limit = {
				province_group = hold_province
			}
			add_province_modifier = {
				name = blorc_hold_malus
				duration = -1
				hidden = yes
			}
		} 
	}
	if = {
		limit = { FROM = { primary_culture = black_orc } }
		blorc_hold_trophy_remove = yes # remove trophies from Blorcs
	}
	if = {
		limit = { has_blorc_trophy_pile = yes }
		clr_province_flag = blorc_plunder_capital_@FROM
		FROM = {
			if = {
				limit = { NOT = { any_owned_province = { has_province_flag = blorc_plunder_capital_@PREV } } }
				clr_country_flag = blorc_plunder_capital_set
			}
		}
		owner = { country_event = { id = blorc.104 } }
	}
	
	if = {
		limit = {
			continent = south_america
			is_effelai_network_province = yes
		}
		FROM = {
			country_event = { #check if other tag still has an effelai network province
				id = effelai_bloom.50
				days = 5
			}
		}
		owner = {
			set_country_flag = effelai_has_effelai_province
		}
		clr_province_flag = effelai_hub_burn_target
		if = {
			limit = {
				has_global_flag = effelai_blooming_happening
			}
			if = { 
				limit = { #Effelai Blooming Effect Attuned -> Blooming
					has_province_modifier = effelai_roots_attuned
				}
				remove_province_modifier = effelai_roots_attuned
				add_permanent_province_modifier = {
					name = effelai_roots_blooming
					duration = -1
				}
			}
			else_if = {
				limit = {
					has_province_modifier = effelai_hub_attuned
				}
				remove_province_modifier = effelai_hub_attuned
				add_permanent_province_modifier = {
					name = effelai_hub_blooming
					duration = -1
				}
			}
			owner = {
				if = {
					limit = {
						NOT = {
							has_country_modifier = effelai_bloom_in_progress
						}
					}
					add_country_modifier = {
						name = effelai_bloom_in_progress
						duration = -1
					}
					if = {
						limit = {
							NOT = {
								OR = {
									has_country_flag = effelai_burned_path
									has_country_flag = effelai_attuned_path
									has_country_flag = effelai_wants_burned_path
									has_country_flag = effelai_wants_attuned_path
									has_country_flag = effelai_dormancy_path
								}
							}
						}
						#country now must pick their path
						if = {
							limit = {
								capital_scope = { 
									NOT = {
										continent = south_america
										continent = north_america
									}
								}
							}
							country_event = {
								id = effelai_bloom.5 #path pick for non-aelantiri nations
							}
						}
						else_if = { #AI CNs get the path of their overlord
							limit = {
								ai = yes
								is_colonial_nation = yes
							}
							if = {
								limit = {
									overlord = {
										OR = {
											has_country_flag = effelai_burned_path
											has_country_flag = effelai_wants_burned_path
										}
									}
								}
								set_country_flag = effelai_burned_path
								set_variable = {
									which = effelai_hubs_burned
									value = 0
								}
							}
							else_if = {
								limit = {
									overlord = {
										OR = {
											has_country_flag = effelai_attuned_path
											has_country_flag = effelai_wants_attuned_path
										}
									}
								}
								set_country_flag = effelai_attuned_path
								country_event = {
									id = effelai_bloom.301
									days = 95
								}
							}
							else_if = {
								limit = {
									overlord = {
										has_country_flag = effelai_dormancy_path
									}
								}
								set_country_flag = effelai_dormancy_path
								country_event = {
									id = effelai_bloom.90
									days = 7300
								}
							}
							else = {
								overlord = {
									country_event = {
										id = effelai_bloom.5
									}
								}
							}
						}
						else = {
							country_event = {
								id = effelai_bloom.3
							}
						}
					}
				}
			}
		}
		else = {
			if = { 
				limit = { #Effelai Blooming Effect Attuned -> Dormant
					has_province_modifier = effelai_roots_attuned
				}
				remove_province_modifier = effelai_roots_attuned
				add_permanent_province_modifier = {
					name = effelai_roots_dormant
					duration = -1
				}
			}
			else_if = {
				limit = {
					has_province_modifier = effelai_hub_attuned
				}
				remove_province_modifier = effelai_hub_attuned
				add_permanent_province_modifier = {
					name = effelai_hub_dormant
					duration = -1
				}
			}
		}
	}
	
	if = {
		limit = { owner = { tag = I89 NOT = { has_country_flag = centaur_no_zeal } } }
		trigger_switch = {
			on_trigger = superregion

			bulwar_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = burning_spear_revolt } has_faction = burning_spear } }
					add_province_modifier = { name = centaur_burning_spear_territory duration = -1 }
				}
			}
			escann_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = verdant_bliss_revolt } has_faction = verdant_bliss } }
					add_province_modifier = { name = centaur_verdant_bliss_territory duration = -1 }
				}
			}
			deepwoods_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = verdant_bliss_revolt } has_faction = verdant_bliss } }
					add_province_modifier = { name = centaur_verdant_bliss_territory duration = -1 }
				}
			}
			rahen_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = tiger_bane_revolt } has_faction = tiger_bane } }
					add_province_modifier = { name = centaur_tiger_bane_territory duration = -1 }
				}
			}
			south_haless_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = tiger_bane_revolt } has_faction = tiger_bane } }
					add_province_modifier = { name = centaur_tiger_bane_territory duration = -1 }
				}
			}
			gerudia_superregion = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
		}
		trigger_switch = {
			on_trigger = region

			alenic_frontier_region = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
			dragon_coast_region = {
				if = {
					limit = { owner = { NOT = { has_country_flag = raging_blizzard_revolt } has_faction = raging_blizzard } }
					add_province_modifier = { name = centaur_raging_blizzard_territory duration = -1 }
				}
			}
		}
		if = {
			limit = {
				owner = { NOT = { has_country_flag = vine_tearer_revolt } has_faction = vine_tearer }
				continent = africa
				NOT = { superregion = bulwar_superregion }
			}
			add_province_modifier = { name = centaur_vine_tearer_territory duration = -1 }
		}
		if = {
			limit = {
				owner = { NOT = { has_country_flag = rosen_rider_revolt } has_faction = rosen_rider }
				superregion = western_cannor_superregion
				NOT = { region = alenic_frontier_region }
				NOT = { region = dragon_coast_region }
			}
			add_province_modifier = { name = centaur_rosen_rider_territory duration = -1 }
		}
	}

#Arg-Ordstun
	if = {
		limit = {
			owner = {
				OR = {
					tag = H76
					was_tag = H76
				}
				has_estate_privilege = estate_burghers_gem_quarrying
			}
			trade_goods = gems
			NOT = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
		}
		add_province_modifier = {
			name = H76_gem_quarrying
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = {
			owner = {
				OR = {
					tag = H76
					was_tag = H76
				}
				has_estate_privilege = estate_burghers_lucrative_lapidaries
			}
			trade_goods = gems
		}
		add_province_modifier = {
			name = H76_lucrative_lapidaries
			duration = -1
			hidden = yes
		}
	}
}

# country 1.35
on_parliament_debate_reset = {
	on_parliament_debate_reset_effect = yes
}

#province 1.35
on_parliament_seat_given = {
	on_parliament_seat_given_effect = yes


	if = {
		limit = { 
			province_group = hold_province
			owner = { has_government_attribute = dwarovar_assembly_of_holds_effect }
		}
		add_province_modifier = { name = hold_has_parliament duration = -1 }
	}
}

#province 1.35
on_parliament_seat_lost = {
	on_parliament_seat_lost_effect = yes

	remove_province_modifier = hold_has_parliament
}

# country
on_parliament_debate_failed = {
	on_parliament_debate_failed_effect = yes #1.35
}

# country
on_parliament_debate_succeeded = {
	on_parliament_debate_succeeded_effect = yes #1.35
	increase_issue_passed_counter = yes
	if = {
		limit = {
			has_government_mechanic = argordstun_roughness_mechanic
		}
		add_government_power = {
			mechanic_type = argordstun_roughness_mechanic
			power_type = argordstun_roughness_power
			value = -2
		}
	}
	if = {
		limit = {
			has_government_mechanic = argordstun_luster_mechanic
		}
		add_government_power = {
			mechanic_type = argordstun_luster_mechanic
			power_type = argordstun_luster_power
			value = 5
		}
	}
}

#AnbennarDependencies - we need our own version of this

# country
on_harmonized_pagan = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.1
	}
}
on_harmonized_christian = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.2
	}
}
on_harmonized_muslim = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.3
	}
}
on_harmonized_jewish_group = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.5
	}
}
on_harmonized_zoroastrian_group = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.6
	}
}
on_harmonized_dharmic = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.4
	}
}
on_harmonized_mahayana = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.9
	}
}
on_harmonized_buddhism = { #Theravada
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.8
	}
}
on_harmonized_shinto = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.7
	}
}
on_harmonized_vajrayana = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		# confucian_events.10
	}
}

#anbennar religions
on_harmonized_cannorian = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.101
		confucian_events.50
	}
}
on_harmonized_bulwari = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.102
		confucian_events.50
	}
}
on_harmonized_goblin = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.103
		confucian_events.50
	}
}
on_harmonized_khetist = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.104
		confucian_events.50
	}
}
on_harmonized_raheni = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.105
		confucian_events.50
	}
}
on_harmonized_gnollish = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.106
		confucian_events.50
	}
}
on_harmonized_dwarven = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.107
		confucian_events.50
	}
}
on_harmonized_elven = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50 #no thought event yet
	}
}
on_harmonized_gerudian = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.109
		confucian_events.50
	}
}
on_harmonized_orcish = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.110
		confucian_events.50
	}
}
on_harmonized_dragon_cult = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.111
		confucian_events.50
	}
}
on_harmonized_aelantiri = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.112
		confucian_events.50

	}
}
on_harmonized_harpy_cult = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50 #no thought event yet
	}
}
on_harmonized_cheshoshi_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50 #no thought event yet
	}
}
on_harmonized_harafic = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.115
		confucian_events.50
	}
}
on_harmonized_effelai = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.116
		confucian_events.50
	}
}
on_harmonized_kheionism = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.117
		confucian_events.50
	}
}
on_harmonized_taychendi = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.118
		confucian_events.50
	}
}
on_harmonized_ynnic = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_devandi = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_fey_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.121
		confucian_events.50
	}
}
on_harmonized_godlost = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.122
		confucian_events.50
	}
}
on_harmonized_triunic_lake = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_giantkin = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_black_doctrine = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_halessi = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.126
		confucian_events.50
	}
}
on_harmonized_tanibic_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_hag_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_lizardfolk_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_east_sarhal_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_eltibhen_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_kodave = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_yukel = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_enuuk = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_kukatodic_religion = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_yudunyovi = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}
on_harmonized_faithless = {
	on_harmonized_effect = yes
	on_harmonized_religion_estate_privileges_effect = yes
	events = {
		confucian_events.50
	}
}


# province
on_consecrate_patriarch = {
	if = { #1.35
		limit = {
			owner = { has_country_flag = has_improved_consecration }
		}
		add_province_modifier = {
			name = consecrated_ground
			duration = -1
			hidden = yes
		}
	}
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
	if = {
		limit = {
			has_estate_privilege = estate_nobles_command_of_the_military
		}
		add_estate_influence_modifier = {
			estate = estate_nobles
			influence = 5
			duration = 3650
			desc = EST_VAL_NOBLE_LEADER
		}
	}
	if = {
		limit = {
			has_estate_privilege = estate_ajgriijarul_military_command
		}
		add_estate_influence_modifier = {
			estate = estate_ajgriijarul
			influence = 5
			duration = 3650
			desc = EST_VAL_AJGRIIJARUL_LEADER
		}
	}
	if = { #1.35
		limit = { has_government_attribute = theocratic_monarchy_mechanic }
		change_statists_vs_orangists = 0.01
	}
	if = {
		limit = { has_estate_privilege = estate_tiger_command_six_schools }
		command_recruit_second_general_effect = yes
	}
}

# country
on_general_recruited = {
	on_general_recruited_effect = yes #1.35
}

# country
on_admiral_recruited = {
	if = {
		limit = { has_country_flag = admirals_give_army_professionalism }
		add_army_professionalism = 0.005
	}
	if = {
		limit = {
			OR = {
				has_country_modifier = pol_global_maritime_empire_modifier
				has_country_modifier = pol_global_maritime_empire_2_modifier
			}
		}
		add_navy_tradition = 1
	}
	if = {
		limit = {
			has_country_flag = improve_nav_prof_flag
		}
		add_navy_tradition = 1
	}
	
	#Anbennar
	kobold_dragon_cult_recruited_leader = yes
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
	if = {
		limit = {
			OR = {
				has_country_modifier = pol_global_maritime_empire_modifier
				has_country_modifier = pol_global_maritime_empire_2_modifier
			}
		}
		add_navy_tradition = 1
	}
}

# THIS = Province, FROM = Country
on_regiment_recruited = {
	FROM = { #Anbennar
		if = {
			limit = { has_estate_privilege = estate_lion_command_war_room_rights }
			add_legitimacy = 0.2
		}
	}
}

# THIS = Province, FROM = Country, ROOT = Merc Unit
on_mercenary_recruited = {
	on_mercenary_recruited_effect = yes #1.35
}

# THIS = One province in the state
# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {
	hidden_effect = {
		owner = {
			save_event_target_as = province_owner
		}
		remove_province_modifier = pasha_removed_modifier
	}

	area = {
		limit = { owned_by = event_target:province_owner }
		add_or_extend_province_modifier_effect = { MODIFIER = pasha_removed_modifier DURATION = 3650 }

		if = { #1.35
			limit = { has_province_modifier = the_provincial_system }
			remove_province_modifier = the_provincial_system
		}
	}
}

# THIS = Province
on_janissaries_raised = {
}

on_cawa_raised = {
}

on_carolean_raised = {
}

on_hussars_raised = {
}

on_revolutionary_guard_raised = {
}

on_banner_raised = {
	owner = { 
		if = { 
			limit = { has_country_flag = refund_partial_corruption_on_banner_recruited_flag }
			add_corruption = -0.1
		}
	}
}

on_cossack_raised = {
}

on_marine_raised = {
}

on_rajput_raised = {
}

on_streltsy_raised = {
}

on_tercio_raised = {
}

on_musketeer_raised = {
}

on_samurai_raised = {
}

on_qizilbash_raised = {
}

on_mamluks_raised = {
}

on_geobukseon_raised = {
}

on_man_of_war_raised = {
}

on_galleon_raised = {
}

on_galleass_raised = {
}

on_caravel_raised = {
}

on_voc_indiamen_raised = {
}

on_hre_reform_passed = {
}

on_mandate_reform_passed = {
	event_target:EmperorOfChina = {
		if = {
			limit = {
				OR = {
					has_country_modifier = mandate_mt_mandate_modifier
					AND = {
						religion_group = khetist 
						475 = {
							owned_by = PREV
							has_great_project = { type = elikhet_pyramid tier = 3 }
						}
					}
				}
			}
			add_stability = 1
		}
	}
}

on_reform_enacted = {
	if = {
		limit = { religion = corinite }
		add_karma = 10
	}
	if = {
		limit = {
			tag = I89
			NOT = { has_country_flag = centaur_no_zeal }
		}
		if = {
			limit = { has_country_flag = verdant_bliss_flag }
			add_faction = verdant_bliss
		}
		if = {
			limit = { has_country_flag = burning_spear_flag }
			add_faction = burning_spear
		}
		if = {
			limit = { has_country_flag = tiger_bane_flag }
			add_faction = tiger_bane
		}
		if = {
			limit = { has_country_flag = raging_blizzard_flag }
			add_faction = raging_blizzard
		}
		if = {
			limit = { has_country_flag = vine_tearer_flag }
			add_faction = vine_tearer
		}
		if = {
			limit = { has_country_flag = rosen_rider_flag }
			add_faction = rosen_rider
		}
	}
	if = {
		limit = {
			has_reform = bulwari_temple_reform
		}
		add_government_power = { mechanic_type = vacyntassi_temple_authority power_type = vacytassi_temple_authority_power value = 40 }
	}
	update_artifice_points = yes
}

on_reform_changed = {
	if = {
		limit = {
			tag = I89
			NOT = { has_country_flag = centaur_no_zeal }
		}
		if = {
			limit = { has_country_flag = verdant_bliss_flag }
			add_faction = verdant_bliss
		}
		if = {
			limit = { has_country_flag = burning_spear_flag }
			add_faction = burning_spear
		}
		if = {
			limit = { has_country_flag = tiger_bane_flag }
			add_faction = tiger_bane
		}
		if = {
			limit = { has_country_flag = raging_blizzard_flag }
			add_faction = raging_blizzard
		}
		if = {
			limit = { has_country_flag = vine_tearer_flag }
			add_faction = vine_tearer
		}
		if = {
			limit = { has_country_flag = rosen_rider_flag }
			add_faction = rosen_rider
		}
	}
}

on_trade_company_investment = {
}

on_center_of_trade_upgrade = {
	if = {
		limit = { owner = { has_country_flag = enable_upgrading_centers_of_trade_dev } }
		add_base_production = 1
	}
	
	if = {
		limit = { owner = { has_country_modifier = geo_centers_of_trade } }
		add_base_production = 1 
	}
}

on_center_of_trade_downgrade = {
	if = {
		limit = { owner = { has_country_flag = enable_upgrading_centers_of_trade_dev } }
		add_base_production = -1
	}
	if = {
		limit = { owner = { has_country_modifier = geo_centers_of_trade } }
		add_base_production = -1 
	}
}

on_culture_promoted = {
	on_culture_promoted_estate_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_culture_country_effect = yes #Anbennar

	#Anbennar
	country_event = { id = race_setup_events.6 } # on culture promote tolerance increase
	update_nsc_level_secondary_effects = yes

	if = { #1.35
		limit = { has_country_flag = reduce_ae_from_prom_cultures_flag }
		every_country = {
			add_aggressive_expansion = {
				who = ROOT 
				value = -3
				apply_calc = no 
			}
		}
	}
	if = {
		limit = {
			has_reform = powerful_clan_bosses
		}
		every_owned_province = {
			limit = { 
				has_province_modifier = weak_clan_bosses
				province_is_or_accepts_culture = yes
			}
			remove_province_modifier = weak_clan_bosses
		}
	}
}

# ROOT = country
on_culture_demoted = {
	on_culture_demoted_estate_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_culture_country_effect = yes #Anbennar
	on_culture_demoted_effect = yes

	if = {
		limit = {
			has_country_modifier = phoenix_empire_cultures_modifier
			OR = {
				NOT = { accepted_culture = bahari }
				NOT = { accepted_culture = gelkar }
				NOT = { accepted_culture = brasanni }
				NOT = { accepted_culture = surani }
				NOT = { accepted_culture = zanite }
				NOT = { accepted_culture = maqeti }
				NOT = { accepted_culture = masnsih }
				NOT = { accepted_culture = sadnatu }
				NOT = { accepted_culture = kuzarami }
				NOT = { accepted_culture = bulwari_half_elf }
			}
		}
		remove_country_modifier = phoenix_empire_cultures_modifier
		remove_accepted_culture = bahari
		remove_accepted_culture = gelkar
		remove_accepted_culture = brasanni
		remove_accepted_culture = surani
		remove_accepted_culture = zanite
		remove_accepted_culture = maqeti
		remove_accepted_culture = masnsih
		remove_accepted_culture = sadnatu
		remove_accepted_culture = kuzarami
		remove_accepted_culture = bulwari_half_elf
	}
	if = {
		limit = {
			has_country_modifier = xia_cultural_modifier
			OR = {
				NOT = { accepted_culture = western_yan }
				NOT = { accepted_culture = rasarhid }
				NOT = { accepted_culture = ghavaanaj }
				NOT = { accepted_culture = sikai }
				NOT = { accepted_culture = teplin }
				NOT = { accepted_culture = ranilau }
				NOT = { accepted_culture = serene_harimari }
				NOT = { accepted_culture = primal_harimari }
				NOT = { accepted_culture = pezarangi_harpy }
				NOT = { accepted_culture = goldscale_kobold }
			}
		}
		remove_country_modifier = xia_cultural_modifier
		remove_accepted_culture = western_yan
		remove_accepted_culture = rasarhid
		remove_accepted_culture = ghavaanaj
		remove_accepted_culture = sikai
		remove_accepted_culture = teplin
		remove_accepted_culture = ranilau
		remove_accepted_culture = serene_harimari
		remove_accepted_culture = primal_harimari
		remove_accepted_culture = pezarangi_harpy
		remove_accepted_culture = goldscale_kobold
	}
	if = {
		limit = {
			has_country_modifier = jaddari_masnsih_culture_modifier
			NOT = { accepted_culture = masnsih }
		}
		remove_country_modifier = jaddari_masnsih_culture_modifier
	}
	if = {
		limit = {
			has_country_modifier = landshark_gnoll_culture
			NOT = { accepted_culture = flamemarked_gnoll }
		}
		remove_country_modifier = landshark_gnoll_culture
	}
	if = {
		limit = {
			has_reform = powerful_clan_bosses
		}
		every_owned_province = {
			limit = { 
				province_is_or_accepts_culture = no
				NOT = { has_province_modifier = weak_clan_bosses }
			}
			add_province_modifier = { 
				name = weak_clan_bosses
				duration = -1
			}
		}
	}
	if = {
		limit = {
			has_country_modifier = mulen_masnsih_culture_modifier
			NOT = { accepted_culture = masnsih }
		}
		remove_country_modifier = mulen_masnsih_culture_modifier
		remove_country_modifier = mulen_sadnatu_culture_modifier
		remove_country_modifier = mulen_maqeti_culture_modifier
		remove_accepted_culture = sadnatu
		remove_accepted_culture = maqeti
	}
	if = {
		limit = {
			has_country_modifier = mulen_sadnatu_culture_modifier
			NOT = { accepted_culture = sadnatu }
		}
		remove_country_modifier = mulen_masnsih_culture_modifier
		remove_country_modifier = mulen_sadnatu_culture_modifier
		remove_country_modifier = mulen_maqeti_culture_modifier
		remove_accepted_culture = masnsih
		remove_accepted_culture = maqeti
	}
	if = {
		limit = {
			has_country_modifier = mulen_maqeti_culture_modifier
			NOT = { accepted_culture = maqeti }
		}
		remove_country_modifier = mulen_masnsih_culture_modifier
		remove_country_modifier = mulen_sadnatu_culture_modifier
		remove_country_modifier = mulen_maqeti_culture_modifier
		remove_accepted_culture = masnsih
		remove_accepted_culture = sadnatu
	}
}

# ROOT = country
on_primary_culture_changed = {
	on_primary_culture_changed_effect = yes
	on_primary_culture_changed_privileges_effect = yes
	# judaism_on_culture_country_effect = yes #Anbennar
	# imperial_modifiers_on_primary_culture_change_effect = yes #Anbennar

	#Anbennar
	events = {
		racial_modifiers.5 #Racial Admin and Military - on primary culture change
		racial_modifiers.7 #Save primary culture
		racial_modifiers.8 #Change back primary culture if the country has a locked administration
		monstrous.102 #Remove opinion if no longer monstrous

		escanni_wars.3 # Escanni wars bypass
		escanni_wars.200 # Joined Escanni wars
	}

	###############################################################
	# EFFECTS BELOW HERE DO NOT WORK PROPERLY IN SCRIPTED EFFECTS #
	# most common causes are:                                     #
	# using a country event or similar in an else_if              #
	# or using a trigger switch                                   #
	###############################################################

	if = {
		limit = { NOT = { primary_culture = black_orc } }
		remove_country_modifier = black_orc_trophy_khugdihr
		remove_country_modifier = black_orc_trophy_haraz_orldhum
		remove_country_modifier = black_orc_trophy_amldihr
		remove_country_modifier = black_orc_trophy_krakdhumvror
		remove_country_modifier = black_orc_trophy_dur_vazhatun
		remove_country_modifier = black_orc_trophy_orlazam_az_dihr
		remove_country_modifier = black_orc_trophy_mithradhum
		remove_country_modifier = black_orc_trophy_er_natvir
		remove_country_modifier = black_orc_trophy_verkal_kozenad
		remove_country_modifier = black_orc_trophy_hul_jorkad
		remove_country_modifier = black_orc_trophy_orlghelovar
		remove_country_modifier = black_orc_trophy_shazstundihr
		remove_country_modifier = black_orc_trophy_arg_ordstun
		remove_country_modifier = black_orc_trophy_verkal_skomdihr
		remove_country_modifier = black_orc_trophy_ovdal_lodhum
		remove_country_modifier = black_orc_trophy_gor_burad
		remove_country_modifier = black_orc_trophy_gor_vazumbrog
		remove_country_modifier = black_orc_trophy_hehodovar
		remove_country_modifier = black_orc_trophy_seghdihr
		remove_country_modifier = black_orc_trophy_verkal_gulan
		remove_country_modifier = black_orc_trophy_gor_ozumbrog
		remove_country_modifier = black_orc_trophy_ovdal_kanzad
		remove_country_modifier = black_orc_trophy_grozumdihr
		remove_country_modifier = black_orc_trophy_ovdal_az_an
		remove_country_modifier = black_orc_trophy_hul_az_krakazol
		remove_country_modifier = black_orc_trophy_tuwad_dhumankon
		remove_country_modifier = black_orc_trophy_gronstunad
		remove_country_modifier = black_orc_trophy_verkal_dromak

		# remove all dev cost maluses on holds
		hold_province = {
			limit = {
				owned_by = ROOT
			}
			remove_province_modifier = blorc_hold_malus 
		}
	}
	else = { #transfer all trophies to Blorc
		if = { limit = { owns = 2863 } 2863 = { province_event = { id = blorc.1 } } }
		if = { limit = { owns = 2868 } 2868 = { province_event = { id = blorc.2 } } }
		if = { limit = { owns = 4119 } 4119 = { province_event = { id = blorc.3 } } }
		if = { limit = { owns = 4208 } 4208 = { province_event = { id = blorc.4 } } }
		if = { limit = { owns = 4020 } 4020 = { province_event = { id = blorc.5 } } }
		if = { limit = { owns = 4147 } 4147 = { province_event = { id = blorc.6 } } }
		if = { limit = { owns = 4236 } 4236 = { province_event = { id = blorc.7 } } }
		if = { limit = { owns = 2931 } 2931 = { province_event = { id = blorc.8 } } }
		if = { limit = { owns = 4056 } 4056 = { province_event = { id = blorc.9 } } }
		if = { limit = { owns = 2963 } 2963 = { province_event = { id = blorc.10 } } }
		if = { limit = { owns = 4238 } 4238 = { province_event = { id = blorc.11 } } }
		if = { limit = { owns = 2942 } 2942 = { province_event = { id = blorc.12 } } }
		if = { limit = { owns = 4093 } 4093 = { province_event = { id = blorc.13 } } }
		if = { limit = { owns = 4100 } 4100 = { province_event = { id = blorc.14 } } }
		if = { limit = { owns = 2973 } 2973 = { province_event = { id = blorc.15 } } }
		if = { limit = { owns = 4039 } 4039 = { province_event = { id = blorc.16 } } }
		if = { limit = { owns = 4217 } 4217 = { province_event = { id = blorc.17 } } }
		if = { limit = { owns = 4078 } 4078 = { province_event = { id = blorc.18 } } }
		if = { limit = { owns = 4124 } 4124 = { province_event = { id = blorc.19 } } }
		if = { limit = { owns = 2914 } 2914 = { province_event = { id = blorc.20 } } }
		if = { limit = { owns = 4218 } 4218 = { province_event = { id = blorc.21 } } }
		if = { limit = { owns = 4247 } 4247 = { province_event = { id = blorc.22 } } }
		if = { limit = { owns = 4265 } 4265 = { province_event = { id = blorc.23 } } }
		if = { limit = { owns = 4284 } 4284 = { province_event = { id = blorc.24 } } }
		if = { limit = { owns = 4266 } 4266 = { province_event = { id = blorc.25 } } }
		if = { limit = { owns = 4350 } 4350 = { province_event = { id = blorc.26 } } }
		if = { limit = { owns = 4311 } 4311 = { province_event = { id = blorc.27 } } }
		if = { limit = { owns = 4323 } 4323 = { province_event = { id = blorc.28 } } }

		# add massive dev cost maluses to prevent devving holds
		hold_province = {
			limit = {
				owned_by = ROOT
			}
			add_province_modifier = {
				name = blorc_hold_malus
				duration = -1
				hidden = yes
			}
		}
	}

}

# FROM = Previous Country, ROOT = Province
on_company_chartered = {
	#Anbennar
	#if = {
	#	limit = {
	#		OR = {
	#			region = bengal_region
	#			region = hindusthan_region
	#			region = west_india_region
	#			region = deccan_region
	#			region = coromandel_region
	#		}
	#	}
	#	ROOT = {
	#		owner = {
	#			set_country_flag = the_coin_is_stronger_than_the_sword
	#		}
	#	}
	#}
}

# ROOT = Overlord, FROM = Minor
on_dependency_gained = {
	# if = {
	# 	limit = {
	# 		FROM = {
	# 			has_government_attribute = has_dutch_election
	# 		}
	# 	}
	# 	ROOT = {
	# 		country_event = {
	# 			id = dutch_republic.31
	# 		}# States General falls under a PU
	# 	}
	# }

	#Anbennar
	##############################################################################################
	#If you are adding an action here to automatically flip new vassals to a custom subject type,
	#or grant independence, or anything that modifies the vassal state
	#It must be done in an event (to enforce it runs last), or the game can crash (from a race condition)
	##############################################################################################
	
	if = { #Turning new subjects into Prabhia for the Raja
		limit = {
			ROOT = { has_government_attribute = is_raja }						# Overlord must be the Raja
			FROM = {
				NOT = { has_reform = oracular_order_reform } 		# Tughayasa has their own thing.
				NOT = { is_subject_of_type = great_daimyo_vassal }	# Do nothing if already correct type.
				NOT = { is_subject_of_type = daimyo_vassal }		# Do nothing if already correct type.
			}
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = rahenraj.5000 } }
	}

	if = { #Releasing Iosahars if vassalized
		limit = {
			FROM = { has_country_modifier = ynn_diplo is_subject_of_type = vassal num_of_subjects = 1 }
		}
		FROM = { country_event = { id = ynn_events.316 } }
	}

	#convert tributaries to satrapies
	if = {
		limit = {
			ROOT = { is_emperor_of_china = yes }
			FROM = { is_subject_of_type = tributary_state_anb }
		}
		FROM = { country_event = { id = khet_mandate.02 } }
	}

	#convert satrapies to tributaries
	if = {
		limit = {
			ROOT = { is_emperor_of_china = no }
			FROM = { is_subject_of_type = tributary_state }
		}
		FROM = { country_event = { id = khet_mandate.03 } }
	}

	#convert koroshesh league to vassal
	if = {
		limit = {
			FROM = { tag = L28 is_subject_of_type = commercial_enterprise  }
			ROOT = { NOT = { has_country_flag = koroshesh_league_enabled } }
		}
		FROM = { country_event = { id = khet_mandate.07 } }
	}

	
	FROM = { update_nsc_level_secondary_effects = yes }

	if = { #Turning vassals into Xiakens when you release or gain new vassals
		limit = {
			ROOT = { has_reform = wulin }
			FROM = { NOT = { has_reform = xiaken } }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = one_xia.3000 } }
	}

	if = { #Turning patronates into vassals if overlord not VO. 
		limit = {
			NOT = { tag = Y63 } # new overlord is not VO
			FROM = { is_subject_of_type = patronate }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = verkalozovar_events.9999 } }
	}
	
	#Dhugajir-Nadimraj subject
	if = {
		limit = {
			ROOT = { tag = R72 } # Dhugajir
			FROM = { tag = R73 } # Nadimraj
		}
		add_country_modifier = {
			name = ghavaanaj_lord_of_the_nadimraj
			duration = -1
		}
	}
	
	#Dhenijanraj events
	if = {
		limit = {
			ROOT = { mission_completed = R51_peridot_king }
			FROM = { tag = I18 }
		}
		ROOT = { country_event = { id = flavor_dhenijanraj.300 } }
		add_opinion = {
			who = FROM
			modifier = dhenijanraj_peridot_opinion_modifier
		}
		reverse_add_opinion = {
			who = FROM
			modifier = dhenijanraj_peridot_opinion_modifier
		}
	}

	country_event = { id = ynn_events.21 }  #Transfer Iosahar of Iosahar to the top overlord
	
	# Verkal Ozovar
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_amekh }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_amekh
				duration = -1
			}
		}
	}
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_jolkin }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_jolkin
				duration = -1
			}
		}
	}
	
	#Command Slave States subject
	if = {
		limit = {
			ROOT = { tag = R62 } # The Command
			FROM = { has_country_flag = command_slave_state_flag }
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = the_command.3000 } }
	}

	if = {
		limit = {
			FROM = { is_subject_of_type = slave_state }
			NOT = { culture_group = hobgoblin } # the revolter commands can inherit slave states too
		}
		# logic moved into event to prevent crashes
		FROM = { country_event = { id = the_command.3001 } }
	}

	# Anbennar CNs gotta follow overlord culture for races. Religion is a bonus.
	FROM = {
		if = {
			limit = { 
				is_colonial_nation = yes
				NOT = { overlord = { tag = G52 } } #Ameion
			}
			export_to_variable  = { variable_name = majorityCulture value = dominant_culture }
			export_to_variable  = { variable_name = overlordCulture value = primary_culture who = ROOT } 
			export_to_variable  = { variable_name = overlordReligion value = religion who = ROOT } 
	
			# only change stuff if culture is different
			if = { limit = { NOT = { is_variable_equal = { which = majorityCulture which = overlordCulture } } }
				change_primary_culture = variable:overlordCulture	# use overlord race
				change_religion = variable:overlordReligion			# use overlord religion
				add_accepted_culture = variable:majorityCulture 	# we accept the majority natives.
			}
			capital_scope = {  # capital uses overlord culture and religion.
				change_culture = FROM
				change_religion = FROM
			}
		}
	}
	

	if = { #Makes vassals of ynnic overlords into iosahar
		limit = {
			overlord = {
				has_country_modifier = ynn_diplo
			}
		}
		FROM = {
			country_event = {
				id = ynn_events.990
			}
		}
	}

	# Racial Tolerance Setup
	FROM = {
		country_event = { id = race_setup_events.1 }		#Sets up Racial Tolerance Level
		country_event = { id = race_setup_events.2 }		#Ai only event for preferred tolerace
	}

	if = {
		limit = {
			ROOT = { 
				OR = {
					tag = G46 
					tag = H22
				}
			}
			FROM = {
				OR = {
					tag = G55
					tag = U27
				}
				is_subject_of_type = autonomous_vassal
			}
		}
		G55 = {
			add_country_modifier = {
				name = G55_degakheioni_funding
				duration = -1
			}
			add_country_modifier = {
				name = G55_degakheioni_merchant_influence
				duration = -1
			}
		}
		G46 = {
			add_country_modifier = {
				name = G55_for_degakheion_funding_eneion
				duration = -1
			}
			add_country_modifier = {
				name = G55_for_degakheion_exploiting_eneion
				duration = -1
			}
		}
		H22 = {
			add_country_modifier = {
				name = G55_for_degakheion_funding_eneion
				duration = -1
			}
			add_country_modifier = {
				name = G55_for_degakheion_exploiting_eneion
				duration = -1
			}
		}
	}

	#Brelar
	g27_vareynn_liberty_effect = yes
	g27_breluslad_subject_ae_effect = yes
	#Ynn
	if = {
		limit = {
			ROOT = {
				has_reform = kyrrachean_dynasties
			}
			FROM = {
				culture = sarda
			}
		}
		FROM = {
			add_country_modifier = { 
				name = ynn_kyrrachean_overlord
				duration = -1
			}
		}
	}
	#if = {
	#	limit = {
	#		ROOT = {
	#			has_country_modifier = ynn_diplo
	#			NOT = {
	#				has_country_flag = had_iosahar_dummy_event_1
	#			}
	#		}
	#	}
	#	ROOT = {
	#		country_event = { id = ynn_iosahar_events.1 }
	#	}
	#}
	#if = {
	#	limit = {
	#		ROOT = {
	#			has_country_modifier = ynn_diplo
	#			num_of_subjects = 3
	#			NOT = {
	#				has_country_flag = had_iosahar_dummy_event_2
	#			}
	#		}
	#	}
	#	ROOT = {
	#		country_event = { id = ynn_iosahar_events.2 }
	#	}
	#}
	FROM = {
		if = {
			limit = {
				has_country_flag = eclipse_headquarter_1
			} 
			country_event = { 
				id = flavour_azkabar.103 
				days = 1 
			} 
		}
	}
}
# ROOT = Overlord, FROM = Minor
on_dependency_lost = {
	#Anbennar
	##############################################################################################
	#If you are adding an action here to automatically flip new vassals to a custom subject type,
	#or grant independence, or anything that modifies the vassal state
	#It must be done in an event (to enforce it runs last), or the game can crash (from a race condition)
	##############################################################################################
	FROM = {
		update_nsc_level_secondary_effects = yes

		if = { limit = { has_country_flag = raj_vizier }
			raj_clear_vizier = yes
			ROOT = { country_event = { id = rahenraj.2100 days = 1 } }
		}
		if = { limit = { ROOT = { has_government_attribute = is_raja } }
			every_owned_province = {
				rahen_clear_court_disaster_province_modifiers = yes
			}
		}

		country_event = { id = flavor_arverynn.47 } #Veykodan Client State cleanup
		if = {
			limit = {
				has_country_flag = eclipse_headquarter_1
			} 
			country_event = { 
				id = flavour_azkabar.103 
				days = 1 
			} 
		}
	}

	if = {
		limit = {
			ROOT = { tag = R73 }
			FROM = { tag = R72 }
		}
		remove_country_modifier = ghavaanaj_lord_of_the_nadimraj
	}
	
	FROM = {
		if = {
			limit = { is_subject_of_type = ynnic_iosahar }
			country_event = { id = ynn_events.30 } 	#Iosahar is rioting
		}
	}
	FROM = {
		if = {
			limit = { has_country_modifier = ynn_kyrrachean_overlord }
			remove_country_modifier = ynn_kyrrachean_overlord
		}
	}
	# Verkal Ozovar
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_amekh }
		FROM = {
			remove_country_modifier = Y63_grand_rune_amekh
		}
	}
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_jolkin }
		FROM = {
			remove_country_modifier = Y63_grand_rune_jolkin
		}
	}

	#Restore Iosahar colours
	if = {
		limit = {
			has_country_modifier = ynn_diplo
		}
		FROM = {
			if = {
				limit = {
					exists = yes
				}
				restore_country_color = yes
			}
		}
	}

	if = {
		limit = {
			OR = {
				ROOT = { tag = G46 }
				ROOT = { tag = H22 }
			}
			OR = {
				FROM = { tag = G55 }
				FROM = { tag = U27 }
			}
		}
		G55 = {
			remove_country_modifier = G55_degakheioni_funding
			remove_country_modifier = G55_degakheioni_merchant_influence
		}
		G46 = {
			remove_country_modifier = G55_for_degakheion_funding_eneion
			remove_country_modifier = G55_for_degakheion_exploiting_eneion
		}
		U27 = {
			remove_country_modifier = G55_degakheioni_funding
			remove_country_modifier = G55_degakheioni_merchant_influence
		}
		H22 = {
			remove_country_modifier = G55_for_degakheion_funding_eneion
			remove_country_modifier = G55_for_degakheion_exploiting_eneion
		}
	}

	g27_breluslad_annex_debug = yes
}

# ROOT = New vassal, FROM = Overlord
on_create_vassal = {
	on_religion_change_estate_privileges_effect = yes

	#Anbennar	
	if = {
		limit = {
			monstrous_culture = yes
			NOT = { has_country_flag = no_longer_monstrous }
		}
		add_country_modifier = { name = monstrous_nation duration = -1 }
	}
	if = { limit = { capital_scope = { continent = serpentspine } }
		add_country_modifier = { name = reclaiming_dwarovar duration = -1 }
	}

	#country_event = { id = monstrous.100 days = 1 }
	#country_event = { id = anbennar_setup.9 }              # Sets up racial admin/mil
	#country_event = { id = race_setup_events.1 }           # Sets up Racial Tolerance Level
	#country_event = { id = race_setup_events.2 }           # Ai only event for preferred tolerace
	#country_event = { id = race_setup_events.19 }
	# unnecessary due to race_setup_events.22

	if = {
		limit = { NOT = { is_year = 1445 } }
		country_event = { id = race_setup_events.16 }
		country_event = { id = race_setup_events.19 } # recalculate tolerances
		# edge case - update majorities for vassals released on day 1 before the startup event was done
	}

	if = {
		limit = {
			has_dlc = "Emperor"
			FROM = {
				is_revolutionary = yes
			}
		}
		change_government = republic
		add_government_reform = junior_revolutionary_republic_reform
		set_country_flag = had_revolution
	}
	if = { # Anbennar: changed to ravelian rectorate, our papacy
		limit = {
			tag = Z97
		}
		change_government = theocracy
		change_religion = ravelian
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_country_flag = released_in_1444
	}

	country_event = { id = new_sun_cult.11 days = 1 }

	if = { #Makes vassals of ynnic overlords into iosahar
		limit = {
			overlord = {
				has_country_modifier = ynn_diplo
			}
		}
		release_iosahar = yes
		FROM = {
			create_iosahar = { tag = ROOT }
		}
	}

	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}
	
	# Verkal Ozovar
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_amekh }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_amekh
				duration = -1
			}
		}
	}
	if = {
		limit = { has_estate_privilege = estate_mages_grand_rune_jolkin }
		FROM = {
			add_country_modifier = {
				name = Y63_grand_rune_jolkin
				duration = -1
			}
		}
	}

	if = {
		limit = { 
			NOT = { tag = H66 } #Jaherian Exemplars
			NOT = { tag = H67 } #Rezankand
			OR = {
				religion_group = bulwari
				has_country_flag = updating_isolationism_window
			}
			government = theocracy
			ai = yes
		}
		add_government_reform = bulwari_temple_reform
		add_government_power = { mechanic_type = vacyntassi_temple_authority power_type = vacytassi_temple_authority_power value = 40 }
	}
}

# ROOT = Country establishing it
# First province in state is set
on_holy_order_established = {
}

# When a minority is expelled to a colony
# THIS = Colony, ROOT = Colony, FROM = Home province
on_minority_expelled = {
	FROM = {
		remove_province_modifier = religious_zeal_at_conv
		add_permanent_province_modifier = {
			name = expelled_minority_home
			duration = 7300
		}
	}
}

# THIS = Raiding country, FROM = Sea province
on_raid_coast = {
	if = {
		limit = {
			has_faction = pr_buccaneers
		}
		add_faction_influence = {
			faction = pr_buccaneers
			influence = 1
		}
	}
	if = {
		limit = {
			has_government_attribute = raiding_increases_pp
		}
		add_power_projection = {
			type = high_sea_power_projection
			amount = 1
		}
	}
	#Anbennar: we don't have this mission
	# if = {
		# limit = {
			# has_mission = dan_raid_the_north_sea
			# NOT = { mission_completed = dan_raid_the_north_sea }
		# }
		# change_variable = {
			# which = num_of_raided_coasts
			# value = 1
		# }
	# }

	#Anbennar
	if = {
		limit = {
			religion = xhazobkult
		}
		change_variable = {
			which = total_gathered_sacrifices
			value = 1
		}
	}
	if = {
		limit = {
			has_country_modifier = pirate_republic_shared_loot
			has_reform = pirate_republic_reform
		}
		add_republican_tradition = 0.25
	}
	if = {
		limit = {
			religion = kvangahga
		}
		add_church_power = 5
	}
}

# ROOT = Tag that captured the flagship, FROM = Tag that lost the flagship
on_flagship_captured = {
	FROM = {
		set_country_flag = captured_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.2 }
		set_country_flag = trophy_hunter_flag
	}
	FROM = {
		country_event = { id = flagship_events.1 }
	}
	FROM = {
		if = {
			limit = { has_country_modifier = hsa_pride_eagle_of_the_fleet_modifier }
			remove_country_modifier = hsa_pride_eagle_of_the_fleet_modifier
		}
	}

	#Anbennar
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 5 }
	}
	if = {
		limit = { FROM = { is_subject_of_type = acolyte_dominion } }
		FROM = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# ROOT = Tag that destroyed the flagship, FROM = Tag that lost the flagship
on_flagship_destroyed = {
	FROM = {
		set_country_flag = sunk_flagship_country_flag
	}
	ROOT = {
		country_event = { id = flagship_events.4 }
	}
	FROM = {
		country_event = { id = flagship_events.3 }
	}
	FROM = {
		if = {
			limit = { has_country_modifier = hsa_pride_eagle_of_the_fleet_modifier }
			remove_country_modifier = hsa_pride_eagle_of_the_fleet_modifier
		}
	}

	#Anbennar
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		change_variable = { aInfluence = 5 }
	}
	if = {
		limit = { FROM = { is_subject_of_type = acolyte_dominion } }
		FROM = { subtract_variable = { aInfluence = 5 } }
		if = {
			limit = { NOT = { check_variable = { aInfluence = 0 } } }
			set_variable = { aInfluence = 0 }
		}
	}
}

# this = Released country, FROM = Releasing country
#NOTE: as of 1.36, only fires when releasing a nation via peace treaty and not via "release = <tag>" effect
on_country_released = {
	#log = "[Root.GetName] released"

	#Anbennar
	if = {
		limit = {
			monstrous_culture = yes
			NOT = { has_country_flag = no_longer_monstrous }
		}
		add_country_modifier = { name = monstrous_nation duration = -1 }
	}
	if = { limit = { capital_scope = { continent = serpentspine } }
		add_country_modifier = { name = reclaiming_dwarovar duration = -1 }
	}

	#country_event = { id = anbennar_setup.19 }
	#country_event = { id = anbennar_setup.9 }              # Sets up racial admin/mil
	#country_event = { id = race_setup_events.1 }           # Sets up Racial Tolerance Level
	#country_event = { id = race_setup_events.2 }           # Ai only event for preferred tolerace
	#country_event = { id = monstrous.100 days = 1 }
	# unnecessary due to race_setup_events.22

	if = {
		limit = { NOT = { is_year = 1445 } }
		country_event = { id = race_setup_events.16 }
		country_event = { id = race_setup_events.19 } # recalculate tolerances
		# edge case - update majorities for countries released on day 1 before the startup event was done
	}


	if = { # Anbennar: changed to ravelian rectorate, our papacy
		limit = {
			tag = Z97
		}
		change_government = theocracy
		change_religion = ravelian	#changed this from catholic
		add_government_reform = papacy_reform
		adopt_reform_progress = FROM
	}
	if = {
		limit = {
			FROM = { has_reform = religious_permanent_revolution_reform }
			NOT = { tag = PAP }
		}
		change_religion = FROM
		adopt_reform_progress = FROM
		add_country_modifier = {
			name = global_holy_war_released_modifier
			duration = 3650
			hidden = yes
		}
		capital_scope = {
			change_religion = FROM
		}
	}
	if = {
		limit = { NOT = { is_year = 1445 } }
		set_country_flag = released_in_1444
	}

	
	if = {
		limit = {
			capital_scope = {
				OR = {
					region = xianjie_region
					area = rangadevi_area
				}
			}
			FROM = {
				has_reform = wulin
			}
		}
		add_government_reform = xiaken
	}
	if = {
		limit = {
			capital_scope = {
				OR = {
					region = xianjie_region
					area = rangadevi_area
				}
			}
			FROM = {
				NOT = {
					tag = R62
					has_reform = wulin
				}
			}
		}
		add_government_reform = indep_xiaken
	}

	if = {
		limit = { NOT = { has_dlc = "Emperor" } }
		if = {
			limit = { religion = ravelian }
			if = {
				limit = { has_global_flag = first_council_harsh }
				add_country_modifier = {
					name = first_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = first_council_conciliatory }
				add_country_modifier = {
					name = first_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = second_council_harsh }
				add_country_modifier = {
					name = second_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = second_council_conciliatory }
				add_country_modifier = {
					name = second_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = third_council_harsh }
				add_country_modifier = {
					name = third_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = third_council_conciliatory }
				add_country_modifier = {
					name = third_council_conciliatory
					duration = -1
				}
			}
			if = {
				limit = { has_global_flag = fourth_council_harsh }
				add_country_modifier = {
					name = fourth_council_harsh
					duration = -1
				}
			}
			else_if = {
				limit = { has_global_flag = fourth_council_conciliatory }
				add_country_modifier = {
					name = fourth_council_conciliatory
					duration = -1
				}
			}
		}
	}

	ynnic_setup_effect = yes

	country_event = { id = new_sun_cult.11 days = 1 }

	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}
	if = {
		limit = {
			NOT = { tag = H66 } #Jaherian Exemplars
			NOT = { tag = H67 } #Rezankand 
			OR = {
				religion_group = bulwari
				has_country_flag = updating_isolationism_window
			}
			government = theocracy
			ai = yes
		}
		add_government_reform = bulwari_temple_reform
		add_government_power = { mechanic_type = vacyntassi_temple_authority power_type = vacytassi_temple_authority_power value = 40 }
	}

	#Pick Holy Order
	if = {
		limit = {
			AND = {
				religion = corinite
				NOT = { has_country_flag = corinite_adm_order_picked }
			}
		}
		country_event = {
			id = corinite.300
			days = 7
		}
	}
	else_if = {
		limit = {
			AND = {
				religion = corinite
				NOT = { has_country_flag = corinite_dip_order_picked }
			}
		}
		country_event = {
			id = corinite.301
			days = 7
		}
	}
	else_if = {
		limit = {
			AND = {
				religion = corinite
				NOT = { has_country_flag = corinite_mil_order_picked }
			}
		}
		country_event = {
			id = corinite.302
			days = 7
		}
	}
}

# ROOT = province, FROM = country
on_trade_good_changed = {
	on_trade_good_changed_estate_privileges_effect = yes
	on_trade_good_changed_government_effect = yes
	if = {
		limit = { 
			has_province_modifier = big_fungi
			is_city = yes
			NOT = { trade_goods = fungi }
		}
		remove_province_modifier = big_fungi
	}
	
	remove_province_modifier = gold_hold
	if = {
		limit = { trade_goods = gold province_group = hold_province }
		add_permanent_province_modifier = { name = gold_hold duration = -1 }
	}


	if = {
		limit = {
			OR = {
				has_province_modifier = wine_bonus_prod
				has_province_modifier = grain_bonus_prod
				has_province_modifier = artifice_ageifier_bonus
				has_province_modifier = artifice_growthbeans_bonus
				has_province_modifier = artifice_pearl_cultivator_bonus
				has_province_modifier = wine_lord_wine
				has_province_modifier = G58_sugar_province_goods
				has_province_modifier = eordan_expedition_site
				has_province_modifier = damestear_rich_deposit
				has_province_modifier = huge_damestear
				has_province_modifier = dwindling_resources
				has_province_modifier = orlghelovar_glasslord_glass
				has_province_modifier = orlghelovar_reformed_glassworkers
				has_province_modifier = orlghelovar_glass_value
				has_province_modifier = B34_board_of_chains_boost
				has_province_modifier = B34_board_of_chains_boost_upgraded
				has_province_modifier = B34_board_of_chains_boost_upgraded_2
				has_province_modifier = livestock_boost_frontier
			}
		}
		remove_province_modifier = wine_bonus_prod
		remove_province_modifier = grain_bonus_prod
		remove_province_modifier = artifice_ageifier_bonus
		remove_province_modifier = artifice_growthbeans_bonus
		remove_province_modifier = artifice_pearl_cultivator_bonus
		remove_province_modifier = wine_lord_wine
		remove_province_modifier = G58_sugar_province_goods
		remove_province_modifier = eordan_expedition_site
		remove_province_modifier = damestear_rich_deposit
		remove_province_modifier = huge_damestear
		remove_province_modifier = dwindling_resources
		remove_province_modifier = orlghelovar_glasslord_glass
		remove_province_modifier = orlghelovar_reformed_glassworkers
		remove_province_modifier = orlghelovar_glass_value
		remove_province_modifier = B34_board_of_chains_boost
		remove_province_modifier = B34_board_of_chains_boost_upgraded
		remove_province_modifier = B34_board_of_chains_boost_upgraded_2
		remove_province_modifier = livestock_boost_frontier
	}
	if = {
		limit = { 
			has_advanced_hold_infrastructure = yes
			NOT = {
				province_id = 2914 #verkal gulan
				province_id = 4236 #mithradhum
			}
		}
		clr_hold_advanced_infrastructure = yes
	}
	hidden_effect = {
		if = {
			limit = {
				trade_goods = wine
				FROM = { has_reform = monastic_breweries_reform }
			}
			remove_province_modifier = grain_bonus_prod
			add_province_modifier = {
				name = wine_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = wine
				OR = {
					FROM = { has_reform = wine_lord_reform }
					FROM = { has_reform = roilsard_elective }
					FROM = { has_reform = wineport_merchants }
				}
			}
			add_province_modifier = {
				name = wine_lord_wine
				duration = -1
				hidden = yes
			}
		}

		#Keyolion add sugar goods bonus (From Gov Reform)
		if = {
			limit = {
				trade_goods = sugar
				OR = {
					FROM = { has_reform = G58_agronomers_association_reform }
				}
			}
			add_province_modifier = {
				name = G58_sugar_province_goods
				duration = -1
				hidden = yes
			}
		}

		#Frontier Republics add livestock bonus
		if = {
			limit = {
				trade_goods = livestock
				FROM = { has_reform = frontier_republic_reform }
			}
			add_province_modifier = {
				name = livestock_boost_frontier
				duration = -1
				hidden = yes
			}
		}

		if = {
			limit = {
				trade_goods = wine
				owner = {
					has_estate_privilege = artifice_invention_wine_ageifier
				}
			}
			add_province_modifier = {
				name = artifice_ageifier_bonus
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				owner = {
					has_estate_privilege = artifice_invention_growth_beans
				}
				OR = {
					trade_goods = grain
					trade_goods = cocoa
					trade_goods = sugar
					trade_goods = wine
					trade_goods = tobacco
					trade_goods = spices
					trade_goods = incense
					trade_goods = tea
					trade_goods = coffee
					trade_goods = fungi
					trade_goods = serpentbloom
				}
			}
			add_province_modifier = {
				name = artifice_growthbeans_bonus
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = gems
				owner = {
					has_estate_privilege = artifice_invention_pearl_cultivators
				}
			}
			add_province_modifier = {
				name = artifice_pearl_cultivator_bonus
				duration = -1
				hidden = yes
			}
		}
		if = {
			limit = {
				trade_goods = grain
				OR = {
					FROM = { has_reform = monastic_breweries_reform }
					FROM = { has_reform = wine_lord_reform }
				}
			}
			remove_province_modifier = wine_bonus_prod
			add_province_modifier = {
				name = grain_bonus_prod
				duration = -1
				hidden = yes
			}
		}
		
		#honderaak incident gnoll minorities for colonies
		if = {
			limit = {
				is_city = no
				owner = { is_part_of_hre = yes has_country_modifier = honderaak_incident_colonization NOT = { culture_group = gnollish } }
			}
			random = {
				chance = 50
				province_event = { id = flavor_honderaak.6 days = 30 random = 60 }
			}
		}
		#Orldhum
		if = {
			limit = {
				trade_goods = slaves
				owner = { has_country_flag = orldhum_slaves }
			}
			set_province_flag = current_indenture
		}
		if = {
			limit = {
				trade_goods = slaves
				owner = { has_country_flag = orldhum_indenture_flag }
			}
			if = {
				limit = {
					NOT = { has_province_modifier = orldhum_indentured_masses }
					NOT = { has_province_modifier = orldhum_major_slave_depot }
					NOT = { has_province_modifier = orldhum_the_chainyard }
				}
				add_province_modifier = {
					name = orldhum_indentured_masses
					duration = -1
				}
			}
		}
		if = {
			limit = {
				NOT = { owner = { tag = I08 } }
				OR = {
					has_province_modifier = orldhum_indentured_masses
					has_province_modifier = orldhum_major_slave_depot
				}
			}
			remove_province_modifier = orldhum_indentured_masses
			remove_province_modifier = orldhum_major_slave_depot
		}
		#Orlghelovar
		if = {
			limit = {
				trade_goods = glass
				owner = { tag = I12 }
			}
			if = {
				limit = {
					owner = {
						OR = {
							has_reform = orlghelovar_glasslords
							has_reform = orlghelovar_science
						}
					}
					NOT = { has_province_modifier = orlghelovar_glasslord_glass }
				}
				add_province_modifier = { name = orlghelovar_glasslord_glass duration = -1 hidden = yes }
			}
			if = {
				limit = {
					owner = { has_reform = orlghelovar_glass_worker_reform }
					NOT = { has_province_modifier = orlghelovar_reformed_glassworkers }
				}
				add_province_modifier = { name = orlghelovar_reformed_glassworkers duration = -1 hidden = yes }
			}
			if = {
				limit = {
					owner = { has_country_modifier = orlghelovar_sapphire_glass }
					NOT = { has_province_modifier = orlghelovar_glass_value }
				}
				add_province_modifier = { name = orlghelovar_glass_value duration = -1 hidden = yes }
			}
		}
		#luciande
		if = {
			limit = { 
				trade_goods = slaves
				owner = { tag = B34 has_reform = luciande_board_of_chains_reform }
			}
			if = {
				limit = {
					owner = { has_country_flag = luciande_tier3_slaves_flag }
				}
				add_province_modifier = { name = B34_board_of_chains_boost_upgraded_2 duration = -1 hidden = yes }
			}
			else_if = {
				limit = {
					owner = { has_country_flag = luciande_tier2_slaves_flag }
				}
				add_province_modifier = { name = B34_board_of_chains_boost_upgraded duration = -1 hidden = yes }
			}
			else_if = {
				limit = {
					owner = { has_country_flag = luciande_tier1_slaves_flag }
				}
				add_province_modifier = { name = B34_board_of_chains_boost duration = -1 hidden = yes }
			}
		}
		#newshire
		if = {
			limit = {
				OR = {
					trade_goods = grain
					trade_goods = livestock
				}
				FROM = { 
					OR = {
						has_reform = newshire_stewardship
						has_reform = newshire_high_stewardship
					}
				}
			}
			add_province_modifier = {
				name = newshire_stewardship_boost
				duration = -1
				hidden = yes
			}
		}
		else_if = {
			limit = {
				NOT = { 
					FROM = { 
						OR = {
							has_reform = newshire_stewardship
							has_reform = newshire_high_stewardship
						}
					} 
				}
				has_province_modifier = newshire_stewardship_boost
			}
			remove_province_modifier = newshire_stewardship_boost
		}
		

		#Mulen (F50)
		if = {
			limit = {
				owner = {
					OR = {
						was_tag = F50
						tag = F50
					}
				}
				OR = {
					trade_goods = gems
					trade_goods = ivory
					trade_goods = copper
					trade_goods = wool
				}
			}
			if = {
				limit = {
					owner = { mission_completed = mulen_jewelry_industry }
					NOT = { has_province_modifier = mulen_jewelry_line }
				}
				add_province_modifier = { name = mulen_jewelry_line duration = -1 }
			}
		}
	}
	if = {
		limit = { owner = { tag = R86 mission_completed = Y26_fading_is_the_harvest_moon } }
		if = {
			limit = {
				OR = { trade_goods = grain trade_goods = livestock }
				NOT = {
					has_province_modifier = Y26_land_redistribution
					has_province_flag = Y26_noble_autonomy
					has_province_flag = Y26_noble_rebellion
				}
			}
			add_province_modifier = { name = Y26_land_redistribution duration = -1 }
			add_province_modifier = { name = Y26_fading_is_the_harvest_moon_mod duration = -1 }
		}
		else_if = {
			limit = { NOT = { trade_goods = grain trade_goods = livestock } }
			clr_province_flag = Y26_noble_rebellion
			clr_province_flag = Y26_noble_autonomy
			remove_province_modifier = Y26_land_redistribution
			remove_province_modifier = Y26_fading_is_the_harvest_moon_mod
		}
	}
	if = {
		limit = {
			has_province_modifier = diamond_district
			NOT = { trade_goods = gems }
			NOT = { trade_goods = glass }
		}
		remove_province_modifier = diamond_district
	}
	#Arg-Ordstun
	if = {
		limit = {
			owner = {
				OR = {
					tag = H76
					was_tag = H76
				}
				has_estate_privilege = estate_burghers_gem_quarrying
			}
			trade_goods = gems
			NOT = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
			}
		}
		add_province_modifier = {
			name = H76_gem_quarrying
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = {
			has_province_modifier = H76_gem_quarrying
			NOT = { trade_goods = gems }
		}
		remove_province_modifier = H76_gem_quarrying
	}
	if = {
		limit = {
			owner = {
				OR = {
					tag = H76
					was_tag = H76
				}
				has_estate_privilege = estate_burghers_lucrative_lapidaries
			}
			trade_goods = gems
		}
		add_province_modifier = {
			name = H76_lucrative_lapidaries
			duration = -1
			hidden = yes
		}
	}
	if = {
		limit = {
			has_province_modifier = H76_lucrative_lapidaries
			NOT = { trade_goods = gems }
		}
		remove_province_modifier = H76_lucrative_lapidaries
	}

	#ironwood trees
	if = {
		limit = {
			region = dao_nako_region
			trade_goods = iron
		}
		add_permanent_province_modifier = {
    		name = ironwood_trees
			duration = -1
		}
	}

	if = {
		limit = {
			region = dao_nako_region
			has_province_modifier = ironwood_trees
			NOT = {
				trade_goods = iron
			}
			
		}
		remove_province_modifier = ironwood_trees
	}
}

# this = country
on_loan_repaid = {
	on_loan_repaid_estate_privileges_effect = yes
	if = { #1.35 - Anbennar removed the THIS scope for causing errors
		limit = { 
			economic_ideas = 4 
		}
		add_inflation = -0.05
	}
}

# this = country
on_rebels_break_country = {
	add_country_modifier = {
		name = just_lost_to_rebels
		duration = 10
		hidden = yes
	}
	if = {
		limit = { is_subject_of_type = acolyte_dominion }
		divide_variable = { aInfluence = 2 }
	}
	if = { #Aftermath of the War
		limit = {
			tag = R62 #The Command
			NOT = {
				num_of_provinces_owned_or_owned_by_non_sovereign_subjects_with = {
					value = 1
					region = shamakhad_region
				}
			}
		}
		R08 = { country_event = { id = flavor_tiltaghar.14 days = 1 } } #Tiltaghar
	}

	events = {
		flavour_brelar.13		#boats revolt
	}

}

# this = country
## Fires when you fire or replace your ADM advisor, in the moment before they are actually removed from their post.
## Note: Defining a new advisor here will result in the shortest appointment in history. Use on_post_adm_advisor_fired instead :)
on_pre_adm_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_adm_advisor
		}
		set_country_flag = just_fired_adm_advisor
		remove_advisor_by_category_no_action = ADM
	}
}

# this = country
on_pre_dip_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_dip_advisor
		}
		set_country_flag = just_fired_dip_advisor
		remove_advisor_by_category_no_action = DIP
	}
}

# this = country
on_pre_mil_advisor_fired = {
	if = {
		limit = {
			has_country_flag = need_to_fire_mil_advisor
		}
		set_country_flag = just_fired_mil_advisor
		remove_advisor_by_category_no_action = MIL
	}
}

# this = country
on_post_adm_advisor_fired = {
	on_advisor_removed_effct = { type = adm }
}

# this = country
on_post_dip_advisor_fired = {
	on_advisor_removed_effct = { type = dip }
}

# this = country
on_post_mil_advisor_fired = {
	on_advisor_removed_effct = { type = mil }
}

# this = new client state, from = parent country
on_create_client_state = {
	country_event = { id = racial_modifiers.6 days = 1 }	#Racial mil change if unmatching
	country_event = {
		id = anbennar_setup.19
	}

}

# this = new target, from = previous target (both can be non-existent tag)
on_change_revolution_target = {
	if = {
		limit = { has_reform = junior_revolutionary_republic_reform }
		add_government_reform = revolutionary_republic_reform
	}
}

# this = curia controller (enactor of the bull)
on_golden_bull_enacted = {
	set_country_flag = enacted_golden_bull
}

# province:  spawned whenever a new owner takes over the province
# FROM = The previous owner.
on_conquest = {
	remove_named_unrest = estate_land_seized
	clr_province_flag = has_estate_unrest_flag

	# 1.35 unsure if this is needed, messe with the HRE
	# if = {
	# 	limit = { 
	# 		is_part_of_hre = no
	# 		owner = { 
	# 			has_country_flag = pru_dom_hre_flag 
	# 			alliance_with = emperor 
	# 		}
	# 	}
	# 	owner = {
	# 		add_trust = {
	# 			who = emperor 
	# 			value = 3 
	# 			mutual = yes 
	# 		}
	# 	}
	# }
	# else_if = {
	# 	limit = { 
	# 		is_part_of_hre = no
	# 		owner = { 
	# 			has_country_flag = pru_dom_hre_flag 
	# 			NOT = { alliance_with = emperor } 
	# 		}
	# 	}
	# 	owner = {
	# 		add_power_projection = {
	# 			type = mission_rewards_power_projection
	# 			amount = 1
	# 		}
	# 	}
	# }
	# else_if = {
	# 	limit = { 
	# 		is_part_of_hre = no
	# 		owner = { is_emperor = yes }
	# 	}
	# 	owner = { 
	# 		add_imperial_influence = 0.5
	# 	}
	# }

	# Re-add their influence to Castonath if gets conquered from nation with the estate
	if = {
		limit = {
			OR = {
				province_id = 831
				province_id = 832
				province_id = 833
			}
			OR = {
				FROM = { has_estate = estate_castonath_patricians }
				FROM = { has_country_flag = castonath_patricians_curtailing_relationship }
				owner = { has_country_flag = castonath_patricians_curtailing_relationship }
				owner = { has_estate = estate_castonath_patricians }
			}
		}
		if = {
			limit = {
				owner = { has_estate = estate_castonath_patricians }
			}
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
		}
		else_if = {
			limit = {
				owner = { has_country_flag = castonath_patricians_curtailing_relationship }
			}
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			castonath_patricians_decrease_influence_effect = yes
			add_province_modifier = {
				name = castonath_patricians_curtailing
				duration = 3650
			}
		}
		if = {
			limit = { FROM = { has_country_flag = castonath_patricians_curtailing_relationship } }
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_some
				duration = -1
			}
		}
		if = {
			limit = {
				FROM = {
					estate_influence = {
						estate = estate_castonath_patricians
						influence = 80
					}
				}
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_full
				duration = -1
			}
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
			remove_province_modifier = castonath_patrician_influence_some
		}
		else_if = {
			limit = {
				FROM = {
					estate_influence = {
						estate = estate_castonath_patricians
						influence = 60
					}
				}
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_significant
				duration = -1
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_considerable
			remove_province_modifier = castonath_patrician_influence_some
		}
		else_if = {
			limit = {
				FROM = {
					estate_influence = {
						estate = estate_castonath_patricians
						influence = 40
					}
				}
				NOT = { owner = { tag = B61 } }
			}
			add_permanent_province_modifier = {
				name = castonath_patrician_influence_considerable
				duration = -1
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_some
		}
		else = {
			if = {
				limit = { owner = { NOT = { tag = B61 } } }
				add_permanent_province_modifier = {
					name = castonath_patrician_influence_some
					duration = -1
				}
			}
			remove_province_modifier = castonath_patrician_influence_full
			remove_province_modifier = castonath_patrician_influence_significant
			remove_province_modifier = castonath_patrician_influence_considerable
		}
	}
	if = {
		limit = { has_province_flag = expedition_in_progress }
		expedition_dead_effect = yes
		clr_province_flag = generated_party_stats_@FROM
		clr_province_flag = sent_expedition_@FROM
	}

	if = {
		limit = {
			owner = { has_country_flag = siadan_harimari_autonomy }
			culture_is_harimari = yes
		}
		add_province_modifier = {
			name = siadan_harimari_autonomy
			duration = -1
		}
	}

	#Bianfang removing slaves
	if = {
		limit = {
			owner = { has_country_flag = bianfang_abolished_slavery }
			trade_goods = slaves
		}
		change_trade_goods = unknown
	}
	#swamp trolls conquest modifiers
	if = {
		limit = {
			owner = {
				culture = swamp_troll
			}
			has_province_flag = hag_conquest_flag
		}
		add_province_modifier = {
			name = hag_conquest
    		duration = -1  
    		desc = hag_conquest_tooltip
		}
	}
	
	# Yinquan
	if = {
		limit = {
			owner = {
				tag = Y26
			}
			OR = {
				province_id = 4871
				province_id = 4907
				province_id = 4837
				province_id = 4813
				province_id = 4826
				province_id = 4559
				province_id = 4703
				# province_id = 4955
				# province_id = 4565
				province_id = 4633
				province_id = 4630
				province_id = 4411
				province_id = 4963
				province_id = 4828
				province_id = 4859
				province_id = 4500
				province_id = 5424
			}
		}
		province_event = { id = flavour_yinquan.25 }
	}
	# Mountainshark removing slaves
	if = {
		limit = {
			owner = { has_country_flag = mountainshark_abolished_slavery }
			trade_goods = slaves
		}
		change_trade_goods = unknown
	}

	g27_breluslad_conquest_ae_effect = yes

	#Itinerant Capital Mechanic - Give modifier to new province
	if = { 
		limit = {
			owner = { has_government_attribute = has_itinerant_capital }
			area_for_scope_province = { is_capital = yes }
		}
		add_province_modifier = {
			name = itinerant_capital_area
			duration = -1
		}
	}
	if = {
		limit = { has_province_flag = is_itinerent_capital }
		clr_province_flag = is_itinerent_capital
	}
	if = {
		limit = {
			province_id = 2487
			owner = { NOT = { primitives = yes } }
		}
		remove_province_modifier = taychend_urvand_mine
	}
}

on_country_creation = {
	if = {
		limit = {
			tag = Z97
			OR = {
				NOT = {
					religion = ravelian
				}
				NOT = {
					has_reform = papacy_reform
				}
				NOT = {
					government = theocracy
				}
			}
		}
		change_religion = ravelian
		change_government = theocracy
		add_government_reform = papacy_reform
	}

	if = {
		limit = {
			OR = {
				has_reform = adventurer_reform
				has_reform = dwarovar_warband
				has_reform = roaming_horde
			}
			ai = yes
		}
		if = {
			limit = { capital_scope = { continent = serpentspine } }
			add_country_modifier = {
				name = dont_colonize_but_migrate
				duration = 3650
			}
		}
		else = {
			add_country_modifier = {
				name = dont_colonize_but_migrate
				duration = 365
				hidden = yes
			}
		}
	}
	country_event = {
		id = anbennar_setup.19
	}

	country_event = { id = new_sun_cult.11 days = 1 }

	if = { #Makes Beikdugang created subjects (mainly colonies) tolerate ruinborn more.
		limit = {
			is_subject_of = Y15
			Y15 = { mission_completed = Y15_solstice }
		}
		largest_increase_of_ruinborn_tolerance_effect = yes
	}

	if = {
		limit = { religion = kheionism }
		change_personal_deity = kheio_no_policy
		country_event = { id = kheionism.2 }
	}

	if = {
		limit = {
			NOT = { tag = H66 } #Jaherian Exemplars
			NOT = { tag = H67 } #Rezankand 
			OR = {
				religion_group = bulwari
				has_country_flag = updating_isolationism_window
			}
			government = theocracy
			ai = yes
		}
		add_government_reform = bulwari_temple_reform
		add_government_power = { mechanic_type = vacyntassi_temple_authority power_type = vacytassi_temple_authority_power value = 40 }
	}

	if = {
		limit = {
			has_global_flag = rending_active
			OR = {
				capital_scope = {
					continent = asia
					NOT = { superregion = forbidden_lands_superregion }
				}
				num_of_owned_provinces_with = {
					value = 10
					continent = asia
					NOT = { superregion = forbidden_lands_superregion }
				}
			}
		}
		if = {
			limit = {
				OR = {
					religion = bangujonsi
					religion = mystic_accord
				}
			}
			set_country_flag = rending_appease_flag
		}
		else_if = {
			limit = {
				religion = lefthand_path
			}
			set_country_flag = rending_corrupt_flag
		}
		else_if = {
			limit = {
				NOT = { religion = righteous_path } # righteous path gets an event to choose
			}
			set_country_flag = rending_ward_flag
		}
		else_if = {
			limit = {
				religion = righteous_path
			}
			country_event = { id = spirits.704 days = 1 }
		}
	}

	#Pick Holy Order
	if = {
		limit = {
			AND = {
				religion = corinite
				NOT = { has_country_flag = corinite_adm_order_picked }
			}
		}
		country_event = {
			id = corinite.300
			days = 7
		}
	}
	else_if = {
		limit = {
			AND = {
				religion = corinite
				NOT = { has_country_flag = corinite_dip_order_picked }
			}
		}
		country_event = {
			id = corinite.301
			days = 7
		}
	}
	else_if = {
		limit = {
			AND = {
				religion = corinite
				NOT = { has_country_flag = corinite_mil_order_picked }
			}
		}
		country_event = {
			id = corinite.302
			days = 7
		}
	}
}

# ROOT = country, FROM = country they fled from
on_cossacks_receive_serfs = {
}

on_federation_leader_change = {
	if = {
		limit = { tag = FROM }
		disband_federation = THIS
	}
	else = {
		# New strongest member becomes the new federation leader
		set_federation_leader = THIS
	}
}

#FROM = country pillaged, ROOT = country doing the pillaging
on_pillaged_capital = {
	slave_raid_pillage_capital_effect = yes
	if = {
		limit = {
			capital_scope = {
				OR = {
					superregion = rahen_superregion
					superregion = yanshen_superregion
					superregion = south_haless_superregion
				}
			}
		}
		change_variable = {
			which = rending_pillage_counter_variable
			value = 1
		}
	}
}

#FROM = country dev was transferred from, ROOT = country doing the transferring
on_transfer_development = {
}

on_colonial_type_change = {
	clr_country_flag = encourage_cash_crops_flag
}

on_estate_led_regency = {
	if = {
		limit = {
			has_government_attribute = improved_nobles_regency
			OR = {
				has_estate = estate_nobles
				AND = {
					NOT = { has_estate = estate_nobles }
					OR = {
						has_estate = estate_maratha
						has_estate = estate_rajput
						#Anbennar
						has_estate = estate_uppercastes
					}
				}
			}
		}
		add_ruler_modifier = {
			name = empowered_regency_modifier
			duration = -1
		}
		change_adm = 1
		change_dip = 1
		change_mil = 1
	}
}

on_estate_led_regency_surpassed = {
	if = {
		limit = {
			num_of_powerful_estates = 1
			has_estate_led_regency = {
				estate = any
			}
			NOT = {
				estate_led_regency_influence = 70
			}
			OR = {
				AND = {
					has_estate_led_regency = {
						estate = estate_burghers
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_church
							modifier = REFUSED_REGENCY
						}
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_nobles
							modifier = REFUSED_REGENCY
						}
					}
				}
				AND = {
					has_estate_led_regency = {
						estate = estate_church
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_burghers
							modifier = REFUSED_REGENCY
						}
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_nobles
							modifier = REFUSED_REGENCY
						}
					}
				}
				AND = {
					has_estate_led_regency = {
						estate = estate_nobles
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_burghers
							modifier = REFUSED_REGENCY
						}
					}
					NOT = {
						has_estate_loyalty_modifier = {
							estate = estate_church
							modifier = REFUSED_REGENCY
						}
					}
				}
			}
		}
		country_event = { id = estate_regency_events.1 }
	}
}

on_extended_regency = {
	random_events = {
		100 = extended_regency_events.4
		100 = extended_regency_events.5
		100 = extended_regency_events.6

		300 = 0
	}
}

on_estate_removed = {
	if = {
		limit = {
			has_country_modifier = dhimmi_building_restrictions
			NOT = {
				has_estate = estate_dhimmi
			}
		}
		remove_country_modifier = dhimmi_building_restrictions
	}
	if = {
		limit = {
			has_country_modifier = swe_debt_with_the_clergy
			NOT = { has_estate = estate_church }
		}
		remove_country_modifier = swe_debt_with_the_clergy
	}
	if = {
		limit = {
			has_country_modifier = swe_debt_with_the_burghers
			NOT = { has_estate = estate_burghers }
		}
		remove_country_modifier = swe_debt_with_the_burghers
	}
	if = {
		limit = {
			has_country_modifier = swe_debt_with_the_nobles
			NOT = { has_estate = estate_nobles }
		}
		remove_country_modifier = swe_debt_with_the_nobles
	}
}

##scope = colony province, FROM = owner country or province if there's a minority expulsion source, fires when the colony is created 1.35
on_colony_established = {
	if = {
		limit = {
			owner = { has_country_modifier = obrtrol_colonial_enthusiasm }
			OR = {
				superregion = gerudia_superregion
				region = northern_pass_region
			}
		}
		add_province_modifier = {
			name = obrtrol_troll_deal_accepted
			duration = 7300
		}
	}
	if = {
		limit = {
			owner = { has_country_modifier = vyzemby_colonial_fervour }
			province_group = amezatany_colonisation_provinces
		}
		add_province_modifier = {
			name = vyzemby_amezatany_settlements
			duration = 7300
		}
	}
}

#scope = new country, FROM = parent country 1.35
on_colonial_nation_established = {
	if = {
		limit = {
			FROM = {
				has_country_modifier = orcish_slaves_in_colonies
			}
		}
		add_country_modifier = {
			name = orcish_slaves_in_colonies
			duration = -1
		}
	}
	if = {
		limit = {
			FROM = {
				monstrous_culture = yes
			}
		}
		country_event = { id = monstrous.200 }
	}
}

on_colonist_boosting_colony = {
	on_colonist_boosting_colony_effect = yes
	hidden_effect = {
		if = {
			limit = { NOT = { native_size = 1 } } # If there are few natives
			remove_all_racial_majority = yes
		}
	}

	# Redundant with 1.32 above on_action, left here in case the above does not work
	# if = {
		# limit = {
			# culture = plain_centaur
			# owner = { culture_group = triunic }
			# is_city = no
		# }
		# change_culture = owner
		# change_religion = owner
	# }

	hidden_effect = {
		if = {
			limit = {
				owner = { has_country_flag = rezankand_jungle_research }
				NOT = { has_province_modifier = rezankand_jungle_specialist }
				has_terrain = jungle
			}
			add_province_modifier = {
				name = rezankand_jungle_specialist
				duration = 3650
			}
		}
	}

	hidden_effect = {
		if = {
			limit = {
				owner = { has_country_flag = khug_manifest_destiny_flag }
				NOT = { has_province_modifier = khug_manifest_destiny }
				region = northern_pass_region
			}
			add_province_modifier = {
				name = khug_manifest_destiny
				duration = 3650
			}
		}
	}
}

#ROOT = converted country, FROM = country which force converts ROOT, on_action gets called on Force religion peace and Enforce Religion subject interaction
on_force_conversion = {
	on_force_conversion_effect = yes
}

on_institution_embracement = {
	if = {
		limit = {
			has_government_attribute = monarch_power_on_institutions
		}
		add_adm_power = 100
		add_dip_power = 100
		add_mil_power = 100
	}
	if = { #Artificery start general
		limit = {
			has_institution = manufactories
			NOT = {
				has_country_flag = artificery_unlocked
			}
			OR = {
				NOT = { religion = bulwari_sun_cult }
				is_chosen_country = no
			}
		}
		country_event = {
			id = anbennar_setup.19
		}
	}
	if = { #Anbennar - isobelin events
		limit = {
			tag = G91
			has_institution = global_trade
		}
		country_event = { 
			id = flavor_isobelin.10 #goblin cartels
			days = 3650
		}
	}
	if = {
		limit = {
			tag = G43 
			NOT = {
				has_country_flag = haraf_has_reformed_kinah
			}
			2112 = {
                has_active_triggered_province_modifier = haraf_finished_integration
            }
		}
		country_event = {
			id = haraf_events.8
		}
		add_stability = -2
	}
}

on_national_focus_change = {}

#ROOT = new capital province, FROM = old capital province
on_capital_moved = {
	on_capital_moved_effect = yes
	# if your capital is moved to a colony (i.e. by losing all your other provinces)
	# this colony auto-completes to a province without triggering on_colony_finished
	# so catch this edge case here to fix the pop modifiers
	# stupidly, when it triggers this on_action it's both a colony and your capital
	if = {
		limit = { is_colony = yes }
		province_event = { id = race_setup_events.15 }
	}


	if = { limit = { has_province_modifier = cant_colonize }	#Anbennar
		province_event = { id = migration_force_settle.3 days = 1 }
	}
	else = {
		#Not Anbennar
		if = { #removes/sets dev cost bonus on capital state for government reforms
			limit = {
				owner = {
					has_government_attribute = lower_dev_cost_in_capital_state
				}
				NOT = { has_province_modifier = lower_dev_cost_in_capital_state_modifier }
			}
			FROM = {
				area = {
					remove_province_modifier = lower_dev_cost_in_capital_state_modifier
				}
			}
			area = {
				add_province_modifier = {
					name = lower_dev_cost_in_capital_state_modifier
					duration = -1
					hidden = yes
				}
			}
		}
	
		#Anbennar
		if = { #removes/sets gov cost bonus on capital region for government reforms
			limit = {
				owner = {
					has_government_attribute = lower_gov_cost_in_home_region
				}
				NOT = { has_province_modifier = lower_gov_cost_in_home_region_modifier }
			}
			FROM = {
				region = {
					remove_province_modifier = lower_gov_cost_in_home_region_modifier
				}
			}
			area = {
				add_province_modifier = {
					name = lower_gov_cost_in_home_region_modifier
					duration = -1
					hidden = yes
				}
			}
		}
	}

	owner = {	
		country_event = { id = escanni_wars.3 } # Escanni wars bypass
		country_event = { id = escanni_wars.200 } # Joined Escanni wars
		country_event = { id = flavour_splinter.2 } # Itinerant Capital
	}
	
	#update "Religion Triumphant" HRE modifiers
	owner = { country_event = { id = religious_leagues.11 } }
	
	#dwarovar reclaimer
	if = { limit = { continent = serpentspine }
		owner = { add_country_modifier = { name = reclaiming_dwarovar duration = -1 } }
	}
	else = {
		owner = { remove_country_modifier = reclaiming_dwarovar }
	}

	yrw_move_iosahar_debug_modifier = yes
	#CENTAUR NOMADISM
	
	if = {
		limit = {
				owner = {
					has_government_mechanic = centaur_nomadism
				}
		}
		ROOT = {	
			owner = {
				save_event_target_as = the_centaur_who_moved
				add_country_modifier = {
						name = nomadic_capital_just_moved
						duration = 1825
				}
				every_owned_province = {
					limit = {
						has_province_flag = is_nomadic_capital
					}
					clr_province_flag = is_nomadic_capital
				}
			}
		}
		ROOT = {
			owner = {
				apply_debuff_NZOC_country_scope = yes
				apply_owned_NZOC_country = yes
			}	
		}
	}
}

#ROOT = province that was expanded in, FROM = country that did it
on_expanded_infrastructure = {
}

#ROOT = province that was centralized in
on_centralized_state = {
	if = {
		limit = {
			owner = { has_government_attribute = centralize_state_no_reform_cost }
		}
		owner = {
			add_adm_power = 50
			change_government_reform_progress = 50
		}
	}
	else_if = {
		limit = {
			owner = { has_government_attribute = centralize_state_half_refund }
		}
		owner = {
			add_adm_power = 25
			change_government_reform_progress = 25
		}
	}
	if = {
		limit = {
			owner = { has_government_attribute = centralize_state_development }
		}
		area = {
			limit = {
				owned_by = ROOT
			}
			random_list = {
				1 = { add_base_tax = 1 }
				1 = { add_base_production = 1 }
				1 = { add_base_manpower = 1 }
			}
		}
	}
	if = {
		limit = {
			owner = { has_age_ability = ab_ruinborn_empire }
		}
		area = {
			limit = {
				owned_by = ROOT
			}
			random_list = {
				1 = { add_base_tax = 1 }
				1 = { add_base_production = 1 }
				1 = { add_base_manpower = 1 }
			}
		}
	}
}
#ROOT = country
monarch_on_shipwreck = {
}

heir_on_shipwreck = {
}

consort_on_shipwreck = {
}

#ROOT = country
on_defender_of_faith_loss = {
	on_defender_of_faith_claim_effect = yes
}

on_defender_of_faith_claim = {
	set_country_flag = claimed_defender_of_faith_flag
	#if = {
	#	limit = {
	#		religion = catholic
	#		has_country_flag = liv_the_livonian_defender_flag
	#		NOT = { has_country_modifier = liv_the_livonian_defender }
	#	}
	#	add_country_modifier = {
	#		name = liv_the_livonian_defender
	#		duration = -1
	#		desc = liv_the_livonian_defender_tt
	#	}
	#}
	if = {
		limit = {
			has_government_attribute = improved_defender_of_faith
		}
		add_country_modifier = {
			name = gov_improved_defender_of_faith_mod
			duration = -1
		}
	}
}

on_hre_dismantled = {
	#updates "Religion Triumphant" HRE modifiers
	hidden_effect = { every_known_country = { country_event = { id = religious_leagues.11 } } }
	country_event = { id = hre_event.15 }
}

on_new_age = {
	set_age_passed_global_flag = yes
	remove_all_age_timed_modifiers = yes

	#Consolidation wars events
	events = {
		escanni_wars.1 # Fire the war
		escanni_wars.3 # Bypass the war
	}
	
	if = {
		limit = { has_country_flag = age_ability_monstrous_rule_flag }
		clr_country_flag = age_ability_monstrous_rule_flag
	}

	#Late Aelantir spawnables (aka Ynn)
	if = {
		limit = { current_age = age_of_reformation }
		75 = { #High Ording
			province_event = {
				id = aelantirspawnables.5 #Ebenmas
				random = 365
			}
		}
		827 = { #Ionntras
			province_event = {
				id = aelantirspawnables.6 #Corinsfield
				random = 365
			}
		}
		267 = { #Themarenn
			province_event = {
				id = aelantirspawnables.8 #Themaria
				random = 365
			}
		}
		68 = { #Redfort
			province_event = {
				id = aelantirspawnables.15 #Argezvale
				random = 365
			}
		}
		234 = { #Damescrown
			province_event = {
				id = adventurerspawnables.3 #Shining Circle/Beggaston
				random = 365
			}
		}
		277 = { #Istralore
			province_event = {
				id = adventurerspawnables.4 #Istralorian Crusaders/Istranar
				random = 365
			}
		}
		569 = { #Menibor
			province_event = {
				id = adventurerspawnables.5 #Menibor Free Company/Tiru Moine
				random = 365
			}
		}
		350 = { #Silent Repose
			province_event = {
				id = adventurerspawnables.7 #House of Reflection/Elathael
				random = 365
			}
		}
		135 = { #Tipney
			province_event = {
				id = adventurerspawnables.8 #Tipney Pioneers/West Tipney
				random = 365
			}
		}
		909 = { #Havorton
			province_event = {
				id = adventurerspawnables.9 #Havoral Band/New Havoral
				random = 365
			}
		}
		8 = { #Anbenncost
			province_event = {
				id = adventurerspawnables.10 #Chipped Tooth Company/Chippengard
				random = 365
			}
		}
		281 = { #Plumwall
			province_event = {
				id = adventurerspawnables.11 #Plumwall Expedition/Plumstead
				random = 365
			}
		}
		417 = { #TELLUM!
			province_event = {
				id = adventurerspawnables.13 #Bardswood Band/Tellumtir
				random = 365
			}
		}
		244 = { #Arca Dhanaenn
			province_event = {
				id = adventurerspawnables.12 #Brigade Magnificent/Nur Dhanaenn
				random = 365
			}
		}
	}
}

#ROOT = province
on_adm_exploited = {
	if = {
		limit = { owner = { has_government_attribute = may_not_reduce_tax_on_exploitation } }
		random = {
			chance = 50
			add_base_tax = 1
		}
	}
	if = {
		limit = { owner = { has_government_attribute = may_not_reduce_tax_on_own_exploitation culture_group = ROOT } }
		random = {
			chance = 25
			add_base_tax = 1
		}
	}
	if = {
		limit = { owner = { has_government_attribute = may_not_reduce_tax_on_foreign_exploitation NOT = { culture_group = ROOT } } }
		random = {
			chance = 50
			add_base_tax = 1
		}
	}
}

on_dip_exploited = {
}

on_mil_exploited = {
}

on_raze = {
	owner = {
		add_patriarch_authority = 0.0025
	}
	owner = {
		if = {
			limit = {
				has_ruler_flag = xhazob_patron
			}
			change_variable = {
				which = provincesrazed
				value = 1
			}
		}
	}
	if = {
		limit = {
			owner = {has_reform = scourge_of_irdaeos_reform}
			has_province_modifier = base_nomadic_zone_of_control
		}
		export_to_variable = {
    		which = scourgeDev
    		value = development
    		who = ROOT
		}
		while = {
            limit = {
                #While our total dip value has 1, lower dip power by 1.
                check_variable = {
                    which = scourgeDev
                    value = 1
                }
            }
            owner = {
				add_treasury = 5
			}
            subtract_variable = {
                which = scourgeDev
                value = 1
            }
        }
	}
}

on_concentrate_development = {
	if = { #1.35
		limit = { 
			owner = { has_country_modifier = fra_french_isles_modifier }
		}
		add_nationalism = -5
	}
}

# EVERYTHING BELOW 1.35
on_slacken_start = {
	add_country_modifier = {
		name = slackening_modifier
		duration = -1
	}
}
on_slacken_stop = {
	remove_country_modifier = slackening_modifier
}

on_colony_finished = { #ROOT - Province
	on_colony_finished_effect = yes

	# Anbennar
	province_event = { id = race_setup_events.15 }	
	# colonies do not get their pops updated to match the owners (even though the culture is the owners primary)
	# until the colony is complete

	g27_breluslad_supplies_effect = yes
	g27_breluslad_village_elections_effect = yes
}

on_advisor_hired = { #ROOT - Country

}

on_adm_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_dip_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_mil_advisor_hired = { #ROOT - Country, executed after on_advisor_hired!

}

on_core = { #ROOT - Province, #FROM - Country that gets the core
	if = {
		limit = { FROM = { religion = gods_of_the_taychend } }
		FROM = {
			change_variable = {
				which = TaychendGlory
				value = 10
			}
			update_taychend_glory = yes
		}
	}

	#Restoring upgrades if an order was deactivated but not destroyed due to the state only being partially conquered (and you losing the core in the meantime)
	if = {
		limit = {
			owner = { has_country_flag = upgraded_balgar }
			holy_order = balgar_order
			area_for_scope_province  = {
				type = all
				owner = {
					ROOT = { owned_by = PREV }
					is_core = PREV
				}
			}
		}
		area = {
			add_permanent_province_modifier = {
				name = corinite_balgar_upgraded
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			owner = { has_country_flag = upgraded_corin }
			holy_order = corin_order
			area_for_scope_province  = {
				type = all
				owner = {
					ROOT = { owned_by = PREV }
					is_core = PREV
				}
			}
		}
		area = {
			add_permanent_province_modifier = {
				name = corinite_corin_upgraded
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			owner = { has_country_flag = upgraded_falah }
			holy_order = falah_order
			area_for_scope_province  = {
				type = all
				owner = {
					ROOT = { owned_by = PREV }
					is_core = PREV
				}
			}
		}
		area = {
			add_permanent_province_modifier = {
				name = corinite_falah_upgraded
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			owner = { has_country_flag = upgraded_munas }
			holy_order = munas_order
			area_for_scope_province  = {
				type = all
				owner = {
					ROOT = { owned_by = PREV }
					is_core = PREV
				}
			}
		}
		area = {
			add_permanent_province_modifier = {
				name = corinite_munas_upgraded
				duration = -1
			}
		}
	}
	else_if = {
		limit = {
			owner = { has_country_flag = upgraded_ryala }
			holy_order = ryala_order
			area_for_scope_province  = {
				type = all
				owner = {
					ROOT = { owned_by = PREV }
					is_core = PREV
				}
			}
		}
		area = {
			add_permanent_province_modifier = {
				name = corinite_ryala_upgraded
				duration = -1
			}
		}
	}
}

on_tech_taken = { #ROOT - Country

}

on_adm_tech_taken = { #ROOT - Country, executed after on_tech_taken!
	I98_adm_tech_tracker = yes
}

on_dip_tech_taken = { #ROOT - Country, executed after on_tech_taken!

}

on_mil_tech_taken = { #ROOT - Country, executed after on_tech_taken!
	spirit_mil_shock_dmg = yes
}

on_barrage = { #ROOT - barraging country, FROM - barraged province 

}

on_naval_barrage = { #ROOT - barraging country, FROM - barraged province 

}

on_scorch_earth = { #ROOT - scorching country, FROM - scorched province

}

on_war_ended = { #ROOT - Winer FROM - Loser
	country_event = { id = estate_adeen.8 }
}

on_alliance_broken = { #ROOT - Original alliance creator, FROM - Alliance accepter
	on_alliance_broken_effect = yes
	if = {
		limit = { has_country_flag = enable_galleass }
		clr_country_flag = enable_galleass
	}
	FROM = {
		if = {
			limit = { has_country_flag = enable_galleass }
			clr_country_flag = enable_galleass
		}
	}
	if = {
		limit = {
			ROOT = {
				OR = {
					tag = F50
					tag = F72
				}
			}
			FROM = {
				OR = {
					tag = F50
					tag = F72
				}
			}
		}
		5434 = {
			remove_province_modifier = mulen_trade_from_kvangraak
		}
		5460 = { #Haraagtseda node
			remove_trade_modifier = {
				who = ROOT
				key = mulen_trade_from_kvangraak
			}
		}
	}
}

on_royal_marriage_broken = { #ROOT - Original marriage creator, FROM - Marriage accepter

}

on_alliance_created = { #ROOT - Alliance sender, FROM - Alliance accepter

}

on_royal_marriage = { #ROOT - Marraige sender, FROM - marriage accepter

}

on_heir_disinherited = {

}		
on_overrun = { #ROOT - winner, FROM - loser, on stackwipe

}
