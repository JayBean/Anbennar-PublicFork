custom_button = {
    name = convert_ruler_to_war_wizard
    potential = {
		ruler_has_personality = mage_personality
	}
	trigger = {
		hidden_trigger = {
			OR = {
				is_monarch_leader = no
				AND = {
					has_ruler_flag = allow_war_wizard_after_exile #is_monarch_leader will always return true if a monarch leader is exiled and returned
					NOT = { has_ruler_modifier = allow_war_wizard_after_exile_delay } #define_ruler_to_general doesn't work after exile until 1 day has passed or the game has reloaded
				}
			}
			is_lesser_in_union = no
			has_consort_regency = no
			has_regency = no
			NOT = {
				has_ruler_flag = mage_ruler_general
				has_ruler_modifier = bulwar_tluukt_injured
			}
		}
	}
	effect = {
		custom_tooltip = make_ruler_general_tt
		hidden_effect = {
			set_ruler_flag = mage_ruler_general
			clr_ruler_flag = allow_war_wizard_after_exile
			country_event = { id = magic_ruler.100 }
		}
	}
	tooltip = make_ruler_general_desc_tt
}

custom_button = {
    name = convert_ruler_to_planetouched_commander
    potential = {
		NOT = { ruler_has_personality = mage_personality }
		ruler_has_planetouched_personality = yes
	}
	trigger = {
		hidden_trigger = {
			is_monarch_leader = no
			is_lesser_in_union = no
			has_consort_regency = no
			has_regency = no
			NOT = { has_ruler_flag = planetouched_ruler_general }
		}
	}
	effect = {
		custom_tooltip = make_ruler_general_tt
		hidden_effect = {
			set_ruler_flag = planetouched_ruler_general
			clr_ruler_flag = allow_planetouched_commander_after_exile
			country_event = { id = planetouched.100 }
		}
	}
	tooltip = make_ruler_planetouched_commander_desc_tt
}


custom_button = { #disables button for 1 day for exiled rulers returning (if they set the delay modifier)
	name = button_makerulergeneral
	potential = {
	}
	trigger = {
		hidden_trigger = {
			is_monarch_leader = no
			OR = {
				is_female = no
				has_global_modifier_value = {
					which = may_recruit_female_generals
					value = 1
				}
			}
			is_lesser_in_union = no
			has_consort_regency = no
			has_regency = no
		}
	}
	effect = {
	}
}