
build_up_aelantir_relics = {
	category = economy
	
	is_visible = {
		ai = no
		tag = Z97
		FROM = {
		#	capital_scope = {
		#		OR = {
		#			continent = north_america
		#			continent = south_america
		#		}
		#	}
		}
    }
	
	is_allowed = {
		ai = no
		ROOT = { # ravstate needs to finish their mission
			mission_completed = Z97_foothold_in_aelantir
		}
		FROM = { #Recipient Restrictions
			capital_scope = {
				OR = {
					continent = north_america
					continent = south_america
				}
			}
			any_owned_province = {
					trade_goods = precursor_relics
					not = {has_building = university}
			}
			NOT = {
				is_rival = Z97
				is_enemy = Z97
			}
			has_opinion = {who = Z97 value = 0} 
		}
	}

    on_accept = {
		ROOT = { # Effects on the Ravelian State
			add_treasury = -500
		}
		FROM = {
			country_event = { id = ravstate.9 days = 1 } #Starts constructing a University
		}
	}
	ai_will_do = {
		always = no
	}

}

spread_ravelian_faith = { #Functional!
	category = influence
	require_acceptance = yes
	is_visible = {
		ai = no
		tag = Z97
		FROM = {

		}
    }
	
	is_allowed = {
		ai = no
		ROOT = { 
			has_reform = verdical_parliament
			adm_power = 100
			dip_power = 100
			treasury = 1000
		}
		FROM = { #Recipient Restrictions
			not = {religion = ravelian}
			dominant_religion = ravelian
			#has_opinion = {who = Z97 value = 50} 
		}
	}

    on_accept = {
		ROOT = { # Effects on the Ravelian State
			add_adm_power = -100
			add_dip_power = -100
			add_treasury = -1000
		}
		FROM = {
			change_religion = ravelian
		}
	}
	ai_will_do = {
		always = no
	}
	ai_acceptance = { #This is slightly modified from the Protectorate acceptance as a base
		add_entry = { # Bonus for taking Erudite scaling modifier 1 
			name = ravstate_d2_erudite_bonus1
			limit = { Z97 = { has_country_modifier = z97_debate2_erudite1 } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 25 }
		}
		add_entry = { # Bonus for taking Erudite scaling modifier 2 
			name = ravstate_d2_erudite_bonus2
			limit = { Z97 = { has_country_modifier = z97_debate2_erudite2 } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}
		add_entry = { # Bonus for taking Erudite scaling modifier 3
			name = ravstate_d2_erudite_bonus3
			limit = { Z97 = { has_country_modifier = z97_debate2_erudite3 } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 75 }
		}
        add_entry = { #+1 per 8 opinion
            name = DIPLO_OPPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value 
				value = 0.125
			}
        }
		add_entry = { # +1 per 1 trust
			name = AI_TRUST_TOWARDS_ROOT
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}			
			subtract_variable = { 
				which = ai_value
				value = 50
			}
			multiply_variable = {
				which = ai_value
				value = 1
			}
		}
		add_entry = { #+5 Per Dip Rep
			name = AI_DIPLOMATIC_REPUTATION
			export_to_variable = {
				variable_name = ai_value
				value = trigger_value:diplomatic_reputation
			}
			#1 rep = 5
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		add_entry = { #-1 per 10 dev
			name = AI_TOTAL_DEVELOPMENT
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -0.1
			}
		}
		add_entry = { #Border Distance
			name = DIPLO_BORDER_DISTANCE_TT
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
				with = ROOT
			}
			#10 units = -1
			multiply_variable = {
				which = ai_value
				value = -0.1
			}
		}
		add_entry = { #-20 for neutral attitude
			name = attitude_neutral_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_neutral } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -20 }
		}
		add_entry = { #+50 for allied attitude
			name = attitude_allied_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_allied } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}
		add_entry = { #+10 for friendly attitude
			name = attitude_friendly_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_friendly } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 10 }
		}
		add_entry = { #+10 for threatened attitude
			name = attitude_threatened_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_threatened } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 10 }
		}
		add_entry = { #No-go for rivalry, hostile, outraged, or domineering
			name = attitude_rivalry_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_rivalry } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_hostile_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_hostile } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_outraged_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_outraged } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_domineering_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_domineering } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
	}
}

spread_ravelian_estates = { #Do something about the stab hit they take for accepting
	category = influence
	require_acceptance = yes
	is_visible = {
		ai = no
		tag = Z97
		FROM = {
		
		}
    }
	
	is_allowed = {
		ai = no
		ROOT = { # ravstate needs gov reform first
			has_reform = ravelian_state_technocracy
		}
		FROM = { #Recipient Restrictions
			has_opinion = {who = Z97 value = 50} # Maybe also allow Spy network? 
			religion = ravelian
			or = {
				not = {has_estate_privilege = estate_mages_organization_religious}
				and = {
					has_estate = estate_artificers
					not = {has_estate_privilege = estate_artificers_organization_ravelian_control}
				}
				not = {has_country_flag = estates_overseen_by_ravelians}
			}
		}
	}

    on_accept = {
		ROOT = { # Effects on the Ravelian State
			
		}
		FROM = {
			set_estate_privilege = estate_mages_organization_religious
			set_estate_privilege = estate_artificers_organization_ravelian_control
			set_country_flag = estates_overseen_by_ravelians
		}
	}
	ai_will_do = {
		always = no
	}
	ai_acceptance = { #This is modified from the Protectorate acceptance as a base, with more positive from Dip Rep and trust
		add_entry = { # Bonus for taking Erudite scaling modifier 1 
			name = ravstate_d2_erudite_bonus
			limit = { Z97 = { has_country_modifier = z97_debate2_erudite1 } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 25 }
		}
		add_entry = { # Bonus for taking Erudite scaling modifier 2 
			name = ravstate_d2_erudite_bonus
			limit = { Z97 = { has_country_modifier = z97_debate2_erudite2 } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}
		add_entry = { # Bonus for taking Erudite scaling modifier 3
			name = ravstate_d2_erudite_bonus
			limit = { Z97 = { has_country_modifier = z97_debate2_erudite3 } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 75 }
		}
        add_entry = { #+1 per 8 opinion
            name = DIPLO_OPPINION
			export_to_variable = {
				variable_name = ai_value
				value = opinion
				who = FROM
				with = ROOT
			}
			multiply_variable = {
				which = ai_value 
				value = 0.125
			}
        }
		add_entry = { # +1 per 1 trust over 50
			name = AI_TRUST_TOWARDS_ROOT
			export_to_variable = {
				variable_name = ai_value
				value = trust
				who = FROM
				with = ROOT
			}			
			subtract_variable = { 
				which = ai_value
				value = 50
			}
			multiply_variable = {
				which = ai_value
				value = 1
			}
		}
		add_entry = { #+5 Per Dip Rep
			name = AI_DIPLOMATIC_REPUTATION
			export_to_variable = {
				variable_name = ai_value
				value = trigger_value:diplomatic_reputation
			}
			#1 rep = 5
			multiply_variable = {
				which = ai_value
				value = 5
			}
		}
		add_entry = { #-1 per 10 dev
			name = AI_TOTAL_DEVELOPMENT
			export_to_variable = {
				variable_name = ai_value
				value = total_development
				who = FROM
			}
			multiply_variable = {
				which = ai_value
				value = -0.1
			}
		}
		add_entry = { #Border Distance
			name = DIPLO_BORDER_DISTANCE_TT
			export_to_variable = {
				variable_name = ai_value
				value = border_distance
				who = FROM
				with = ROOT
			}
			#10 units = -1
			multiply_variable = {
				which = ai_value
				value = -0.1
			}
		}
		add_entry = { # Bonus for already have mage org: religious
			name = ravstate_already_religious_mages_tt
			limit = { FROM = { has_estate_privilege = estate_mages_organization_religious } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}
		add_entry = { # Bonus for already have artificer org: ravelian
			name = ravstate_already_ravstate_artificers_tt
			limit = { FROM = { has_estate_privilege = estate_artificers_organization_ravelian_control } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}
		add_entry = { #-20 for neutral attitude
			name = attitude_neutral_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_neutral } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -20 }
		}		
		add_entry = { #+50 for allied attitude
			name = attitude_allied_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_allied } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 50 }
		}	
		add_entry = { #+10 for friendly attitude
			name = attitude_friendly_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_friendly } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 10 }
		}
		add_entry = { #+10 for threatened attitude
			name = attitude_threatened_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_threatened } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = 10 }
		}
		add_entry = { #No-go for rivalry, hostile, outraged, or domineering
			name = attitude_rivalry_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_rivalry } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_hostile_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_hostile } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_outraged_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_outraged } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
		add_entry = {
			name = attitude_domineering_DIPLO_ATTITUDE_TT
			limit = { FROM = { ai_attitude = { who = ROOT attitude = attitude_domineering } } }
			export_to_variable = { variable_name = ai_value value = 1 }
			multiply_variable = { which = ai_value value = -1000 }
		}
	}
}