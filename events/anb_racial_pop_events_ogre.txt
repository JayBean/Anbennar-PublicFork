
namespace = racial_pop_events_ogre

#Event Manager
country_event = {
	id = racial_pop_events_ogre.0
	title = racial_pop_events_ogre.0.t
	desc = racial_pop_events_ogre.0.d
	picture = DEBATE_REPUBLICAN_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes

	trigger = {
		if = {
			limit = { ai = no }
			OR = {
				fast_owns_num_pops_of_race = { race = ogre amount = 1 }
				any_neighbor_country = { fast_owns_num_pops_of_race = { race = ogre amount = 1 } }
			}
		}
		else = {
			fast_owns_num_pops_of_race = { race = ogre amount = 1 }
		}
	}
	
	mean_time_to_happen = {
		days = 1
		modifier = {
			factor = 10
			has_country_modifier = racial_focus_ogre
		}
	}
	
	option = {
		name = racial_pop_events_ogre.0.a
		random_list = {
			2 = { }
			# ensure there's an empty option first in case none of the others are available
			# and also because this one should be picked rarely even if the others are available

			#ai external migration simulation
			10 = {
				trigger = {
					ai_external_migration_trigger = { race = ogre }
				}
				modifier = {
					factor = 0.5
					all_neighbor_country = {
						low_tolerance_ogre_race_trigger = yes
					}
				}
				ai_pop_migration_leave = { race = ogre }
			}
			#events 1-3 are reserved for making external migration stuff function
			15 = { #random pop growth
				trigger = {
					any_owned_province = {
						has_small_ogre_minority_trigger = yes
						OR = {
							is_prosperous = yes
							development = 20
						}
					}
				}
				random_owned_province = {
					limit = {
						has_small_ogre_minority_trigger = yes
						OR = {
							is_prosperous = yes
							development = 20
						}
					}
					province_event = { id = racial_pop_events_ogre.4 }
				}
			}
			15 = { #random pop shrinkage
				trigger = {
					if = { limit = { ai = yes } fast_owns_num_pops_of_race = { race = ogre amount = 2 } }
					any_owned_province = {
						has_ogre_minority_trigger = yes
						OR = {
							unrest = 10
							devastation = 25
							has_oppressed_ogre_minority_trigger = yes
						}
					}
				}
				modifier = {
					factor = 0.33
					has_country_modifier = racial_focus_ogre
					NOT = {
						has_country_modifier = racial_pop_ogre_purge
						has_country_modifier = racial_pop_ogre_expulsion
					}
				}
				modifier = {
					factor = 0.67
					ai = yes
				}
				modifier = {
					factor = 2
					OR = {
						has_country_modifier = racial_pop_ogre_purge
						has_country_modifier = racial_pop_ogre_expulsion
					}
				}
				random_owned_province = {
					limit = {
						has_ogre_minority_trigger = yes
						OR = {
							unrest = 10
							devastation = 25
							has_oppressed_ogre_minority_trigger = yes
						}
					}
					province_event = { id = racial_pop_events_ogre.5 }
				}
			}
			5 = { #Internal migration occurs
				trigger = {
					pop_internal_migration_trigger = { race = ogre }
				}
				modifier = {
					factor = 2
					fast_owns_num_pops_of_race = { race = ogre amount = 4 }
				}
				country_event = { id = racial_pop_events_ogre.6 }
			}
			1 = { #Migration from neighboring country
				trigger = {
					pop_external_migration_trigger = { neighbor = yes race = ogre }
				}
				modifier = {
					factor = 2
					has_country_modifier = racial_focus_ogre
				}
				modifier = {
					factor = 2
					AND = {
						has_country_modifier = racial_focus_ogre
						NOT = { fast_owns_num_pops_of_race = { race = ogre amount = 1 } }
					}
				}
				modifier = {
					factor = 1.5
					num_of_cities = 10
					NOT = { fast_owns_num_pops_of_race = { race = ogre amount = 5 } }
				}
				modifier = {
					factor = 1.5
					num_of_cities = 25
					NOT = { fast_owns_num_pops_of_race = { race = ogre amount = 10 } }
				}
				modifier = {
					factor = 1.5
					num_of_cities = 50
					NOT = { fast_owns_num_pops_of_race = { race = ogre amount = 25 } }
				}
				modifier = {
					factor = 1.5
					num_of_cities = 100
					NOT = { fast_owns_num_pops_of_race = { race = ogre amount = 50 } }
				}
				modifier = {
					factor = 0.5
					low_tolerance_ogre_race_trigger = yes
				}
				modifier = {
					factor = 2
					culture_is_ogre = yes
				}
				
				country_event = { id = racial_pop_events_ogre.7 }
			}
			#events 100-200 are reserved for custom migration events, put their triggers here
		}
	}
}

#generic migration arrival notif - for destination
country_event = {
	id = racial_pop_events_ogre.1
	title = racial_pop_events_ogre.1.t
	desc = racial_pop_events_ogre.1.d
	picture = CITY_DEVELOPMENT_eventPicture
	goto = destination_province

	is_triggered_only = yes

	trigger = {
		event_target:destination_province = {
			owned_by = ROOT
		}
	}

	option = {
		name = racial_pop_events_ogre.1.a
		event_target:destination_province = {
			racial_pop_migration_arrive = { race = ogre }
		}
	}
}

#generic migration refusal notif - for destination
country_event = {
	id = racial_pop_events_ogre.2
	title = racial_pop_events_ogre.2.t
	desc = racial_pop_events_ogre.2.d
	picture = BAD_WITH_MONARCH_eventPicture
	goto = origin_province

	is_triggered_only = yes

	option = {
		name = racial_pop_events_ogre.2.a
		add_prestige = -5
	}
}

#generic migration choice notif - for origin
country_event = {
	id = racial_pop_events_ogre.3
	title = racial_pop_events_ogre.3.t
	desc = racial_pop_events_ogre.3.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = origin_province

	is_triggered_only = yes

	option = { #good luck in [destination country]!
		name = racial_pop_events_ogre.3.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				low_tolerance_ogre_race_trigger = yes
			}
			modifier = {
				factor = 2
				NOT = { stability = 0 }
			}
			modifier = {	#this is to push refugees essentially
				factor = 1.5
				is_at_war = yes
			}
		}

		if = {
			limit = {
				has_country_flag = migration_bribe_@FROM
			}
			clr_country_flag = migration_bribe_@FROM
			add_dip_power = 50
		}
		racial_pop_migration_random_leave = { race = ogre }
		FROM = {
			country_event = { id = racial_pop_events_ogre.1 days = 1 random = 364 }
		}
	}
	option = { #stop them! they are our rightful subjects!
		name = racial_pop_events_ogre.3.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				OR = {
					has_country_modifier = racial_pop_ogre_purge
					has_country_modifier = racial_pop_ogre_expulsion
				}
			}
			modifier = {
				factor = 0
				has_country_flag = migration_bribe_@FROM
			}
		}
		add_dip_power = -10
		small_decrease_of_ogre_tolerance_effect = yes
		clr_country_flag = migration_bribe_@FROM
		hidden_effect = {
			FROM = {
				country_event = { id = racial_pop_events_ogre.2 days = 1 random = 364 }
			}
		}
	}
}

#Independent Pop Grow - small to large
province_event = {
	id = racial_pop_events_ogre.4
	title = racial_pop_events_ogre.4.t
	desc = racial_pop_events_ogre.4.d
	picture = STREET_SPEECH_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	option = {		#The more the merrier?
		name = racial_pop_events_ogre.4.a
		ai_chance = { factor = 1 }
		add_ogre_minority_size_effect = yes
	}
	
}

#Independent Pop Decrease - large/small decrease
province_event = {
	id = racial_pop_events_ogre.5
	title = racial_pop_events_ogre.5.t
	desc = racial_pop_events_ogre.5.d
	picture = WOUNDED_SOLDIERS_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	option = {
		name = racial_pop_events_ogre.5.a
		ai_chance = { factor = 1 }
		generic_remove_race_minority_size_effect = { race = ogre }
	}
}

#Pop Migrates - Within Country
country_event = {
	id = racial_pop_events_ogre.6
	title = racial_pop_events_ogre.6.t
	desc = racial_pop_events_ogre.6.d
	picture = COLONIZATION_eventPicture
	goto = destination_province
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	
	immediate = {
		hidden_effect = {
			choose_pop_internal_origin_province = { race = ogre }
			choose_pop_internal_destination_province = { race = ogre }
		}
	}
	
	#Fund the migration
	option = {
		name = racial_pop_events_ogre.6.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_increase_tolerance_ogre = yes
			}
		}
		add_adm_power = -10
		generic_increase_of_racial_tolerance_effect = { race = ogre small = yes }
		event_target:origin_province = { racial_pop_migration_leave = { race = ogre } }
		event_target:destination_province = {
			racial_pop_migration_arrive = { race = ogre }
		}
	}
	
	#They can do as they please
	option = {		
		name = racial_pop_events_ogre.6.b
		ai_chance = {
			factor = 50
		}
		event_target:origin_province = { racial_pop_migration_leave = { race = ogre } }
		event_target:destination_province = {
			racial_pop_migration_arrive = { race = ogre }
		}
	}
	
	#Prevent migration
	option = {		
		name = racial_pop_events_ogre.6.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_ogre_purge
					has_country_modifier = racial_pop_ogre_expulsion
				}
			}
		}
		add_adm_power = -10
		generic_decrease_of_racial_tolerance_effect = { race = ogre small = yes }
	}
}

#External migration - neighbor
country_event = {
	id = racial_pop_events_ogre.7
	title = racial_pop_events_ogre.7.t
	desc = racial_pop_events_ogre.7.d
	picture = EUROPEAN_REFUGEES_eventPicture
	goto = destination_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			choose_pop_destination_province = { race = ogre }
			random_neighbor_country = {
				limit = {
					pop_wants_to_leave = { race = ogre }
				}
				choose_pop_origin_province = { race = ogre }
			}
		}
	}
	
	#Invite the migrants
	option = {		
		name = racial_pop_events_ogre.7.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_increase_tolerance_ogre = yes
			}
			modifier = {
				factor = 2
				stability = 1
			}
		}
		add_dip_power = -50
		if = {
			limit = { event_target:origin_province = { owner = { ai = yes } } }
			custom_tooltip = racial_pop_migration_happens_tt
		}
		else = {
			custom_tooltip = racial_pop_migration_bribe_tt
		}
		generic_increase_of_racial_tolerance_effect = { race = ogre small = yes }
		hidden_effect = { event_target:origin_province = { owner = { set_country_flag = migration_bribe_@ROOT country_event = { id = racial_pop_events_ogre.3 } } } }
	}
	
	#Let them do as they wish 
	option = {
		name = racial_pop_events_ogre.7.b
		ai_chance = {
			factor = 50
		}
		custom_tooltip = racial_pop_migration_attempt_tt
		hidden_effect = { event_target:origin_province = { owner = { country_event = { id = racial_pop_events_ogre.3 } } } }
	}

	#Close our borders
	option = {
		name = racial_pop_events_ogre.7.c
		ai_chance = {
			factor = 50
		}
		add_dip_power = -10
		small_decrease_of_ogre_tolerance_effect = yes
	}
}

#Refugees Arrive - First Try
country_event = {
	id = racial_pop_events_ogre.10
	title = racial_pop_events_ogre.10.t
	desc = racial_pop_events_ogre.10.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = destination_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			choose_pop_destination_province = { race = ogre }
			choose_refugee_country_target = { race = ogre }
			calculate_refugee_exploit_rewards = yes
		}
	}
	
	#Let them in
	option = {		
		name = racial_pop_events_ogre.10.a
		trigger = {
			NOT = {
				has_country_modifier = racial_pop_ogre_purge
				has_country_modifier = racial_pop_ogre_expulsion
			}
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_increase_tolerance_ogre = yes
			}
			modifier = {
				factor = 2
				high_tolerance_ogre_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					is_colonial_nation = yes
					is_subject_of = ROOT
				}
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
				}
			}
			modifier = {
				factor = 3
				has_idea_group = humanist_ideas
			}
		}
	
		add_country_modifier = { name = non_primary_refugees duration = 1825 }
		event_target:destination_province = { racial_pop_migration_arrive = { race = ogre } }
		generic_increase_of_racial_tolerance_effect = { race = ogre small = yes }
	}
	
	#Prey on their desperation to exploit them for labor
	option = {		
		name = racial_pop_events_ogre.10.b
		trigger = {
			culture_is_ogre = no
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = {
				factor = 1.5
				is_bankrupt = yes
			}
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 1.5
				has_personal_deity = ara
			}
		}
		custom_tooltip = exploit_refugees_gain_effect_tt
		hidden_effect = {
			var_effect = { effect = add_treasury var = ducats_gained_on_exploit sign = + }
			var_effect_granular = { effect = add_manpower var = manpower_gained_on_exploit sign = + }
		}
		remove_country_modifier = non_primary_refugees
		event_target:destination_province = { racial_pop_migration_arrive = { race = ogre } }
		generic_decrease_of_racial_tolerance_effect = { race = ogre medium = yes }
	}

	#special option for primary culture 
	option = {
		name = racial_pop_events_ogre.10.p
		highlight = yes
		trigger = {
			culture_is_ogre = yes
		}
		ai_chance = { factor = 1000 }
		event_target:destination_province = {
			add_province_modifier = { name = ogre_primary_refugees duration = 3650 }
			racial_pop_migration_arrive = { race = ogre }
		}
	}
	
	#There's no room for you here!
	option = {		
		name = racial_pop_events_ogre.10.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = {
				factor = 2
				low_tolerance_ogre_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = {
				factor = 1.5
				ruler_has_personality = careful_personality
			}
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_ogre_purge
					has_country_modifier = racial_pop_ogre_expulsion
				}
			}
		}
		hidden_effect = {
			event_target:racial_pop_migration_country = {
				country_event = {
					id = racial_pop_events_ogre.11
					days = 31
					random = 31
				}
			}
		}
		add_mil_power = -20
		remove_country_modifier = non_primary_refugees
		generic_decrease_of_racial_tolerance_effect = { race = ogre medium = yes }
	}
}


#Refugees Arrive - Second Try (forcefully settle)
country_event = {
	id = racial_pop_events_ogre.11
	title = racial_pop_events_ogre.11.t
	desc = racial_pop_events_ogre.11.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = destination_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			choose_pop_destination_province = { race = ogre }
			calculate_refugee_exploit_rewards = yes
		}
	}
	
	#Let those poor souls in
	option = {		
		name = racial_pop_events_ogre.11.a #no trigger, already checked to not be purging
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_increase_tolerance_ogre = yes
			}
			modifier = {
				factor = 2
				high_tolerance_ogre_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					is_colonial_nation = yes
					is_subject_of = ROOT
				}
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
				}
			}
			modifier = {
				factor = 3
				has_idea_group = humanist_ideas
			}
		}
	
		#Add Minority to New Province
		add_country_modifier = { name = non_primary_refugees duration = 1825 }
		event_target:destination_province = { racial_pop_migration_arrive = { race = ogre } }
		generic_increase_of_racial_tolerance_effect = { race = ogre small = yes }
	}
	
	#Prey on their desperation to exploit them for labor
	option = {		
		name = racial_pop_events_ogre.11.b
		trigger = {
			culture_is_ogre = no
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = {
				factor = 1.5
				is_bankrupt = yes
			}
			modifier = {
				factor = 2
				ruler_has_personality = greedy_personality
			}
			modifier = {
				factor = 1.5
				has_personal_deity = ara
			}
		}
		custom_tooltip = exploit_refugees_gain_effect_tt
		hidden_effect = {
			var_effect = { effect = add_treasury var = ducats_gained_on_exploit sign = + }
			var_effect_granular = { effect = add_manpower var = manpower_gained_on_exploit sign = + }
		}
		remove_country_modifier = non_primary_refugees
	
		#Add Minority to New Province
		event_target:destination_province = { racial_pop_migration_arrive = { race = ogre } }
		generic_decrease_of_racial_tolerance_effect = { race = ogre medium = yes }
	}

	#special option for primary culture 
	option = {
		name = racial_pop_events_ogre.10.p
		highlight = yes
		trigger = {
			culture_is_ogre = yes
		}
		ai_chance = { factor = 1000 }
		event_target:destination_province = {
			add_province_modifier = { name = ogre_primary_refugees duration = 3650 }
			racial_pop_migration_arrive = { race = ogre }
		}
	}
	
	#Prevent them with force, if necessary
	option = {		
		name = racial_pop_events_ogre.11.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = {
				factor = 2
				low_tolerance_ogre_race_trigger = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = {
				factor = 1.5
				ruler_has_personality = careful_personality
			}
			modifier = {
				factor = 3
				OR = {
					has_country_modifier = racial_pop_ogre_purge
					has_country_modifier = racial_pop_ogre_expulsion
				}
			}
		}
		
		random = {
			chance = 50
			event_target:destination_province = { racial_pop_migration_arrive = { race = ogre} }
		}
		add_mil_power = -30
		if = {
			limit = { culture_is_ogre = yes }
			remove_country_modifier = primary_refugees
		}
		else = {
			remove_country_modifier = non_primary_refugees
		}
		generic_decrease_of_racial_tolerance_effect = { race = ogre large = yes }
	}
}

#Pop Menu
country_event = {
	id = racial_pop_events_ogre.12
	title = racial_pop_events_ogre.12.t
	desc = { trigger = { ai = yes } desc = racial_pop_events_all.12.ai }
	desc = { trigger = { ai = no } desc = racial_pop_events_ogre.12.d }
	picture = {
		trigger = {
			has_country_modifier = racial_focus_ogre
			NOT = { has_country_modifier = racial_pop_ogre_expulsion }
			NOT = { has_country_modifier = racial_pop_ogre_purge }
		}
		picture = POP_POLICY_FOCUS_eventPicture
	}
	picture = {
		trigger = {
			has_country_modifier = racial_pop_ogre_purge
			NOT = { has_country_modifier = racial_focus_ogre }
		}
		picture = POP_POLICY_PURGE_eventPicture
	}
	picture = {
		trigger = {
			has_country_modifier = racial_pop_ogre_purge
			has_country_modifier = racial_focus_ogre
		}
		picture = POP_POLICY_PURGE_FOCUS_eventPicture
	}
	picture = {
		trigger = {
			has_country_modifier = racial_pop_ogre_expulsion
			NOT = { has_country_modifier = racial_focus_ogre }
		}
		picture = POP_POLICY_EXPULSION_eventPicture
	}
	picture = {
		trigger = {
			has_country_modifier = racial_pop_ogre_expulsion
			has_country_modifier = racial_focus_ogre
		}
		picture = POP_POLICY_EXPULSION_FOCUS_eventPicture
	}
	picture = {
		trigger = {
			NOT = { has_country_modifier = racial_focus_ogre }
			NOT = { has_country_modifier = racial_pop_ogre_expulsion }
			NOT = { has_country_modifier = racial_pop_ogre_purge }
		}
		picture = POP_POLICY_NONE_eventPicture
	}
	
	is_triggered_only = yes
	
	#Go back - for ai only
	option = {		
		name = racial_pop_events_all_races.12.y
		trigger = { ai = yes }
		ai_chance = { factor = 100 }
		add_country_modifier = { 
			name = racial_pop_menu_cooldown
			duration = 3650
			hidden = yes
		}
		clr_country_flag = racial_pop_menu_opened
	}
	
	#Purge
	option = {
		name = racial_pop_events_all_races.12.a
		trigger = {
			can_purge_race = {
				RACE = ogre
			}
		}
		ai_chance = {
			factor = 5
			
			modifier = { #+Want to oppress
				factor = 1.25
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = { #+Lots of oppressed 
				factor = 1.5
				low_tolerance_ogre_race_trigger = yes
				fast_owns_num_pops_of_race = { race = ogre amount = 20 }
			}
			modifier = { #+Negative stability blames issues on other races
				factor = 1.25
				stability = -3
				NOT = { stability = 0 }
			}
			modifier = { #+Unrest in province (as minorities give unrest)
				factor = 1.5
				average_unrest = 10
			}
			modifier = { #+Douche ruler
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = { #+If you're a loyal subject you're more inclined to follow overlord's policies
				factor = 2
				ROOT = {
					is_subject = yes
					NOT = { liberty_desire = 50 }
				}
				overlord = { 
					has_country_modifier = racial_pop_ogre_purge
				}
			}
			modifier = { #+Corrupt countries purge
				factor = 1.25
				corruption = 3
			}
			modifier = { #+Evil country stuff
				factor = 1.5
				OR = {
					has_country_modifier = evil_nation
					has_country_modifier = lich_ruler
				}
			}
			modifier = { #+If you have a enemy or rival
				factor = 1.25
				OR = {
					any_enemy_country = {
						has_country_modifier = ogre_administration
					}
					any_rival_country = {
						has_country_modifier = ogre_administration
					}

				}
			}
			modifier = { #+Monstrous countries more likely to purge
				factor = 3
				has_country_modifier = monstrous_nation
			}
			modifier = { #+If theres a monstrous country and you're NOT monstrous (opposite of above)
				factor = 2
				NOT = { has_country_modifier = ogre_administration }
				any_known_country = {
					has_country_modifier = ogre_administration
					has_country_modifier = monstrous_nation
				}
				NOT = { is_year = 1700 } #just a generic time to stop purging I guess?
			}
			modifier = { #-Wont do it if theres rebels (as province gives unrest)
				factor = 0.1
				OR = {
					num_of_rebel_armies = 3
					num_of_rebel_controlled_provinces = 5
				}
			}
			modifier = { #-Anbennar countries more tolerant overall
				factor = 0.25
				is_part_of_hre = yes
			}
			modifier = { #-Any loyal subject you wont do it to em
				factor = 0.25
				NOT = { diplomatic_reputation = 1 }
			}
			modifier = { #-Any loyal subject you wont do it to em
				factor = 0.25
				any_subject_country = {
					NOT = { liberty_desire = 50 }
				}
			}
			modifier = { #-Less likely if not great power
				factor = 0.8
				NOT = { is_great_power = yes }
			}
			modifier = { #-If theres a country thats NOT monstrous - WAY LOWER CHANCE to purge because of this, as you're more likely to purge monstrous in general
				factor = 0.1
				any_known_country = {
					has_country_modifier = ogre_administration
					NOT = { has_country_modifier = monstrous_nation }
				}
			}
			modifier = { #-If I have an ally thats this race
				factor = 0.1
				any_ally = {
					has_country_modifier = ogre_administration
				}
			}
			modifier = { #-Not good adm surplus
				factor = 0.75
				NOT = { adm_power = 150 }
			}
			modifier = { #-Cant do if you have race as country administration or military
				factor = 0
				OR = {
					has_country_modifier = ogre_administration
					has_country_modifier = ogre_military
				}
			}
			modifier = { #-Lower chance if good personality
				factor = 0.1
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
					ruler_has_personality = careful_personality
					ruler_has_personality = just_personality
				}
			}
			modifier = { #-Humanists dont do it
				factor = 0
				has_idea_group = humanist_ideas
			}
			modifier = { #-Diplomats dont do it
				factor = 0
				personality = ai_diplomat
			}
			modifier = { #-Higher tolerances wont do it
				factor = 0.25
				medium_tolerance_ogre_race_trigger = yes
			}
			modifier = {
				factor = 0
				high_tolerance_ogre_race_trigger = yes
			}
			modifier = { #- Won't do it to overlords race
				factor = 0
				ROOT = {
					is_subject = yes
					NOT = { liberty_desire = 50 }
				}
				overlord = { 
					has_country_modifier = ogre_administration
				}
			}
			modifier = { #-Wants to like them
				factor = 0.5
				check_variable = { which = ogre_race_tolerance_ai value = 50 }
			}
			modifier = { #-Really wants to like them
				factor = 0
				check_variable = { which = ogre_race_tolerance_ai value = 71 }
			}
			modifier = { #costs diplomats
				factor = 0.8
				NOT = { check_variable = { which = remaining_free_genocide value = 0 } }
			}
			
			#Race Specific


        }
		hidden_effect = {
			if = { limit = { ai = no }
				country_event = { id = racial_pop_events_ogre.24 }
			}
			else = {
				clr_country_flag = racial_pop_menu_opened
			}
		}
		custom_tooltip = pop_menu_purge_desc_tt
		add_adm_power = -100
		generic_start_purge = { race = ogre }
	}
	
	#Cannot Purge
	option = {		
		name = racial_pop_events_all_races.12.b
		trigger = {
			NOT = {
				can_purge_race = {
					RACE = ogre
				}
				has_country_modifier = racial_pop_ogre_purge
			}
		}
		ai_chance = { factor = 0 }
		custom_tooltip = pop_menu_purge_desc_tt
		racial_purge_disabled_tt = {
			RACE = ogre
		}
	}
	
	#End Purge
	option = {
		name = racial_pop_events_all_races.12.c
		trigger = {
			has_country_modifier = racial_pop_ogre_purge
			adm_power = 100
		}
		
		ai_chance = {
			factor = 20
			
			modifier = {
				factor = 0
				has_country_modifier = racial_pop_menu_cooldown
			}
			modifier = { #+low diplo reputation
				factor = 1.5
				NOT = { diplomatic_reputation = -3 }
			}
			modifier = { #+Should remove asap if country administration or military
				factor = 10
				OR = {
					has_country_modifier = ogre_administration
					has_country_modifier = ogre_military
				}
			}
			modifier = { #+If want to like race
				factor = 2
				wants_to_increase_tolerance_ogre = yes
			}
			modifier = { #+If race is in good standing
				factor = 10
				medium_tolerance_ogre_race_trigger = yes
			}
			modifier = { #+If race is in good standing
				factor = 20
				high_tolerance_ogre_race_trigger = yes 
			}
			modifier = { #+Any loyal subject you wont do it to em
				factor = 2
				any_subject_country = {
					NOT = { liberty_desire = 50 }
				}
			}
			modifier = { #+If I have an ally thats this race
				factor = 5
				any_ally = {
					has_country_modifier = ogre_administration
				}
			}
			modifier = { #+If good personality
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
					ruler_has_personality = careful_personality
					ruler_has_personality = just_personality
				}
			}
			modifier = { #+Humanists want to stop it
				factor = 10
				has_idea_group = humanist_ideas
			}
			modifier = { #+Bankrupt countries cannot expel
				factor = 5
				is_bankrupt = yes
			}
			modifier = { #+If you're a loyal subject you're more inclined to follow overlord's policies
				factor = 10
				ROOT = {
					is_subject = yes
					NOT = { liberty_desire = 50 }
				}
				overlord = { 
					NOT = { has_country_modifier = racial_pop_ogre_purge }
				}
			}
		}
		custom_tooltip = pop_menu_purge_desc_tt
		generic_end_purge = { race = ogre }
		add_adm_power = -100
		
		hidden_effect = {
			if = { limit = { ai = no }
				set_country_flag = just_stopped_purging
				country_event = { id = racial_pop_events_ogre.24 }
			}
			else = {
				clr_country_flag = racial_pop_menu_opened
			}
		}
	}
	
	#Cannot End Purge
	option = {		
		name = racial_pop_events_all_races.12.dd
		trigger = {
			has_country_modifier = racial_pop_ogre_purge
			NOT = { adm_power = 100 }
		}
		ai_chance = { factor = 0 }
		custom_tooltip = pop_menu_purge_desc_tt
		custom_tooltip = pop_menu_cannot_stop_purge_not_enough_adm_tt
		hidden_effect = {
			country_event = { id = racial_pop_events_ogre.24 }
		}
	}
	
    #Expulsion
	option = {
		name = racial_pop_events_all_races.12.e
		trigger = {
			can_expel_race = {
				RACE = ogre
			}
		}
		ai_chance = {
			factor = 10
			
			modifier = { #+Oppressing Race
				factor = 1.25
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = { #+Want to oppress
				factor = 1.25
				wants_to_decrease_tolerance_ogre = yes
			}
			modifier = {#+Lots of oppressed 
				factor = 1.5
				low_tolerance_ogre_race_trigger = yes
				fast_owns_num_pops_of_race = { race = ogre amount = 20 }
			}
			modifier = { #+Negative stability blames issues on other races
				factor = 1.25
				stability = -3
				NOT = { stability = 0 }
			}
			modifier = { #+Unrest in province (as minorities give unrest)
				factor = 1.5
				average_unrest = 10
			}
			modifier = { #+Douche ruler
				factor = 2
				OR = {
					ruler_has_personality = malevolent_personality
					ruler_has_personality = cruel_personality
				}
			}
			modifier = { #+If you're a loyal subject you're more inclined to follow overlord's policies
				factor = 2
				ROOT = {
					is_subject = yes
					NOT = { liberty_desire = 50 }
				}
				overlord = { 
					has_country_modifier = racial_pop_ogre_expulsion
				}
			}
			modifier = { #+Evil country stuff
				factor = 1.25
				OR = {
					has_country_modifier = evil_nation
					has_country_modifier = lich_ruler
				}
			}
			modifier = { #+If you have a enemy or rival
				factor = 1.25
				OR = {
					any_enemy_country = {
						has_country_modifier = ogre_administration
					}
					any_rival_country = {
						has_country_modifier = ogre_administration
					}
				}
			}
			modifier = { #+Monstrous countries more likely to purge
				factor = 2
				has_country_modifier = monstrous_nation
			}
			modifier = { #+If theres a monstrous country and you're NOT monstrous (opposite of above)
				factor = 1.5
				NOT = { has_country_modifier = ogre_administration }
				any_known_country = {
					has_country_modifier = ogre_administration
					has_country_modifier = monstrous_nation
				}
				NOT = { is_year = 1700 } #just a generic time to stop purging I guess?
			}
			modifier = { #-Wont do it if theres rebels (as province gives unrest)
				factor = 0.1
				OR = {
					num_of_rebel_armies = 3
					num_of_rebel_controlled_provinces = 5
				}
			}
			modifier = { #-Anbennar countries more tolerant overall
				factor = 0.25
				is_part_of_hre = yes
			}
			modifier = { #-Any loyal subject you wont do it to em
				factor = 0.25
				any_subject_country = {
					NOT = { liberty_desire = 50 }
				}
			}
			modifier = { #-If theres a country thats NOT monstrous
				factor = 0.75
				any_known_country = {
					has_country_modifier = ogre_administration
					NOT = { has_country_modifier = monstrous_nation }
				}
			}
			modifier = { #-If I have an ally thats this race
				factor = 0.1
				any_ally = {
					has_country_modifier = ogre_administration
				}
			}
			modifier = { #-Not good adm surplus
				factor = 0.75
				NOT = { adm_power = 100 }
			}
			modifier = { #-Cant do if you have race as country administration or military
				factor = 0
				OR = {
					has_country_modifier = ogre_administration
					has_country_modifier = ogre_military
				}
			}
			modifier = { #-Lower chance if good personality
				factor = 0.1
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
					ruler_has_personality = careful_personality
					ruler_has_personality = just_personality
				}
			}
			modifier = { #-Higher tolerances wont do it
				factor = 0.25
				medium_tolerance_ogre_race_trigger = yes
			}
			modifier = { #-Higher tolerances wont do it
				factor = 0
				high_tolerance_ogre_race_trigger = yes
			}
			modifier = { #- Won't do it to overlords race
				factor = 0
				ROOT = {
					is_subject = yes
					NOT = { liberty_desire = 50 }
				}
				overlord = { 
					has_country_modifier = ogre_administration
				}
			}
			modifier = { #-Wants to like them
				factor = 0.5
				check_variable = { which = ogre_race_tolerance_ai value = 50 }
			}
			modifier = { #-Really wants to like them
				factor = 0
				check_variable = { which = ogre_race_tolerance_ai value = 71 }
			}
			modifier = { #costs diplomats
				factor = 0.8
				NOT = { check_variable = { which = remaining_free_genocide value = 0 } }
			}
			
			#Special Stuff
			modifier = { #-Humanists dont do it
				factor = 0
                OR = {
                    has_idea_group = humanist_ideas
                    personality = ai_diplomat
                }
			}
        }
		
		hidden_effect = {
			if = { limit = { ai = no }
				country_event = { id = racial_pop_events_ogre.24 }
			}
			else = {
				clr_country_flag = racial_pop_menu_opened
			}
		}
		custom_tooltip = pop_menu_expel_desc_tt
		add_adm_power = -50
		generic_start_expulsion = { race = ogre }
	}
	
	#Cannot Expel
	option = {		
		name = racial_pop_events_all_races.12.f
		trigger = {
			NOT = {
				can_expel_race = {
					RACE = ogre
				}
				has_country_modifier = racial_pop_ogre_expulsion
			}
		}
		ai_chance = { factor = 0 }
		custom_tooltip = pop_menu_expel_desc_tt
		racial_expel_disabled_tt = {
			RACE = ogre
		}
	}
	
	#End Expulsion
	option = {		
		name = racial_pop_events_all_races.12.g
		trigger = {
			has_country_modifier = racial_pop_ogre_expulsion
			adm_power = 50
		}
		
		ai_chance = {
			factor = 20
			
			modifier = {
				factor = 0
				has_country_modifier = racial_pop_menu_cooldown
			}
			modifier = { #+low diplo reputation
				factor = 1.5
				NOT = { diplomatic_reputation = -3 }
			}
			modifier = { #+Should remove asap if country administration or military
				factor = 10
				OR = {
					has_country_modifier = ogre_administration
					has_country_modifier = ogre_military
				}
			}
			modifier = { #+If want to like race
				factor = 2
				wants_to_increase_tolerance_ogre = yes
			}
			modifier = { #+If race is in good standing
				factor = 10
				medium_tolerance_ogre_race_trigger = yes
			}
			modifier = { #+If race is in good standing
				factor = 20
				high_tolerance_ogre_race_trigger = yes
			}
			modifier = { #+Any loyal subject you wont do it to em
				factor = 2
				any_subject_country = {
					NOT = { liberty_desire = 50 }
				}
			}
			modifier = { #+If I have an ally thats this race
				factor = 5
				any_ally = {
					has_country_modifier = ogre_administration
				}
			}
			modifier = { #+If good personality
				factor = 2
				OR = {
					ruler_has_personality = tolerant_personality
					ruler_has_personality = kind_hearted_personality
					ruler_has_personality = benevolent_personality
					ruler_has_personality = careful_personality
					ruler_has_personality = just_personality
				}
			}
			modifier = { #+Humanists want to stop it
				factor = 10
				has_idea_group = humanist_ideas
			}
			modifier = { #+Bankrupt countries cannot expel
				factor = 5
				is_bankrupt = yes
			}
			modifier = { #+If you're a loyal subject you're more inclined to follow overlord's policies
				factor = 10
				ROOT = {
					is_subject = yes
					NOT = { liberty_desire = 50 }
				}
				overlord = { 
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
				}
			}
		}
		custom_tooltip = pop_menu_expel_desc_tt
		generic_end_expulsion = { race = ogre }
		add_adm_power = -50
		hidden_effect = {
			if = { limit = { ai = no }
				country_event = { id = racial_pop_events_ogre.24 }
			}
			else = {
				clr_country_flag = racial_pop_menu_opened
			}
		}
		
	}
	
	#Cannot Stop Expelling
	option = {		
		name = racial_pop_events_all_races.12.h
		trigger = {
			has_country_modifier = racial_pop_ogre_expulsion
			NOT = { adm_power = 50 }
		}
		ai_chance = { factor = 0 }
		custom_tooltip = pop_menu_expel_desc_tt
		custom_tooltip = pop_menu_cannot_stop_expel_not_enough_adm_tt
		hidden_effect = {
			country_event = { id = racial_pop_events_ogre.24 }
		}
	}
	
	#Set Focus
	option = {		
		name = racial_pop_events_all_races.12.i
		ai_chance = { factor = 0 }
		trigger = {
			can_focus_race = { RACE = ogre }
		}
		custom_tooltip = pop_menu_focus_desc_tt
		add_dip_power = -50
		generic_start_focus = { race = ogre }
		
		hidden_effect = {
			country_event = { id = racial_pop_events_ogre.24 }
		}
	}
	
	#Cannot set focus
	option = {		
		name = racial_pop_events_all_races.12.j
		trigger = {
			NOT = { can_focus_race = { RACE = ogre } }
			NOT = { has_country_modifier = racial_focus_ogre }
		}
		ai_chance = { factor = 0 }
		custom_tooltip = pop_menu_focus_desc_tt
		racial_focus_disabled_tt = {}
		hidden_effect = {
			country_event = { id = racial_pop_events_ogre.24 }
		}
	}

	#Remove Focus
	option = {		
		name = racial_pop_events_all_races.12.k
		ai_chance = { factor = 0 }
		trigger = { has_country_modifier = racial_focus_ogre }
		custom_tooltip = pop_menu_focus_desc_tt
		generic_end_focus = { race = ogre }
		
		hidden_effect = {
			country_event = { id = racial_pop_events_ogre.24 }
		}
	}
	
	#Go back - for player only
	option = {		
		name = racial_pop_events_all_races.12.z
		trigger = { ai = no }
		hidden_effect = {
			country_event = { id = racial_pop_misc.3 }
		}
	}
}	


#Expulsion Reveal
country_event = {
	id = racial_pop_events_ogre.13
	title = racial_pop_events_ogre.13.t
	desc = racial_pop_events_ogre.13.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	major = yes
	major_trigger = {
		is_neighbor_of = ROOT
	}
	
	hidden = yes
	
	is_triggered_only = yes
	
	#Begin Expulsion of [race]
	option = {		
		name = racial_pop_events_ogre.13.a
		trigger = {
			
		}
		ai_chance = {
			factor = 10
		}
		
		custom_tooltip = racial_pop_events_debug.5.tooltip
		
		hidden_effect = {
			country_event = {
				id = race_setup_events.9
				days = 1
			}
			
		}
	
		
		#Trigger one of them events
	}
	
	# Take backsies for player only so they can see what the modifier does (they still lose the adm for doing this tho)
	# option = {		
		# name = racial_pop_events_debug.1.b
		# trigger = {
			# ai = no
		# }
		# ai_chance = {
			# factor = 1

		# }
		
		# country_event = { 
			# id = racial_pop_misc.1
		# }
	
	# }

}


#Purge Reveal
country_event = {
	id = racial_pop_events_ogre.14
	title = racial_pop_events_ogre.14.t
	desc = racial_pop_events_ogre.14.d
	picture = PLAGUE_eventPicture
	
	major = yes
	major_trigger = {
		is_neighbor_of = ROOT
	}
	
	is_triggered_only = yes
	
	#Begin Expulsion of [race]
	option = {		
		name = racial_pop_events_ogre.14.a
		hidden_effect = {
			country_event = {
				id = race_setup_events.9
				days = 1
			}
		}
		custom_tooltip = racial_pop_events_debug.6.tooltip
	}
}


#Expulsion End
country_event = {
	id = racial_pop_events_ogre.15
	title = racial_pop_events_ogre.15.t
	desc = racial_pop_events_ogre.15.d
	picture = REFUGEES_ESCAPING_eventPicture
	
	major = yes
	major_trigger = {
		is_neighbor_of = ROOT
	}
	
	is_triggered_only = yes
	
	#End Expulsion of [race]
	option = {		
		name = racial_pop_events_ogre.15.a
		hidden_effect = {
			country_event = {
				id = race_setup_events.9
				days = 1
			}
		}
		custom_tooltip = racial_pop_events_debug.7.tooltip
	}
}


#Purge End
country_event = {
	id = racial_pop_events_ogre.16
	title = racial_pop_events_ogre.16.t
	desc = racial_pop_events_ogre.16.d
	picture = PLAGUE_eventPicture
	
	major = yes
	major_trigger = {
		is_neighbor_of = ROOT
	}
	
	is_triggered_only = yes
	
	#End Purge of [race]
	option = {		
		name = racial_pop_events_ogre.16.a
		hidden_effect = {
			country_event = {
				id = race_setup_events.9
				days = 1
			}
		}
		custom_tooltip = racial_pop_events_debug.8.tooltip
	}
}


#Expulsion - Minority Expelled
country_event = {
	id = racial_pop_events_ogre.17
	title = racial_pop_events_ogre.17.t
	desc = racial_pop_events_ogre.17.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		has_country_modifier = racial_pop_ogre_expulsion
	
		fast_owns_num_pops_of_race = { race = ogre amount = 1 } # this must at least be true for the below to be true, and is much faster	
		any_owned_province = {
			has_ogre_minority_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		days = 1825
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		modifier = {
			factor = 0.1
			fast_owns_num_pops_of_race = { race = ogre amount = 100 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 100
			}
		}
		modifier = {
			factor = 0.5
			fast_owns_num_pops_of_race = { race = ogre amount = 50 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 50
			}
		}
		modifier = {
			factor = 0.75
			fast_owns_num_pops_of_race = { race = ogre amount = 25 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 25
			}
		}
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 0.4
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.55
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.75
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.25
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_minority_trigger = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
	
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_ogre_minority_trigger = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
			
		#Which country to migrate to
		hidden_effect = {
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					high_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					OR = {
						medium_tolerance_ogre_race_trigger = yes
						high_tolerance_ogre_race_trigger = yes
					}
					any_owned_province = {
						development = 20
						NOT = { has_ogre_minority_trigger = yes }
						NOT = { has_ogre_majority_trigger = yes }
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_saved_event_target = racial_pop_migration_country
				}
				#Calls Migrants Arrive to Migration Country
				event_target:racial_pop_migration_country = {
					country_event = {
						id = racial_pop_events_ogre.10
						days = 14
						random = 31
					}
				}
			}
		}
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.17.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_ogre_minority_size_effect = yes
			add_devastation = 5
		}
		
		medium_decrease_of_ogre_tolerance_effect = yes
	}
	
	option = {		#Special: Greedy confiscate
		name = racial_pop_events_ogre.17.b
		trigger = { ruler_has_personality = greedy_personality }
		highlight = yes
		ai_chance = {
			factor = 100
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_ogre_minority_size_effect = yes
			add_devastation = 5
		}
		
		if = {
			limit = {
				event_target:racial_pop_province_origin = {
					development = 20
				}
			}
			add_treasury = 50
		}
		else = {
			add_treasury = 10
		}
		
		medium_decrease_of_ogre_tolerance_effect = yes
	}
	
}


#Expulsion - Majority Expelled
country_event = {
	id = racial_pop_events_ogre.18
	title = racial_pop_events_ogre.18.t
	desc = racial_pop_events_ogre.18.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		has_country_modifier = racial_pop_ogre_expulsion
		
		fast_owns_num_pops_of_race = { race = ogre amount = 1 } # this must at least be true for the below to be true, and is much faster
		any_owned_province = {
			has_ogre_majority_trigger = yes
			#culture_is_ogre = yes
			is_city = yes
		}
	}
	
	mean_time_to_happen = {
		days = 2737
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		modifier = {
			factor = 0.1
			fast_owns_num_pops_of_race = { race = ogre amount = 100 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 100
			}
		}
		modifier = {
			factor = 0.5
			fast_owns_num_pops_of_race = { race = ogre amount = 50 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 50
			}
		}
		modifier = {
			factor = 0.75
			fast_owns_num_pops_of_race = { race = ogre amount = 25 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 25
			}
		}
		
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 0.4
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.55
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.75
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.25
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_majority_trigger = yes
					# culture_is_ogre = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
	
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
					is_city = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
			
		#Which country to migrate to
		hidden_effect = {
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					high_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					OR = {
						medium_tolerance_ogre_race_trigger = yes
						high_tolerance_ogre_race_trigger = yes
					}
					any_owned_province = {
						development = 20
						NOT = { has_ogre_minority_trigger = yes }
						NOT = { has_ogre_majority_trigger = yes }
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_saved_event_target = racial_pop_migration_country
				}
				#Calls Migrants Arrive to Migration Country
				event_target:racial_pop_migration_country = {
					country_event = {
						id = racial_pop_events_ogre.10
						days = 14
						random = 31
					}
				}
			}
		}
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.18.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			change_culture = ROOT
			change_religion = ROOT
			mother_akasik_mountain_control_check = yes
			add_devastation = 15
			
			random_list = {
				1 = {
					add_base_tax = -1
				}
				1 = {
					add_base_production = -1
				}
				1 = {
					add_base_manpower = -1
				}
			}
			
			add_permanent_province_modifier = { name = expulsion_unrest_modifier duration = 18250 }
		}
		
		medium_decrease_of_ogre_tolerance_effect = yes
	}
	
}


#Purge - Minority Purged
country_event = {
	id = racial_pop_events_ogre.19
	title = racial_pop_events_ogre.19.t
	desc = racial_pop_events_ogre.19.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		has_country_modifier = racial_pop_ogre_purge
	
		fast_owns_num_pops_of_race = { race = ogre amount = 1 } # this must at least be true for the below to be true, and is much faster	
		any_owned_province = {
			has_ogre_minority_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		days = 3650
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		modifier = {
			factor = 0.1
			fast_owns_num_pops_of_race = { race = ogre amount = 100 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 100
			}
		}
		modifier = {
			factor = 0.5
			fast_owns_num_pops_of_race = { race = ogre amount = 50 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 50
			}
		}
		modifier = {
			factor = 0.75
			fast_owns_num_pops_of_race = { race = ogre amount = 25 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 25
			}
		}
		
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 0.4
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.55
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.75
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.25
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_minority_trigger = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
	
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_ogre_minority_trigger = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
		
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.19.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_ogre_minority_size_effect = yes
			add_devastation = 10
		}
		
		large_decrease_of_ogre_tolerance_effect = yes
	}
	
	option = {		#Special: Evil Purge them entirely
		name = racial_pop_events_ogre.19.b
		trigger = { 
			ruler_has_personality = cruel_personality 
			event_target:racial_pop_province_origin = {
				has_large_ogre_minority_trigger = yes
			}
		}
		highlight = yes
		ai_chance = {
			factor = 100
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_ogre_minority_size_effect = yes
			remove_ogre_minority_size_effect = yes
			add_devastation = 10
		}
		
		large_decrease_of_ogre_tolerance_effect = yes
	}
	
}


#Purge - Majority Purged
country_event = {
	id = racial_pop_events_ogre.20
	title = racial_pop_events_ogre.20.t
	desc = racial_pop_events_ogre.20.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		has_country_modifier = racial_pop_ogre_purge
	
		fast_owns_num_pops_of_race = { race = ogre amount = 1 } # this must at least be true for the below to be true, and is much faster	
		any_owned_province = {
			has_ogre_majority_trigger = yes
			#culture_is_ogre = yes
			is_city = yes
		}
	}
	
	mean_time_to_happen = {
		days = 5475
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		modifier = {
			factor = 0.1
			fast_owns_num_pops_of_race = { race = ogre amount = 100 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 100
			}
		}
		modifier = {
			factor = 0.5
			fast_owns_num_pops_of_race = { race = ogre amount = 50 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 50
			}
		}
		modifier = {
			factor = 0.75
			fast_owns_num_pops_of_race = { race = ogre amount = 25 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 25
			}
		}
		
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 0.4
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.55
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.75
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.25
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_majority_trigger = yes
					# culture_is_ogre = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
	
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
					is_city = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
		
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.20.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {

			hidden_effect = { remove_racial_majority = { race = ogre } } # delete immediately so no minority left

			add_devastation = 25
			change_culture = ROOT
			change_religion = ROOT
			mother_akasik_mountain_control_check = yes
			random_list = {
				1 = {
					add_base_tax = -2
				}
				1 = {
					add_base_production = -2
				}
				1 = {
					add_base_manpower = -2
				}
			}
			
			add_permanent_province_modifier = { name = purge_unrest_modifier duration = 9125 }
			
		}
		
		large_decrease_of_ogre_tolerance_effect = yes
	}
	
	
}



#Purge - Minority Flees
country_event = {
	id = racial_pop_events_ogre.21
	title = racial_pop_events_ogre.21.t
	desc = racial_pop_events_ogre.21.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		has_country_modifier = racial_pop_ogre_purge
	
		fast_owns_num_pops_of_race = { race = ogre amount = 1 } # this must at least be true for the below to be true, and is much faster	
		any_owned_province = {
			has_ogre_minority_trigger = yes
		}
	}
	
	mean_time_to_happen = {
		days = 1825
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		modifier = {
			factor = 0.1
			fast_owns_num_pops_of_race = { race = ogre amount = 100 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 100
			}
		}
		modifier = {
			factor = 0.5
			fast_owns_num_pops_of_race = { race = ogre amount = 50 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 50
			}
		}
		modifier = {
			factor = 0.75
			fast_owns_num_pops_of_race = { race = ogre amount = 25 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_minority_trigger = yes
				}
				amount = 25
			}
		}
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 0.4
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.55
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.75
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.25
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
						# has_ogre_minority_trigger = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
					# has_ogre_minority_trigger = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_minority_trigger = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
	
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_ogre_minority_trigger = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
			
		#Which country to migrate to
		hidden_effect = {
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					high_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					OR = {
						medium_tolerance_ogre_race_trigger = yes
						high_tolerance_ogre_race_trigger = yes
					}
					any_owned_province = {
						development = 20
						NOT = { has_ogre_minority_trigger = yes }
						NOT = { has_ogre_majority_trigger = yes }
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_saved_event_target = racial_pop_migration_country
				}
				#Calls Migrants Arrive to Migration Country
				event_target:racial_pop_migration_country = {
					country_event = {
						id = racial_pop_events_ogre.10
						days = 14
						random = 31
					}
				}
			}
		}
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.17.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		#Remove Minority from Origin Province
		event_target:racial_pop_province_origin = {
			remove_ogre_minority_size_effect = yes
			add_devastation = 5
		}
		
		medium_decrease_of_ogre_tolerance_effect = yes
	}
	
	
}


#Purge - Majority Flees
country_event = {
	id = racial_pop_events_ogre.22
	title = racial_pop_events_ogre.22.t
	desc = racial_pop_events_ogre.22.d
	picture = REFUGEES_ESCAPING_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		has_country_modifier = racial_pop_ogre_purge
	
		fast_owns_num_pops_of_race = { race = ogre amount = 1 } # this must at least be true for the below to be true, and is much faster	
		any_owned_province = {
			has_ogre_majority_trigger = yes
			#culture_is_ogre = yes
			is_city = yes
		}
	}
	
	mean_time_to_happen = {
		days = 2555
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		modifier = {
			factor = 0.1
			fast_owns_num_pops_of_race = { race = ogre amount = 100 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 100
			}
		}
		modifier = {
			factor = 0.5
			fast_owns_num_pops_of_race = { race = ogre amount = 50 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 50
			}
		}
		modifier = {
			factor = 0.75
			fast_owns_num_pops_of_race = { race = ogre amount = 25 } # this must at least be true for the below to be true, and is much faster
			calc_true_if = {
				all_owned_province = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				amount = 25
			}
		}
		
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 0.4
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.55
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.75
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.25
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_majority_trigger = yes
					# culture_is_ogre = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
	
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
					is_city = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
			
			
		#Which country to migrate to
		hidden_effect = {
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					medium_tolerance_ogre_race_trigger = yes
					any_owned_province = {
						development = 20
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					high_tolerance_ogre_race_trigger = yes
				}
				save_event_target_as = racial_pop_migration_country
			}
			random_neighbor_country = {
				limit = {
					NOT = { has_country_modifier = racial_pop_ogre_purge }
					NOT = { has_country_modifier = racial_pop_ogre_expulsion }
					OR = {
						medium_tolerance_ogre_race_trigger = yes
						high_tolerance_ogre_race_trigger = yes
					}
					any_owned_province = {
						development = 20
						NOT = { has_ogre_minority_trigger = yes }
						NOT = { has_ogre_majority_trigger = yes }
					}
				}
				save_event_target_as = racial_pop_migration_country
			}
		}
		hidden_effect = {
			if = {
				limit = {
					has_saved_event_target = racial_pop_migration_country
				}
				#Calls Migrants Arrive to Migration Country
				event_target:racial_pop_migration_country = {
					country_event = {
						id = racial_pop_events_ogre.10
						days = 14
						random = 31
					}
				}
			}
		}
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.17.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		#Remove majority from Origin Province
		event_target:racial_pop_province_origin = {

			hidden_effect = { remove_racial_majority = { race = ogre } } # delete immediately so no minority left

			add_devastation = 15
			change_culture = ROOT
			change_religion = ROOT
			mother_akasik_mountain_control_check = yes
			random_list = {
				1 = {
					add_base_tax = -1
				}
				1 = {
					add_base_production = -1
				}
				1 = {
					add_base_manpower = -1
				}
			}
			
		}
		
		medium_decrease_of_ogre_tolerance_effect = yes
	}
	
	
}



#Purge/Expel - Majority Unrest
country_event = {
	id = racial_pop_events_ogre.23
	title = racial_pop_events_ogre.23.t
	desc = racial_pop_events_ogre.23.d
	picture = ANGRY_MOB_eventPicture
	goto = racial_pop_province_origin
	
	trigger = {
		OR = {
			has_country_modifier = racial_pop_ogre_purge
			has_country_modifier = racial_pop_ogre_expulsion
		}
		
		any_owned_province = {
			is_city = yes
			has_ogre_majority_trigger = yes
			#culture_is_ogre = yes
			NOT = { unrest = 20 }
		}
	}
	
	mean_time_to_happen = {
		days = 1850
		modifier = {
			factor = 0.5
			has_country_modifier = racial_focus_ogre
		}
		
		modifier = {
			factor = 0.75
			
			has_country_modifier = racial_pop_ogre_purge
		}
		
		#Distances
		# Removing these has caused a vast increase in purging MTTH.
		# Until (something similar?) is re-implemented, sharply cutting purge times.
		modifier = { factor = 0.5 always = yes }

		# modifier = {
			# factor = 1.5
			
			# NOT = {
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.3
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 50
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 25
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 1.1
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 75
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 50
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.8
			
			# AND = {
				# NOT = {
					# capital_scope = {
						# any_owned_province = {
							# has_ogre_majority_trigger = yes
							# culture_is_ogre = yes
							
							# province_distance = {
								# who = PREV
								# distance = 125
							# }
						# }
					# }
				# }
				# capital_scope = {
					# any_owned_province = {
						# has_ogre_majority_trigger = yes
						# culture_is_ogre = yes
						
						# province_distance = {
							# who = PREV
							# distance = 100
						# }
					# }
				# }
			# }
		# }
		
		# modifier = {
			# factor = 0.5
			
			# capital_scope = {
				# any_owned_province = {
					# has_ogre_majority_trigger = yes
					# culture_is_ogre = yes
					
					# province_distance = {
						# who = PREV
						# distance = 125
					# }
				# }
			# }
		# }
	}
	
	immediate = {
		#Origin Province Setter
		
		#Make this the monstrous purge thing
		hidden_effect = {
			random_owned_province = {
				limit = {
					is_city = yes
					has_ogre_majority_trigger = yes
					#culture_is_ogre = yes
				}
				save_event_target_as = racial_pop_province_origin
			}
		}
		
	}
	
	#Good Riddance!
	option = {		
		name = racial_pop_events_ogre.23.a
		trigger = {
			
		}
		ai_chance = {
			factor = 50
		}
		
		if = {
			limit = {
				has_country_modifier = racial_pop_ogre_expulsion
			}
			#Remove majority from Origin Province
			event_target:racial_pop_province_origin = {
				add_devastation = 3
				add_unrest = 5
			}
		}
		
		if = {
			limit = {
				has_country_modifier = racial_pop_ogre_purge
			}
			#Remove majority from Origin Province
			event_target:racial_pop_province_origin = {
				add_devastation = 5
				add_unrest = 10
			}
		}
		
		
		small_decrease_of_ogre_tolerance_effect = yes
	}
}



#Keeps pop menu open
country_event = {
	id = racial_pop_events_ogre.24
	title = racial_pop_events_ogre.24.t
	desc = racial_pop_events_ogre.24.d
	picture = EMPTY_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	option = {
		name = racial_pop_events_ogre.24.a
		country_event = { id = racial_pop_events_ogre.12 }
	}
}

#Calling every_owned_province to update tolerance in a scripted effect generates 1 invalid scope at the end of iteration
#which can spam the error log - update tolerance country-wide after a tolerance change by calling this event instead
country_event = {
	id = racial_pop_events_ogre.99
	title = racial_pop_events_ogre.99.t
	desc = racial_pop_events_ogre.99.d
	picture = EMPTY_eventPicture

	hidden = yes
	is_triggered_only = yes

	immediate = {
		every_owned_province = {
			update_specific_racial_province_modifier_tolerance = { race = ogre }
		}
	}

	option = {
		name = racial_pop_events_ogre.99.a
	}

}
