# namespace = aw_test

# #The Adventurers Wanted uses a strict ID system to make the system easier to author content for
# #The IDs below 100 are core utility systems that are usually straight copies or modifications of how the AW system works, such as monsters being able to migrate and be defeated by adventurers.
# #The IDs above 100 are more unique situations for the specific encounter, but they should correlate with the numbers from above: if ID 10s deal with migration, then ID 110s should be the unique events to do with migration - for example bribing a Thieves Guild to GTFO your country
# #Crazy and more uniques ones that dont conform to the utilities should be ID 200

# #USE THE anb_aw_test TO SEE A SIMPLE COPY-PASTABLE FORMAT IN ADDITION TO STUFF LIKE MIGRATION STYLES ETC
# #Search for CHANGEABLE for the criteria you should change in that file and this one

# #################################################################
# # Welcome to the master file for the Adventurers Wanted System. In the comments below you'll see copy-pastable events for you to choose, different migration styles as well as prebuilt events to handle stuff like spawning rebellions
# #################################################################

# #0 - spawn in province
# province_event = {
#     id = aw_test.0
#     title = aw_test.0.t
#     desc = aw_test.0.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
#     #hidden = yes
    
#     #yup thats happening
#     option = {
#         name = aw_basic.0.a
#         ai_chance = { 
#             factor = 1 
#         }
#         add_permanent_province_modifier  = {
#             name = aw_test_1
#             duration = -1  
#         }

#         custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip
#     }
# }


# #1 - event manager, called by on_actions. This happens ONCE per pulse. If you have 7 of these, it still only fires the manager once
# country_event = {
#     id = aw_test.1
#     title = aw_test.1.t
#     desc = aw_test.1.d
#     picture = COMET_SIGHTED_eventPicture
    
#     hidden = yes
#     is_triggered_only = yes
    
#     trigger = {
#         any_owned_province = {
#             OR = { 
#                 has_province_modifier = aw_test_1
#                 has_province_modifier = aw_test_2
#                 has_province_modifier = aw_test_3
#             }
#         }
#     }

#     mean_time_to_happen = {
#         days = 1
#         modifier = {
#             factor = 2
#             num_of_owned_provinces_with = {
#                 value = 3
#                 OR = { 
#                     has_province_modifier = aw_test_1
#                     has_province_modifier = aw_test_2
#                     has_province_modifier = aw_test_3
#                 }
#             }
#         }
#     }

#     immediate = {
#         random_owned_province = {
#             limit = {
#                 OR = { 
#                     has_province_modifier = aw_test_1
#                     has_province_modifier = aw_test_2
#                     has_province_modifier = aw_test_3
#                 }
#             }
#             save_event_target_as = aw_test_target
#         }
#     }
    
	
# 	option = {
#         event_target:aw_test_target = {
#             random_list = {
#                 #10 - Base migration
# 				5 = {
# 					province_event = { id = aw_test.10 }
# 				}
#                 #13 - Base propagation
#                 5 = {
#                     province_event = { id = aw_test.13 }
#                 }

#                 #15 - Migrate to non monstrous if monstrous nation is owner
#                 75 = {
#                     modifier = {
#                         #only want this to ever be part of the equation if you are monstrous
#                         factor = 0
#                         NOT = { owner = { has_country_modifier = monstrous_nation } }
#                     }
#                     province_event = { id = aw_test.15 }    #Migrate out of monstrous. high just so it jumps out of there sooner rather than later
#                 }

#                 #20 - natural removal
#                 7 = {
#                     province_event = { id = aw_test.20 }    #Natural removal
#                 }

#                 #21 - adventurer removal
#                 15 = {
#                     #Base modifiers

#                     #more likely if generous quest rewards/adverturer nation
#                     modifier = {
#                         factor = 2
#                         OR = {
#                             owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
#                             owner = { has_adventurer_reform = yes }
#                         }
#                     }

#                     #more likely if loyal
#                     modifier = {
#                         factor = 2
#                         owner = {
#                             estate_loyalty = {
#                                 estate = estate_adventurers
#                                 loyalty = 60
#                             }
#                         }
#                     }

#                     #more likely if high influence
#                     modifier = {
#                         factor = 2
#                         owner = {
#                             estate_influence = {
#                                 estate = estate_adventurers
#                                 influence = 60
#                             }
#                         }
#                     }
#                     #small influence boost at 30
#                     modifier = {
#                         factor = 1.5
#                         owner = {
#                             estate_influence = {
#                                 estate = estate_adventurers
#                                 influence = 30
#                             }
#                         }
#                     }
#                     province_event = { id = aw_test.21 }
#                 }

#                 #22 - natural tier down
#                 10 = {
#                     province_event = { id = aw_test.22 } 
#                 }

#                 #23 - adventurer tier down
#                 20 = {
#                     #Base modifiers

#                     #more likely if generous quest rewards/adverturer nation
#                     modifier = {
#                         factor = 2
#                         OR = {
#                             owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
#                             owner = { has_adventurer_reform = yes }
#                         }
#                     }

#                     #more likely if loyal
#                     modifier = {
#                         factor = 2
#                         owner = {
#                             estate_loyalty = {
#                                 estate = estate_adventurers
#                                 loyalty = 60
#                             }
#                         }
#                     }

#                     #more likely if high influence
#                     modifier = {
#                         factor = 2
#                         owner = {
#                             estate_influence = {
#                                 estate = estate_adventurers
#                                 influence = 60
#                             }
#                         }
#                     }
#                     #small influence boost at 30
#                     modifier = {
#                         factor = 1.5
#                         owner = {
#                             estate_influence = {
#                                 estate = estate_adventurers
#                                 influence = 30
#                             }
#                         }
#                     }
#                     province_event = { id = aw_test.23 }
#                 }

#                 #24 - monstrous nation removal
#                 50 = {
#                     modifier = {
#                         #only want this to ever be part of the equation if you are monstrous
#                         factor = 0
#                         NOT = { owner = { has_country_modifier = monstrous_nation } }
#                     }
#                     #Base modifiers
#                     province_event = { id = aw_test.24 }
#                 }

#                 #25 - monstrous natural tier down.
#                 50 = {
#                     #Base modifiers
#                     modifier = {
#                         #only want this to ever be part of the equation if you are monstrous
#                         factor = 0
#                         NOT = { owner = { has_country_modifier = monstrous_nation } }
#                     }
#                     province_event = { id = aw_test.25 }   
#                 }

#                 #30 - natural tier up
#                 10 = {
#                     province_event = { id = aw_test.30 }   
#                 }

#                 #40 - convert to pop if tolerating
#                 2 = {
#                     modifier = {
#                         factor = 3
#                         owner = {
#                             medium_tolerance_REPLACEMEWITHTHEACTUALRACE_race_trigger = yes
#                         }
#                     }
#                     modifier = {
#                         factor = 4
#                         owner = {
#                             high_tolerance_REPLACEMEWITHTHEACTUALRACE_race_trigger = yes
#                         }
#                     }
#                     province_event = { id = aw_test.41 }  
#                 }

#                 #41 - convert to pop, monstrous subjugation
#                 33 = {
#                     modifier = {
#                         #only want this to ever be part of the equation if you are monstrous
#                         factor = 0
#                         NOT = { owner = { has_country_modifier = monstrous_nation } }
#                     }
#                     province_event = { id = aw_test.41 }  
#                 }
#             }
#         }
# 	}
    
# }


# #2 - notification of advanturers wanted spawning

# ############## 10s - Migration and Propagation ###################

# #10 - Base migration
# province_event = {
#     id = aw_test.10
#     title = aw_test.10.t
#     desc = aw_test.10.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }

#         #MAKE SURE TO ADD A any_neighbor_province or relevant check - aka make sure that the immediate = { } effects can even occur before doing the event!
#         any_neighbor_province = {
#             is_city = yes
#             owner = { NOT = { has_country_modifier = monstrous_nation } }

#             NOT = { has_province_modifier = aw_test_1 }
#             NOT = { has_province_modifier = aw_test_2 }
#             NOT = { has_province_modifier = aw_test_3 }
#         }
#     }
    
#     immediate = {
#         hidden_effect = {

#             ######################################################################
#             #Here's a list of all migration types for you to copy and paste
#             #Note: you may need to add something in the trigger = { } above, for example for random_neighbour_province, as you might want to check if this valid province even has a neighbour you can migrate to!
#             ######################################################################

#             #CHANGEABLE - MIGRATION TYPE - Any adjacent province
#             random_neighbor_province = {
#                 limit = {
#                     #Base Conditions
#                     is_city = yes

#                     NOT = { has_province_modifier = aw_test_1 }
#                     NOT = { has_province_modifier = aw_test_2 }
#                     NOT = { has_province_modifier = aw_test_3 }


#                     #Specific Conditions
                   
#                 }
#                 save_event_target_as = aw_test_migration_target
#             }

#             #CHANGEABLE - MIGRATION TYPE - Any province within my region - dont do area as those are too small. its essentially adjacent anyway
#             random_province = {
#                 limit = {
#                     region = ROOT
#                     NOT = { province_id = ROOT }

#                     is_city = yes

#                     NOT = { has_province_modifier = aw_test_1 }
#                     NOT = { has_province_modifier = aw_test_2 }
#                     NOT = { has_province_modifier = aw_test_3 }

#                 }
#                 save_event_target_as = aw_test_migration_target
#             }

#             #CHANGEABLE - MIGRATION TYPE - Any province within my country
#             owner = {
#                 random_owned_province = {
#                     limit = {
#                         #Base Conditions
#                         NOT = { province_id = ROOT }
#                         is_city = yes

#                         NOT = { has_province_modifier = aw_test_1 }
#                         NOT = { has_province_modifier = aw_test_2 }
#                         NOT = { has_province_modifier = aw_test_3 }


#                         #Specific Conditions
                       
#                     }
#                     save_event_target_as = aw_test_migration_target
#                 }
#             }

#             #CHANGEABLE - MIGRATION TYPE -  Any province in THE WORLD  (do not use this unless necessary as this is very resource intensive!)
#                 random_province = {
#                     limit = {
#                     #Base Conditions
#                     NOT = { province_id = ROOT }
#                     is_city = yes

#                     NOT = { has_province_modifier = aw_test_1 }
#                     NOT = { has_province_modifier = aw_test_2 }
#                     NOT = { has_province_modifier = aw_test_3 }


#                     #Specific Conditions
                     
#                 }
#                 save_event_target_as = aw_test_migration_target
#             }
#         }
#     }

#     #If migration is within country
#     option = {  
#         name = aw_test.10.a
#         ai_chance = { factor = 100 }
#         goto = aw_test_migration_target
#         trigger = {
#             event_target:aw_test_migration_target = {
#                  owned_by = ROOT
#             }
#         }

#         #It's migration, so remove modifier from previous province
#         tooltip = { #this is fake. the real one happens below
#             remove_province_modifier = aw_test_1
#             remove_province_modifier = aw_test_2
#             remove_province_modifier = aw_test_3
#         }

#         event_target:aw_test_migration_target = {
#             if = {
#                 limit = {
#                     owned_by = ROOT #you need this as this is only for provinces you own. option 10.b is for others
#                 }

                


#                 #CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target
#                 if = {
#                     limit = {
#                         FROM = { has_province_modifier = aw_test_1 }
#                     }
#                     add_permanent_province_modifier = { 
#                         name = aw_test_1
#                         duration = -1
#                     }
#                 }
#                 else_if = {
#                     limit = {
#                         FROM = { has_province_modifier = aw_test_2 }
#                     }
#                     add_permanent_province_modifier = { 
#                         name = aw_test_2
#                         duration = -1
#                     }
#                 }
#                 else_if = {
#                     limit = {
#                         FROM = { has_province_modifier = aw_test_3 }
#                     }
#                     add_permanent_province_modifier = { 
#                         name = aw_test_3
#                         duration = -1
#                     }
#                 }
#                 FROM = {
#                 #real removal. the other real one is in the called event in the else
#                     remove_province_modifier = aw_test_1
#                     remove_province_modifier = aw_test_2
#                     remove_province_modifier = aw_test_3
#                 }
#             }
#         }
#     }

#     #If migration is sent to OTHER country
#     option = {  
#         name = aw_test.10.b
#         ai_chance = { factor = 100 }
#         goto = aw_test_migration_target
#         trigger = {
#             event_target:aw_test_migration_target = {
#                 NOT = { owned_by = ROOT }   #if the target isnt in your country, then send an event to them that notifies + adds it on their end
#             }
#         }

#         #It's migration, so remove modifier from previous province
#         tooltip = { #this is fake. the real one happens via the event
#             remove_province_modifier = aw_test_1
#             remove_province_modifier = aw_test_2
#             remove_province_modifier = aw_test_3
#         }
# 		custom_tooltip = aw_test_migrate_to_other_country_tt
# 		hidden_effect = {
# 			event_target:aw_test_migration_target = {
# 				province_event = {
# 					id = aw_test.11
# 				}
# 			}
# 		}
#     }
# }

# #11 - migration target notification if it goes to other country
# province_event = {
#     id = aw_test.11
#     title = aw_test.11.t
#     desc = aw_test.11.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     option = {
#         # deal with it ourselves
#         name = aw_test.11.a
#         ai_chance = { 
#             factor = 20 
#         }

#         custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip

#         owner = {
#             add_opinion = {
#                 who = FROM
#                 modifier = aw_crossed_border
#             }
#         }

#         #CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target ---(NOTE: THIS USUALLY SHOULD BE THE SAME AS id.10 above)----
#         if = {
#             limit = {
#                 FROM = { has_province_modifier = aw_test_1 }
#             }
#             add_permanent_province_modifier = { 
#                 name = aw_test_1
#                 duration = -1
#             }
#         }
#         else_if = {
#             limit = {
#                 FROM = { has_province_modifier = aw_test_2 }
#             }
#             add_permanent_province_modifier = { 
#                 name = aw_test_2
#                 duration = -1
#             }
#         }
#         else_if = {
#             limit = {
#                 FROM = { has_province_modifier = aw_test_3 }
#             }
#             add_permanent_province_modifier = { 
#                 name = aw_test_3
#                 duration = -1
#             }
#         }

#     }

#     after = {
#         FROM = {    #cleanup event to remove the modifiers from the original province
#             remove_province_modifier = aw_test_1
#             remove_province_modifier = aw_test_2
#             remove_province_modifier = aw_test_3
#         }
#     }
# }

# #13 - Base propagation
# province_event = {
#     id = aw_test.13
#     title = aw_test.13.t
#     desc = aw_test.13.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }

#         #MAKE SURE TO ADD A any_neighbor_province or relevant check - aka make sure that the immediate = { } effects can even occur before doing the event!
#         any_neighbor_province = {
#             is_city = yes
#             owner = { NOT = { has_country_modifier = monstrous_nation } }

#             NOT = { has_province_modifier = aw_test_1 }
#             NOT = { has_province_modifier = aw_test_2 }
#             NOT = { has_province_modifier = aw_test_3 }
#         }
#     }
    
#     immediate = {
#         hidden_effect = {

#             #See .10 for full copy-pastable examples

#             #CHANGEABLE - MIGRATION TYPE - Any adjacent province
#             random_neighbor_province = {
#                 limit = {
#                     #Base Conditions
#                     is_city = yes

#                     NOT = { has_province_modifier = aw_test_1 }
#                     NOT = { has_province_modifier = aw_test_2 }
#                     NOT = { has_province_modifier = aw_test_3 }


#                     #Specific Conditions
                   
#                 }
#                 save_event_target_as = aw_test_migration_target
#             }

#             #CHANGEABLE - MIGRATION TYPE - Any province within my region - dont do area as those are too small. its essentially adjacent anyway
#             random_province = {
#                 limit = {
#                     region = ROOT
#                     NOT = { province_id = ROOT }

#                     is_city = yes

#                     NOT = { has_province_modifier = aw_test_1 }
#                     NOT = { has_province_modifier = aw_test_2 }
#                     NOT = { has_province_modifier = aw_test_3 }

#                 }
#                 save_event_target_as = aw_test_migration_target
#             }

#             #CHANGEABLE - MIGRATION TYPE - Any province within my country
#             owner = {
#                 random_owned_province = {
#                     limit = {
#                         #Base Conditions
#                         NOT = { province_id = ROOT }
#                         is_city = yes

#                         NOT = { has_province_modifier = aw_test_1 }
#                         NOT = { has_province_modifier = aw_test_2 }
#                         NOT = { has_province_modifier = aw_test_3 }


#                         #Specific Conditions
                       
#                     }
#                     save_event_target_as = aw_test_migration_target
#                 }
#             }

#             #CHANGEABLE - MIGRATION TYPE -  Any province in THE WORLD  (do not use this unless necessary as this is very resource intensive!)
#                 random_province = {
#                     limit = {
#                     #Base Conditions
#                     NOT = { province_id = ROOT }
#                     is_city = yes

#                     NOT = { has_province_modifier = aw_test_1 }
#                     NOT = { has_province_modifier = aw_test_2 }
#                     NOT = { has_province_modifier = aw_test_3 }


#                     #Specific Conditions
                     
#                 }
#                 save_event_target_as = aw_test_migration_target
#             }
#         }
#     }

#     #If migration is within country
#     option = {  
#         name = aw_test.13.a
#         ai_chance = { factor = 100 }
#         goto = aw_test_migration_target
#         trigger = {
#             event_target:aw_test_migration_target = {
#                 owned_by = ROOT
#             }
#         }


#         event_target:aw_test_migration_target = {
#             if = {
#                 limit = {
#                     owned_by = ROOT
#                 }

#                 #CHANGEABLE - SPREAD TYPE: Tier propagates Tier of the same at target
#                 if = {
#                     limit = {
#                         FROM = { has_province_modifier = aw_test_1 }
#                     }
#                     add_permanent_province_modifier = { 
#                         name = aw_test_1
#                         duration = -1
#                     }
#                 }
#                 else_if = {
#                     limit = {
#                         FROM = { has_province_modifier = aw_test_2 }
#                     }
#                     add_permanent_province_modifier = { 
#                         name = aw_test_2
#                         duration = -1
#                     }
#                 }
#                 else_if = {
#                     limit = {
#                         FROM = { has_province_modifier = aw_test_3 }
#                     }
#                     add_permanent_province_modifier = { 
#                         name = aw_test_3
#                         duration = -1
#                     }
#                 }
#             }
#         }
#     }

#     #If migration is sent to OTHER country
#     option = {  
#         name = aw_test.13.b
#         ai_chance = { factor = 100 }
#         goto = aw_test_migration_target
#         trigger = {
#             event_target:aw_test_migration_target = {
#                 NOT = { owned_by = ROOT }   #if the target isnt in your country, then send an event to them that notifies + adds it on their end
#             }
#         }

#         custom_tooltip = aw_test_migrate_to_other_country_tt
# 		hidden_effect = {
# 			event_target:aw_test_migration_target = {
# 				province_event = {
# 					id = aw_test.14
# 				}
# 			}
# 		}
#     }
# }

# #14 - propagation target notification
# province_event = {
#     id = aw_test.14
#     title = aw_test.14.t
#     desc = aw_test.14.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     option = {
#         # deal with it ourselves
#         name = aw_basic.0.a
#         ai_chance = { 
#             factor = 20 
#         }

#         custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip

#         owner = {
#             add_opinion = {
#                 who = FROM
#                 modifier = aw_crossed_border
#             }
#         }

#         #CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target (NOTE: THIS USUALLY SHOULD BE THE SAME AS id.10 above)
#         if = {
#             limit = {
#                 FROM = { has_province_modifier = aw_test_1 }
#             }
#             add_permanent_province_modifier = { 
#                 name = aw_test_1
#                 duration = -1
#             }
#         }
#         else_if = {
#             limit = {
#                 FROM = { has_province_modifier = aw_test_2 }
#             }
#             add_permanent_province_modifier = { 
#                 name = aw_test_2
#                 duration = -1
#             }
#         }
#         else_if = {
#             limit = {
#                 FROM = { has_province_modifier = aw_test_3 }
#             }
#             add_permanent_province_modifier = { 
#                 name = aw_test_3
#                 duration = -1
#             }
#         }

#     }

# }

# #15 - Migrate to non monstrous if monstrous nation is owner (if its applicable to monsters, like wyverns etc, then this is fine to remove, else keep)
# province_event = {
#     id = aw_test.15
#     title = aw_test.15.t
#     desc = aw_test.15.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         owner = { has_country_modifier = monstrous_nation }
#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }

#         owner = {
#             any_neighbor_country = {
#                 NOT = { has_country_modifier = monstrous_nation }
#             }
#         }
#     }
    
#     immediate = {
#         hidden_effect = {

#             #Special one for this event, targeting a neighbouring country that isnt monstrous and any of their owned events

#             #CHANGABLE - edit Specific Conditions to make sure it moves to that kind of province! (e.g. if its a thieves guild it will move to a city province)

#             owner = {
#                 random_neighbor_country = {
#                     limit = {
#                         NOT = { has_country_modifier = monstrous_nation }
#                     }
#                     random_owned_province = {
#                         limit = {
#                             #Base Conditions
#                             NOT = { province_id = ROOT }
#                             is_city = yes
    
#                             NOT = { has_province_modifier = aw_test_1 }
#                             NOT = { has_province_modifier = aw_test_2 }
#                             NOT = { has_province_modifier = aw_test_3 }
    
    
#                             #Specific Conditions
                           
#                         }
#                         save_event_target_as = aw_test_migration_target
#                     }
#                 }
#             }
#         }
#     }


#     #If migration is sent to OTHER country
#     option = {  
#         name = aw_test.10.b
#         ai_chance = { factor = 100 }
#         goto = aw_test_migration_target
#         trigger = {
#             event_target:aw_test_migration_target = {
#                 NOT = { owned_by = ROOT }   #if the target isnt in your country, then send an event to them that notifies + adds it on their end
#             }
#         }

#         #It's migration, so remove modifier from previous province
#         tooltip = { #this is fake. the real one happens via the event
#             remove_province_modifier = aw_test_1
#             remove_province_modifier = aw_test_2
#             remove_province_modifier = aw_test_3
#         }

#         custom_tooltip = aw_test_migrate_to_other_country_tt
# 		hidden_effect = {
# 			event_target:aw_test_migration_target = {
# 				province_event = {
# 					id = aw_test.11
		
# 				}
# 			}
#         }
#     }
# }

# ############## 20s - Removal/Tier Down ###################

# #20 - natural removal
# province_event = {
#     id = aw_test.20
#     title = aw_test.20.t
#     desc = aw_test.20.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }
#     }
    
#     option = {
 
#         name = aw_test.20.a
#         ai_chance = { factor = 100 }

#         remove_province_modifier = aw_test_1
#         remove_province_modifier = aw_test_2
#         remove_province_modifier = aw_test_3

#     }
# }

# #21 - adventurer removal
# province_event = {
#     id = aw_test.21
#     title = aw_test.21.t
#     desc = aw_test.21.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         owner = { has_estate = estate_adventurers }
#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }
#     }
    
#     option = {
#         # oh, thank goodness
#         name = aw_test.21.a
#         ai_chance = { factor = 100 }

#         remove_province_modifier = aw_test_1
#         remove_province_modifier = aw_test_2
#         remove_province_modifier = aw_test_3

#         owner = {
#             add_estate_influence_modifier = {
#                 estate = estate_adventurers
#                 desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
#                 duration = 3650
#                 influence = 5
#             }
#         }

#         owner = { add_prestige_excess_to_splendour_effect = { VAL=10} }   #10 for hard, 5 for medium, 3 for weak

#     }
# }

# #22 - natural tier down
# province_event = {
#     id = aw_test.22
#     title = aw_test.22.t
#     desc = aw_test.22.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         OR = { 
#             has_province_modifier = aw_test_1 
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }
#     }
#     option = {
#         name = aw_test.22.a
#         ai_chance = { factor = 100 }
#         if = {
#             limit = { 
#                 has_province_modifier = aw_test_3 
#             }
#             remove_province_modifier = aw_test_3
#             add_permanent_province_modifier  = {
#                 name = aw_test_2
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_2
#             }
#             remove_province_modifier = aw_test_2
#             add_permanent_province_modifier  = {
#                 name = aw_test_1
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_1
#             }
#             remove_province_modifier = aw_test_1
#         }
#     }
# }

# #23 - adventurer tier down
# province_event = {
#     id = aw_test.23
#     title = aw_test.23.t
#     desc = aw_test.23.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         owner = { has_estate = estate_adventurers }
#         OR = { 
#             has_province_modifier = aw_test_1 
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }
#     }
#     option = {
#         name = aw_test.23.a
#         ai_chance = { factor = 100 }
#         if = {
#             limit = { 
#                 has_province_modifier = aw_test_3 
#             }
#             remove_province_modifier = aw_test_3
#             add_permanent_province_modifier  = {
#                 name = aw_test_2
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_2
#             }
#             remove_province_modifier = aw_test_2
#             add_permanent_province_modifier  = {
#                 name = aw_test_1
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_1
#             }
#             remove_province_modifier = aw_test_1
#             owner = { add_prestige_excess_to_splendour_effect = { VAL=10} }   #10 for hard, 5 for medium, 3 for weak
#         }

#         owner = {
#             add_estate_influence_modifier = {
#                 estate = estate_adventurers
#                 desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
#                 duration = 3650
#                 influence = 5
#             }
#         }
#     }
# }

# #24 - monstrous nation removal
# province_event = {
#     id = aw_test.24
#     title = aw_test.24.t
#     desc = aw_test.24.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         owner = { has_country_modifier = monstrous_nation }

#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }
#     }
    
#     option = {
 
#         name = aw_test.24.a
#         ai_chance = { factor = 100 }

#         remove_province_modifier = aw_test_1
#         remove_province_modifier = aw_test_2
#         remove_province_modifier = aw_test_3

#         owner = { add_prestige_excess_to_splendour_effect = { VAL=10} }   #10 for hard, 5 for medium, 3 for weak

#     }
# }

# #25 - monstrous natural tier down. keep if you want, or just rely on removal
# province_event = {
#     id = aw_test.25
#     title = aw_test.25.t
#     desc = aw_test.25.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         owner = { has_country_modifier = monstrous_nation }

#         OR = { 
#             has_province_modifier = aw_test_1 
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }
#     }
#     option = {
#         name = aw_test.25.a
#         ai_chance = { factor = 100 }
#         if = {
#             limit = { 
#                 has_province_modifier = aw_test_3 
#             }
#             remove_province_modifier = aw_test_3
#             add_permanent_province_modifier  = {
#                 name = aw_test_2
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_2
#             }
#             remove_province_modifier = aw_test_2
#             add_permanent_province_modifier  = {
#                 name = aw_test_1
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_1
#             }
#             remove_province_modifier = aw_test_1
#             owner = { add_prestige_excess_to_splendour_effect = { VAL=10} }   #10 for hard, 5 for medium, 3 for weak
#         }
#     }
# }

# ############## 30s - Tier Up ###################

# #30 - natural tier up
# province_event = {
#     id = aw_test.30
#     title = aw_test.30.t
#     desc = aw_test.30.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {
#         OR = { 
#             has_province_modifier = aw_test_1 
#             has_province_modifier = aw_test_2
#         }
#     }
#     option = {
#         name = aw_test.30.a
#         ai_chance = { factor = 100 }
#         if = {
#             limit = { 
#                 has_province_modifier = aw_test_1
#             }
#             remove_province_modifier = aw_test_1
#             add_permanent_province_modifier  = {
#                 name = aw_test_2
#                 duration = -1  
#             }
#         }
#         else_if = {
#             limit = { 
#                 has_province_modifier = aw_test_2
#             }
#             remove_province_modifier = aw_test_2
#             add_permanent_province_modifier  = {
#                 name = aw_test_3
#                 duration = -1  
#             }
#         }

#         custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip   #should be added for each increase of level
#     }
# }

# ############## 40s - Other Utility ###################

# #40 - convert to pop if tolerating
# province_event = {
#     id = aw_test.40
#     title = aw_test.40.t
#     desc = aw_test.40.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {

#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }

#         medium_tolerance_REPLACEMEWITHTHEACTUALRACE_race_trigger = yes   #obviously change this for the relevant. Note that you'll need some events that can increase tolerance for this to even fire

#     }
#     option = {
#         name = aw_test.40.a
#         ai_chance = { factor = 100 }

#         remove_province_modifier = aw_test_1
#         remove_province_modifier = aw_test_2
#         remove_province_modifier = aw_test_3

#         add_REPLACEMEWITHTHEACTUALRACE_minority_size_effect = yes

#     }
#     option = {
#         name = aw_test.40.b
#         ai_chance = { factor = 25 }

#         large_decrease_of_REPLACEMEWITHTHEACTUALRACE_tolerance_effect = yes

#     }
# }

# #41 - convert to pop, monstrous subjugation
# province_event = {
#     id = aw_test.41
#     title = aw_test.41.t
#     desc = aw_test.41.d
#     picture = COMET_SIGHTED_eventPicture
#     goto = ROOT
    
#     is_triggered_only = yes
    
#     trigger = {

#         OR = {
#             has_province_modifier = aw_test_1
#             has_province_modifier = aw_test_2
#             has_province_modifier = aw_test_3
#         }

#         owner = { has_country_modifier = monstrous_nation }

#     }
#     option = {
#         name = aw_test.41.a
#         ai_chance = { factor = 100 }

#         remove_province_modifier = aw_test_1
#         remove_province_modifier = aw_test_2
#         remove_province_modifier = aw_test_3

#         add_REPLACEMEWITHTHEACTUALRACE_minority_size_effect = yes

#     }
#     option = {
#         name = aw_test.41.b
#         ai_chance = { factor = 25 }

#         owner = { add_prestige = 5 }

#     }
# }

# ############## 100s - Special Spawn ###################


# ############## 110s - Special Migration & Propagation ###################



# ############## 120s - Special Removal/Tier Down ###################



# ############## 130s - Special Tier Up ###################


# ############## 140s - Other Special Utility ###################


# ############## 200s - Special Flavour ###################