namespace = dwarven_tolerance_events

# Event organizer for the dwarven tolerance events - should be a huge improvement to performance - having 1 overall check for having the minority instead of one for EACH new event that gets added
country_event = {
	id = dwarven_tolerance_events.0
	title = race_setup_events.1.d
	desc = race_setup_events.1.d
	picture = BORDER_TENSION_eventPicture

	is_triggered_only = yes
	hidden = yes

	trigger = {
		NOT = { culture_group = dwarven }
		fast_owns_num_pops_of_race = { race = dwarven amount = 1 }
	}
	
	mean_time_to_happen = {
		days = 1
		modifier = {
			factor = 10
			has_country_modifier = racial_focus_dwarven
		}
	}

	option = {
		random_list = {
			1 = { }
			# ensure there's an empty option first in case none of the others are available
			# and also because it seems this one might be picked rarely even if the others are available...

			#generic demand autonomy
			10 = {
				trigger = {
					NOT = { has_country_modifier = dwarven_administration }
					any_owned_province = {
						NOT = { local_autonomy = 50 }
						is_capital = no
						has_dwarven_minority_trigger = yes
					}
				}
				country_event = { id = dwarven_tolerance_events.1 }
			}
			#generic tolerance increase
			10 = {
				trigger = {
					NOT = { has_country_modifier = dwarven_administration }
					OR = {
						stability = 1
						in_golden_age = yes
						ruler_has_personality = tolerant_personality
						ruler_has_personality = kind_hearted_personality
						ruler_has_personality = benevolent_personality
						has_idea_group = humanist_ideas
						
						any_ally = {
							has_country_modifier = dwarven_administration
						}
					}
				}
				country_event = { id = dwarven_tolerance_events.2 }
			}
			#generic tolerance decrease
			10 = {
				trigger = {
					NOT = { has_country_modifier = dwarven_administration }
					OR = {
						NOT = { stability = 0 }
						is_bankrupt = yes
						inflation = 25
						AND = {
							is_at_war = yes
							NOT = { war_score = 20 }
						}
						war_exhaustion = 10
						ruler_has_personality = cruel_personality
						ruler_has_personality = malevolent_personality
						ruler_has_personality = conqueror_personality
						
						any_rival_country = {
							has_country_modifier = dwarven_administration
						}
					}
				}
				country_event = { id = dwarven_tolerance_events.3 }
			}
			# Recruit dwarven minister
			10 = {
				modifier = {
					factor = 1.5
					medium_tolerance_dwarven_race_trigger = yes
				}
				modifier = {
					factor = 2
					high_tolerance_dwarven_race_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.4
				}
			}
			# Clan rivalries come to a head
			10 = {
				trigger = {
					any_owned_province = {
						has_any_dwarven_pop_trigger = yes
						NOT = { has_province_modifier = dwarven_clans_fighting }
					}
				}
				modifier = {
					factor = 1.1
					any_owned_province = {
						has_any_dwarven_pop_trigger = yes
						unrest = 0
					}
				}
				modifier = {
					factor = 2
					any_owned_province = {
						has_large_dwarven_minority_trigger = yes
						unrest = 0
					}
				}
				country_event = {
					id = dwarven_tolerance_events.5
				}
			}
			# Dwarven craftsmen dominate market
			10 = {
				modifier = {
					factor = 2
					high_tolerance_dwarven_race_trigger = yes
				}
				modifier = {
					factor = 1.5
					medium_tolerance_dwarven_race_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.7
				}
			}
			# Long-term grudges come to fruition
			10 = {
				modifier = {
					factor = 2
					any_owned_province = {
						has_large_dwarven_minority_trigger = yes
					}
				}
				country_event = {
					id = dwarven_tolerance_events.8
				}
			}
			# Dwarven cartel thugs
			10 = {
				modifier = {
					factor = 2
					low_tolerance_dwarven_race_trigger = yes
				}
				country_event = {
					id = dwarven_tolerance_events.9
				}
			}
			# Dwarven stronghold
			10 = {
				trigger = {
					any_owned_province = {
						NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
						NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
						NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
						has_dwarven_minority_trigger = yes
					}
			
				}
				modifier = {
					factor = 2
					low_tolerance_dwarven_race_trigger = yes
				}
				modifier = {
					factor = 2
					average_unrest = 1
				}
				country_event = {
					id = dwarven_tolerance_events.11
				}
			}
			# Rise of dwarven cartels
			10 = {
				trigger = {
					has_estate = estate_burghers
					any_owned_province = {
						has_dwarven_minority_trigger = yes
						NOT = { has_province_modifier = dwarven_guilds_upset }
						NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					}
				}
				modifier = {
					factor = 2
					NOT = { 
						estate_influence = {
							estate = estate_burghers
							influence = 40
						}
					}
				}
				modifier = {
					factor = 2
					NOT = { 
						estate_influence = {
							estate = estate_burghers
							influence = 30
						}
					}
				}
				country_event = {
					id = dwarven_tolerance_events.12
				}
			}
		}
	}
}

#Demand Representation
country_event = {
	id = dwarven_tolerance_events.1
	title = dwarven_tolerance_events.1.t
	desc = dwarven_tolerance_events.1.d
	picture = DEBATE_REPUBLICAN_eventPicture
	goto = racial_pop_province_target
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					has_dwarven_minority_trigger = yes
					is_capital = no
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { local_autonomy = 50 }
					is_capital = no
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = racial_pop_province_target
			}
			random_owned_province = {
				limit = {
					NOT = { local_autonomy = 50 }
					is_capital = no
					has_dwarven_minority_trigger = yes
					development = 10
				}
				save_event_target_as = racial_pop_province_target
			}
		}
	}
	
	option = {		#Granted!
		name = dwarven_tolerance_events.1.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		
		add_adm_power = -40
		
		medium_increase_of_dwarven_tolerance_effect = yes
		
		event_target:racial_pop_province_target = {
			add_local_autonomy = 25
		}
	}
	
	option = {		#Make some concessions
		name = dwarven_tolerance_events.1.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.5
				average_autonomy = 10
			}
		}
		
		add_adm_power = -20
		
		event_target:racial_pop_province_target = {
			add_local_autonomy = 10
		}

	}
	
	option = {		#No. Haven't we given them enough?!
		name = dwarven_tolerance_events.1.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 1.5
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		
		medium_decrease_of_dwarven_tolerance_effect = yes
		
	}
	
	option = {		#Special: Make empty promises
		name = dwarven_tolerance_events.1.e
		trigger = { ruler_has_personality = charismatic_negotiator_personality }
		highlight = yes
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.25
				wants_to_decrease_tolerance_dwarven = yes
			}
			modifier = {
				factor = 1.5
				average_autonomy = 10
			}
		}
		
		add_dip_power = -10
		
		small_increase_of_dwarven_tolerance_effect = yes
		
		event_target:racial_pop_province_target = {
			add_local_autonomy = 1
		}
		
	}
}


#Tolerance Increase
country_event = {
	id = dwarven_tolerance_events.2
	title = dwarven_tolerance_events.2.t
	desc = dwarven_tolerance_events.2.d
	picture = GOOD_WITH_MONARCH_eventPicture
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
		
			random_list = {
				75 = {
					set_country_flag = racial_pop_small_increase
				}
				25 = {
					set_country_flag = racial_pop_medium_increase
				}
			}
		}
	}
	
	option = {		#Good for them
		name = dwarven_tolerance_events.2.a
		ai_chance = {
			factor = 50
		}
		
		trigger_switch = {
			on_trigger = has_country_flag
			racial_pop_small_increase = { small_increase_of_dwarven_tolerance_effect = yes }
			racial_pop_medium_increase = { medium_increase_of_dwarven_tolerance_effect = yes }
		}
		
		clear_racial_pop_tolerance_chance_flags = yes
		
	}
	
}


#Tolerance Decrease
country_event = {
	id = dwarven_tolerance_events.3
	title = dwarven_tolerance_events.3.t
	desc = dwarven_tolerance_events.3.d
	picture = BAD_WITH_MONARCH_eventPicture
	
	is_triggered_only = yes
	
	mean_time_to_happen = {
		days = 1
	}
	immediate = {
		hidden_effect = {
		
			random_list = {
				75 = {
					set_country_flag = racial_pop_small_decrease
				}
				25 = {
					set_country_flag = racial_pop_medium_decrease
				}
			}
		}
	}
	
	option = {		#That's unfortunate
		name = dwarven_tolerance_events.3.a
		ai_chance = {
			factor = 50
		}
		
		trigger_switch = {
			on_trigger = has_country_flag
			racial_pop_small_decrease = { small_decrease_of_dwarven_tolerance_effect = yes }
			racial_pop_medium_decrease = { medium_decrease_of_dwarven_tolerance_effect = yes }
		}
		
		clear_racial_pop_tolerance_chance_flags = yes
		
	}
	
}

# Rise of dwarven cartels (estate)
country_event = {
	id = dwarven_tolerance_events.12
	title = dwarven_tolerance_events.12.t
	desc = dwarven_tolerance_events.12.d
	picture = TRADEGOODS_eventPicture
	goto = dwarven_guild_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = dwarven_guild_province
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
					province_trade_power = 5
				}
				save_event_target_as = dwarven_guild_province
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
					province_trade_power = 10
				}
				save_event_target_as = dwarven_guild_province
			}
		}
	}
	
	option = {	# Their competence should be rewarded
		name = dwarven_tolerance_events.12.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { prestige = 0 }
			}
			modifier = {
				factor = 0.5
				NOT = {
					estate_loyalty = {
						estate = estate_burghers
						loyalty = 40
					}
				}
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		add_prestige = -5
		small_increase_of_dwarven_tolerance_effect = yes
		reduce_estate_burghers_loyalty_effect = yes
		event_target:dwarven_guild_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				add_province_modifier = {
					name = dwarven_guilds_given_privileges
					duration = 3650
				}
			}
		}
	}
	
	option = {	# We sadly cannot agree to this
		name = dwarven_tolerance_events.12.b
		ai_chance = {
			factor = 50
		}
		event_target:dwarven_guild_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				add_province_modifier = {
					name = dwarven_guilds_upset
					duration = 1825
				}
			}
		}
	}
	
	option = {	# Outrageous! No dwarf deserve such privileges
		name = dwarven_tolerance_events.12.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		add_prestige = 5
		small_decrease_of_dwarven_tolerance_effect = yes
		event_target:dwarven_guild_province = {
			area = {
				limit = {
					NOT = { has_province_modifier = dwarven_guilds_upset }
					NOT = { has_province_modifier = dwarven_guilds_given_privileges }
					has_dwarven_minority_trigger = yes
				}
				add_province_modifier = {
					name = dwarven_guilds_upset
					duration = 3650
				}
			}
		}
	}
}

# Recruit Dwarven Minister
country_event = {
	id = dwarven_tolerance_events.4
	title = dwarven_tolerance_events.4.t
	desc = dwarven_tolerance_events.4.d
	picture = EXPLORERS_eventPicture
	
	is_triggered_only = yes

	# If you have a dwarven culture province, that's the one the advisor comes from
	immediate = {
		hidden_effect = {
			if = {
				limit = {
					any_owned_province = {
						culture_group = dwarven
					}
				}
				random_owned_province = {
					limit = { culture_group = dwarven }
					save_event_target_as = dwarven_advisor_culture_province
				}
				set_country_flag = dwarven_advisor_culture_set
			}
			if = {
				limit = {
					capital_scope = { superregion = rahen_superregion }
					NOT = { has_country_flag = dwarven_advisor_culture_set }
				}
				random = {
					chance = 50
					set_country_flag = culture_is_peridot
				}
			}
		}
	}

	# Recruit the dwarf
	option = {
		name = dwarven_tolerance_events.4.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		small_increase_of_dwarven_tolerance_effect = yes
		if = {
			limit = { has_country_flag = dwarven_advisor_culture_set }
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = event_target:dwarven_advisor_culture_province
							religion = event_target:dwarven_advisor_culture_province
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = event_target:dwarven_advisor_culture_province
							religion = event_target:dwarven_advisor_culture_province
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = event_target:dwarven_advisor_culture_province
							religion = event_target:dwarven_advisor_culture_province
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = event_target:dwarven_advisor_culture_province
							religion = event_target:dwarven_advisor_culture_province
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = event_target:dwarven_advisor_culture_province
							religion = event_target:dwarven_advisor_culture_province
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = event_target:dwarven_advisor_culture_province
							religion = event_target:dwarven_advisor_culture_province
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					OR = {
						region = lencenor_region
						region = west_dameshead_region
						region = dragon_coast_region
					}
				} 
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = ruby_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = ruby_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = ruby_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = ruby_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = ruby_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = ruby_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					region = bahar_region
				} 
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = copper_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = copper_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = copper_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = copper_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = copper_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = copper_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					OR = {
						region = bulwar_proper_region
						region = far_bulwar_region
						region = harpy_hills_region
					}
				} 
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = citrine_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = citrine_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = citrine_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = citrine_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = citrine_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = citrine_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					region = far_salahad_region
				}
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = gold_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = gold_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = gold_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = gold_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = gold_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = gold_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					superregion = south_haless_superregion
				}
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = nephrite_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = nephrite_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = nephrite_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = nephrite_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = nephrite_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = nephrite_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					superregion = rahen_superregion
				}
				has_country_flag = culture_is_peridot
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = peridot_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = peridot_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = peridot_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = peridot_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = peridot_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = peridot_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else_if = {
			limit = { 
				capital_scope = {
					superregion = rahen_superregion
				}
			}
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = amethyst_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = amethyst_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = amethyst_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = amethyst_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = amethyst_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = amethyst_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
		else = {
			if = {
				limit = { monthly_income = 50 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = silver_dwarf
							skill = 3
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = silver_dwarf
							skill = 3
							discount = yes
						}
					}
				}
			}
			else_if = {
				limit = { monthly_income = 25 }
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = silver_dwarf
							skill = 2
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = silver_dwarf
							skill = 2
							discount = yes
						}
					}
				}
			}
			else = {
				random_list = {
					1 = {
						define_advisor = {
							type = master_of_mint
							culture = silver_dwarf
							skill = 1
							discount = yes
						}
					}
					1 = {
						define_advisor = {
							type = fortification_expert
							culture = silver_dwarf
							skill = 1
							discount = yes
						}
					}
				}
			}
		}
	}

	# A true exemplar of their race
	option = {
		name = dwarven_tolerance_events.4.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		medium_increase_of_dwarven_tolerance_effect = yes
	}

	# We dun give a shit
	option = {
		name = dwarven_tolerance_events.4.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		small_decrease_of_dwarven_tolerance_effect = yes
	}

	after = {
		clr_country_flag = dwarven_advisor_culture_set
		clr_country_flag = culture_is_peridot
	}
}

# Clan rivalries come to a head
country_event = {
	id = dwarven_tolerance_events.5
	title = dwarven_tolerance_events.5.t
	desc = dwarven_tolerance_events.5.d
	picture = CONQUEST_eventPicture
	goto = dwarven_rivalry_province
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { 
					has_any_dwarven_pop_trigger = yes
					NOT = { has_province_modifier = dwarven_clans_fighting }
				}
				save_event_target_as = dwarven_rivalry_province
			}
			random_owned_province = {
				limit = { 
					has_dwarven_majority_trigger = yes
					NOT = { has_province_modifier = dwarven_clans_fighting }
				}
				save_event_target_as = dwarven_rivalry_province
			}
		}
	}

	# Attempt to settle this peacefully
	option = {
		name = dwarven_tolerance_events.5.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = charismatic_negotiator_personality
					ruler_has_personality = silver_tongue_personality
				}
			}
		}
		add_dip_power = -20
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_rivalry_province = {
			add_province_modifier = {
				name = dwarven_clans_fighting
				duration = 365
			}
		}
	}
	# It is not our place to interfere
	option = {
		name = dwarven_tolerance_events.5.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_increase_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = careful_personality
					ruler_has_personality = craven_personality
				}
			}
		}
		medium_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_rivalry_province = {
			add_province_modifier = {
				name = dwarven_clans_fighting
				duration = 1825
			}
		}
	}
	# Settle by force
	option = {
		name = dwarven_tolerance_events.5.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				wants_to_decrease_tolerance_dwarven = yes
			}
			modifier = {
				factor = 2
				OR = {
					ruler_has_personality = strict_personality
					ruler_has_personality = malevolent_personality
				}
			}
		}
		add_mil_power = -20
		medium_decrease_of_dwarven_tolerance_effect = yes
	}
}

# Dwarven banks seek payment
# country_event = {
# 	id = dwarven_tolerance_events.6
# 	title = dwarven_tolerance_events.6.t
# 	desc = dwarven_tolerance_events.6.d
# 	picture = MERCHANTS_TALKING_eventPicture
	
# 	is_triggered_only = yes

#	 trigger = {
# 		num_of_loans = 1
# 		NOT = { has_country_flag = dwarven_banks_demand_payment }
# 		any_owned_province = {
# 			has_any_dwarven_pop_trigger = yes
# 		}
#	 }

# 	mean_time_to_happen = {
# 		days = 1
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 2
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 3
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 4
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 5
# 		}
# 		modifier = {
# 			factor = 1.5
# 			num_of_loans = 10
# 		}
# 		modifier = {
# 			factor = 2
# 			NOT = { stability = 0 }
# 		}
# 	}

# 	# Pay them back with interest
# 	option = {
# 		name = dwarven_tolerance_events.6.a

# 	}
# 	# Extend the loan
# 	option = {
# 		name = dwarven_tolerance_events.6.b

# 	}
# 	# You're not getting any more money from me!
# 	option = {
# 		name = dwarven_tolerance_events.6.c
# 		large_decrease_of_dwarven_tolerance_effect = yes
# 	}
# }

# Dwarven craftsmen dominate market
country_event = {
	id = dwarven_tolerance_events.7
	title = dwarven_tolerance_events.7.t
	desc = dwarven_tolerance_events.7.d
	picture = ECONOMY_eventPicture
	
	is_triggered_only = yes

	mean_time_to_happen = {
		days = 1
		
	}

	# Commission a masterwork
	option = {
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0
				NOT = { years_of_income = 0.2 }
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		name = dwarven_tolerance_events.7.a
		add_prestige = 10
		add_years_of_income = -0.2
		large_increase_of_dwarven_tolerance_effect = yes
	}
	# They're good at their job
	option = {
		name = dwarven_tolerance_events.7.b
		add_prestige = -5
		small_increase_of_dwarven_tolerance_effect = yes
	}
	# They took our jerbs!
	option = {
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		name = dwarven_tolerance_events.7.c
		small_decrease_of_dwarven_tolerance_effect = yes
	}
}

# Long-term grudges come to fruition
country_event = {
	id = dwarven_tolerance_events.8
	title = dwarven_tolerance_events.8.t
	desc = dwarven_tolerance_events.8.d
	picture = ACCUSATION_eventPicture
	
	is_triggered_only = yes

	# Support the wronged descendant
	option = {
		name = dwarven_tolerance_events.8.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		add_dip_power = -30
		small_increase_of_dwarven_tolerance_effect = yes
		add_prestige = -5
	}
	# Mediate in the court of law
	option = {
		name = dwarven_tolerance_events.8.b
		add_adm_power = -30
	}
	# Support the attacked descendant
	option = {
		name = dwarven_tolerance_events.8.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		large_decrease_of_dwarven_tolerance_effect = yes
	}
}

# Dwarven cartel thugs
country_event = {
	id = dwarven_tolerance_events.9
	title = dwarven_tolerance_events.9.t
	desc = dwarven_tolerance_events.9.d
	picture = ANGRY_MOB_eventPicture
	
	is_triggered_only = yes

	# Support the cartels
	option = {
		name = dwarven_tolerance_events.9.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		small_increase_of_dwarven_tolerance_effect = yes
		
	}
	# Assign more members to the guard
	option = {
		name = dwarven_tolerance_events.9.b
		add_mil_power = -40

	}
	# Fine the cartels for not handling their own
	option = {
		name = dwarven_tolerance_events.9.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		add_years_of_income = 0.3
		medium_decrease_of_dwarven_tolerance_effect = yes
	}
}

# country_event = {
# 	id = dwarven_tolerance_events.10
# 	title = dwarven_tolerance_events.10.t
# 	desc = dwarven_tolerance_events.10.d
# 	picture = COURT_eventPicture
	
# 	is_triggered_only = yes
	
# 	trigger = {
# 		NOT = { culture_group = dwarven }
# 		any_owned_province = {
# 			NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 			NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 			has_dwarven_minority_trigger = yes
# 			OR = {
# 				has_terrain = mountain
# 				trade_goods = iron
# 				trade_goods = copper
# 				trade_goods = gold
# 				trade_goods = coal
# 			}
# 		}
# 	}
	
# 	mean_time_to_happen = {
# 		days = 1
# 	}
	
# 	immediate = {
# 		hidden_effect = {
# 			random_owned_province = {
# 				limit = {
# 					NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 					NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 					has_dwarven_minority_trigger = yes
# 					OR = {
# 						has_terrain = mountain
# 						trade_goods = iron
# 						trade_goods = copper
# 						trade_goods = gold
# 						trade_goods = coal
# 					}
# 				}
# 				save_event_target_as = dwarven_poor_mining_province
# 			}
# 			random_owned_province = {
# 				limit = {
# 					NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 					NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 					has_dwarven_minority_trigger = yes
# 					has_terrain = mountain
# 					OR = {
# 						trade_goods = iron
# 						trade_goods = copper
# 						trade_goods = gold
# 						trade_goods = coal
# 					}
# 				}
# 				save_event_target_as = dwarven_poor_mining_province
# 			}
# 			random_owned_province = {
# 				limit = {
# 					NOT = { has_province_modifier = dwarven_forced_back_to_poor_mines_prov }
# 					NOT = { has_province_modifier = dwarven_poor_mines_prov }
# 					has_dwarven_minority_trigger = yes
# 					has_terrain = mountain
# 					base_production = 3
# 					OR = {
# 						trade_goods = iron
# 						trade_goods = copper
# 						trade_goods = gold
# 						trade_goods = coal
# 					}
# 				}
# 				save_event_target_as = dwarven_poor_mining_province
# 			}
# 		}
# 	}
	
# 	option = {	# Send them back to the mines
# 		name = dwarven_tolerance_events.10.a
# 		ai_chance = {
# 			factor = 50
# 			modifier = {
# 				factor = 0.5
# 				wants_to_maintain_tolerance_dwarven = yes
# 			}
# 			modifier = {
# 				factor = 0.1
# 				wants_to_increase_tolerance_dwarven = yes
# 			}
# 		}
# 		small_decrease_of_dwarven_tolerance_effect = yes
# 		event_target:dwarven_poor_mining_province = {
# 			add_province_modifier = {
# 				name = dwarven_forced_back_to_poor_mines_prov
# 				duration = 3650
# 			}
# 		}
# 	}
	
# 	option = {	# Divert resources to help their efforts
# 		name = dwarven_tolerance_events.10.b
# 		ai_chance = {
# 			factor = 50
# 		}
# 		add_adm_power = -25
# 		if = {
# 			limit = { NOT = { monthly_income = 25 } }
# 			add_years_of_income = -0.33
# 		}
# 		if = {
# 			limit = { monthly_income = 25 }
# 			add_treasury = -100
# 		}
# 		event_target:dwarven_poor_mining_province = {
# 			add_province_modifier = {
# 				name = dwarven_poor_mines_prov
# 				duration = 1825
# 			}
# 		}
# 	}
	
# 	option = {	# Let's give them new land
# 		name = dwarven_tolerance_events.10.c
# 		ai_chance = {
# 			factor = 50
# 			modifier = {
# 				factor = 0.5
# 				wants_to_maintain_tolerance_dwarven = yes
# 			}
# 			modifier = {
# 				factor = 0.1
# 				wants_to_decrease_tolerance_dwarven = yes
# 			}
# 		}
# 		add_adm_power = -50
# 		small_increase_of_dwarven_tolerance_effect = yes
# 		event_target:dwarven_poor_mining_province = {
# 			add_local_autonomy = 10
# 		}
# 	}
# }

# Dwarven Stronghold (Hostile)
country_event = {
	id = dwarven_tolerance_events.11
	title = dwarven_tolerance_events.11.t
	desc = dwarven_tolerance_events.11.d
	picture = FORT_eventPicture
	goto = dwarven_stronghold_province
	
	is_triggered_only = yes
	
	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
				}
				save_event_target_as = dwarven_stronghold_province
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
					is_capital = no
					OR = {
						has_terrain = mountain
						fort_level = 1
					}
				}
				save_event_target_as = dwarven_stronghold_province
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
					is_capital = no
					has_terrain = mountain
					fort_level = 1
				}
				save_event_target_as = dwarven_stronghold_province
			}
			random_owned_province = {
				limit = {
					NOT = { has_province_modifier = dwarven_independent_stronghold_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_attacked_prov }
					NOT = { has_province_modifier = dwarven_independent_stronghold_deal_prov }
					has_dwarven_minority_trigger = yes
					is_capital = no
					any_neighbor_province = { NOT = { owned_by = ROOT } }
					has_terrain = mountain
					fort_level = 1
				}
				save_event_target_as = dwarven_stronghold_province
			}
		}
	}
	
	option = {	# They can have the land for now
		name = dwarven_tolerance_events.11.a
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { prestige = 0 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		add_prestige = -10
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_stronghold_province = {
			add_local_autonomy = 5
			add_province_modifier = {
				name = dwarven_independent_stronghold_prov
				duration = 3650
			}
		}
	}
	
	option = {	# We could simply buy back the land
		name = dwarven_tolerance_events.11.b
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.2 }
			}
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.4 }
			}
		}
		add_years_of_income = -0.2
	}
	
	option = {	# Send in the military, that land is rightfully ours
		name = dwarven_tolerance_events.11.c
		ai_chance = {
			factor = 50
			modifier = {
				factor = 0.8
				NOT = { manpower_percentage = 0.33 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_increase_tolerance_dwarven = yes
			}
		}
		add_mil_power = -50
		if = {
			limit = {
				max_manpower = 20
			}
			add_manpower = -1
		}
		if = {
			limit = {
				NOT = { max_manpower = 20 }
			}
			add_yearly_manpower = -0.5
		}
		small_decrease_of_dwarven_tolerance_effect = yes
		event_target:dwarven_stronghold_province = {
			add_province_modifier = {
				name = dwarven_independent_stronghold_attacked_prov
				duration = 1825
			}
		}
	}
	
	option = {	# This is an opportunity in disguise
		name = dwarven_tolerance_events.11.e
		trigger = { ruler_has_personality = entrepreneur_personality }
				highlight = yes
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.1 }
			}
			modifier = {
				factor = 0.8
				NOT = { years_of_income = 0.2 }
			}
			modifier = {
				factor = 0.5
				wants_to_maintain_tolerance_dwarven = yes
			}
			modifier = {
				factor = 0.1
				wants_to_decrease_tolerance_dwarven = yes
			}
		}
		add_years_of_income = -0.1
		small_increase_of_dwarven_tolerance_effect = yes
		event_target:dwarven_stronghold_province = {
			add_local_autonomy = 3
			add_province_modifier = {
				name = dwarven_independent_stronghold_deal_prov
				duration = 3650
			}
		}
	}
}
