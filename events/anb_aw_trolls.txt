namespace = aw_trolls

#The Adventurers Wanted uses a strict ID system to make the system easier to author content for
#The IDs below 100 are core utility systems that are usually straight copies or modifications of how the AW system works, such as monsters being able to migrate and be defeated by adventurers.
#The IDs above 100 are more unique situations for the specific encounter, but they should correlate with the numbers from above: if ID 10s deal with migration, then ID 110s should be the unique events to do with migration - for example bribing a Thieves Guild to GTFO your country
#Crazy and more uniques ones that dont conform to the utilities should be ID 200

#USE THE anb_aw_trolls TO SEE A SIMPLE COPY-PASTABLE FORMAT IN ADDITION TO STUFF LIKE MIGRATION STYLES ETC
#Search for CHANGEABLE for the criteria you should change in that file and this one

#################################################################
# Welcome to the master file for the Adventurers Wanted System. In the comments below you'll see copy-pastable events for you to choose, different migration styles as well as prebuilt events to handle stuff like spawning rebellions
#################################################################

#0 - spawn in province
province_event = {
	id = aw_trolls.0
	title = aw_trolls.0.t
	desc = aw_trolls.0.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	#hidden = yes
	
	#yup thats happening
	option = {
		name = aw_basic.0.a
		ai_chance = { 
			factor = 1 
		}
		add_permanent_province_modifier  = {
			name = aw_trolls_1
			duration = -1  
		}

		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip
	}
}


#1 - event manager, called by on_actions. This happens ONCE per pulse. If you have 7 of these, it still only fires the manager once
country_event = {
	id = aw_trolls.1
	title = aw_trolls.1.t
	desc = aw_trolls.1.d
	picture = COMET_SIGHTED_eventPicture
	
	hidden = yes
	is_triggered_only = yes
	
	trigger = {
		any_owned_province = {
			OR = { 
				has_province_modifier = aw_trolls_1
				has_province_modifier = aw_trolls_2
				has_province_modifier = aw_trolls_3
			}
		}
	}
	mean_time_to_happen = {
		days = 1
		modifier = {
			factor = 2
			num_of_owned_provinces_with = {
				value = 3
				OR = { 
					has_province_modifier = aw_trolls_1
					has_province_modifier = aw_trolls_2
					has_province_modifier = aw_trolls_3
				}
			}
		}
	}

	immediate = {
		random_owned_province = {
			limit = {
				OR = { 
					has_province_modifier = aw_trolls_1
					has_province_modifier = aw_trolls_2
					has_province_modifier = aw_trolls_3
				}
			}
			save_event_target_as = aw_trolls_target
		}
	}
	
	
	option = {
		event_target:aw_trolls_target = {
			random_list = {
				5 = {	#special case for trolls. They will migrate like crazy from devastated places if not level 3
					modifier = {
						factor = 10
						devastation = 75
						NOT = { has_province_modifier = aw_trolls_3 }
					}
					province_event = { id = aw_trolls.10 }	#Base migration
				}
				10 = {	#used to be 7 but this is higher challenge so moved to 5
					#Base modifiers

					#more likely if generous quest rewards/adverturer nation
					modifier = {
						factor = 2
						OR = {
							owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
							owner = { has_adventurer_reform = yes }
							owner = { has_estate_privilege = estate_ahati_support_south }
							owner = { has_estate_privilege = estate_ahati_support_brotherhoods }
						}
					}

					#more likely if loyal
					modifier = {
						factor = 2
						owner = {
							estate_loyalty = {
								estate = estate_adventurers
								loyalty = 60
							}
						}
					}

					#more likely if high influence
					modifier = {
						factor = 2
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 60
							}
						}
					}
					#small influence boost at 30
					modifier = {
						factor = 1.5
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 30
							}
						}
					}
					#adventurer type sponsorships
					modifier = {
						factor = 2
						owner = {
							has_estate_privilege = estate_adventurers_sponsor_beast_slayers
						}
					}
					province_event = { id = aw_trolls.21 }	#Adventurer Removal
				}
				10 = {
					province_event = { id = aw_trolls.22 }	#Natural tier down
				}
				15 = {  
					#Base modifiers

					#more likely if generous quest rewards/adverturer nation
					modifier = {
						factor = 2
						OR = {
							owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
							owner = { has_adventurer_reform = yes }
							owner = { has_estate_privilege = estate_ahati_support_south }
							owner = { has_estate_privilege = estate_ahati_support_brotherhoods }
						}
					}

					#more likely if loyal
					modifier = {
						factor = 2
						owner = {
							estate_loyalty = {
								estate = estate_adventurers
								loyalty = 60
							}
						}
					}

					#more likely if high influence
					modifier = {
						factor = 2
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 60
							}
						}
					}
					#small influence boost at 30
					modifier = {
						factor = 1.5
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 30
							}
						}
					}
					#adventurer type sponsorships
					modifier = {
						factor = 2
						owner = {
							has_estate_privilege = estate_adventurers_sponsor_beast_slayers
						}
					}
					province_event = { id = aw_trolls.23 }	#Adventurer tier down
				}
				50 = {
					#Base modifiers
					modifier = {
						#only want this to ever be part of the equation if you are monstrous
						factor = 0
						NOT = { owner = { has_country_modifier = monstrous_nation } }
					}
					province_event = { id = aw_trolls.25 }	#Monstrous nation tier down
				}
				10 = {
					province_event = { id = aw_trolls.30 }	#Natural tier up
				}
				#40 - convert to pop if tolerating
				2 = {
					#Base modifiers
					modifier = {
						factor = 3
						owner = {
							medium_tolerance_troll_race_trigger = yes
						}
					}
					modifier = {
						factor = 4
						owner = {
							high_tolerance_troll_race_trigger = yes
						}
					}
					province_event = { id = aw_trolls.40 }
				}

				#140 - bridge trolls
				10 = {
					province_event = { id = aw_trolls.140 }  
				}
				#200 - Adventurers cause Troll Rampage
				10 = {
					province_event = { id = aw_trolls.200 }  
				}
				#200 - Adventurers cause Troll Rampage
				10 = {
					province_event = { id = aw_trolls.200 }  
				}
				#201 - localized famine due to troll eating everything
				5 = {
					province_event = { id = aw_trolls.201 }  
				}
				#202 - Troll eats village
				7 = {
					province_event = { id = aw_trolls.202 }  
				}
				#204 - Mages want to harvest regenerative tissue reagent
				7 = {
					province_event = { id = aw_trolls.204 }  
				}
				#205 - Troll eats local militia
				10 = {
					province_event = { id = aw_trolls.205 }  
				}
			}
		}
	}
	
}


#2 - notification of advanturers wanted spawning

############## 10s - Migration and Propagation ###################

#10 - Base migration. For trolls will only migrate if the prov is devastated, but higher the chance to stay if they are den or country
province_event = {
	id = aw_trolls.10
	title = aw_trolls.10.t
	desc = aw_trolls.10.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_1
			has_province_modifier = aw_trolls_2
		}

		devastation = 75


		#MAKE SURE TO ADD A any_neighbor_province or relevant check - aka make sure that the immediate = { } effects can even occur before doing the event!
		any_neighbor_province = {
			#Base Conditions
			is_city = yes

			NOT = { has_province_modifier = aw_trolls_1 }
			NOT = { has_province_modifier = aw_trolls_2 }
			NOT = { has_province_modifier = aw_trolls_3 }


			#Specific Conditions
			NOT = { has_any_troll_pop_trigger = yes }
		}
	}
	
	immediate = {
		hidden_effect = {

			######################################################################
			#Here's a list of all migration types for you to copy and paste
			#Note: you may need to add something in the trigger = { } above, for example for random_neighbour_province, as you might want to check if this valid province even has a neighbour you can migrate to!
			######################################################################

			#CHANGEABLE - MIGRATION TYPE - Any adjacent province
			random_neighbor_province = {
				limit = {
					#Base Conditions
					is_city = yes

					NOT = { has_province_modifier = aw_trolls_1 }
					NOT = { has_province_modifier = aw_trolls_2 }
					NOT = { has_province_modifier = aw_trolls_3 }


					#Specific Conditions
					NOT = { has_any_troll_pop_trigger = yes }
					
				}
				save_event_target_as = aw_trolls_migration_target
			}
			owner = { save_event_target_as = aw_trolls_migration_origin_owner }
		}
	}

	#If migration is within country
	option = {  
		name = aw_trolls.10.a
		ai_chance = { factor = 100 }
		goto = aw_trolls_migration_target
		trigger = {
			event_target:aw_trolls_migration_target = {
				owned_by = event_target:aw_trolls_migration_origin_owner
			}
		}

		#It's migration, so remove modifier from previous province
		tooltip = { #this is fake. the real one happens below
			remove_province_modifier = aw_trolls_1
			remove_province_modifier = aw_trolls_2
			remove_province_modifier = aw_trolls_3
		}

		event_target:aw_trolls_migration_target = {
			# if = {
				# limit = {
					# owned_by = ROOT #you need this as this is only for provinces you own. option 10.b is for others
				# }
				#CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target
				if = {
					limit = {
						ROOT = { has_province_modifier = aw_trolls_1 }
					}
					add_permanent_province_modifier = { 
						name = aw_trolls_1
						duration = -1
					}
				}
				else_if = {
					limit = {
						ROOT = { has_province_modifier = aw_trolls_2 }
					}
					add_permanent_province_modifier = { 
						name = aw_trolls_2
						duration = -1
					}
				}
				else_if = {
					limit = {
						ROOT = { has_province_modifier = aw_trolls_3 }
					}
					add_permanent_province_modifier = { 
						name = aw_trolls_3
						duration = -1
					}
				}
				hidden_effect = {
					ROOT = { #real removal. the other real one is in the called event in the else
						remove_province_modifier = aw_trolls_1
						remove_province_modifier = aw_trolls_2
						remove_province_modifier = aw_trolls_3
					}
				}
			# }
		}
	}

	#If migration is sent to OTHER country
	option = {  
		name = aw_trolls.10.b
		ai_chance = { factor = 100 }
		goto = aw_trolls_migration_target
		trigger = {
			event_target:aw_trolls_migration_target = {
				NOT = { owned_by = event_target:aw_trolls_migration_origin_owner }	#if the target isnt in your country, then send an event to them that notifies + adds it on their end
			}
		}

		#It's migration, so remove modifier from previous province
		tooltip = { #this is fake. the real one happens via the event
			remove_province_modifier = aw_trolls_1
			remove_province_modifier = aw_trolls_2
			remove_province_modifier = aw_trolls_3
		}

		custom_tooltip = aw_trolls_migrate_to_other_country_tt
		hidden_effect = {
			event_target:aw_trolls_migration_target = {
				province_event = {
					id = aw_trolls.11
				}
			}
		}
	}
}

#11 - migration target notification if it goes to other country
province_event = {
	id = aw_trolls.11
	title = aw_trolls.11.t
	desc = aw_trolls.11.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	option = {
		# deal with it ourselves
		name = aw_basic.0.a
		ai_chance = { 
			factor = 20 
		}

		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip

		owner = {
			add_opinion = {
				who = event_target:aw_trolls_migration_origin_owner
				modifier = aw_crossed_border
			}
		}

		#CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target ---(NOTE: THIS USUALLY SHOULD BE THE SAME AS id.10 above)----
		if = {
			limit = {
				FROM = { has_province_modifier = aw_trolls_1 }
			}
			add_permanent_province_modifier = { 
				name = aw_trolls_1
				duration = -1
			}
		}
		else_if = {
			limit = {
				FROM = { has_province_modifier = aw_trolls_2 }
			}
			add_permanent_province_modifier = { 
				name = aw_trolls_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				FROM = { has_province_modifier = aw_trolls_3 }
			}
			add_permanent_province_modifier = { 
				name = aw_trolls_3
				duration = -1
			}
		}

	}

	after = {
		FROM = {	#cleanup event to remove the modifiers from the original province
			remove_province_modifier = aw_trolls_1
			remove_province_modifier = aw_trolls_2
			remove_province_modifier = aw_trolls_3
		}
	}
}

#13 - Base propagation - nope


#14 - propagation target notification


#15 - Migrate to non monstrous if monstrous nation is owner (if its applicable to monsters, like wyverns etc, then this is fine to remove, else keep) - nope. its fine to use base even for monster


############## 20s - Removal/Tier Down ###################

#20 - natural removal - nah

#21 - adventurer removal
province_event = {
	id = aw_trolls.21
	title = aw_trolls.21.t
	desc = aw_trolls.21.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { OR = { has_estate = estate_adventurers has_adventurer_reform = yes  } }
		OR = {
			has_province_modifier = aw_trolls_1
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}
	}
	
	option = {
		# oh, thank goodness
		name = aw_trolls.21.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_trolls_1
		remove_province_modifier = aw_trolls_2
		remove_province_modifier = aw_trolls_3

		owner = {
			add_estate_influence_modifier = {
				estate = estate_adventurers
				desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
				duration = 3650
				influence = 5
			}
		}

		owner = { add_prestige_excess_to_splendour_effect = { VAL=5} }

	}
}

#22 - natural tier down
province_event = {
	id = aw_trolls.22
	title = aw_trolls.22.t
	desc = aw_trolls.22.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = { 
			has_province_modifier = aw_trolls_1 
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}
	}
	option = {
		name = aw_trolls.22.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_trolls_3 
			}
			remove_province_modifier = aw_trolls_3
			add_permanent_province_modifier  = {
				name = aw_trolls_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_2
			}
			remove_province_modifier = aw_trolls_2
			add_permanent_province_modifier  = {
				name = aw_trolls_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_1
			}
			remove_province_modifier = aw_trolls_1
		}
	}
}

#23 - adventurer tier down
province_event = {
	id = aw_trolls.23
	title = aw_trolls.23.t
	desc = aw_trolls.23.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { OR = { has_estate = estate_adventurers has_adventurer_reform = yes  } }
		OR = { 
			has_province_modifier = aw_trolls_1 
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}
	}
	option = {
		name = aw_trolls.23.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_trolls_3 
			}
			remove_province_modifier = aw_trolls_3
			add_permanent_province_modifier  = {
				name = aw_trolls_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_2
			}
			remove_province_modifier = aw_trolls_2
			add_permanent_province_modifier  = {
				name = aw_trolls_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_1
			}
			remove_province_modifier = aw_trolls_1
			owner = { add_prestige_excess_to_splendour_effect = { VAL=5} }
		}

		owner = {
			add_estate_influence_modifier = {
				estate = estate_adventurers
				desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
				duration = 3650
				influence = 5
			}
		}
	}
}

#24 - monster removal - nah

#25 - monster natural tier down. keep if you want, or just rely on removal
province_event = {
	id = aw_trolls.25
	title = aw_trolls.25.t
	desc = aw_trolls.25.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { has_country_modifier = monstrous_nation }

		OR = { 
			has_province_modifier = aw_trolls_1 
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}
	}
	option = {
		name = aw_trolls.25.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_trolls_3 
			}
			remove_province_modifier = aw_trolls_3
			add_permanent_province_modifier  = {
				name = aw_trolls_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_2
			}
			remove_province_modifier = aw_trolls_2
			add_permanent_province_modifier  = {
				name = aw_trolls_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_1
			}
			remove_province_modifier = aw_trolls_1
			owner = { add_prestige_excess_to_splendour_effect = { VAL=5} }
		}
	}
}

############## 30s - Tier Up ###################

#30 - natural tier up
province_event = {
	id = aw_trolls.30
	title = aw_trolls.30.t
	desc = aw_trolls.30.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = { 
			has_province_modifier = aw_trolls_1 
			has_province_modifier = aw_trolls_2
		}
	}
	
	option = {
		name = aw_trolls.30.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_trolls_1
			}
			remove_province_modifier = aw_trolls_1
			add_permanent_province_modifier  = {
				name = aw_trolls_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_trolls_2
			}
			remove_province_modifier = aw_trolls_2
			add_permanent_province_modifier  = {
				name = aw_trolls_3
				duration = -1  
			}
		}
		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip	#should be added for each increase of level
	}
}

############## 40s - Other Utility ###################

#40 - convert to pop if tolerating
province_event = {
	id = aw_trolls.40
	title = aw_trolls.40.t
	desc = aw_trolls.40.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_1
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}
		owner = { medium_tolerance_troll_race_trigger = yes }
	}
	
	option = {
		name = aw_trolls.40.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_trolls_1
		remove_province_modifier = aw_trolls_2
		remove_province_modifier = aw_trolls_3

		add_troll_minority_size_effect = yes
	}
	
	option = {
		name = aw_trolls.40.b
		ai_chance = { factor = 25 }

		owner = { large_decrease_of_troll_tolerance_effect = yes }
	}
}



############## 110s - Special Migration & Propagation ###################



############## 120s - Special Removal/Tier Down ###################



############## 130s - Special Tier Up ###################



############## 140s - Other Special Utility ###################

#140 - bridge trolls
province_event = {
	id = aw_trolls.140
	title = aw_trolls.140.t
	desc = aw_trolls.140.d
	picture = CITY_VIEW_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_1
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}

		NOT = { has_province_modifier = aw_trolls_bridge_troll_tolls }

	}
	option = {
		name = aw_trolls.140.a
		ai_chance = { factor = 100 }

		add_province_modifier = {
			name = aw_trolls_bridge_troll_tolls
			duration = 3650
		}

	}

	#Ask for friendship
	option = {
		name = aw_trolls.140.b
		ai_chance = { factor = 100 }

		owner = { add_dip_power = -50 }

		add_province_modifier = {
			name = aw_trolls_bridge_troll_tolls
			duration = 3650
		}

		owner = { medium_increase_of_troll_tolerance_effect = yes }	#this will allow the .40

		custom_tooltip = increasing_tolerance_will_convert_aw_to_pop_tooltip
		
	}
}


############## 200s - Special Flavour ###################

#200 - Adventurers cause Troll Rampage
province_event = {
	id = aw_trolls.200
	title = aw_trolls.200.t
	desc = aw_trolls.200.d
	picture = SUFFERING_CHINESE_VILLAGE_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}

		NOT = { devastation = 50 }

	}
	option = {
		name = aw_trolls.200.a
		ai_chance = { factor = 100 }

		add_devastation = 25

	}
}

#201 - localized famine due to troll eating everything
province_event = {
	id = aw_trolls.201
	title = aw_trolls.201.t
	desc = aw_trolls.201.d
	picture = FAMINE_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		has_province_modifier = aw_trolls_3

		devastation = 75

		NOT = { has_province_modifier = aw_trolls_troll_caused_famine }

	}
	option = {
		name = aw_trolls.201.a
		ai_chance = { factor = 100 }

		add_province_modifier = {
			name = aw_trolls_troll_caused_famine
			duration = 7300
		}

	}

	#try to stop it
	option = {
		name = aw_trolls.201.b
		ai_chance = { factor = 100 }

		owner = {
			add_adm_power = -25
			add_mil_power = -25
		}

		random = {
			chance = 50
			add_province_modifier = {
				name = aw_trolls_troll_caused_famine
				duration = 3650
			}
		}

	}
}

#202 - Troll eats village
province_event = {
	id = aw_trolls.202
	title = aw_trolls.202.t
	desc = aw_trolls.202.d
	picture = SUFFERING_CHINESE_VILLAGE_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}

		devastation = 75

	}
	option = {
		name = aw_trolls.202.a
		ai_chance = { factor = 100 }

		random_list = {
			33 = {
				add_base_tax = -1
			}
			33 = {
				add_base_manpower = -1
			}
		}

	}
}

#203 - Scrags hurting navy

#204 - Mages want to harvest regenerative tissue reagent
province_event = {
	id = aw_trolls.204
	title = aw_trolls.204.t
	desc = aw_trolls.204.d
	picture = ADVISOR_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_1
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}

		owner = { has_estate = estate_mages }

		owner = {
			NOT = {
				has_estate_loyalty_modifier = {
					estate = estate_mages
					modifier = EST_VAL_AW_SUPPORTED_REAGENT_GATHERING
				}
			}
			NOT = {
				has_estate_influence_modifier = {
					estate = estate_mages
					modifier = EST_VAL_AW_SUPPORTED_REAGENT_GATHERING
				}
			}
		}
	}
	option = {
		name = aw_trolls.204.a
		ai_chance = { factor = 100 }

		owner = { add_mil_power = -30 }

		owner = {
			add_estate_loyalty_modifier = {
				estate = estate_mages
				desc = EST_VAL_AW_SUPPORTED_REAGENT_GATHERING
				loyalty = 10
				duration = 3650
			}
		}
		owner = {
			add_estate_influence_modifier = {
				estate = estate_mages
				desc = EST_VAL_AW_SUPPORTED_REAGENT_GATHERING
				influence = 20
				duration = 3650
			}
		}
	}

	option = {
		name = aw_trolls.204.b
		ai_chance = { factor = 100 }

		owner = { add_prestige = 3 }

	}
}

#205 - Troll eats local militia
province_event = {
	id = aw_trolls.205
	title = aw_trolls.205.t
	desc = aw_trolls.205.d
	picture = FORT_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_trolls_1
			has_province_modifier = aw_trolls_2
			has_province_modifier = aw_trolls_3
		}

		has_fort_building_trigger = yes

		NOT = { has_province_modifier = aw_trolls_ate_local_militia }

	}
	option = {
		name = aw_trolls.205.a
		ai_chance = { factor = 100 }

		add_province_modifier = {
			name = aw_trolls_ate_local_militia
			duration = 7300
		}

		add_devastation = 33

	}
}