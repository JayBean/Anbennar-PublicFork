# the scripted trigger 'is_human_culture_group = yes' does NOT seem work when used in any trigger IN AN EFFECT BLOCK, it still works IN THE TRIGGER BLOCK, don't change
namespace = flavor_castanor

# 0 - Pulse for recurring events and also does maintenance/cleanup
country_event = {
	id = flavor_castanor.0
	title = flavor_castanor.0.t
	desc = flavor_castanor.0.desc
	picture = MILITARY_CAMP_eventPicture
	
	hidden = yes

	trigger = { tag = B32 }

	mean_time_to_happen = {
		# Might need to be increased/decreased depending
		months = 18
	}

	immediate = {
		# clear Lianna Auern flag if its been enough years that she's prolly dead
		if = {
			limit = {
				had_country_flag = {
					flag = lianne_auern_available
					days = 18250
				}
			}
			clr_country_flag = lianne_auern_available
		}
		# clear block on magebound event if its been 40 years since getting a warwizard from it
		if = {
			limit = { 
				had_country_flag = {
					flag = magebound_war_wizard_get
					days = 14600
				}
			}
			clr_country_flag = magebound_war_wizard_get
		}
		# clear block on thundersworn event if its been 5 years since they've 'raided'
		if = {
			limit = { 
				had_country_flag = {
					flag = thundersworn_has_raided
					days = 1825
				}
			}
			clr_country_flag = thundersworn_has_raided
		}
		# Trigger the culture conversion events
		# Not hidden version
		country_event = {
			id = flavor_castanor.140
			days = 365 random = 364
		}
		# Hidden version
		country_event = {
			id = flavor_castanor.141
			days = 365 random = 364
		}
		every_subject_country = {
			limit = { is_subject_of_type = castanor_dominion }
			# Not hidden version
			country_event = {
				id = flavor_castanor.140
				days = 365 random = 364
			}
			# Hidden version
			country_event = {
				id = flavor_castanor.141
				days = 365 random = 364
			}
		}
		if = {
			limit = { NOT = { has_disaster = castanor_succession_war } }
			remove_country_modifier = castanor_succession_war_favored
			remove_country_modifier = castanor_succession_war_even
			remove_country_modifier = castanor_succession_war_most_favored
		}
		every_subject_country = {
			limit =  { tag = Z07 }
			if = {
				limit = { NOT = { has_idea = Z07_awakening_the_folly } }
				swap_free_idea_group = yes
			}
		}
	}

	option = {
		name = flavor_castanor.0.a
		# Event triggers
		ai_chance = {
			factor = 100
		}
		random_list = {
			# Legion raised for too long
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						OR = {
							template = merc_castanorian_legion_1
							template = merc_castanorian_legion_2
							template = merc_castanorian_legion_3
							template = merc_castanorian_legion_4
							template = merc_castanorian_legion_5
							template = merc_castanorian_legion_6
							template = merc_castanorian_legion_7
							template = merc_castanorian_legion_8
						}
						hired_for_months = 60
					}
					NOT = { has_country_modifier = castanor_tired_legions }
				}
				country_event = { id = flavor_castanor.19 }
			}
			# People want to join legion
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						OR = {
							template = merc_castanorian_legion_1
							template = merc_castanorian_legion_2
							template = merc_castanorian_legion_3
							template = merc_castanorian_legion_4
							template = merc_castanorian_legion_5
							template = merc_castanorian_legion_6
							template = merc_castanorian_legion_7
							template = merc_castanorian_legion_8
						}
					}
					NOT = { has_country_modifier = castanor_influx_of_new_legionnaires }
					NOT = { has_country_modifier = castanor_influx_of_recruits }
				}
				country_event = { id = flavor_castanor.20 }
			}
			# Legions inspiring regular auxilaries
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						OR = {
							template = merc_castanorian_legion_1
							template = merc_castanorian_legion_2
							template = merc_castanorian_legion_3
							template = merc_castanorian_legion_4
							template = merc_castanorian_legion_5
							template = merc_castanorian_legion_6
							template = merc_castanorian_legion_7
							template = merc_castanorian_legion_8
						}
					}
					NOT = { has_country_modifier = castanor_inspirational_legions }
				}
				country_event = { id = flavor_castanor.21 }
			}
			# Dragonflame event (the model legion)
			1 = {
				trigger = {
					any_hired_mercenary_company = { template = merc_castanorian_legion_1 }
					
				}
				country_event = { id = flavor_castanor.22 }
			}
			# Shield event (regional defenses)
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_3
						NOT = {
							location = {
								has_province_flag = protected_by_shield_legion
							}
						}
					}
				}
				modifier = {
					factor = 5
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_3
						location = {
							region_for_scope_province = {
								type = all
								country_or_non_sovereign_subject_holds = ROOT
							}
						}
					}
				}
				country_event = { id = flavor_castanor.23 }
			}
			# Sword event (kill a bunch of dudes in battle)
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_2
						location = { unit_in_battle = yes }
					}
				}
				modifier = {
					factor = 10
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_2
						location = { unit_in_battle = yes }
					}
				}
				country_event = { id = flavor_castanor.24 }
			}
			# Giantsbane event (winter warfare)
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_4
						location = {
							OR = {
								has_winter = mild_winter
								has_winter = normal_winter
								has_winter = severe_winter
							}
						}
					}
					NOT = { has_country_modifier = castanor_forged_in_winter }
				}
				country_event = { id = flavor_castanor.25 }
			}
			# Magebound event (get a warwizard)
			1 = {
				trigger = {
					any_hired_mercenary_company = { template = merc_castanorian_legion_7 }
					NOT = { has_country_flag = magebound_war_wizard_get }
				}
				country_event = { id = flavor_castanor.26 }
			}
			# Thundersworn event (Sneak behind enemy lines and lift FOW)
			1 = {
				trigger = {
					NOT = { has_country_flag = thundersworn_has_raided }
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_6
						location = {
							owner = {
								war_with = ROOT
							}
							NOT = { has_province_modifier = castanor_thundersworn_behind_enemy_lines_mod }
						}
					}
				}
				modifier = {
					factor = 5
					NOT = { has_country_flag = thundersworn_has_raided }
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_6
						location = {
							owner = {
								war_with = ROOT
							}
							NOT = { has_province_modifier = castanor_thundersworn_behind_enemy_lines_mod }
						}
					}
				}
				country_event = { id = flavor_castanor.27 }
			}
			# Bridgeburners event (siege progress)
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_5
						location = {
							unit_in_siege = yes
							NOT = { has_province_modifier = castanor_bridgeburners_siege_mod }
						}
					}
				}
				modifier = {
					factor = 10
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_5
						location = {
							unit_in_siege = yes
							NOT = { has_province_modifier = castanor_bridgeburners_siege_mod }
						}
					}
				}
				country_event = { id = flavor_castanor.28 }
			}
			# Hordebreakers (Kill enemy general)
			1 = {
				trigger = {
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_8
						location = {
							unit_in_battle = yes
							unit_has_leader = yes
						}
					}
				}
				modifier = {
					factor = 10
					any_hired_mercenary_company = {
						template = merc_castanorian_legion_8
						location = {
							unit_in_battle = yes
							unit_has_leader = yes
						}
					}
				}
				country_event = { id = flavor_castanor.29 }
			}
			# Deepwoods flare-up rebellion
			1 = {
				trigger = {
					has_country_flag = castanor_third_great_cleansing_concluded
				}
				# Gets less common the longer its been since the third great cleansing
				modifier = {
					factor = 0.8
					had_country_flag = {
						flag = castanor_third_great_cleansing_concluded
						days = 7300
					}
				}
				modifier = {
					factor = 0.8
					had_country_flag = {
						flag = castanor_third_great_cleansing_concluded
						days = 14600 # 40 years
					}
				}
				modifier = {
					factor = 0.5
					had_country_flag = {
						flag = castanor_third_great_cleansing_concluded
						days = 21900 # 60 years
					}
				}
				country_event = { id = flavor_castanor.37 }
			}
			# Deepwoods repopulation
			1 = {
				trigger = {
					has_country_flag = castanor_third_great_cleansing_concluded
				}
				# Gets more common the longer its been since the third great cleansing
				modifier = {
					factor = 1.2
					had_country_flag = {
						flag = castanor_third_great_cleansing_concluded
						days = 7300
					}
				}
				modifier = {
					factor = 1.2
					had_country_flag = {
						flag = castanor_third_great_cleansing_concluded
						days = 14600 # 40 years
					}
				}
				modifier = {
					factor = 1.1
					had_country_flag = {
						flag = castanor_third_great_cleansing_concluded
						days = 21900 # 60 years
					}
				}
				country_event = { id = flavor_castanor.39 }
			}
			# Recurring minority moves into Castonath
			1 = {
				trigger = { has_country_flag = castanor_modernizing_castonath_completed }
				country_event = { id = flavor_castanor.89 }
			}
			# Recurring inspiring popoulace
			1 = {
				trigger = { has_country_flag = patron_castellos_finished }
				country_event = { id = flavor_castanor.103 }
			}
			# Recurring North Citadel Aqueduct event
			1 = {
				trigger = { 840 = { has_province_modifier = castanor_north_citadel_aqueduct } }
				country_event = { id = flavor_castanor.47 }
			}
			# Recurring GOOD court faction event
			1 = {
				trigger = { 834 = { has_province_modifier = castanor_south_citadel_restored } }
				country_event = { id = flavor_castanor.45 }
			}
			# Recurring BAD court faction event
			1 = {
				trigger = { 834 = { has_province_modifier = castanor_south_citadel_restored } }
				country_event = { id = flavor_castanor.46 }
			}
			# Recurring GOOD Dragon Road event
			1 = {
				trigger = { has_global_flag = castanor_dragon_road_built }
				country_event = { id = flavor_castanor.91 }
			}
			# Recurring BAD Dragon Road event
			1 = {
				trigger = { has_global_flag = castanor_dragon_road_built }
				country_event = { id = flavor_castanor.92 }
			}
		}
	}
	# Nothing happens
	option = {
		name = flavor_castanor.0.b
		ai_chance = {
			factor = 100
			# The more unlocked recurring flavour events, the less likely nothing happens
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_1 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_2 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_3 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_4 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_5 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_6 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_7 }
			}
			modifier = {
				factor = 0.85
				any_hired_mercenary_company = { template = merc_castanorian_legion_8 }
			}
			modifier = {
				factor = 0.85
				has_global_flag = castanor_dragon_road_built
			}
			modifier = {
				factor = 0.85
				833 = { has_province_modifier = castanor_castonath_imperial_gardens }
			}
			modifier = {
				factor = 0.85
				840 = { has_province_modifier = castanor_north_citadel_aqueduct }
			}
			modifier = {
				factor = 0.85
				834 = { has_province_modifier = castanor_south_citadel_restored }
			}
			modifier = {
				factor = 0.85
				has_country_flag = castanor_third_great_cleansing_concluded
			}
			modifier = {
				factor = 0.85
				has_country_flag = castanor_modernizing_castonath_completed
			}
			modifier = {
				factor = 0.85
				has_country_flag = patron_castellos_finished
			}
		}
	}
}

# 1 through 29 - Castanorian Legion events
# Choosing Legion doctrine
country_event = {
	id = flavor_castanor.1
	title = flavor_castanor.1.t
	desc = flavor_castanor.1.desc
	picture = MILITARY_CAMP_eventPicture
	
	is_triggered_only = yes

	# Our legions will be vast and innumerable, overwhelming our enemies
	option = {
		name = flavor_castanor.1.a
		add_country_modifier = {
			name = castanor_legion_doctrine_full_citizen_army
			duration = -1
		}
	}
	# Our legions will be the envy of the world, with the best training and equipment possible
	option = {
		name = flavor_castanor.1.b
		add_country_modifier = {
			name = castanor_legion_doctrine_full_professionalism
			duration = -1
		}
	}
}

# Disband legion
country_event = {
	id = flavor_castanor.2
	title = flavor_castanor.2.t
	desc = flavor_castanor.2.desc
	picture = MILITARY_CAMP_eventPicture
	
	is_triggered_only = yes

	# Nevermind
	option = {
		name = flavor_castanor_go_back
		highlight = yes
	}
	option = {
		name = flavor_castanor.2.a
		trigger = { has_country_flag = castanorian_legion_option_1_unlocked }
		clr_country_flag = castanorian_legion_option_1_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_1 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_1st_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_1_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_1_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_1_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_1_maintenance_mod
			remove_country_modifier = castanor_legions_1_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.b
		trigger = { has_country_flag = castanorian_legion_option_2_unlocked }
		clr_country_flag = castanorian_legion_option_2_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_2 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_2nd_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_2_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_2_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_2_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_2_maintenance_mod
			remove_country_modifier = castanor_legions_2_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.c
		trigger = { has_country_flag = castanorian_legion_option_3_unlocked }
		clr_country_flag = castanorian_legion_option_3_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_3 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_3rd_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_3_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_3_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_3_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_3_maintenance_mod
			remove_country_modifier = castanor_legions_3_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.d
		trigger = { has_country_flag = castanorian_legion_option_4_unlocked }
		clr_country_flag = castanorian_legion_option_4_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_4 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_4th_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_4_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_4_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_4_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_4_maintenance_mod
			remove_country_modifier = castanor_legions_4_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.e
		trigger = { has_country_flag = castanorian_legion_option_5_unlocked }
		clr_country_flag = castanorian_legion_option_5_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_5 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_5th_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_5_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_5_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_5_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_5_maintenance_mod
			remove_country_modifier = castanor_legions_5_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.f
		trigger = { has_country_flag = castanorian_legion_option_6_unlocked }
		clr_country_flag = castanorian_legion_option_6_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_6 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_6th_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_6_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_6_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_6_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_6_maintenance_mod
			remove_country_modifier = castanor_legions_6_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.g
		trigger = { has_country_flag = castanorian_legion_option_7_unlocked }
		clr_country_flag = castanorian_legion_option_7_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_7 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_7th_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_7_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_7_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_7_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_7_maintenance_mod
			remove_country_modifier = castanor_legions_7_maintenance_mod_inactive
		}
		add_manpower = 60
	}
	option = {
		name = flavor_castanor.2.h
		trigger = { has_country_flag = castanorian_legion_option_8_unlocked }
		clr_country_flag = castanorian_legion_option_8_unlocked
		random_hired_mercenary_company = {
			limit = { template = merc_castanorian_legion_8 }
			disband_mercenary_company = THIS
		}
		hidden_effect = {
			event_target:castanor_home_of_the_8th_legion = {
				remove_province_modifier = castanor_legion_base
				remove_province_triggered_modifier = castanor_legions_8_maintenance_triggered
			}
			remove_country_modifier = castanor_legions_citizen_army_8_maintenance_mod
			remove_country_modifier = castanor_legions_citizen_army_8_maintenance_mod_inactive
			remove_country_modifier = castanor_legions_8_maintenance_mod
			remove_country_modifier = castanor_legions_8_maintenance_mod_inactive
		}
		add_manpower = 60
	}
}

# Build Legionway
country_event = {
	id = flavor_castanor.3
	title = flavor_castanor.3.t
	desc = flavor_castanor.3.desc
	picture = LAND_MILITARY_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = build_legionway_menu_open
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_1 }
				save_event_target_as = dragonflame_legion
				location = { save_event_target_as = location_of_dragonflame }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_2 }
				save_event_target_as = sword_legion
				location = { save_event_target_as = location_of_sword }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_3 }
				save_event_target_as = shield_legion
				location = { save_event_target_as = location_of_shield }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_4 }
				save_event_target_as = giantsbane_legion
				location = { save_event_target_as = location_of_giantsbane }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_5 }
				save_event_target_as = bridgeburners_legion
				location = { save_event_target_as = location_of_bridgeburners }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_6 }
				save_event_target_as = thundersworn_legion
				location = { save_event_target_as = location_of_thundersworn }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_7 }
				save_event_target_as = magebound_legion
				location = { save_event_target_as = location_of_magebound }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_8 }
				save_event_target_as = hordebreaker_legion
				location = { save_event_target_as = location_of_hordebreaker }
			}
		}
	}

	# Nevermind
	option = {
		name = flavor_castanor_go_back
		highlight = yes
		clr_country_flag = build_legionway_menu_open
	}
	# Connect Inner Castanor
	option = {
		name = flavor_castanor.3.a
		trigger = {
			legionway_inner_castanor = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_inner_castanor = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_inner_castanor
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_inner_castanor } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_inner_castanor
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Connect South Castanor
	option = {
		name = flavor_castanor.3.b
		trigger = {
			legionway_south_castanor = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_south_castanor = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			mission_completed = castanor_restore_bal_dostan
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_south_castanor
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_south_castanor } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_south_castanor
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Connect West Castanor
	option = {
		name = flavor_castanor.3.c
		trigger = {
			legionway_west_castanor = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_west_castanor = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			mission_completed = castanor_bal_mire
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_west_castanor
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_west_castanor } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_west_castanor
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Castanor -> Bal Vroren
	option = {
		name = flavor_castanor.3.d
		trigger = {
			legionway_inner_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_to_bal_vroren = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_to_bal_vroren = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			mission_completed = castanor_restore_bal_vroren
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_to_bal_vroren
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_to_bal_vroren } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_to_bal_vroren
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}

	# Bal Vroren -> Bal Konungrhaven
	option = {
		name = flavor_castanor.3.e
		trigger = {
			legionway_to_bal_vroren = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_vroren_to_konungrhaven_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_vroren_to_konungrhaven_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			956 = { # Konungrhaven
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_vroren_to_konungrhaven_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_vroren_to_konungrhaven_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_vroren_to_konungrhaven_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Mire -> Bal Vertesk
	option = {
		name = flavor_castanor.3.f
		trigger = {
			mission_completed = castanor_restore_bal_vertesk
			legionway_west_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_mire_to_bal_vertesk = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_mire_to_bal_vertesk = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_mire_to_bal_vertesk
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_mire_to_bal_vertesk } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_mire_to_bal_vertesk
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Vertesk -> Bal Dragon Coast
	# Fuuuuuuuuck why are there so many
	option = {
		name = flavor_castanor.3.g
		trigger = {
			183 = { # Foddimodd
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_bal_mire_to_bal_vertesk = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_vertesk_to_foddimad_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_vertesk_to_foddimad_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_vertesk_to_foddimad_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_vertesk_to_foddimad_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_vertesk_to_foddimad_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Vertesk -> Bal Hyl
	option = {
		name = flavor_castanor.3.h
		trigger = {
			mission_completed = castanor_restore_bal_hyl
			legionway_bal_mire_to_bal_vertesk = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_vertesk_to_bal_hyl = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_vertesk_to_bal_hyl = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_vertesk_to_bal_hyl
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_vertesk_to_bal_hyl } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_vertesk_to_bal_hyl
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Hyl -> West Castanor
	option = {
		name = flavor_castanor.3.i
		trigger = {
			mission_completed = castanor_restore_bal_hyl
			legionway_west_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_forlorn_vale = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_forlorn_vale = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_forlorn_vale
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_forlorn_vale } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_forlorn_vale
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Hyl -> Bal Dostan
	option = {
		name = flavor_castanor.3.j
		trigger = {
			mission_completed = castanor_restore_bal_hyl
			legionway_south_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_dostan_to_bal_hyl = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_dostan_to_bal_hyl = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_dostan_to_bal_hyl
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_dostan_to_bal_hyl } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_dostan_to_bal_hyl
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Dragon Coast -> Redfort Citadel
	option = {
		name = flavor_castanor.3.k1
		trigger = {
			legionway_bal_vertesk_to_foddimad_citadel = {
				type = all
				has_province_modifier = castanor_legionway
			}
			68 = {
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_dragon_coast_to_redfort_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_dragon_coast_to_redfort_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_dragon_coast_to_redfort_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_dragon_coast_to_redfort_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_dragon_coast_to_redfort_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Dragon Coast -> Daromsfort Citadel
	option = {
		name = flavor_castanor.3.k2
		trigger = {
			legionway_bal_vertesk_to_foddimad_citadel = {
				type = all
				has_province_modifier = castanor_legionway
			}
			58 = {
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_dragon_coast_to_daromsfort_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_dragon_coast_to_daromsfort_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_dragon_coast_to_daromsfort_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_dragon_coast_to_daromsfort_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_dragon_coast_to_daromsfort_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Dostan -> Bal Ouord
	option = {
		name = flavor_castanor.3.l
		trigger = {
			legionway_south_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			mission_completed = castanor_restore_bal_dostan
			legionway_to_bal_ouord = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_to_bal_ouord = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_to_bal_ouord
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_to_bal_ouord } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_to_bal_ouord
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Ouord -> Gelkalis
	option = {
		name = flavor_castanor.3.m
		trigger = {
			legionway_to_bal_ouord = {
				type = all
				has_province_modifier = castanor_legionway
			}
			665 = { # Gelkalis
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_bal_ouord_to_gelkalis = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_ouord_to_gelkalis = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_ouord_to_gelkalis
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_ouord_to_gelkalis } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_ouord_to_gelkalis
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Gelkalis -> Anzabad
	option = {
		name = flavor_castanor.3.n
		trigger = {
			legionway_bal_ouord_to_gelkalis = {
				type = all
				has_province_modifier = castanor_legionway
			}
			560 = { # Anzabad
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_gelkalis_to_anzabad = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_gelkalis_to_anzabad = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_gelkalis_to_anzabad
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_gelkalis_to_anzabad } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_gelkalis_to_anzabad
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Gelkalis -> Azka-Sur
	option = {
		name = flavor_castanor.3.o
		trigger = {
			legionway_bal_ouord_to_gelkalis = {
				type = all
				has_province_modifier = castanor_legionway
			}
			643 = { # Azka-Sur
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_gelkalis_to_azka_sur = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_gelkalis_to_azka_sur = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			golden_highway_far_bulwar = {
				type = all
				has_province_modifier = golden_highway
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_gelkalis_to_azka_sur
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_gelkalis_to_azka_sur } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_gelkalis_to_azka_sur
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Anzabad -> Bal Cat
	option = {
		name = flavor_castanor.3.p
		trigger = {
			legionway_gelkalis_to_anzabad = {
				type = all
				has_province_modifier = castanor_legionway
			}
			468 = { # Sorrowgate
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_anzabad_to_sorrowgate = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_anzabad_to_sorrowgate = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			golden_highway_bulwar_proper = {
				type = all
				has_province_modifier = golden_highway
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_anzabad_to_sorrowgate
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_anzabad_to_sorrowgate } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_anzabad_to_sorrowgate
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Gelkalis -> Bal Cat
	option = {
		name = flavor_castanor.3.q
		trigger = {
			legionway_gelkalis_to_azka_sur = {
				type = all
				has_province_modifier = castanor_legionway
			}
			468 = { # Sorrowgate
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_gelkalis_to_sorrowgate = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_gelkalis_to_sorrowgate = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			golden_highway_bulwar_proper = {
				type = all
				has_province_modifier = golden_highway
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_gelkalis_to_sorrowgate
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_gelkalis_to_sorrowgate } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_gelkalis_to_sorrowgate
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Manual with Legion 1
	option = {
		name = flavor_castanor.3.legion_1
		goto = location_of_dragonflame
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_1 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_1
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_1 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = dragonflame_legion } }
	}
	# Manual with Legion 2
	option = {
		name = flavor_castanor.3.legion_2
		goto = location_of_sword
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_2 } }
		if = {
			limit = {
				event_target:sword_legion = {
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_2 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		# build the tooltip
		else = { castanor_build_legionway_with_hired_legion = { event_target = sword_legion } }
	}
	# You get the idea I hope
	option = {
		name = flavor_castanor.3.legion_3
		goto = location_of_shield
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_3 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_3
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_3 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = shield_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_4
		goto = location_of_giantsbane
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_4 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_4
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_4 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = giantsbane_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_5
		goto = location_of_bridgeburners
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_5 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_5
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_5 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = bridgeburners_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_6
		goto = location_of_thundersworn
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_6 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_6
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_6 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = thundersworn } }
	}
	option = {
		name = flavor_castanor.3.legion_7
		goto = location_of_magebound
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_7 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_7
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_7 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = magebound_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_8
		goto = location_of_hordebreaker
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_8 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_8
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_8 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = hordebreaker_legion } }
	}

	after = {
		if = {
			limit = { has_country_flag = build_legionway_menu_open }
			country_event = { id = flavor_castanor.333 }
		}
	}
}

country_event = {
	id = flavor_castanor.333
	title = flavor_castanor.3.t
	desc = flavor_castanor.3.desc
	picture = LAND_MILITARY_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = build_legionway_menu_open
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_1 }
				save_event_target_as = dragonflame_legion
				location = { save_event_target_as = location_of_dragonflame }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_2 }
				save_event_target_as = sword_legion
				location = { save_event_target_as = location_of_sword }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_3 }
				save_event_target_as = shield_legion
				location = { save_event_target_as = location_of_shield }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_4 }
				save_event_target_as = giantsbane_legion
				location = { save_event_target_as = location_of_giantsbane }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_5 }
				save_event_target_as = bridgeburners_legion
				location = { save_event_target_as = location_of_bridgeburners }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_6 }
				save_event_target_as = thundersworn_legion
				location = { save_event_target_as = location_of_thundersworn }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_7 }
				save_event_target_as = magebound_legion
				location = { save_event_target_as = location_of_magebound }
			}
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_8 }
				save_event_target_as = hordebreaker_legion
				location = { save_event_target_as = location_of_hordebreaker }
			}
		}
	}

	# Nevermind
	option = {
		name = flavor_castanor_go_back
		highlight = yes
		clr_country_flag = build_legionway_menu_open
	}
	# Connect Inner Castanor
	option = {
		name = flavor_castanor.3.a
		trigger = {
			legionway_inner_castanor = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_inner_castanor = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_inner_castanor
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_inner_castanor } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_inner_castanor
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Connect South Castanor
	option = {
		name = flavor_castanor.3.b
		trigger = {
			legionway_south_castanor = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_south_castanor = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			mission_completed = castanor_restore_bal_dostan
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_south_castanor
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_south_castanor } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_south_castanor
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Connect West Castanor
	option = {
		name = flavor_castanor.3.c
		trigger = {
			legionway_west_castanor = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_west_castanor = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			mission_completed = castanor_bal_mire
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_west_castanor
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_west_castanor } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_west_castanor
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Castanor -> Bal Vroren
	option = {
		name = flavor_castanor.3.d
		trigger = {
			legionway_inner_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_to_bal_vroren = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_to_bal_vroren = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			mission_completed = castanor_restore_bal_vroren
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_to_bal_vroren
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_to_bal_vroren } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_to_bal_vroren
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}

	# Bal Vroren -> Bal Konungrhaven
	option = {
		name = flavor_castanor.3.e
		trigger = {
			legionway_to_bal_vroren = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_vroren_to_konungrhaven_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_vroren_to_konungrhaven_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			956 = { # Konungrhaven
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_vroren_to_konungrhaven_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_vroren_to_konungrhaven_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_vroren_to_konungrhaven_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Mire -> Bal Vertesk
	option = {
		name = flavor_castanor.3.f
		trigger = {
			mission_completed = castanor_restore_bal_vertesk
			legionway_west_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_mire_to_bal_vertesk = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_mire_to_bal_vertesk = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_mire_to_bal_vertesk
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_mire_to_bal_vertesk } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_mire_to_bal_vertesk
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Vertesk -> Bal Dragon Coast
	# Fuuuuuuuuck why are there so many
	option = {
		name = flavor_castanor.3.g
		trigger = {
			183 = { # Foddimodd
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_bal_mire_to_bal_vertesk = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_vertesk_to_foddimad_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_vertesk_to_foddimad_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_vertesk_to_foddimad_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_vertesk_to_foddimad_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_vertesk_to_foddimad_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Vertesk -> Bal Hyl
	option = {
		name = flavor_castanor.3.h
		trigger = {
			mission_completed = castanor_restore_bal_hyl
			legionway_bal_mire_to_bal_vertesk = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_vertesk_to_bal_hyl = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_vertesk_to_bal_hyl = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_vertesk_to_bal_hyl
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_vertesk_to_bal_hyl } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_vertesk_to_bal_hyl
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Hyl -> West Castanor
	option = {
		name = flavor_castanor.3.i
		trigger = {
			mission_completed = castanor_restore_bal_hyl
			legionway_west_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_forlorn_vale = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_forlorn_vale = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_forlorn_vale
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_forlorn_vale } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_forlorn_vale
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Hyl -> Bal Dostan
	option = {
		name = flavor_castanor.3.j
		trigger = {
			mission_completed = castanor_restore_bal_hyl
			legionway_south_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			legionway_bal_dostan_to_bal_hyl = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_dostan_to_bal_hyl = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_dostan_to_bal_hyl
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_dostan_to_bal_hyl } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_dostan_to_bal_hyl
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Dragon Coast -> Redfort Citadel
	option = {
		name = flavor_castanor.3.k1
		trigger = {
			legionway_bal_vertesk_to_foddimad_citadel = {
				type = all
				has_province_modifier = castanor_legionway
			}
			68 = {
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_dragon_coast_to_redfort_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_dragon_coast_to_redfort_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_dragon_coast_to_redfort_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_dragon_coast_to_redfort_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_dragon_coast_to_redfort_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Dragon Coast -> Daromsfort Citadel
	option = {
		name = flavor_castanor.3.k2
		trigger = {
			legionway_bal_vertesk_to_foddimad_citadel = {
				type = all
				has_province_modifier = castanor_legionway
			}
			58 = {
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_dragon_coast_to_daromsfort_citadel = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_dragon_coast_to_daromsfort_citadel = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_dragon_coast_to_daromsfort_citadel
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_dragon_coast_to_daromsfort_citadel } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_dragon_coast_to_daromsfort_citadel
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Dostan -> Bal Ouord
	option = {
		name = flavor_castanor.3.l
		trigger = {
			legionway_south_castanor = {
				type = all
				has_province_modifier = castanor_legionway
			}
			mission_completed = castanor_restore_bal_dostan
			legionway_to_bal_ouord = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_to_bal_ouord = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_to_bal_ouord
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_to_bal_ouord } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_to_bal_ouord
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Bal Ouord -> Gelkalis
	option = {
		name = flavor_castanor.3.m
		trigger = {
			legionway_to_bal_ouord = {
				type = all
				has_province_modifier = castanor_legionway
			}
			665 = { # Gelkalis
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_bal_ouord_to_gelkalis = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_bal_ouord_to_gelkalis = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_bal_ouord_to_gelkalis
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_bal_ouord_to_gelkalis } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_bal_ouord_to_gelkalis
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Gelkalis -> Anzabad
	option = {
		name = flavor_castanor.3.n
		trigger = {
			legionway_bal_ouord_to_gelkalis = {
				type = all
				has_province_modifier = castanor_legionway
			}
			560 = { # Anzabad
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_gelkalis_to_anzabad = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_gelkalis_to_anzabad = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_gelkalis_to_anzabad
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_gelkalis_to_anzabad } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_gelkalis_to_anzabad
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Gelkalis -> Azka-Sur
	option = {
		name = flavor_castanor.3.o
		trigger = {
			legionway_bal_ouord_to_gelkalis = {
				type = all
				has_province_modifier = castanor_legionway
			}
			643 = { # Azka-Sur
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_gelkalis_to_azka_sur = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_gelkalis_to_azka_sur = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			golden_highway_far_bulwar = {
				type = all
				has_province_modifier = golden_highway
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_gelkalis_to_azka_sur
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_gelkalis_to_azka_sur } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_gelkalis_to_azka_sur
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Anzabad -> Bal Cat
	option = {
		name = flavor_castanor.3.p
		trigger = {
			legionway_gelkalis_to_anzabad = {
				type = all
				has_province_modifier = castanor_legionway
			}
			468 = { # Sorrowgate
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_anzabad_to_sorrowgate = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_anzabad_to_sorrowgate = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			golden_highway_bulwar_proper = {
				type = all
				has_province_modifier = golden_highway
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_anzabad_to_sorrowgate
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_anzabad_to_sorrowgate } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_anzabad_to_sorrowgate
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Gelkalis -> Bal Cat
	option = {
		name = flavor_castanor.3.q
		trigger = {
			legionway_gelkalis_to_azka_sur = {
				type = all
				has_province_modifier = castanor_legionway
			}
			468 = { # Sorrowgate
				OR = {
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_citadel_local_admin_center
					has_province_modifier = castanor_new_citadel
				}
			}
			legionway_gelkalis_to_sorrowgate = {
				type = all
				country_or_non_sovereign_subject_holds = ROOT
			}
			legionway_gelkalis_to_sorrowgate = {
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
			}
			golden_highway_bulwar_proper = {
				type = all
				has_province_modifier = golden_highway
			}
		}
		custom_tooltip = castanor_survey_cost_predefined_tt
		every_owned_province = {
			limit = { 
				NOT = { has_province_modifier = castanor_legionway }
				NOT = { has_province_modifier = castanor_building_legionway_survey }
				NOT = { has_province_modifier = castanor_building_legionway_construction }
				country_or_non_sovereign_subject_holds = ROOT
				province_group = legionway_gelkalis_to_sorrowgate
			}
			custom_tooltip = castanor_start_legionway_survey_tt
			hidden_effect = {
				owner = { add_adm_power = -5 }
				add_permanent_province_modifier = {
					name = castanor_building_legionway_survey
					duration = -1
				}
				set_province_flag = legionway_construction_prov_@ROOT
			}
		}
		every_subject_country = {
			limit = { any_owned_province = { province_group = legionway_gelkalis_to_sorrowgate } }
			every_owned_province = {
				limit = { 
					NOT = { has_province_modifier = castanor_legionway }
					NOT = { has_province_modifier = castanor_building_legionway_survey }
					NOT = { has_province_modifier = castanor_building_legionway_construction }
					country_or_non_sovereign_subject_holds = ROOT
					province_group = legionway_gelkalis_to_sorrowgate
				}
				custom_tooltip = castanor_start_legionway_survey_tt
				hidden_effect = {
					B32 = { add_adm_power = -5 }
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
	}
	# Manual with Legion 1
	option = {
		name = flavor_castanor.3.legion_1
		goto = location_of_dragonflame
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_1 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_1
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_1 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = dragonflame_legion } }
	}
	# Manual with Legion 2
	option = {
		name = flavor_castanor.3.legion_2
		goto = location_of_sword
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_2 } }
		if = {
			limit = {
				event_target:sword_legion = {
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_2 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		# build the tooltip
		else = { castanor_build_legionway_with_hired_legion = { event_target = sword_legion } }
	}
	# You get the idea I hope
	option = {
		name = flavor_castanor.3.legion_3
		goto = location_of_shield
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_3 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_3
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_3 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = shield_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_4
		goto = location_of_giantsbane
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_4 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_4
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_4 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = giantsbane_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_5
		goto = location_of_bridgeburners
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_5 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_5
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_5 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = bridgeburners_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_6
		goto = location_of_thundersworn
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_6 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_6
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_6 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = thundersworn } }
	}
	option = {
		name = flavor_castanor.3.legion_7
		goto = location_of_magebound
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_7 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_7
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_7 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = magebound_legion } }
	}
	option = {
		name = flavor_castanor.3.legion_8
		goto = location_of_hordebreaker
		trigger = { any_hired_mercenary_company = { template = merc_castanorian_legion_8 } }
		if = {
			limit = {
				any_hired_mercenary_company = {
					template = merc_castanorian_legion_8
					location = {
						NOT = { has_province_modifier = castanor_legionway }
						NOT = { has_province_modifier = castanor_building_legionway_survey }
						NOT = { has_province_modifier = castanor_building_legionway_construction }
						NOT = { province_group = golden_highway_bulwar_proper }
						NOT = { province_group = golden_highway_far_bulwar }
						NOT = { province_group = golden_highway_dhujat }
						NOT = { province_group = golden_highway_far_salahad }
						NOT = { province_group = golden_highway_yanshen_coast }
						NOT = { province_group = golden_highway_rahen_coast }
						NOT = { province_group = golden_highway_upper_yanshen }
						NOT = { province_group = golden_highway_xianjie }
						NOT = { province_group = triunic_road }
						NOT = { has_terrain = dwarven_road }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanor_legionway
								has_province_modifier = castanor_building_legionway_survey
								has_province_modifier = castanor_building_legionway_construction
								AND = {
									OR = {
										has_province_modifier = federation_triunic_road
										has_province_modifier = golden_highway
									}
									any_neighbor_province = {
										OR = {
											has_province_modifier = castanor_legionway
											has_province_modifier = castanor_building_legionway_survey
											has_province_modifier = castanor_building_legionway_construction
										}
									}
								}
							}
						}
						country_or_non_sovereign_subject_holds = ROOT
					}
				}
			}
			add_adm_power = -10
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_8 }
				location = {
					add_permanent_province_modifier = {
						name = castanor_building_legionway_survey
						duration = -1
					}
					set_province_flag = legionway_construction_prov_@ROOT
				}
			}
		}
		else = { castanor_build_legionway_with_hired_legion = { event_target = hordebreaker_legion } }
	}

	after = {
		if = {
			limit = { has_country_flag = build_legionway_menu_open }
			country_event = { id = flavor_castanor.3 }
		}
	}
}

# Legionway construction
province_event = {
	id = flavor_castanor.4
	title = flavor_castanor.4.t
	desc = {
		desc = flavor_castanor.4.surveyDesc
		trigger = {
			has_province_modifier = castanor_building_legionway_survey
		}
	}
	desc = {
		desc = flavor_castanor.4.constructionDesc
		trigger = {
			has_province_modifier = castanor_building_legionway_construction
		}
	}
	picture = LAND_MILITARY_eventPicture
	goto = root
	
	trigger = { 
		OR = {
			has_province_modifier = castanor_building_legionway_survey
			has_province_modifier = castanor_building_legionway_construction
		}
	}
	mean_time_to_happen = {
		days = 1825
		modifier = {
			factor = 0.75
			owner = { full_idea_group = economic_ideas }
		}
		modifier = {
			factor = 0.8
			owner = { full_idea_group = administrative_ideas }
		}
		modifier = {
			factor = 0.9
			development = 10
		}
		modifier = {
			factor = 0.9
			development = 15
		}
		modifier = {
			factor = 0.8
			development = 20
		}
		modifier = {
			factor = 0.7
			development = 30
		}
		modifier = {
			factor = 0.7
			is_prosperous = yes
		}
		modifier = {
			factor = 2
			devastation = 1
		}
		modifier = {
			factor = 0.8
			any_neighbor_province = { has_province_modifier = castanor_legionway }
		}
		modifier = {
			factor = 0.8
			any_neighbor_province = {
				OR = { 
					has_province_modifier = castanorian_citadel
					has_province_modifier = castanor_new_citadel
					has_province_modifier = castanor_citadel_local_admin_center
				}
			}
		}
		modifier = {
			factor = 1.1
			province_distance = {
				who = 840
				distance = 150
			}
		}
		modifier = {
			factor = 1.2
			province_distance = {
				who = 840
				distance = 250
			}
		}
		modifier = {
			factor = 1.3
			province_distance = {
				who = 840
				distance = 350
			}
		}
		modifier = {
			factor = 1.3
			OR = {
				has_terrain = mountain
				has_terrain = highlands
				has_terrain = marsh
				has_terrain = jungle
			}
		}
		modifier = {
			factor = 1.2
			OR = {
				has_terrain = forest
				has_terrain = hills
				has_terrain = woods
				has_terrain = desert
			}
		}
		modifier = {
			factor = 0.7
			B32 = {
				any_hired_mercenary_company = {
					OR = {
						template = merc_castanorian_legion_1
						template = merc_castanorian_legion_2
						template = merc_castanorian_legion_3
						template = merc_castanorian_legion_4
						template = merc_castanorian_legion_5
						template = merc_castanorian_legion_6
						template = merc_castanorian_legion_7
						template = merc_castanorian_legion_8
					}
					location = {
						has_province_flag = legionway_construction_prov_@ROOT # Hope this works lol
					}
				}
			}
		}
	}

	immediate = {
		save_event_target_as = legionway_prov
	}

	# Start construction!
	option = {
		name = flavor_castanor.4.a
		ai_chance = { factor = 1 }
		trigger = {
			NOT = { has_province_modifier = castanor_legionway }
			NOT = { has_province_modifier = castanor_building_legionway_construction }
		}
		remove_province_modifier = castanor_building_legionway_survey
		add_permanent_province_modifier = {
			name = castanor_building_legionway_construction
			duration = -1
		}
		owner = { add_treasury = -50 }
	}
	
	# We poor leave it in the survey stage
	option = {
		name = flavor_castanor.4.b
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				NOT = { owner = { treasury = 100 } }
			}
		}
		trigger = {
			NOT = { has_province_modifier = castanor_legionway }
			NOT = { has_province_modifier = castanor_building_legionway_construction }
		}
		owner = { add_prestige = -5 }
	}
	
	# Legionway complete!
	option = {
		name = flavor_castanor.4.c
		ai_chance = { factor = 1 }
		trigger = { has_province_modifier = castanor_building_legionway_construction }
		remove_province_modifier = castanor_building_legionway_construction
		clr_province_flag = legionway_construction_prov_@ROOT
		add_permanent_province_modifier = {
			name = castanor_legionway
			duration = -1
		}
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 1 } }
		if = {
			limit = { NOT = { owned_by = B32 } }
			B32 = { country_event = { id = flavor_castanor.5 } }
		}
	}

	after = {
		# Just doing this in the option triggers of build event instead
		# trigger_switch = {
		# 	on_trigger = province_group
		# 	legionway_inner_castanor = {
		# 		if = {
		# 			limit = {
		# 				legionway_inner_castanor = {
		# 					type = all
		# 					has_province_modifier = castanor_legionway
		# 				}
		# 			}
		# 			B32 = { set_country_flag = legionway_inner_castanor_finished }
		# 		}
		# 	}
		# 	legionway_south_castanor = {
		# 		if = {
		# 			limit = {
		# 				legionway_south_castanor = {
		# 					type = all
		# 					has_province_modifier = castanor_legionway
		# 				}
		# 			}
		# 			B32 = { set_country_flag = legionway_south_castanor_finished }
		# 		}
		# 	}
		# 	legionway_west_castanor = {
		# 		if = {
		# 			limit = {
		# 				legionway_west_castanor = {
		# 					type = all
		# 					has_province_modifier = castanor_legionway
		# 				}
		# 			}
		# 			B32 = { set_country_flag = legionway_west_castanor_finished }
		# 		}
		# 	}
		# }
	}
}

country_event = {
	id = flavor_castanor.5
	title = flavor_castanor.5.t
	desc = flavor_castanor.5.desc
	picture = LAND_MILITARY_eventPicture
	goto = legionway_prov

	is_triggered_only = yes

	trigger = { NOT = { has_country_flag = subject_legionways_hidden } }
	# Oh cool
	option = {
		name = flavor_castanor.5.a
	}
	# Oh cool, hide from now on
	option = {
		name = flavor_castanor.5.b
		set_country_flag = subject_legionways_hidden
	}
}

# Proclaim legion events
# Pick one
country_event = {
	id = flavor_castanor.10
	title = flavor_castanor.10.t
	desc = flavor_castanor.10.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province
	
	is_triggered_only = yes

	immediate = { set_country_flag = legion_in_training }

	option = {
		name = flavor_castanor.10.a
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_1_unlocked }
		}
		country_event = {
			id = flavor_castanor.11
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.b
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_2_unlocked }
		}
		country_event = {
			id = flavor_castanor.12
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.C
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_3_unlocked }
		}
		country_event = {
			id = flavor_castanor.13
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.d
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_4_unlocked }
		}
		country_event = {
			id = flavor_castanor.14
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.e
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_5_unlocked }
		}
		country_event = {
			id = flavor_castanor.15
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.f
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_6_unlocked }
		}
		country_event = {
			id = flavor_castanor.16
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.g
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_7_unlocked }
		}
		country_event = {
			id = flavor_castanor.17
			days = 180
		}
	}
	option = {
		name = flavor_castanor.10.h
		trigger = {
			NOT = { has_country_flag = castanorian_legion_option_8_unlocked }
		}
		country_event = {
			id = flavor_castanor.18
			days = 180
		}
	}
}
# Legion 1
country_event = {
	id = flavor_castanor.11
	title = flavor_castanor.11.t
	desc = flavor_castanor.11.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.11.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_1_unlocked
		set_country_flag = merc_castanorian_legion_1_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_1st_legion
				add_province_triggered_modifier = castanor_legions_1_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 2
country_event = {
	id = flavor_castanor.12
	title = flavor_castanor.12.t
	desc = flavor_castanor.12.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.12.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_2_unlocked
		set_country_flag = merc_castanorian_legion_2_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_2nd_legion
				add_province_triggered_modifier = castanor_legions_2_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 3
country_event = {
	id = flavor_castanor.13
	title = flavor_castanor.13.t
	desc = flavor_castanor.13.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.13.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_3_unlocked
		set_country_flag = merc_castanorian_legion_3_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_3rd_legion
				add_province_triggered_modifier = castanor_legions_3_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 4
country_event = {
	id = flavor_castanor.14
	title = flavor_castanor.14.t
	desc = flavor_castanor.14.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.14.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_4_unlocked
		set_country_flag = merc_castanorian_legion_4_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_4th_legion
				add_province_triggered_modifier = castanor_legions_4_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 5
country_event = {
	id = flavor_castanor.15
	title = flavor_castanor.15.t
	desc = flavor_castanor.15.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.15.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_5_unlocked
		set_country_flag = merc_castanorian_legion_5_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_5th_legion
				add_province_triggered_modifier = castanor_legions_5_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 6
country_event = {
	id = flavor_castanor.16
	title = flavor_castanor.16.t
	desc = flavor_castanor.16.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.16.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_6_unlocked
		set_country_flag = merc_castanorian_legion_6_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_6th_legion
				add_province_triggered_modifier = castanor_legions_6_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 7
country_event = {
	id = flavor_castanor.17
	title = flavor_castanor.17.t
	desc = flavor_castanor.17.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.17.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_7_unlocked
		set_country_flag = merc_castanorian_legion_7_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_7th_legion
				add_province_triggered_modifier = castanor_legions_7_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion 8
country_event = {
	id = flavor_castanor.18
	title = flavor_castanor.18.t
	desc = flavor_castanor.18.desc
	picture = STRELTSY_MARCHING_eventPicture
	goto = castanor_legion_base_province

	is_triggered_only = yes

	option = {
		name = flavor_castanor.18.a
		clr_country_flag = legion_in_training
		set_country_flag = castanorian_legion_option_8_unlocked
		set_country_flag = merc_castanorian_legion_8_first_hire
		hidden_effect = {
			event_target:castanor_legion_base_province = {
				save_global_event_target_as = castanor_home_of_the_8th_legion
				add_province_triggered_modifier = castanor_legions_8_maintenance_triggered
			}
		}
		custom_tooltip = unlock_legion_tt
	}
}
# Legion raised for too long
country_event = {
	id = flavor_castanor.19
	title = flavor_castanor.19.t
	desc = flavor_castanor.19.desc
	picture = JANISSARY_REVOLT_eventPicture
	goto = tired_legion_location

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					OR = {
						template = merc_castanorian_legion_1
						template = merc_castanorian_legion_2
						template = merc_castanorian_legion_3
						template = merc_castanorian_legion_4
						template = merc_castanorian_legion_5
						template = merc_castanorian_legion_6
						template = merc_castanorian_legion_7
						template = merc_castanorian_legion_8
					}
					hired_for_months = 60
				}
				location = {
					save_event_target_as = tired_legion_location
				}
				save_event_target_as = tired_legion
			}
		}
	}

	# They'll have to suck it up
	option = {
		name = flavor_castanor.19.a
		add_country_modifier = {
			name = castanor_tired_legions
			duration = 3650
		}
	}

	# Give em' some extra pay
	option = {
		name = flavor_castanor.19.b
		add_years_of_income = -0.25
	}

	# Give them some leave
	option = {
		name = flavor_castanor.19.c
		event_target:tired_legion = { disband_mercenary_company = THIS add_company_manpower = -0.2 }
	}
}
# People want to join legion
country_event = {
	id = flavor_castanor.20
	title = flavor_castanor.20.t
	desc = flavor_castanor.20.desc
	picture = TRIBUTE_TO_TATARS_eventPicture
	goto = attractive_legion_location

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					OR = {
						template = merc_castanorian_legion_1
						template = merc_castanorian_legion_2
						template = merc_castanorian_legion_3
						template = merc_castanorian_legion_4
						template = merc_castanorian_legion_5
						template = merc_castanorian_legion_6
						template = merc_castanorian_legion_7
						template = merc_castanorian_legion_8
					}
				}
				save_event_target_as = attractive_legion
				location = { save_event_target_as = attractive_legion_location }
			}
		}
	}

	# Direct them toward regular units instead
	option = {
		name = flavor_castanor.20.a
		add_country_modifier = {
			name = castanor_influx_of_recruits
			duration = 7300
		}
	}

	# Sure!
	option = {
		name = flavor_castanor.20.b
		event_target:attractive_legion = { add_company_manpower = 0.25 }
		add_country_modifier = {
			name = castanor_influx_of_new_legionnaires
			duration = 7300
		}
	}
}
# Legions inspiring the regular armies/auxilaries
country_event = {
	id = flavor_castanor.21
	title = flavor_castanor.21.t
	desc = flavor_castanor.21.desc
	picture = ORTHODOX_ICON_FLAG_eventPicture

	is_triggered_only = yes

	# Hell yeah brother
	option = {
		name = flavor_castanor.21.a
		add_country_modifier = {
			name = castanor_inspirational_legions
			duration = 7300
		}
	}
}
# Dragonflame event (serves as the model Legion to your entire army)
country_event = {
	id = flavor_castanor.22
	title = flavor_castanor.22.t
	desc = {
		trigger = { has_country_flag = dragonflame_event_desc2 }
		desc = flavor_castanor.22.desc1
	}
	desc = flavor_castanor.22.desc2
	picture = JANNISARIES_IN_FORMATION_eventPicture
	goto = location_of_dragonflame

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_1
				}
				location = { save_event_target_as = location_of_dragonflame }
			}
			random = {
				chance = 50
				set_country_flag = dragonflame_event_desc2
			}
		}
	}

	# cool cool
	option = {
		name = flavor_castanor.22.a
		if = {
			limit = {
				has_dlc = "Cradle of Civilization"
				NOT = { army_professionalism = 1 }
			}
			add_army_professionalism = 0.02
		}
		else_if = {
			limit = { NOT = { army_tradition = 100 } }
			add_army_tradition = 10
		}
		else = {
			add_mil_power = 25
		}
		add_prestige_excess_to_splendour_effect = { VAL = 5 }
	}

	after = { clr_country_flag = dragonflame_event_desc2 }
}
# Shield event (Region the Legion is in gets increased defensiveness and hostile attrition, as long as shield remains in that region)
country_event = {
	id = flavor_castanor.23
	title = flavor_castanor.23.t
	desc = flavor_castanor.23.desc
	picture = 16_Trade_Company_eventPicture
	goto = location_of_shield

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_3
				}
				location = { save_event_target_as = location_of_shield }
			}
		}
	}

	# AIGHT
	option = {
		name = flavor_castanor.23.a
		hidden_effect = {
			840 = { add_province_triggered_modifier = castanor_shield_legion_mod }
		}
		event_target:location_of_shield = {
			region = {
				if = {
					limit = { country_or_non_sovereign_subject_holds = ROOT }
					add_province_modifier = {
						name = castanor_shield_regional_buff
						duration = -1
					}
				}
				set_province_flag = protected_by_shield_legion
			}
		}
		custom_tooltip = castanor_shield_legion_protect_tt
	}
}
# Sword event (Kill a bunch of dudes in battle)
country_event = {
	id = flavor_castanor.24
	title = flavor_castanor.24.t
	desc = flavor_castanor.24.desc
	picture = BATTLE_eventPicture
	goto = location_of_sword

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_2
				}
				location = { save_event_target_as = location_of_sword }
			}
		}
	}

	# COOL
	option = {
		name = flavor_castanor.24.a
		event_target:location_of_sword = {
			# Figure out a way to scope to enemy in battle and vary number killed based on size of their army there?
			kill_units = {
				who = enemy
				amount = 5 # Is this a lot? too little? idk really
			}
		}
	}
}
# Giantsbane event (If they're in a winter province, something happens)
country_event = {
	id = flavor_castanor.25
	title = flavor_castanor.25.t
	desc = flavor_castanor.25.desc
	picture = SOLDIERS_FREEZING_eventPicture
	goto = location_of_giantsbane

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = { template = merc_castanorian_legion_4 }
				location = {
					save_event_target_as = location_of_giantsbane
				}
			}
		}
	}

	option = {
		name = flavor_castanor.25.a
		add_war_exhaustion = -2.5
		add_country_modifier = {
			name = castanor_forged_in_winter
			duration = 7300
		}
	}
}
# Magebound event (get powerful mage general)
country_event = {
	id = flavor_castanor.26
	title = flavor_castanor.26.t
	desc = flavor_castanor.26.desc
	picture = BONEFIRE_OF_THE_VANITIES_eventPicture
	goto = location_of_magebound

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_7
				}
				location = {
					save_event_target_as = location_of_magebound
				}
			}
		}
	}

	# Make into a general
	option = {
		name = flavor_castanor.26.a
		add_mil_power = -100
		create_war_wizard_effect = yes
		set_country_flag = magebound_war_wizard_get
	}
	# Advisor
	option = {
		name = flavor_castanor.26.b
		define_advisor = {
			type = court_mage
			cost_multiplier = 0.25
		}
	}
}
# Thundersworn event (Sneak behind enemy lines and lift FOW)
country_event = {
	id = flavor_castanor.27
	title = flavor_castanor.27.t
	desc = flavor_castanor.27.desc
	picture = QIZILBAS_CAVALRY_CHARGING_eventPicture
	goto = location_of_thundersworn

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_6
				}
				location = {
					save_event_target_as = location_of_thundersworn
				}
			}
		}
	}

	option = {
		name = flavor_castanor.27.a
		event_target:location_of_thundersworn = {
			owner = {
				remove_fow = 12
			}
			area = {
				add_province_modifier = {
					name = castanor_thundersworn_behind_enemy_lines_mod
					duration = 365
				}
				remove_loot = {
					who = ROOT
					amount = 50
				}
			}
		}

		hidden_effect = {
			set_country_flag = thundersworn_has_raided
		}
	}
}
# Bridgeburners event (siege progress)
country_event = {
	id = flavor_castanor.28
	title = flavor_castanor.28.t
	desc = flavor_castanor.28.desc
	picture = SIEGE_eventPicture
	goto = location_of_bridgeburners

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_5
				}
				location = {
					save_event_target_as = location_of_bridgeburners
				}
			}
		}
	}

	option = {
		name = flavor_castanor.28.a
		event_target:location_of_bridgeburners = {
			change_siege = 2
			add_province_modifier = {
				name = castanor_bridgeburners_siege_mod
				duration = 180
			}
		}
	}
}
# Hordebreaker event (Kill enemy general)
country_event = {
	id = flavor_castanor.29
	title = flavor_castanor.29.t
	desc = flavor_castanor.29.desc
	picture = FAILED_REVOLUTION_eventPicture
	goto = location_of_hordebreaker

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_hired_mercenary_company = {
				limit = {
					template = merc_castanorian_legion_8
				}
				location = {
					save_event_target_as = location_of_hordebreaker
				}
			}
		}
	}

	option = {
		name = flavor_castanor.29.a
		random_country = {
			limit = {
				war_with = ROOT
				event_target:location_of_hordebreaker = {
					units_in_province = PREV
				}
			}
			kill_leader = {
				type = general
			}
		}
	}
}

# 30 though 39: Third Great Cleansing
# Start event
country_event = {
	id = flavor_castanor.30
	title = flavor_castanor.30.t
	desc = flavor_castanor.30.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.30.a
		# Add burning the Deepwoods modifier to to the three outermost glades
		every_owned_province = {
			limit = {
				OR = {
					province_group = deepwoods_lake_grove
					province_group = deepwoods_flower_grove
					province_group = deepwoods_mountain_grove
				}
			}
			add_permanent_province_modifier = {
				name = castanor_third_great_cleansing_prov
				duration = -1
			}
		}
		hidden_effect = {
			# Question of the Elves
			country_event = {
				id = flavor_castanor.34
				days = 1095 random = 365
			}
			# Outer Glades burned
			country_event = {
				id = flavor_castanor.31
				days = 1825 random = 365
			}
		}
	}
}
# Outer Glades burned
country_event = {
	id = flavor_castanor.31
	title = flavor_castanor.31.t
	desc = flavor_castanor.31.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.31.a
		every_owned_province = {
			limit = {
				OR = {
					province_group = deepwoods_lake_grove
					province_group = deepwoods_flower_grove
					province_group = deepwoods_mountain_grove
				}
			}
			# If human, add some dev
			if = {
				limit = {
					culture_is_human = yes
				}
				add_base_production = 1
			}
			# If tolerant of wood elves, those provinces get base tax instead
			else_if = {
				limit = { owner = { has_country_flag = castanor_third_great_cleansing_tolerant_toward_elves } culture_group = elven }
				random = {
					chance = 50
					add_base_tax = 1
				}
				change_religion = ROOT
			}
			# Else, change culture/religion and loot
			else = {
				change_culture = castanorian
				change_religion = ROOT
				add_devastation = 80
				trigger_switch = {
					on_trigger = development
					33 = { owner = { add_treasury = 250 } }
					30 = { owner = { add_treasury = 230 } }
					27 = { owner = { add_treasury = 210 } }
					24 = { owner = { add_treasury = 180 } }
					21 = { owner = { add_treasury = 155 } }
					18 = { owner = { add_treasury = 135 } }
					15 = { owner = { add_treasury = 115 } }
					12 = { owner = { add_treasury = 100 } }
					9 = { owner = { add_treasury = 85 } }
					6 = { owner = { add_treasury = 60 } }
					1 = { owner = { add_treasury = 50 } }
				}
			}
			remove_province_modifier = castanor_third_great_cleansing_prov
		}
		# Add burning the Deepwoods modifier to the three middle glades
		every_owned_province = {
			limit = {
				OR = {
					province_group = deepwoods_thorn_grove
					province_group = deepwoods_bone_grove
					province_group = deepwoods_hunter_grove
				}
			}
			add_permanent_province_modifier = {
				name = castanor_third_great_cleansing_prov
				duration = -1
			}
		}
		hidden_effect = {
			# Middle Glades burned
			country_event = {
				id = flavor_castanor.32
				days = 1825 random = 365
			}
		}
	}
}
# Middle Glades burned
country_event = {
	id = flavor_castanor.32
	title = flavor_castanor.32.t
	desc = flavor_castanor.32.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.32.a
		every_owned_province = {
			limit = {
				OR = {
					province_group = deepwoods_thorn_grove
					province_group = deepwoods_bone_grove
					province_group = deepwoods_hunter_grove
				}
			}
			# If human, add some dev
			if = {
				limit = {
					culture_is_human = yes
				}
				add_base_production = 1
			}
			# If tolerant of wood elves, those provinces get base tax instead
			else_if = {
				limit = { owner = { has_country_flag = castanor_third_great_cleansing_tolerant_toward_elves } culture_group = elven }
				random = {
					chance = 50
					add_base_tax = 1
				}
				change_religion = ROOT
			}
			# Else, change culture/religion and loot
			else = {
				change_culture = castanorian
				change_religion = ROOT
				add_devastation = 80
				trigger_switch = {
					on_trigger = development
					33 = { owner = { add_treasury = 250 } }
					30 = { owner = { add_treasury = 230 } }
					27 = { owner = { add_treasury = 210 } }
					24 = { owner = { add_treasury = 180 } }
					21 = { owner = { add_treasury = 155 } }
					18 = { owner = { add_treasury = 135 } }
					15 = { owner = { add_treasury = 115 } }
					12 = { owner = { add_treasury = 100 } }
					9 = { owner = { add_treasury = 85 } }
					6 = { owner = { add_treasury = 60 } }
					1 = { owner = { add_treasury = 50 } }
				}
			}
			remove_province_modifier = castanor_third_great_cleansing_prov
		}
		# Add burning the Deepwoods modifier to all provinces in the final glades
		every_owned_province = {
			limit = {
				OR = {
					province_group = deepwoods_arrow_grove
					province_group = deepwoods_river_grove
					province_group = deepwoods_shadow_grove
				}
			}
			add_permanent_province_modifier = {
				name = castanor_third_great_cleansing_prov
				duration = -1
			}
		}
		hidden_effect = {
			country_event = {
				# Inner Glades burned
				id = flavor_castanor.33
				days = 1825 random = 365
			}
			country_event = {
				# Forest in rebellion
				id = flavor_castanor.35
				days = 1095 random = 365
			}
		}
	}
}
# Inner Glades burned
country_event = {
	id = flavor_castanor.33
	title = flavor_castanor.33.t
	desc = flavor_castanor.33.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.33.a
		every_owned_province = {
			limit = {
				OR = {
					province_group = deepwoods_arrow_grove
					province_group = deepwoods_river_grove
					province_group = deepwoods_shadow_grove
				}
			}
			# If human, add some dev
			if = {
				limit = {
					culture_is_human = yes
				}
				add_base_production = 1
			}
			# If tolerant of wood elves, those provinces get base tax instead
			else_if = {
				limit = { owner = { has_country_flag = castanor_third_great_cleansing_tolerant_toward_elves } culture_group = elven }
				random = {
					chance = 50
					add_base_tax = 1
				}
				change_religion = ROOT
			}
			# Else, change culture/religion and loot
			else = {
				change_culture = castanorian
				change_religion = ROOT
				add_devastation = 80
				trigger_switch = {
					on_trigger = development
					33 = { owner = { add_treasury = 250 } }
					30 = { owner = { add_treasury = 230 } }
					27 = { owner = { add_treasury = 210 } }
					24 = { owner = { add_treasury = 180 } }
					21 = { owner = { add_treasury = 155 } }
					18 = { owner = { add_treasury = 135 } }
					15 = { owner = { add_treasury = 115 } }
					12 = { owner = { add_treasury = 100 } }
					9 = { owner = { add_treasury = 85 } }
					6 = { owner = { add_treasury = 60 } }
					1 = { owner = { add_treasury = 50 } }
				}
			}
			remove_province_modifier = castanor_third_great_cleansing_prov
		}
		hidden_effect = {
			# Deterioration of the Link
			country_event = {
				id = flavor_castanor.36
				days = 1825 random = 365
			}
		}
	}
}
# Elves?
country_event = {
	id = flavor_castanor.34
	title = flavor_castanor.34.t
	desc = flavor_castanor.34.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	# Show mercy, let those who want to renounce the fey join us
	option = {
		name = flavor_castanor.34.a
		large_increase_of_elven_tolerance_effect = yes
		add_years_of_income = -1
		add_adm_power = -100
		reduce_stability_or_adm_power = yes
		set_country_flag = castanor_third_great_cleansing_tolerant_toward_elves
		add_accepted_culture = wood_elf
	}

	# They made their bed with the fey, now let them lay in it!
	option = {
		name = flavor_castanor.34.b
		large_decrease_of_elven_tolerance_effect = yes
		add_mil_power = -100
		add_manpower = -10
		set_country_flag = castanor_third_great_cleansing_harsh_toward_elves
	}
}
# The forest rebels
country_event = {
	id = flavor_castanor.35
	title = flavor_castanor.35.t
	desc = flavor_castanor.35.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.35.a
		if = {
			limit = { has_country_flag = castanor_third_great_cleansing_harsh_toward_elves }
			random_owned_province = {
				limit = { superregion = deepwoods_superregion }
				spawn_rebels = {
					size = 3
					type = fey_court_rebels
					win = yes
					culture = wood_elf
					religion = fey_court
				}
			}
		}
		random_owned_province = {
			limit = { superregion = deepwoods_superregion }
			spawn_rebels = {
				size = 1
				type = fey_court_rebels
				win = yes
			}
		}
		random_owned_province = {
			limit = { superregion = deepwoods_superregion }
			spawn_rebels = {
				size = 1
				type = fey_court_rebels
				win = yes
			}
		}
		random_owned_province = {
			limit = { superregion = deepwoods_superregion }
			spawn_rebels = {
				size = 2
				type = fey_court_rebels
				win = yes
			}
		}
	}
}
# Close the Verdant Links (as much as possible!) and kill the last of the fey
country_event = {
	id = flavor_castanor.36
	title = flavor_castanor.36.t
	desc = flavor_castanor.36.desc
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.36.a
		deepwoods_superregion = {
			limit = { has_terrain = fey_gladeway }
			add_province_modifier = {
				name = castanor_verdant_link_weakened
				duration = -1
			}
		}
		add_stability_or_adm_power = yes
		add_power_projection = {
			type = mission_rewards_power_projection
			amount = 25
		}
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		set_country_flag = castanor_third_great_cleansing_concluded
	}
}
# Flare-up fey rebellion (recurring event)
country_event = {
	id = flavor_castanor.37
	title = flavor_castanor.37.t
	desc = {
		trigger = { has_country_flag = corgi }
		desc = flavor_castanor.37.descCorgi
	}
	desc = {
		trigger = { has_country_flag = castanor_third_great_cleansing_tolerant_toward_elves }
		desc = flavor_castanor.37.desc1
	}
	desc = {
		trigger = { has_country_flag = castanor_third_great_cleansing_harsh_toward_elves }
		desc = flavor_castanor.37.desc2
	}
	picture = VILLAGE_BURNING_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random = {
				chance = 5
				set_country_flag = corgi
			}
		}
	}

	# Wood elves deal with it for you + also fey bodies turn out to be good fertilizer
	option = {
		name = flavor_castanor.37.a
		trigger = { has_country_flag = castanor_third_great_cleansing_tolerant_toward_elves }
		small_increase_of_elven_tolerance_effect = yes
		random_owned_province = {
			limit = { any_neighbor_province = { has_province_modifier = castanor_verdant_link_weakened } }
			add_base_production = 1
		}
	}

	# Oh no!
	option = {
		name = flavor_castanor.37.b
		trigger = { has_country_flag = castanor_third_great_cleansing_harsh_toward_elves }
		random_owned_province = {
			limit = { has_province_modifier = castanor_verdant_link_weakened }
			spawn_rebels = {
				size = 2
				type = fey_court_rebels
			}
			random_neighbor_province = {
				limit = { NOT = { has_province_modifier = castanor_verdant_link_weakened } }
				spawn_rebels = {
					size = 1
					type = fey_court_rebels
				}
			}
		}
	}

	after = {
		clr_country_flag = corgi
	}
}
# Burn down the woods = coal (I know its now realistic but its cool, one time event)
country_event = {
	id = flavor_castanor.38
	title = flavor_castanor.38.t
	desc = flavor_castanor.38.desc
	picture = ATHMOSPHERIC_ENGINE_eventPicture
	
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		had_country_flag = {
			flag = castanor_third_great_cleansing_concluded
			days = 1825
		}
		has_institution = enlightenment
	}

	# Hell yeah brother
	option = {
		name = flavor_castanor.38.a
		random_province = {
			limit = {
				superregion = deepwoods_superregion
				trade_goods = tropical_wood
			}
			# Paradox has a working tooltip for adding/removing latent trade goods and everything, but the effect just does nothing...
			# add_latent_trade_goods = coal
			change_trade_goods = coal
		}
		# random_owned_province = {
		# 	limit = {
		# 		superregion = deepwoods_superregion
		# 		trade_goods = tropical_wood
		# 	}
		# 	change_trade_goods = coal
		# }
	}
}
# Population movement into the Deepwoods
country_event = {
	id = flavor_castanor.39
	title = flavor_castanor.39.t
	desc = flavor_castanor.39.desc
	picture = MARCHING_PEASANTS_eventPicture
	goto = repopulate_deepwoods_prov
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { superregion = deepwoods_superregion }
				save_event_target_as = repopulate_deepwoods_prov
			}
		}
	}

	# Coolio
	option = {
		name = flavor_castanor.39.a
		event_target:repopulate_deepwoods_prov = {
			add_base_production = 1
			add_base_tax = 1
			area = {
				add_province_modifier = {
					name = castanor_deepwoods_repopulation
					duration = 1825
				}
			}
		}
	}
}

# 40 through 49: North Citadel aqueduct/South Citadel flavour
# North Citadel aqueduct finished building
country_event = {
	id = flavor_castanor.40
	title = flavor_castanor.40.t
	desc = flavor_castanor.40.desc
	picture = COPTIC_CITY_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.40.a
		840 = {
			add_permanent_province_modifier = {
				name = castanor_north_citadel_aqueduct
				duration = -1
			}
		}
		castonath_area = {
			add_permanent_province_modifier = {
				name = castanor_fed_by_the_aqueduct
				duration = -1
			}
		}
	}
}
# South Citadel restored
country_event = {
	id = flavor_castanor.41
	title = flavor_castanor.41.t
	desc = flavor_castanor.41.desc
	picture = COPTIC_CITY_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = { 
			834 = { 
				add_great_project = {
					type = the_south_citadel
					instant = yes
				}
			} 
		}
	}

	# Let us split time between the two
	option = {
		name = flavor_castanor.41.a
		834 = {
			add_permanent_province_modifier = {
				name = castanor_south_citadel_restored
				duration = -1
			}
			add_province_triggered_modifier = castanor_south_citadel_summer_months
		}
		840 = {
			add_province_triggered_modifier = castanor_north_citadel_winter_months
		}
		add_stability_or_adm_power = yes
		hidden_effect = { country_event = { id = flavor_castanor.44 days = 7300 random = 1825 } }
	}

	# The North Citadel shall be our capital, as in the earliest days of Castanor!
	option = {
		name = flavor_castanor.41.b
		834 = {
			add_permanent_province_modifier = {
				name = castanor_south_citadel_restored
				duration = -1
			}
		}
		840 = {
			add_permanent_province_modifier = {
				name = castanor_north_citadel_capital
				duration = -1
			}
		}
		add_army_tradition = 15
		840 = { move_capital_effect = yes }
		hidden_effect = { country_event = { id = flavor_castanor.42 days = 7300 random = 1825 } }
	}

	# The South Citadel shall be our capital!
	option = {
		name = flavor_castanor.41.c
		834 = {
			add_permanent_province_modifier = {
				name = castanor_south_citadel_restored
				duration = -1
			}
			add_permanent_province_modifier = {
				name = castanor_south_citadel_capital
				duration = -1
			}
			move_capital_effect = yes
		}
		add_prestige_excess_to_splendour_effect = { VAL = 20 }
		hidden_effect = { country_event = { id = flavor_castanor.43 days = 7300 random = 1825 } }
	}
	# Put this farce behind us - Castonath should be the capital, forever and always!
	option = {
		name = flavor_castanor.41.d
		trigger = { 833 = { has_province_modifier = castonath_splendid_court } }
		834 = {
			add_permanent_province_modifier = {
				name = castanor_south_citadel_restored
				duration = -1
			}
		}
		833 = {
			add_permanent_province_modifier = {
				name = castanor_castonath_capital
				duration = -1
			}
			move_capital_effect = yes
		}
	}
}
# North Citadel capital unique event (one time) - North Citadel serves as perfect viewpoint for both Trialmount and Castonath
country_event = {
	id = flavor_castanor.42
	title = flavor_castanor.42.t
	desc = flavor_castanor.42.desc
	picture = INCA_CITY_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.42.a
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		define_advisor = {
			type = artist
			cost_multiplier = 0.25
			skill = 3
		}
	}
}
# South Citadel capital unique event (one time) - some foreign diplomat is impressed and offers service
country_event = {
	id = flavor_castanor.43
	title = flavor_castanor.43.t
	desc = flavor_castanor.43.desc
	picture = COURT_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.43.a
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		define_advisor = {
			type = diplomat
			cost_multiplier = 0.25
			skill = 3
		}
	}
}
# Split capital unique event (one time) - a balanced life
country_event = {
	id = flavor_castanor.44
	title = flavor_castanor.44.t
	desc = flavor_castanor.44.desc
	picture = COPTIC_CITY_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.44.a
		change_dip = 1
		change_mil = 1
		add_corruption = -4
	}
}
# Court factions influence ruler GOOD (recurring)
country_event = {
	id = flavor_castanor.45
	title = flavor_castanor.45.t
	desc = {
		desc = flavor_castanor.45.desc.adm
		trigger = {
			has_country_flag = castanor_court_faction_admin_add
		}
	}
	desc = {
		desc = flavor_castanor.45.desc.dip
		trigger = {
			has_country_flag = castanor_court_faction_dip_add
		}
	}
	desc = {
		desc = flavor_castanor.45.desc.mil
		trigger = {
			has_country_flag = castanor_court_faction_mil_add
		}
	}
	picture = GOOD_WITH_MONARCH_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_list = {
				1 = {
					modifier = {
						factor = 3
						833 = { has_province_modifier = castanor_castonath_capital }
					}
					set_country_flag = castanor_court_faction_admin_add
				}
				1 = {
					modifier = {
						factor = 3
						833 = { has_province_modifier = castanor_castonath_capital }
					}
					set_country_flag = castanor_court_faction_dip_add
				}
				1 = {
					modifier = {
						factor = 3
						840 = { has_province_modifier = castanor_north_citadel_capital }
					}
					set_country_flag = castanor_court_faction_mil_add
				}
			}
		}
	}

	option = {
		name = flavor_castanor.45.a
		trigger = { has_country_flag = castanor_court_faction_admin_add }
		add_adm_power = 50
	}
	option = {
		name = flavor_castanor.45.b
		trigger = { has_country_flag = castanor_court_faction_dip_add }
		add_dip_power = 50
	}
	option = {
		name = flavor_castanor.45.c
		trigger = { has_country_flag = castanor_court_faction_mil_add }
		add_mil_power = 50
	}

	after = {
		clr_country_flag = castanor_court_faction_admin_add
		clr_country_flag = castanor_court_faction_dip_add
		clr_country_flag = castanor_court_faction_mil_add
	}
}
# Court factions influence ruler BAD (recurring)
country_event = {
	id = flavor_castanor.46
	title = flavor_castanor.46.t
	desc = {
		desc = flavor_castanor.46.desc.adm
		trigger = {
			has_country_flag = castanor_court_faction_admin_minus
		}
	}
	desc = {
		desc = flavor_castanor.46.desc.dip
		trigger = {
			has_country_flag = castanor_court_faction_dip_minus
		}
	}
	desc = {
		desc = flavor_castanor.46.desc.mil
		trigger = {
			has_country_flag = castanor_court_faction_mil_minus
		}
	}
	picture = BAD_WITH_MONARCH_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_list = {
				1 = { set_country_flag = castanor_court_faction_admin_minus }
				1 = { set_country_flag = castanor_court_faction_dip_minus }
				1 = { set_country_flag = castanor_court_faction_mil_minus }
			}
		}
	}

	option = {
		name = flavor_castanor.46.a
		trigger = { has_country_flag = castanor_court_faction_admin_minus }
		add_adm_power = -25
	}
	option = {
		name = flavor_castanor.46.b
		trigger = { has_country_flag = castanor_court_faction_dip_minus }
		add_dip_power = -25
	}
	option = {
		name = flavor_castanor.46.c
		trigger = { has_country_flag = castanor_court_faction_mil_minus }
		add_mil_power = -25
	}

	after = {
		clr_country_flag = castanor_court_faction_admin_minus
		clr_country_flag = castanor_court_faction_dip_minus
		clr_country_flag = castanor_court_faction_mil_minus
	}
}
# North Citadel aqueduct brings prosperity to the North Citadel (recurring)
country_event = {
	id = flavor_castanor.47
	title = flavor_castanor.47.t
	desc = flavor_castanor.47.desc
	picture = CITY_DEVELOPMENT_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.47.a
		trialmount_area = {
			random_list = {
				1 = { add_base_tax = 1 }
				1 = { add_base_production = 1 }
				1 = { add_base_manpower = 1 }
			}
			if = {
				limit = { is_prosperous = yes }
				random_list = {
					1 = { add_base_tax = 1 }
					1 = { add_base_production = 1 }
					1 = { add_base_manpower = 1 }
				}
			}
			else = { add_prosperity = 25 }
		}
	}
}

# 50 through 59: Secrets of the South Citadel expedition
# Start event
country_event = {
	id = flavor_castanor.50
	title = flavor_castanor.50.t
	desc = flavor_castanor.50.desc
	picture = EXPLORERS_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_variable = {
				which = southCitadelExpeditionSuccess
				value = 0
			}
		}
	}

	# Direct a mage to craft a spell to explore underwater ruins
	option = {
		name = flavor_castanor.50.a
		hidden_effect = {
			if = {
				limit = {
					OR = {
						is_divination_3 = yes
						court_mage = 5
						estate_loyalty = {
							estate = estate_mages
							loyalty = 80
						}
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 4
				}
			}
			else_if = {
				limit = {
					OR = {
						estate_loyalty = {
							estate = estate_mages
							loyalty = 70
						}
						is_divination_2 = yes
						court_mage = 4
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 3
				}
			}
			else_if = {
				limit = {
					OR = {
						estate_loyalty = {
							estate = estate_mages
							loyalty = 60
						}
						is_divination_1 = yes
						court_mage = 3
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = {
					OR = {
						estate_loyalty = {
							estate = estate_mages
							loyalty = 50
						}
						court_mage = 2
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}
		}
		add_estate_loyalty = {
			estate = estate_mages
			loyalty = 10
		}
		add_estate_loyalty = {
			estate = estate_adventurers
			loyalty = -5
		}
		set_country_flag = south_citadel_expedition_mages_exploration
	}
	# Explore sealed off lower passages with adventurers
	option = {
		name = flavor_castanor.50.b
		hidden_effect = {
			if = {
				limit = {
					OR = {
						has_country_flag = patrician_castanor
						has_ruler_modifier = patrician_castan
						estate_loyalty = {
							estate = estate_adventurers
							loyalty = 80
						}
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 4
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_adventurers
						loyalty = 70
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 3
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_adventurers
						loyalty = 60
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_adventurers
						loyalty = 50
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}
		}
		add_estate_loyalty = {
			estate = estate_adventurers
			loyalty = 10
		}
		add_estate_loyalty = {
			estate = estate_mages
			loyalty = -5
		}
		set_country_flag = south_citadel_expedition_adventurer_exploration
	}
	after = {
		country_event = { id = flavor_castanor.51 days = 730 random = 365 }
	}
}
# We've found a super sekrit sealed door
country_event = {
	id = flavor_castanor.51
	title = flavor_castanor.51.t
	desc = {
		desc = flavor_castanor.51.desc1
		trigger = {
			has_country_flag = south_citadel_expedition_adventurer_exploration
		}
	}
	desc = {
		desc = flavor_castanor.51.desc2
		trigger = {
			has_country_flag = south_citadel_expedition_mages_exploration
		}
	}
	picture = EXPLORERS_eventPicture
	
	is_triggered_only = yes

	# Blast it open - carefully!
	option = {
		name = flavor_castanor.51.a
		trigger = {
			has_estate = estate_artificers
		}
		hidden_effect = {
			if = {
				limit = {
					OR = {
						has_country_flag = patrician_castanor
						has_ruler_modifier = patrician_castan
						estate_loyalty = {
							estate = estate_artificers
							loyalty = 80
						}
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 4
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_artificers
						loyalty = 70
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 3
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_artificers
						loyalty = 60
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_artificers
						loyalty = 50
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}
		}
	}
	# Start searching through every archive and personal library that the Patricians have - maybe they have some insight?
	option = {
		name = flavor_castanor.51.b
		hidden_effect = {
			if = {
				limit = {
					OR = {
						has_country_flag = patrician_castanor
						has_ruler_modifier = patrician_castan
						estate_loyalty = {
							estate = estate_castonath_patricians
							loyalty = 80
						}
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 4
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_castonath_patricians
						loyalty = 70
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 3
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_castonath_patricians
						loyalty = 60
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = {
					estate_loyalty = {
						estate = estate_castonath_patricians
						loyalty = 50
					}
				}
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}
		}
	}
	# Set our smartest advisors on it
	option = {
		name = flavor_castanor.51.c
		hidden_effect = {
			if = {
				limit = { has_adm_advisor_5 = yes }
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = { has_adm_advisor_3 = yes }
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}

			if = {
				limit = { has_dip_advisor_5 = yes }
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = { has_dip_advisor_3 = yes }
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}

			if = {
				limit = { has_mil_advisor_5 = yes }
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 2
				}
			}
			else_if = {
				limit = { has_mil_advisor_3 = yes }
				change_variable = {
					which = southCitadelExpeditionSuccess
					value = 1
				}
			}
		}
	}

	after = {
		hidden_effect = {
			# Calculate success/failure
			random_list = {
				# Success
				1 = {
					modifier = {
						factor = 1.1
						check_variable = {
							which = southCitadelExpeditionSuccess
							value = 2
						}
					}
					modifier = {
						factor = 1.2
						check_variable = {
							which = southCitadelExpeditionSuccess
							value = 4
						}
					}
					modifier = {
						factor = 1.3
						check_variable = {
							which = southCitadelExpeditionSuccess
							value = 6
						}
					}
					modifier = {
						factor = 1.4
						check_variable = {
							which = southCitadelExpeditionSuccess
							value = 8
						}
					}
					modifier = {
						factor = 1.5
						check_variable = {
							which = southCitadelExpeditionSuccess
							value = 10
						}
					}
					set_country_flag = south_citadel_exploration_room_success
				}
				# Fail
				1 = { set_country_flag = south_citadel_exploration_room_fail }
			}

			country_event = { id = flavor_castanor.52 days = 730 random = 365 }
		}
	}
}
# Results event
country_event = {
	id = flavor_castanor.52
	title = flavor_castanor.52.t
	desc = {
		trigger = { has_country_flag = south_citadel_exploration_room_success }
		desc = flavor_castanor.52.desc1
	}
	desc = {
		trigger = { has_country_flag = south_citadel_exploration_room_fail }
		desc = flavor_castanor.52.desc2
	}
	picture = EXPLORERS_eventPicture
	
	is_triggered_only = yes
	
	# its all been turned to rubble ('bad' result)
	option = {
		name = flavor_castanor.52.a
		trigger = { has_country_flag = south_citadel_exploration_room_fail }
		834 = {
			add_province_modifier = {
				name = castanor_south_citadel_expedition_result_bad
				duration = 18250
			}
		}
	}
	# Room full of old artifacts and shit
	option = {
		name = flavor_castanor.52.b
		trigger = { has_country_flag = south_citadel_exploration_room_success }
		add_prestige_excess_to_splendour_effect = { VAL = 20 }
		add_years_of_income = 5
	}
	# Option to continue onward at loss of option b reward
	option = {
		name = flavor_castanor.52.c
		trigger = { has_country_flag = south_citadel_exploration_room_success }
		country_event = { id = flavor_castanor.53 }
	}
	after = {
		hidden_effect = {
			clr_country_flag = south_citadel_expedition_adventurer_exploration
			clr_country_flag = south_citadel_expedition_mages_exploration
			clr_country_flag = south_citadel_exploration_room_fail
			clr_country_flag = south_citadel_exploration_room_success
		}
	}
}
# The Silver Crown of Castanor: booby trapped to hell. What do?
country_event = {
	id = flavor_castanor.53
	title = flavor_castanor.53.t
	desc = flavor_castanor.53.desc
	picture = BYZANTINE_EMPEROR_eventPicture
	
	is_triggered_only = yes

	# I am worthy
	option = {
		name = flavor_castanor.53.a
		random_list = {
			# You are
			25 = {
				modifier = {
					factor = 2
					OR = {
						mil = 6
						dip = 6
						adm = 6
					}
				}
				modifier = {
					factor = 1.75
					OR = {
						mil = 5
						dip = 5
						adm = 5
					}
				}
				modifier = {
					factor = 1.5
					OR = {
						mil = 4
						dip = 4
						adm = 4
					}
				}
				modifier = {
					factor = 2
					is_divination_3 = yes
				}
				modifier = {
					factor = 2
					is_enchantment_3 = yes
				}
				modifier = {
					factor = 2
					ruler_has_mage_personality = yes
				}
				modifier = {
					factor = 2
					ruler_has_personality = careful_personality
				}
				modifier = {
					factor = 2
					ruler_has_personality = righteous_personality
				}
				custom_tooltip = castanor_you_succeded_tt
			}
			# You are not
			75 = {
				modifier = {
					factor = 0
					OR = {
						mil = 7 # This is intentional don't change from 7
						dip = 7
						adm = 7
					}
				}
				hidden_effect = { set_country_flag = south_citadel_expedition_crown_fail_flag }
				custom_tooltip = castanor_you_fail_tt
			}
		}
	}

	after = {
		country_event = { id = flavor_castanor.54 }
	}
}
# Results from Silver Crown check
country_event = {
	id = flavor_castanor.54
	title = flavor_castanor.54.t
	desc = {
		desc = flavor_castanor.54.desc1
		trigger = {
			NOT = { has_country_flag = south_citadel_expedition_crown_fail_flag }
		}
	}
	desc = {
		desc = flavor_castanor.54.desc2
		trigger = {
			has_country_flag = south_citadel_expedition_crown_fail_flag
		}
	}
	picture = BYZ_BYZANTINE_EMPEROR_eventPicture
	
	is_triggered_only = yes

	# Cool
	option = {
		name = flavor_castanor.54.a
		if = {
			limit = { has_country_flag = south_citadel_expedition_crown_fail_flag }
			add_prestige = -20
			add_ruler_modifier = {
				name = castanor_failed_the_silver_crown
				duration = -1
			}
			clr_country_flag = south_citadel_expedition_crown_fail_flag
		}
		else = {
			add_country_modifier = {
				name = castanor_found_the_silver_crown
				duration = -1
			}
		}
	}
}

# 60 through 69 (nice): Retracing the Wander
# Who to bring?
country_event = {
	id = flavor_castanor.60
	title = flavor_castanor.60.t
	desc = flavor_castanor.60.desc
	picture = EXPLORERS_eventPicture
	goto = 840 # North Citadel
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_variable = {
				which = castaniteExodusInspiration
				value = 0
			}
		}
	}

	# This is a journey I must undertake just myself
	option = {
		name = flavor_castanor.60.a
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		add_country_modifier = {
			name = castanor_following_the_exodus
			duration = -1
		}
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 4 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
			}
		}
	}

	# The New Blood must be brought to understand our history
	option = {
		name = flavor_castanor.60.b
		add_estate_loyalty = {
			estate = estate_nobles
			loyalty = 10
		}
		add_estate_loyalty = {
			estate = estate_church
			loyalty = 10
		}
		add_estate_loyalty = {
			estate = estate_adventurers
			loyalty = 10
		}
		add_country_modifier = {
			name = castanor_following_the_exodus
			duration = -1
		}
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 0 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
			}
		}
	}

	# The Patricians, of course
	option = {
		name = flavor_castanor.60.c
		add_estate_loyalty = {
			estate = estate_castonath_patricians
			loyalty = 20
		}
		add_country_modifier = {
			name = castanor_following_the_exodus
			duration = -1
		}
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
			}
		}
	}

	after = {
		country_event = { id = flavor_castanor.61 days = 30 random = 10 }
	}
}
# The Deepwoods (10 years of wander and Wayguide/Southmount)
country_event = {
	id = flavor_castanor.61
	title = flavor_castanor.61.t
	desc = flavor_castanor.61.desc
	picture = COSSACKS_IN_SIBERIA_eventPicture
	goto = 3020 # Ciranmyna
	
	is_triggered_only = yes

	# Follow the strange light!
	option = {
		name = flavor_castanor.61.a
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
			}
		}
		random = {
			chance = 50
			add_ruler_modifier = {
				name = castanor_injured
				duration = 1825
			}
		}
	}

	# This must be a trick of the fey, do not follow!
	option = {
		name = flavor_castanor.61.b
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 0 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
			}
		}
	}

	after = {
		country_event = { id = flavor_castanor.62 }
	}
}
# A gnoll encounter (Xhazobine/Burning Hills)
country_event = {
	id = flavor_castanor.62
	title = flavor_castanor.62.t
	desc = flavor_castanor.62.desc
	picture = WHITE_MOUNTAIN_eventPicture
	goto = 509 # Aldwigard (border of Bal Ouord and Deepwoods)
	
	is_triggered_only = yes

	# Rally the prisoners! Organize a revolt!
	option = {
		name = flavor_castanor.62.a
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 4 }
				}
			}
		}
		random_list = {
			1 = {
				modifier = {
					factor = 2
					OR = {
						ruler_has_personality = inspiring_leader_personality
						ruler_has_personality = bold_fighter_personality
						ruler_has_personality = righteous_personality
					}
				}
				modifier = {
					factor = 1.2
					mil = 4
				}
				modifier = {
					factor = 1.2
					mil = 5
				}
				modifier = {
					factor = 1.2
					mil = 6
				}
			}
			1 = {
				if = {
					limit = { has_ruler_modifier = castanor_injured }
					add_ruler_modifier = {
						name = castanor_gravely_injured
						duration = 1825
					}
				}
				else = {
					add_ruler_modifier = {
						name = castanor_injured
						duration = 1825
					}
				}
			}
		}
		set_country_flag = recreating_exodus_slave_revolt
	}

	# Stage an escape at night, while they're distracted
	option = {
		name = flavor_castanor.62.b
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
			}
		}
		random_list = {
			2 = {
				modifier = {
					factor = 2
					OR = {
						ruler_has_personality = intricate_web_weaver_personality
						ruler_has_personality = secretive_personality
						ruler_has_personality = careful_personality
					}
				}
				modifier = {
					factor = 1.2
					dip = 4
				}
				modifier = {
					factor = 1.2
					dip = 5
				}
				modifier = {
					factor = 1.2
					dip = 6
				}
			}
			1 = {
				if = {
					limit = { has_ruler_modifier = castanor_injured }
					add_ruler_modifier = {
						name = castanor_gravely_injured
						duration = 1825
					}
				}
				else = {
					add_ruler_modifier = {
						name = castanor_injured
						duration = 1825
					}
				}
			}
		}
		set_country_flag = recreating_exodus_run_away
	}

	# We can ransom ourselves when we reach civilization ig
	option = {
		name = flavor_castanor.62.c
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 0 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
			}
		}
		add_years_of_income = -0.5
		set_country_flag = recreating_exodus_ransom
	}

	after = {
		country_event = { id = flavor_castanor.63 }
	}
}
# Gnoll result
country_event = {
	id = flavor_castanor.63
	title = flavor_castanor.63.t
	desc = {
		trigger = { has_country_flag = recreating_exodus_slave_revolt }
		desc = flavor_castanor.63.descRevolt
	}
	desc = {
		trigger = { has_country_flag = recreating_exodus_run_away }
		desc = flavor_castanor.63.descEscape
	}
	desc = {
		trigger = { has_country_flag = recreating_exodus_ransom }
		desc = flavor_castanor.63.descRansom
	}
	picture = EXPLORERS_eventPicture
	
	is_triggered_only = yes

	# A nice respite, now, into Bulwar!
	option = {
		name = flavor_castanor.63.a
	}
	after = {
		clr_country_flag = recreating_exodus_ransom
		clr_country_flag = recreating_exodus_run_away
		clr_country_flag = recreating_exodus_slave_revolt
		country_event = { id = flavor_castanor.64 days = 60 random = 15 }
	}
}
# Through Bulwar
country_event = {
	id = flavor_castanor.64
	title = flavor_castanor.64.t
	desc = flavor_castanor.64.desc
	picture = SOUP_KITCHEN_eventPicture
	
	is_triggered_only = yes

	# Travel the coast and skip the dangers
	option = {
		name = flavor_castanor.64.a
		add_years_of_income = -0.1
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 0 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
			}
		}
		country_event = { id = flavor_castanor.65 days = 60 random = 15 }
	}
	# Lets do a grand tour of Bulwar!
	option = {
		name = flavor_castanor.64.b
		add_years_of_income = -0.2
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
			}
		}
		country_event = { id = flavor_castanor.65 days = 120 random = 30 }
	}
	# Follow the journey as closely as possible
	option = {
		name = flavor_castanor.64.c
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 4 }
				}
			}
		}
		country_event = { id = flavor_castanor.65 days = 720 random = 60 }
	}
}
# Kheterata at last!
country_event = {
	id = flavor_castanor.65
	title = flavor_castanor.65.t
	desc = flavor_castanor.65.desc
	picture = RAMADAN_eventPicture
	goto = 475 # Kheterata
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			475 = { owner = { save_event_target_as = owner_of_kheterata } }
		}
	}

	# Go visit the great palaces and palanquins of the Khet
	option = {
		name = flavor_castanor.65.a
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 0 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
			}
		}
		add_legitimacy = 5
		event_target:owner_of_kheterata = {
			add_mutual_opinion_modifier_effect = {
				target = ROOT
				modifier = opinion_pleased
			}
		}
	}

	# Go amongst the ordinary people of Kheterata
	option = {
		name = flavor_castanor.65.b
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 4 }
				}
			}
		}
		add_prestige = -10
		add_years_of_income = -0.25
	}

	# Go take a dip in the Sorrow
	option = {
		name = flavor_castanor.65.c
		add_ruler_modifier = {
			name = castanor_rejuvanated_by_the_sorrow
			duration = -1
		}
		hidden_effect = {
			random_list = {
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 1 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 2 }
				}
				1 = {
					change_variable = { which = castaniteExodusInspiration value = 3 }
				}
			}
		}
	}

	after = { country_event = { id = flavor_castanor.66 days = 60 } }
}
# Result
country_event = {
	id = flavor_castanor.66
	title = flavor_castanor.66.t
	desc = flavor_castanor.66.desc
	picture = SMUGGLERS_eventPicture
	
	is_triggered_only = yes

	# The journey is at an end
	option = {
		name = flavor_castanor.66.a
		# Max you can get is 19 points
		# Greatly inspired
		if = {
			limit = {
				check_variable = {
					which = castaniteExodusInspiration
					value = 14
				}
			}
			add_stability_or_adm_power = yes
			add_prestige_excess_to_splendour_effect = { VAL = 10 }
			increase_ruler_adm_effect = yes
			increase_ruler_dip_effect = yes
			increase_ruler_mil_effect = yes
		}
		# Somewhat inspired
		else_if = {
			limit = {
				check_variable = {
					which = castaniteExodusInspiration
					value = 7
				}
			}
			add_prestige_excess_to_splendour_effect = { VAL = 10 }
			add_stability_or_adm_power = yes
		}
		# What a grand waste of time
		else = { add_legitimacy = 10 }
		remove_country_modifier = castanor_following_the_exodus 
	}
}

# 70 through 79: Lake Federation
country_event = {
	id = flavor_castanor.70
	title = flavor_castanor.70.t
	desc = flavor_castanor.70.desc
	picture = TRIBUTE_TO_TATARS_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.70.a
		define_explorer = {
			name = "Andrel 'Pastseeker'"
			shock = 2
			fire = 2
			manuever = 6
		}
		if = {
			limit = { exists = J33 }
			J33 = { inner_castanor_region = { discover_country = PREV } }
		}
		else = {
			random_country = {
				limit = { is_lake_federation_leader = yes }
				inner_castanor_region = { discover_country = PREV }
			}
		}
		yyl_moista_region = { discover_country = ROOT }
		south_yarikhoi_region = { discover_country = ROOT }
		north_yarikhoi_region = { discover_country = ROOT }
		custom_tooltip = castanor_unlock_FP_missions_tt
	}
	
	after = {
		# Strong Lake Fed 
		if = {
			limit = {
				OR = {
					J33 = { exists = yes }
					calc_true_if = {
						amount = 20
						forbidden_lands_superregion = {
							type = all
							OR = {
								region = east_forbidden_plains_region
								region = west_forbidden_plains_region
								region = yyl_moista_region
							}
							owner = { culture_group = triunic }
						}
					}
				}
			}
			set_country_flag = castanor_strong_lake_fed
		}
		# Centaurs dominating or have wiped out lake fed
		else_if = {
			limit = {
				OR = {
					has_global_flag = lake_federation_disbanded
					calc_true_if = {
						amount = 30
						forbidden_lands_superregion = {
							type = all
							OR = {
								region = north_yarikhoi_region
								region = south_yarikhoi_region
							}
							owner = { culture_group = centaur }
						}
					}
				}
			}
			set_country_flag = castanor_dominant_centaurs
		}
		# Centaurs encroaching on Lake Fed
		else_if = {
			limit = {
				calc_true_if = {
					amount = 5
					forbidden_lands_superregion = {
						type = all
						OR = {
							region = north_yarikhoi_region
							region = south_yarikhoi_region
						}
						owner = { culture_group = centaur }
					}
				}
			}
			set_country_flag = castanor_strong_centaurs
		}
		# Catch condition
		else = { set_country_flag = castanor_strong_lake_fed }
		swap_non_generic_missions = yes
	}
}

# Picking through ruins of civilization chain - TODO -- currently just the first event fires as a short flavour event

# Start event, talk about how fucked the Lake fed got etc
country_event = {
	id = flavor_castanor.75
	title = flavor_castanor.75.t
	desc = flavor_castanor.75.desc
	picture = BAD_POPE_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.75.a
		add_country_modifier = {
			name = castanor_after_the_ashes
			duration = 9125
		}
	}
}

# Talk about culture and noteworthy ruined stuff in lower half of the island - the big canal thingy and others etc
country_event = {
	id = flavor_castanor.76
	title = flavor_castanor.76.t
	desc = flavor_castanor.76.desc
	picture = BAD_POPE_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.76.a
		
	}
}

# Talk about culture and noteworthy ruined stuff in upper half of the island - idk much about this, dive into national ideas or ask the FP people prolly
country_event = {
	id = flavor_castanor.77
	title = flavor_castanor.77.t
	desc = flavor_castanor.77.desc
	picture = BAD_POPE_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.77.a
		
	}
}

# A new start? Release the Lake Fed as a Dominion?
country_event = {
	id = flavor_castanor.78
	title = flavor_castanor.78.t
	desc = flavor_castanor.78.desc
	picture = BAD_POPE_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.78.a
	}
}



# 80 though 89: Modernizing Castonath events
# Castonath in flux/frenzy of building
country_event = {
	id = flavor_castanor.80
	title = flavor_castanor.80.t
	desc = flavor_castanor.80.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.80.a
		castonath_area = {
			add_province_modifier = {
				name = castanor_castonath_frenzied_development
				duration = 1825
			}
			add_province_modifier = {
				name = castanor_castonath_artificery_revolution
				duration = -1
			}
		}
		hidden_effect = {
			if = {
				limit = {
					is_religion_enabled = ravelian
				}
				define_advisor = {
					type = artist
					name = "Lianne Auern"
					skill = 2
					culture = castanorian
					religion = ravelian
					female = yes
					cost_multiplier = 2
				}
			}
			else = {
				define_advisor = {
					type = artist
					name = "Lianne Auern"
					skill = 2
					culture = castanorian
					religion = ROOT
					female = yes
					cost_multiplier = 2
				}
			}
			set_country_flag = lianne_auern_available
		}
		custom_tooltip = castanorLianneAvailableEffectTT
		custom_tooltip = castanorLianneScalingEffecTT
		hidden_effect = {
			country_event = {
				id = flavor_castanor.81
				days = 730	random = 180
			}
			set_variable = {
				which = numTimesCastonathDevved
				value = 0
			}
		}
	}
}
# Old Bazaar - different races establish large merchant quarters
country_event = {
	id = flavor_castanor.81
	title = flavor_castanor.81.t
	desc = flavor_castanor.81.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	goto = 832
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { NOT = { area = castonath_area } }
				save_event_target_as = migrate_from_province
			}
			random_owned_province = {
				limit = {
					NOT = { area = castonath_area }
					calc_true_if = {
						amount = 1
						has_any_elven_pop_trigger = yes
						has_any_dwarven_pop_trigger = yes
						has_any_gnomish_pop_trigger = yes
						has_any_halfling_pop_trigger = yes
					}
				}
				save_event_target_as = migrate_from_province
			}
			random_owned_province = {
				limit = {
					NOT = { area = castonath_area }
					calc_true_if = {
						amount = 2
						has_any_elven_pop_trigger = yes
						has_any_dwarven_pop_trigger = yes
						has_any_gnomish_pop_trigger = yes
						has_any_halfling_pop_trigger = yes
					}
				}
				save_event_target_as = migrate_from_province
			}
			random_owned_province = {
				limit = {
					NOT = { area = castonath_area }
					calc_true_if = {
						amount = 3
						has_any_elven_pop_trigger = yes
						has_any_dwarven_pop_trigger = yes
						has_any_gnomish_pop_trigger = yes
						has_any_halfling_pop_trigger = yes
					}
				}
				save_event_target_as = migrate_from_province
			}
			random_owned_province = {
				limit = {
					NOT = { area = castonath_area }
					calc_true_if = {
						amount = 4
						has_any_elven_pop_trigger = yes
						has_any_dwarven_pop_trigger = yes
						has_any_gnomish_pop_trigger = yes
						has_any_halfling_pop_trigger = yes
					}
				}
				save_event_target_as = migrate_from_province
			}
		}
	}

	option = {
		name = flavor_castanor.81.a
		832 = {
			if = {
				limit = { has_large_elven_minority_trigger = yes }
				add_base_tax = 1
			}
			else = { add_elven_minority_size_effect = yes }
			if = {
				limit = { has_large_dwarven_minority_trigger = yes }
				add_base_production = 1
			}
			else = { add_dwarven_minority_size_effect = yes }
			if = {
				limit = { has_large_gnomish_minority_trigger = yes }
				add_base_production = 1
			}
			else = { add_gnomish_minority_size_effect = yes }
			if = {
				limit = { has_large_halfling_minority_trigger = yes }
				add_base_tax = 1
			}
			else = { add_halfling_minority_size_effect = yes }
		}
		event_target:migrate_from_province = {
			add_base_tax = -1
			add_base_manpower = -1
		}
		hidden_effect = {
			country_event = {
				id = flavor_castanor.82
				days = 730	random = 180
			}
		}
	}
}
# Silverfall - 'elevators', lifts, pulleys, ect.
country_event = {
	id = flavor_castanor.82
	title = flavor_castanor.82.t
	desc = flavor_castanor.82.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	goto = 832
	is_triggered_only = yes

	option = {
		name = flavor_castanor.82.a
		832 = {
			add_base_production = 3
			add_province_modifier = {
				name = castanor_castonath_silverfall_power
				duration = 18250
			}
			if = {
				limit = { is_institution_enabled = industrialization }
				add_institution_embracement = {
					which = industrialization
					value = 33
				}
			}
			if = {
				limit = { is_institution_enabled = manufactories }
				add_institution_embracement = {
					which = manufactories
					value = 33
				}
			}
		}
		add_years_of_income = -0.33
		hidden_effect = {
			country_event = {
				id = flavor_castanor.83
				days = 730	random = 180
			}
		}
	}
}
# Dragonforge - use residual heat/geothermal energy to power early steam engines and shit
country_event = {
	id = flavor_castanor.83
	title = flavor_castanor.83.t
	desc = flavor_castanor.83.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	goto = 831
	is_triggered_only = yes

	option = {
		name = flavor_castanor.83.a
		831 = {
			add_base_production = 3
			add_province_modifier = {
				name = castanor_castonath_dragonforge_steamworks
				duration = 18250
			}
			if = {
				limit = { is_institution_enabled = industrialization }
				add_institution_embracement = {
					which = industrialization
					value = 33
				}
			}
			if = {
				limit = { is_institution_enabled = manufactories }
				add_institution_embracement = {
					which = manufactories
					value = 33
				}
			}
		}
		add_years_of_income = -0.33
		small_decrease_of_dwarven_tolerance_effect = yes
		hidden_effect = {
			country_event = {
				id = flavor_castanor.84
				days = 730	random = 180
			}
		}
	}
}
# The Crags - general buildings + population boom
country_event = {
	id = flavor_castanor.84
	title = flavor_castanor.84.t
	desc = flavor_castanor.84.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	goto = 831
	is_triggered_only = yes

	option = {
		name = flavor_castanor.84.a
		831 = {
			add_base_manpower = 1
			add_base_tax = 2
			add_province_modifier = {
				name = castanor_castonath_crags_influx_of_workers
				duration = 7300
			}
		}
		hidden_effect = {
			country_event = {
				id = flavor_castanor.85
				days = 730	random = 180
			}
		}
	}
}
# Legion Square - center of universities and shit, taking advantage of sprawl of buildings and empty barracks as dorms/classrooms/ect.
country_event = {
	id = flavor_castanor.85
	title = flavor_castanor.85.t
	desc = flavor_castanor.85.desc
	picture = UNIVERSITY_eventPicture
	goto = 831
	is_triggered_only = yes

	option = {
		name = flavor_castanor.85.a
		831 = {
			if = {
				limit = { NOT = { has_building = university } }
				add_building = university
			}
			else = {
				owner = {
					add_innovativeness_small_effect = yes
				}
			}
			add_province_modifier = {
				name = castanor_castonath_center_of_universities
				duration = -1
			}
			if = {
				limit = {
					is_institution_enabled = enlightenment
					NOT = { enlightenment = 100 }
				}
				add_institution_embracement = {
					which = enlightenment
					value = 50
				}
			}
			else_if = {
				limit = {
					NOT = { owner = { innovativeness = 100 } }
				}
				owner = { add_innovativeness_big_effect = yes }
			}
			else = {
				owner = { add_mil_power = 50 }
				owner = { add_dip_power = 50 }
				owner = { add_adm_power = 50 }
			}
		}
		hidden_effect = {
			country_event = {
				id = flavor_castanor.86
				days = 730	random = 180
			}
		}
	}
}
# Upper District - gondolas and automatic carriages going between towers and shit
country_event = {
	id = flavor_castanor.86
	title = flavor_castanor.86.t
	desc = flavor_castanor.86.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	goto = 833
	is_triggered_only = yes

	option = {
		name = flavor_castanor.86.a
		833 = {
			add_base_tax = 3
			add_province_modifier = {
				name = castanor_castonath_patrician_gondolas_and_carriages
				duration = 18250
			}
		}
		add_years_of_income = -0.25
		hidden_effect = {
			country_event = {
				id = flavor_castanor.87
				days = 730	random = 180
			}
		}
	}
}
# Pantheonway - build a museum and make Pantheonway the center of culture and shit
country_event = {
	id = flavor_castanor.87
	title = flavor_castanor.87.t
	desc = flavor_castanor.87.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	goto = 833
	is_triggered_only = yes

	option = {
		name = flavor_castanor.87.a
		833 = {
			add_province_modifier = {
				name = castanor_castonath_pantheonway_museum
				duration = 18250
			}
			add_base_tax = 2
			if = {
				limit = { is_institution_enabled = enlightenment }
				add_institution_embracement = {
					which = enlightenment
					value = 50
				}
			}
		}
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		hidden_effect = {
			country_event = {
				id = flavor_castanor.88
				days = 730	random = 180
			}
		}
	}
}
# Imperial Quarter - build the Imperial Gardens
country_event = {
	id = flavor_castanor.88
	title = flavor_castanor.88.t
	desc = flavor_castanor.88.desc
	picture = GOOD_WITH_MONARCH_eventPicture
	goto = 833
	is_triggered_only = yes

	option = {
		name = flavor_castanor.88.a
		add_years_of_income = -0.5
		if = {
			limit = {
				OR = {
					check_variable = {
						which = numTimesCastonathDevved
						value = 50
					}
					# ONE district has 100 dev
					castonath_area = { development = 100 }
				}
			}
			add_country_modifier = {
				name = castanor_finished_modernizing_castonath_best
				duration = -1
			}
		}
		else_if = {
			limit = {
				OR = {
					check_variable = {
						which = numTimesCastonathDevved
						value = 25
					}
					castonath_area = { development = 90 }
				}
			}
			add_country_modifier = {
				name = castanor_finished_modernizing_castonath
				duration = -1
			}
		}
		else_if = {
			limit = {
				OR = {
					check_variable = {
						which = numTimesCastonathDevved
						value = 15
					}
					castonath_area = { development = 80 }
				}
			}
			add_country_modifier = {
				name = castanor_finished_modernizing_castonath_worst
				duration = -1
			}
		}
		833 = {
			add_province_modifier = {
				name = castanor_castonath_imperial_gardens
				duration = 18250
			}
		}
		hidden_effect = { set_country_flag = castanor_modernizing_castonath_completed }
	}
}
# Passage from a book written about Castonath flavour event attracts rare race immigrant (recurring)
country_event = {
	id = flavor_castanor.89
	title = flavor_castanor.89.t
	desc = flavor_castanor.89.desc
	picture = BIG_ARABIAN_CITY_eventPicture
	
	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			random_owned_province = {
				limit = { area = castonath_area }
				random_list = {
					1 = {
						trigger = {
							owner = {
								NOT = { has_country_modifier = racial_pop_harimari_expulsion }
								NOT = { has_country_modifier = racial_pop_harimari_purge }
							}
							has_harimari_majority_trigger = no
							has_large_harimari_minority_trigger = no
						}
						set_province_flag = add_harimari_pop
					}
					1 = {
						trigger = {
							owner = {
								NOT = { has_country_modifier = racial_pop_goblin_expulsion }
								NOT = { has_country_modifier = racial_pop_goblin_purge }
							}
							has_goblin_majority_trigger = no
							has_large_goblin_minority_trigger = no
						}
						set_province_flag = add_goblin_pop
					}
					1 = {
						trigger = {
							owner = {
								NOT = { has_country_modifier = racial_pop_ruinborn_expulsion }
								NOT = { has_country_modifier = racial_pop_ruinborn_purge }
							}
							has_ruinborn_majority_trigger = no
							has_large_ruinborn_minority_trigger = no
						}
						set_province_flag = add_ruinborn_pop
					}
					1 = {
						trigger = {
							owner = {
								NOT = { has_country_modifier = racial_pop_gnomish_expulsion }
								NOT = { has_country_modifier = racial_pop_gnomish_purge }
							}
							has_gnomish_majority_trigger = no
							has_large_gnomish_minority_trigger = no
						}
						set_province_flag = add_gnomish_pop
					}
					1 = {
						trigger = {
							owner = {
								NOT = { has_country_modifier = racial_pop_halfling_expulsion }
								NOT = { has_country_modifier = racial_pop_halfling_purge }
							}
							has_halfling_majority_trigger = no
							has_large_halfling_minority_trigger = no
						}
						set_province_flag = add_halfling_pop
					}
				}
				save_event_target_as = pop_add_province
			}
		}
	}

	# Settle them in
	option = {
		name = flavor_castanor.89.a
		add_years_of_income = -0.33
		event_target:pop_add_province = {
			trigger_switch = {
				on_trigger = has_province_flag
				add_harimari_pop = { add_harimari_minority_size_effect = yes owner = { small_increase_of_harimari_tolerance_effect = yes } }
				add_goblin_pop = { add_goblin_minority_size_effect = yes owner = { small_increase_of_goblin_tolerance_effect = yes } }
				add_ruinborn_pop = { add_ruinborn_minority_size_effect = yes owner = { small_increase_of_ruinborn_tolerance_effect = yes } }
				add_gnomish_pop = { add_gnomish_minority_size_effect = yes owner = { small_increase_of_gnomish_tolerance_effect = yes } }
				add_halfling_pop = { add_halfling_minority_size_effect = yes owner = { small_increase_of_halfling_tolerance_effect = yes } }
			}
		}
	}
	# NO - THEY'LL TAKE OUR JERBS
	option = {
		name = flavor_castanor.89.b
		add_years_of_income = 0.33
		event_target:pop_add_province = {
			trigger_switch = {
				on_trigger = has_province_flag
				add_harimari_pop = { owner = { small_decrease_of_harimari_tolerance_effect = yes } }
				add_goblin_pop = { owner = { small_decrease_of_goblin_tolerance_effect = yes } }
				add_ruinborn_pop = { owner = { small_decrease_of_ruinborn_tolerance_effect = yes } }
				add_gnomish_pop = { owner = { small_decrease_of_gnomish_tolerance_effect = yes } }
				add_halfling_pop = { owner = { small_decrease_of_halfling_tolerance_effect = yes } }
			}
		}
	}

	after = {
		event_target:pop_add_province = {
			trigger_switch = {
				on_trigger = has_province_flag
				add_harimari_pop = { clr_province_flag = add_harimari_pop }
				add_goblin_pop = { clr_province_flag = add_goblin_pop }
				add_ruinborn_pop = { clr_province_flag = add_ruinborn_pop }
				add_gnomish_pop = { clr_province_flag = add_gnomish_pop }
				add_halfling_pop = { clr_province_flag = add_halfling_pop }
			}
		}
	}
}

# 90 through 99: The Dragon Road
# Dragon Road finished!
country_event = {
	id = flavor_castanor.90
	title = flavor_castanor.90.t
	desc = flavor_castanor.90.desc
	picture = CARAVAN_EVENT_Picture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.90.a
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		set_global_flag = castanor_dragon_road_built
		hidden_effect = {
			country_event = { id = flavor_castanor.93 days = 3650 random = 730 }
			country_event = { id = flavor_castanor.94 days = 7300 random = 730 }
		}
	}
}
# Profits from eastern trade (recurring)
country_event = {
	id = flavor_castanor.91
	title = flavor_castanor.91.t
	desc = flavor_castanor.91.desc
	picture = CARAVAN_EVENT_Picture
	
	is_triggered_only = yes

	# Nice
	option = {
		name = flavor_castanor.91.a
		add_years_of_income = 0.4
	}

	# Skim a little more off the top yeah?
	option = {
		name = flavor_castanor.91.b
		add_years_of_income = 1
		add_corruption = 0.5
	}
}
# Trade route upkeep (recurring)
country_event = {
	id = flavor_castanor.92
	title = flavor_castanor.92.t
	desc = flavor_castanor.92.desc
	picture = CARAVAN_EVENT_Picture
	
	is_triggered_only = yes
	trigger = {
		NOT = {
			any_owned_province = {
				has_province_modifier = castanor_dragon_road_in_decay
			}
		}
	}

	# Lets repair the road
	option = {
		name = flavor_castanor.92.a
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		add_years_of_income = -0.2
	}

	# Leave it lads
	option = {
		name = flavor_castanor.92.b
		add_prestige = -10
		random_owned_province = {
			limit = { province_group = dragon_road }
			area = {
				add_province_modifier = {
					name = castanor_dragon_road_in_decay
					duration = 1825
				}
			}
		}
	}
}
# Laketown develops (one time)
country_event = {
	id = flavor_castanor.93
	title = flavor_castanor.93.t
	desc = flavor_castanor.93.desc
	picture = CARAVAN_EVENT_Picture
	
	is_triggered_only = yes

	# Reinvest into the town
	option = {
		name = flavor_castanor.93.a
		809 = { # Mereham
			center_of_trade = 1
			add_base_tax = 2
		}
	}
	# Ah, the fruits of trade
	option = {
		name = flavor_castanor.93.b
		add_dip_power = 100
		add_years_of_income = 1
	}
}
# All roads lead to Castonath (one time)
country_event = {
	id = flavor_castanor.94
	title = flavor_castanor.94.t
	desc = flavor_castanor.94.desc
	picture = CARAVAN_EVENT_Picture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.94.a
		castonath_area = {
			add_permanent_province_modifier = {
				name = castanor_all_roads_lead_to_castonath_event_prov
				duration = -1
			}
			add_base_tax = 1
		}
		add_country_modifier = {
			name = castanor_all_roads_lead_to_castonath_event_country
			duration = 7300
		}
	}
}
# Construction completes
province_event = {
	id = flavor_castanor.95
	title = flavor_castanor.95.t
	desc = flavor_castanor.95.desc
	picture = FARMING_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.95.a
		owner = { add_prestige_excess_to_splendour_effect = { VAL = 1 } }
		remove_province_modifier = castanor_rebuilding_flavour
		add_permanent_province_modifier = {
			name = castanor_dragon_road
			duration = -1
		}
		if = {
			limit = {
				dragon_road = {
					type = all
					has_province_modifier = castanor_dragon_road
				}
			}
			B32 = { country_event = { id = flavor_castanor.90 } }
		}
	}
}

# 100 through 109: Patron Castellos
# Its kinda like the Sistine Chapel event from vanilla but based on recreating that Castellos mural found in Aelantir instead
country_event = {
	id = flavor_castanor.100
	title = flavor_castanor.100.t
	desc = flavor_castanor.100.desc
	picture = 10_Jain_Estate_eventPicture
	goto = 831
	is_triggered_only = yes

	# Prepare to comission a grand work in Pantheonway
	option = {
		name = flavor_castanor.100.a
		add_years_of_income = -0.25
		add_legitimacy = 5
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work
				duration = -1
			}
		}
	}
	after = {
		hidden_effect = {
			country_event = {
				id = flavor_castanor.101
				days = 1825
				random = 730
			}
		}
	}
}
# Choose an artist/theme for the work
country_event = {
	id = flavor_castanor.101
	title = flavor_castanor.101.t
	desc = flavor_castanor.101.desc
	picture = ICON_IN_CHURCH_eventPicture
	goto = 831
	is_triggered_only = yes

	# Respect the mural - as accurate to it as possible
	option = {
		name = flavor_castanor.101.a
		add_years_of_income = -0.25
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work_faithful
				duration = -1
			}
			remove_province_modifier = castanor_castellos_grand_work
		}
	}
	# In the old style - let the greatest Patrician artist work on it
	option = {
		name = flavor_castanor.101.b
		add_years_of_income = -0.25
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work_patrician
				duration = -1
			}
			remove_province_modifier = castanor_castellos_grand_work
		}
	}
	# The elves naturally have some relation to the Precursors - we must find the oldest/vernerated of elven artists to work on it
	option = {
		name = flavor_castanor.101.c
		add_years_of_income = -0.25
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work_elven
				duration = -1
			}
			remove_province_modifier = castanor_castellos_grand_work
		}
	}
	# Let the Ravelians do their work
	option = {
		name = flavor_castanor.101.d
		trigger = {
			religion = ravelian
		}
		add_years_of_income = -0.25
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work_ravelian
				duration = -1
			}
			remove_province_modifier = castanor_castellos_grand_work
		}
	}
	# Regent Court artists
	option = {
		name = flavor_castanor.101.e
		trigger = {
			religion = regent_court
		}
		add_years_of_income = -0.25
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work_regent_court
				duration = -1
			}
			remove_province_modifier = castanor_castellos_grand_work
		}
	}
	# Corinite faithful
	option = {
		name = flavor_castanor.101.f
		trigger = {
			religion = corinite
		}
		add_years_of_income = -0.25
		831 = {
			add_permanent_province_modifier = {
				name = castanor_castellos_grand_work_corinite
				duration = -1
			}
			remove_province_modifier = castanor_castellos_grand_work
		}
	}

	after = {
		hidden_effect = {
			country_event = {
				id = flavor_castanor.102
				days = 3650
				random = 1825
			}
		}
		set_country_flag = patron_castellos_finished
	}
}
# Wondrous work inspires ruler (one time)
country_event = {
	id = flavor_castanor.102
	title = flavor_castanor.102.t
	desc = flavor_castanor.102.desc
	picture = ICON_IN_CHURCH_eventPicture
	goto = 831
	is_triggered_only = yes

	option = {
		name = flavor_castanor.102.a
		if = {
			limit = { mil = 6 }
			add_mil_power = 100
		}
		else = { change_mil = 1 }
		if = {
			limit = { dip = 6 }
			add_dip_power = 100
		}
		else = { change_dip = 1 }
		if = {
			limit = { adm = 6 }
			add_adm_power = 100
		}
		else = { change_adm = 1 }
	}
}
# Wondrous work inspires all who come to Castonath (recurring)
country_event = {
	id = flavor_castanor.103
	title = flavor_castanor.103.t
	desc = flavor_castanor.103.desc
	picture = ICON_IN_CHURCH_eventPicture
	goto = 831

	is_triggered_only = yes

	option = {
		name = flavor_castanor.103.a
		add_legitimacy = 10
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
		add_country_modifier = {
			name = castanor_castellos_grand_work_inspiring_populace
			duration = 1825
		}
	}
}

# 110 through 119: Sacking events
# Gnomish Hierarchy
country_event = {
	id = flavor_castanor.110
	title = flavor_castanor.110.t
	desc = flavor_castanor.110.desc
	picture = NOT_DISCIPLINED_SOLDIERS_eventPicture
	goto = prov_to_sack
	is_triggered_only = yes
	immediate = {
		hidden_effect = {
			# Oddansbay
			if = {
				limit = { 177 = { culture_group = gnomish } }
				177 = { save_event_target_as = prov_to_sack }
			}
			# Nimscodd
			else_if = {
				limit = { 169 = { culture_group = gnomish } }
				169 = { save_event_target_as = prov_to_sack }
			}
			else = {
				random_owned_province = {
					limit = { region = dragon_coast_region }
					save_event_target_as = prov_to_sack
				}
				random_owned_province = {
					limit = { region = dragon_coast_region culture_group = gnomish }
					save_event_target_as = prov_to_sack
				}
			}
		}
	}

	option = {
		name = flavor_castanor.110.a
		event_target:prov_to_sack = {
			add_base_tax = -2
			add_base_production = -2
			add_base_manpower = -2
			add_devastation = 50
		}
		castonath_area = {
			add_base_tax = 1
			add_base_production = 1
		}
		if = {
			limit = { has_dlc = "Rule Britannia" }
			change_innovativeness = 5
		}
		else = {
			add_mil_power = 33
			add_dip_power = 33
			add_adm_power = 33
		}
	}
}
# Anbenncost/Dameria
country_event = {
	id = flavor_castanor.111
	title = flavor_castanor.111.t
	desc = flavor_castanor.111.desc
	picture = NOT_DISCIPLINED_SOLDIERS_eventPicture
	goto = 8
	is_triggered_only = yes

	option = {
		name = flavor_castanor.111.a
		8 = {
			add_base_tax = -2
			add_base_production = -2
			add_base_manpower = -2
			add_devastation = 50
		}
		castonath_area = {
			add_base_tax = 1
			add_base_production = 1
		}
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
	}
}

# 120 through 130: Citadel events
# Gelkalis
country_event = {
	id = flavor_castanor.120
	title = flavor_castanor.120.t
	desc = flavor_castanor.120.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 665
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.120.a
		665 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Hefun"
			rename_capital = "Citadel of the Skies"
			change_culture = castanorian
			change_religion = ROOT
		}
		custom_tooltip = castanor_unlock_legionway_gelkalis
		show_ambient_object = gelkalis_citadel
	}
}
# Old Damenath Citadel
country_event = {
	id = flavor_castanor.121
	title = flavor_castanor.121.t
	desc = flavor_castanor.121.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 3
	
	is_triggered_only = yes
	
	option = {
		name = flavor_castanor.121.a
		3 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Damenath"
			rename_capital = "Bal Damenath"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = damenath_citadel
	}
}
# Kheterata
country_event = {
	id = flavor_castanor.122
	title = flavor_castanor.122.t
	desc = flavor_castanor.122.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 468
	
	is_triggered_only = yes
	
	option = {
		name = flavor_castanor.122.a
		468 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Ledgaht"
			rename_capital = "Sorrowgate Citadel"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = sorrowgate_citadel
		custom_tooltip = castanor_unlock_legionway_kheterata
	}
}
# Dragon Coast Citadel
country_event = {
	id = flavor_castanor.123
	title = flavor_castanor.123.t
	desc = flavor_castanor.123.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 183
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.123.a
		183 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Drachonarcen"
			rename_capital = "Dragonwatch Citadel"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = foddimodd_citadel
		custom_tooltip = castanor_unlock_legionway_dragon_coast
	}
}
# Gerudian Citadel
country_event = {
	id = flavor_castanor.124
	title = flavor_castanor.124.t
	desc = flavor_castanor.124.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 956
	
	is_triggered_only = yes
	
	option = {
		name = flavor_castanor.124.a
		956 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Eldesgaht"
			rename_capital = "Coldgate Citadel"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = gerudia_citadel
		custom_tooltip = castanor_unlock_legionway_gerudia
	}
}
# Bulwar
country_event = {
	id = flavor_castanor.125
	title = flavor_castanor.125.t
	desc = flavor_castanor.125.desc
	picture = ENTERING_MOSCOW_eventPicture
	
	is_triggered_only = yes
	
	# Anzabad
	option = {
		name = flavor_castanor.125.a
		hidden_effect = {
			country_event = {
				id = flavor_castanor.126
				days = 365
			}
		}
	}
	# Azka-Sur
	option = {
		name = flavor_castanor.125.b
		hidden_effect = {
			country_event = {
				id = flavor_castanor.127
				days = 365
			}
		}
	}
}
# Anzabad
country_event = {
	id = flavor_castanor.126
	title = flavor_castanor.126.t
	desc = flavor_castanor.126.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 560
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.126.a
		add_country_modifier = {
			name = castanor_bal_lencsar_mod
			duration = 7300
		}
		560 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Lencsar"
			rename_capital = "Citadel of the Western Sun"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = anzabad_citadel
		custom_tooltip = castanor_unlock_legionway_bulwar
	}
}
# Azka-Sur
country_event = {
	id = flavor_castanor.127
	title = flavor_castanor.127.t
	desc = flavor_castanor.127.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 643
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.127.a
		add_country_modifier = {
			name = castanor_bal_stencsar_mod
			duration = 7300
		}
		643 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Stencsar"
			rename_capital = "Citadel of the Eastern Sun"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = azka_sur_citadel
		custom_tooltip = castanor_unlock_legionway_bulwar
	}
}
# Lencenor pick
country_event = {
	id = flavor_castanor.128
	title = flavor_castanor.128.t
	desc = flavor_castanor.128.desc
	picture = ENTERING_MOSCOW_eventPicture
	
	is_triggered_only = yes
	
	option = {
		name = flavor_castanor.128.a
		hidden_effect = {
			country_event = {
				id = flavor_castanor.130
				days = 365
			}
		}
	}
	option = {
		name = flavor_castanor.128.b
		hidden_effect = {
			country_event = {
				id = flavor_castanor.129
				days = 365
			}
		}
	}
}
# Redfort
country_event = {
	id = flavor_castanor.129
	title = flavor_castanor.129.t
	desc = flavor_castanor.129.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 68
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.129.a
		add_country_modifier = {
			name = castanor_bal_rodwudor_mod
			duration = 7300
		}
		68 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Rodwudor"
			rename_capital = "Citadel of the Red Rose"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = redfort_citadel
		custom_tooltip = castanor_unlock_legionway_lencenor
	}
}
# Daromsfort
country_event = {
	id = flavor_castanor.130
	title = flavor_castanor.130.t
	desc = flavor_castanor.130.desc
	picture = ENTERING_MOSCOW_eventPicture
	goto = 58
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.130.a
		add_country_modifier = {
			name = castanor_bal_lipewudor_mod
			duration = 7300
		}
		58 = {
			remove_province_modifier = castanor_rebuilding_flavour
			if = {
				limit = { B32 = { mission_completed = castanor_streamline_tax_efforts } }
				add_permanent_province_modifier = { 
					name = castanor_citadel_local_admin_center
					duration = -1
				}
			}
			else = {
				add_permanent_province_modifier = { 
					name = castanor_new_citadel
					duration = -1
				}
			}
			change_province_name = "Bal Lipewudor"
			rename_capital = "Citadel of the Purple Rose"
			change_culture = castanorian
			change_religion = ROOT
		}
		show_ambient_object = daromsfort_citadel
		custom_tooltip = castanor_unlock_legionway_lencenor
	}
}

# For culture conversion stuffs
country_event = {
	id = flavor_castanor.140
	title = flavor_castanor.140.t
	desc = flavor_castanor.140.desc
	picture = LUTHER_eventPicture
	goto = province_to_turn_castanorian

	is_triggered_only = yes

	trigger = {
		OR = {
			tag = B32
			is_subject_of_type = castanor_dominion
		}
		NOT = { has_country_flag = castanor_hidden_culture_events }
		OR = {
			AND = {
				has_global_flag = folding_in_dostanorians
				any_owned_province = { culture_group = dostanorian_g }
			}
			AND = {
				has_global_flag = folding_in_escanni
				any_owned_province = { culture_group = escanni NOT = { culture = castanorian } }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_alenic }
				any_owned_province = { culture_group = alenic } 
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_anbennarian }
				any_owned_province = { culture_group = anbennarian }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_bulwari }
				any_owned_province = { culture_group = bulwari }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_businori }
				any_owned_province = { culture_group = businori }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_divenori }
				any_owned_province = { OR = { culture_group = akasi culture_group = kheteratan } }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_gerudian }
				any_owned_province = { culture_group = gerudian }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_lencori }
				any_owned_province = { culture_group = lencori }
			}
			has_country_modifier = castanor_encourage_assimilation_mod_dominion
		}
	}

	immediate = {
		# Random list to accomodate if multiple fold_ins and multiple valid provinces
		hidden_effect = {
			random_list = {
				# If assimilation enabled, can happen without the integrate missions
				1 = {
					trigger = { has_country_modifier = castanor_encourage_assimilation_mod_dominion }
					# Target random province
					random_owned_province = {
						limit = {
							culture_is_human = yes
							NOT = { culture = castanorian }
						}
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_is_human = yes
							NOT = { culture = castanorian }
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						has_global_flag = folding_in_dostanorians
						any_owned_province = { culture_group = dostanorian_g }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = dostanorian_g }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = dostanorian_g
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						has_global_flag = folding_in_escanni
						any_owned_province = { culture_group = escanni NOT = { culture = castanorian } }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = escanni NOT = { culture = castanorian } }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = escanni NOT = { culture = castanorian }
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_alenic }
						any_owned_province = { culture_group = alenic } 
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = alenic }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = alenic
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_anbennarian }
						any_owned_province = { culture_group = anbennarian }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = anbennarian }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = anbennarian
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_bulwari }
						any_owned_province = { culture_group = bulwari }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = bulwari }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = bulwari
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_businori }
						any_owned_province = { culture_group = businori }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = businori }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = businori
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_divenori }
						any_owned_province = { OR = { culture_group = akasi culture_group = kheteratan } }
					}
					# Target random province
					random_owned_province = {
						limit = { OR = { culture_group = akasi culture_group = kheteratan } }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							OR = { culture_group = akasi culture_group = kheteratan }
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_gerudian }
						any_owned_province = { culture_group = gerudian }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = gerudian }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = gerudian
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
				1 = {
					trigger = {
						B32 = { has_country_flag = castanor_fold_in_the_lencori }
						any_owned_province = { culture_group = lencori }
					}
					# Target random province
					random_owned_province = {
						limit = { culture_group = lencori }
						save_event_target_as = province_to_turn_castanorian
					}
					# Target citadel neighboring province
					random_owned_province = {
						limit = {
							culture_group = lencori
							any_neighbor_province = {
								OR = {
									has_province_modifier = castanorian_citadel
									has_province_modifier = castanor_new_citadel
									has_province_modifier = castanor_citadel_local_admin_center
									culture = castanorian
								}
							}
						}
						save_event_target_as = province_to_turn_castanorian
					}
				}
			}
		}
	}

	# cool
	option = {
		name = flavor_castanor.140.a
		random_list = {
			10 = {
				# More likely if neighboring a citadel
				modifier = {
					factor = 2 # Keep in mind this is multiplicative with the modifier below this one most of the time
					event_target:province_to_turn_castanorian = {
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
							}
						}
					}
				}
				# More likely if neighboring a Castanorian culture province 
				modifier = {
					factor = 10
					event_target:province_to_turn_castanorian = {
						any_neighbor_province = {
							culture = castanorian
						}
					}
				}
				# More likely if "Castanorian Lake" mission complete and is on the Divenhal
				modifier = {
					factor = 10
					B32 = { mission_completed = castanor_castanorian_lake }
					event_target:province_to_turn_castanorian = {
						sea_zone = {
							OR = {
								region = divenhal_sea_region
								region = dameshead_sea_region
							}
						}
					}
				}
				# More likely the closer it is to Castonath
				modifier = {
					factor = 2
					event_target:province_to_turn_castanorian = {
						NOT = {
							province_distance = {
								who = 840
								distance = 300
							}
						}
					}
				}
				# Even more likely the even more closer it is to Castonath
				modifier = {
					factor = 2
					event_target:province_to_turn_castanorian = {
						NOT = {
							province_distance = {
								who = 840
								distance = 150
							}
						}
					}
				}
				# More likely if patrician Castanor
				modifier = {
					factor = 2
					B32 = { has_country_flag = patrician_castanor }
				}
				event_target:province_to_turn_castanorian = { change_culture = castanorian }
			}
			# Nothing happens
			150 = { }
		}
		# If Dominion has 'encourage assimilation', autoconverts a province
		if = {
			limit = { has_country_modifier = castanor_encourage_assimilation_mod_dominion }
			random_owned_province = {
				limit = {
					# Culture is human
					culture_is_human = yes
					NOT = { culture = castanorian }
				}
				change_culture = castanorian
			}
		}
		custom_tooltip = flavor_castanor.140.tt
	}
	# cool, and hide these from now on
	option = {
		name = flavor_castanor.140.b
		highlight = yes
		set_country_flag = castanor_hidden_culture_events
		random_list = {
			10 = {
				# More likely if neighboring a citadel
				modifier = {
					factor = 2 # Keep in mind this is multiplicative with the modifier below this one most of the time
					event_target:province_to_turn_castanorian = {
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
							}
						}
					}
				}
				# More likely if neighboring a Castanorian culture province 
				modifier = {
					factor = 10
					event_target:province_to_turn_castanorian = {
						any_neighbor_province = {
							culture = castanorian
						}
					}
				}
				# More likely if "Castanorian Lake" mission complete and is on the Divenhal
				modifier = {
					factor = 10
					B32 = { mission_completed = castanor_castanorian_lake }
					event_target:province_to_turn_castanorian = {
						sea_zone = {
							OR = {
								region = divenhal_sea_region
								region = dameshead_sea_region
							}
						}
					}
				}
				# More likely the closer it is to Castonath
				modifier = {
					factor = 2
					event_target:province_to_turn_castanorian = {
						NOT = {
							province_distance = {
								who = 840
								distance = 300
							}
						}
					}
				}
				# Even more likely the even more closer it is to Castonath
				modifier = {
					factor = 2
					event_target:province_to_turn_castanorian = {
						NOT = {
							province_distance = {
								who = 840
								distance = 150
							}
						}
					}
				}
				# More likely if patrician Castanor
				modifier = {
					factor = 2
					B32 = { has_country_flag = patrician_castanor }
				}
				event_target:province_to_turn_castanorian = { change_culture = castanorian }
			}
			# Nothing happens
			150 = { }
		}
		# If Dominion has 'encourage assimilation', autoconverts a province
		if = {
			limit = { has_country_modifier = castanor_encourage_assimilation_mod_dominion }
			random_owned_province = {
				limit = {
					# Culture is human
					culture_is_human = yes
					NOT = { culture = castanorian }
				}
				change_culture = castanorian
			}
		}
		custom_tooltip = flavor_castanor.140.tt
	}
}
# The culture maintenance event but its hidden
country_event = {
	id = flavor_castanor.141
	title = flavor_castanor.141.t
	desc = flavor_castanor.141.desc
	picture = LUTHER_eventPicture

	is_triggered_only = yes
	hidden = yes

	trigger = {
		OR = {
			tag = B32
			is_subject_of_type = castanor_dominion
		}
		has_country_flag = castanor_hidden_culture_events
		OR = {
			AND = {
				has_global_flag = folding_in_dostanorians
				any_owned_province = { culture_group = dostanorian_g }
			}
			AND = {
				has_global_flag = folding_in_escanni
				any_owned_province = { culture_group = escanni NOT = { culture = castanorian } }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_alenic }
				any_owned_province = { culture_group = alenic } 
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_anbennarian }
				any_owned_province = { culture_group = anbennarian }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_bulwari }
				any_owned_province = { culture_group = bulwari }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_businori }
				any_owned_province = { culture_group = businori }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_divenori }
				any_owned_province = { OR = { culture_group = akasi culture_group = kheteratan } }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_gerudian }
				any_owned_province = { culture_group = gerudian }
			}
			AND = {
				B32 = { has_country_flag = castanor_fold_in_the_lencori }
				any_owned_province = { culture_group = lencori }
			}
			has_country_modifier = castanor_encourage_assimilation_mod_dominion
		}
	}

	immediate = {
		# Random list to accomodate if multiple fold_ins and multiple valid provinces
		random_list = {
			# If assimilation enabled, can happen without the integrate missions
			1 = {
				trigger = { has_country_modifier = castanor_encourage_assimilation_mod_dominion }
				# Target random province
				random_owned_province = {
					limit = {
						culture_is_human = yes
						NOT = { culture = castanorian }
					}
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_is_human = yes
						NOT = { culture = castanorian }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					has_global_flag = folding_in_dostanorians
					any_owned_province = { culture_group = dostanorian_g }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = dostanorian_g }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = dostanorian_g
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					has_global_flag = folding_in_escanni
					any_owned_province = { culture_group = escanni NOT = { culture = castanorian } }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = escanni NOT = { culture = castanorian } }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = escanni NOT = { culture = castanorian }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_alenic }
					any_owned_province = { culture_group = alenic } 
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = alenic }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = alenic
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_anbennarian }
					any_owned_province = { culture_group = anbennarian }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = anbennarian }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = anbennarian
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_bulwari }
					any_owned_province = { culture_group = bulwari }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = bulwari }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = bulwari
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_businori }
					any_owned_province = { culture_group = businori }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = businori }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = businori
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_divenori }
					any_owned_province = { OR = { culture_group = akasi culture_group = kheteratan } }
				}
				# Target random province
				random_owned_province = {
					limit = { OR = { culture_group = akasi culture_group = kheteratan } }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						OR = { culture_group = akasi culture_group = kheteratan }
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_gerudian }
					any_owned_province = { culture_group = gerudian }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = gerudian }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = gerudian
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
			1 = {
				trigger = {
					B32 = { has_country_flag = castanor_fold_in_the_lencori }
					any_owned_province = { culture_group = lencori }
				}
				# Target random province
				random_owned_province = {
					limit = { culture_group = lencori }
					save_event_target_as = province_to_turn_castanorian
				}
				# Target citadel neighboring province
				random_owned_province = {
					limit = {
						culture_group = lencori
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
								culture = castanorian
							}
						}
					}
					save_event_target_as = province_to_turn_castanorian
				}
			}
		}
	}

	# cool
	option = {
		name = flavor_castanor.140.a
		random_list = {
			10 = {
				# More likely if neighboring a citadel
				modifier = {
					factor = 2 # Keep in mind this is multiplicative with the modifier below this one most of the time
					event_target:province_to_turn_castanorian = {
						any_neighbor_province = {
							OR = {
								has_province_modifier = castanorian_citadel
								has_province_modifier = castanor_new_citadel
								has_province_modifier = castanor_citadel_local_admin_center
							}
						}
					}
				}
				# More likely if neighboring a Castanorian culture province 
				modifier = {
					factor = 10
					event_target:province_to_turn_castanorian = {
						any_neighbor_province = {
							culture = castanorian
						}
					}
				}
				# More likely if "Castanorian Lake" mission complete and is on the Divenhal
				modifier = {
					factor = 10
					B32 = { mission_completed = castanor_castanorian_lake }
					event_target:province_to_turn_castanorian = {
						sea_zone = {
							OR = {
								region = divenhal_sea_region
								region = dameshead_sea_region
							}
						}
					}
				}
				# More likely the closer it is to Castonath
				modifier = {
					factor = 2
					event_target:province_to_turn_castanorian = {
						NOT = {
							province_distance = {
								who = 840
								distance = 300
							}
						}
					}
				}
				# Even more likely the even more closer it is to Castonath
				modifier = {
					factor = 2
					event_target:province_to_turn_castanorian = {
						NOT = {
							province_distance = {
								who = 840
								distance = 150
							}
						}
					}
				}
				# More likely if patrician Castanor
				modifier = {
					factor = 2
					B32 = { has_country_flag = patrician_castanor }
				}
				event_target:province_to_turn_castanorian = { change_culture = castanorian }
			}
			# Nothing happens
			150 = { }
		}
		# If Dominion has 'encourage assimilation', autoconverts a province
		if = {
			limit = { has_country_modifier = castanor_encourage_assimilation_mod_dominion }
			random_owned_province = {
				limit = {
					# Culture is human
					culture_is_human = yes
					NOT = { culture = castanorian }
				}
				change_culture = castanorian
			}
		}
	}
}

# Dominions
# Dominion administration buff choose
# I wanted to do a Amlharaz type beat for this but that's too much work and would decrease uniqueness of Amlharaz
# So its just a simple pick a buff/focus for dominions now
country_event = {
	id = flavor_castanor.150
	title = flavor_castanor.150.t
	desc = flavor_castanor.150.desc
	picture = COUNCIL_TRENT_eventPicture
	
	is_triggered_only = yes

	# Adm 
	option = {
		name = flavor_castanor.150.a
		trigger = { has_subject_of_type = castanor_dominion }
		every_subject_country = {
			limit = { is_subject_of_type = castanor_dominion }
			add_country_modifier = {
				name = castanor_dominion_buff_adm
				duration = 3650
			}
		}
	}
	# Dip
	option = {
		name = flavor_castanor.150.b
		trigger = { has_subject_of_type = castanor_dominion }
		every_subject_country = {
			limit = { is_subject_of_type = castanor_dominion }
			add_country_modifier = {
				name = castanor_dominion_buff_dip
				duration = 3650
			}
		}
	}
	# Mil
	option = {
		name = flavor_castanor.150.c
		trigger = { has_subject_of_type = castanor_dominion }
		every_subject_country = {
			limit = { is_subject_of_type = castanor_dominion }
			add_country_modifier = {
				name = castanor_dominion_buff_mil
				duration = 3650
			}
		}
	}
	# Let them do their own thing
	option = {
		name = flavor_castanor.150.d
		trigger = { has_subject_of_type = castanor_dominion }
		add_adm_power = 50
		add_dip_power = 50
		add_mil_power = 50
		every_subject_country = {
			limit = { is_subject_of_type = castanor_dominion }
			add_country_modifier = {
				name = castanor_dominion_buff_none
				duration = 3650
			}
		}
	}
	# The assembly stands empty
	option = {
		name = flavor_castanor.150.e
		trigger = { NOT = { has_subject_of_type = castanor_dominion } }
		add_prestige = -20
	}

	after = {
		country_event = { id = flavor_castanor.150 days = 3650 }
	}
}

# Comission
country_event = {
	id = flavor_castanor.151
	title = flavor_castanor.151.t
	desc = flavor_castanor.151.desc
	picture = LOADING_SHIP_eventPicture
	goto = prov_to_build_ships
	
	is_triggered_only = yes

	# Transports
	option = {
		name = flavor_castanor.151.a
		B32 = {
			add_treasury = -96
			set_country_flag = transport_comissioned
			country_event = {
				id = flavor_castanor.152
				days = 365
			}
		}
	}
	# Light Ships
	option = {
		name = flavor_castanor.151.b
		B32 = {
			add_treasury = -128
			set_country_flag = light_ships_comissioned
			country_event = {
				id = flavor_castanor.152
				days = 365
			}
		}
	}
	# Heavy Ships
	option = {
		name = flavor_castanor.151.c
		B32 = {
			add_treasury = -200
			set_country_flag = heavy_ships_comissioned
			country_event = {
				id = flavor_castanor.152
				days = 730
			}
		}
	}
	# Galleys
	option = {
		name = flavor_castanor.151.d
		B32 = {
			add_treasury = -70
			set_country_flag = galleys_comissioned
			country_event = {
				id = flavor_castanor.152
				days = 365
			}
		}
	}

	# Nevermind
	option = {
		name = flavor_castanor.151.e
		add_splendor = 100
		event_target:prov_to_build_ships = {
			owner = {
				add_sailors = 1000
				add_liberty_desire = -10
				remove_country_modifier = castanor_press_ships_mod
			}
		}
	}
}

# Finished Building
country_event = {
	id = flavor_castanor.152
	title = flavor_castanor.152.t
	desc = flavor_castanor.152.desc
	picture = LOADING_SHIP_eventPicture
	goto = prov_to_build_ships
	
	is_triggered_only = yes

	# Transports
	option = {
		name = flavor_castanor.152.a
		event_target:prov_to_build_ships = {
			if = {
				limit = { B32 = { has_country_flag = transports_comissioned } }
				B32 = {
					transport = PREV
					transport = PREV
					transport = PREV
					transport = PREV
					transport = PREV
					transport = PREV
					transport = PREV
					transport = PREV
				}
			}
			else_if = {
				limit = { B32 = { has_country_flag = light_ships_comissioned } }
				B32 = {
					light_ship = PREV
					light_ship = PREV
					light_ship = PREV
					light_ship = PREV
					light_ship = PREV
					light_ship = PREV
					light_ship = PREV
					light_ship = PREV
				}
			}
			else_if = {
				limit = { B32 = { has_country_flag = heavy_ships_comissioned } }
				B32 = {
					heavy_ship = PREV
					heavy_ship = PREV
					heavy_ship = PREV
					heavy_ship = PREV
				}
			}
			else_if = {
				limit = { B32 = { has_country_flag = galleys_comissioned } }
				B32 = {
					galley = PREV
					galley = PREV
					galley = PREV
					galley = PREV
					galley = PREV
					galley = PREV
					galley = PREV
				}
			}
		}
	}

	after = {
		clr_country_flag = heavy_ships_comissioned
		clr_country_flag = light_ships_comissioned
		clr_country_flag = transport_comissioned
		clr_country_flag = galleys_comissioned
	}
}

# Final mission flavor event: Humanity's Empire
country_event = {
	id = flavor_castanor.160
	title = flavor_castanor.160.t
	desc = flavor_castanor.160.desc
	picture = HRE_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.160.a
		add_country_modifier = {
			name = castanor_the_terminus
			duration = -1
		}
		custom_tooltip = castanor_terminus_effect_tt
		set_country_flag = castanor_anti_everything_cb_unlocked
	}
}

# Final development mission flavor event: Home of Humanity
country_event = {
	id = flavor_castanor.161
	title = flavor_castanor.161.t
	desc = flavor_castanor.161.desc
	picture = HRE_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.161.a
		add_stability_or_adm_power = yes
		add_stability_or_adm_power = yes
		custom_tooltip = castanor_home_of_humanity_effect_tt
		set_country_flag = castanor_home_of_humanity
		add_country_modifier = {
			name = castanor_home_of_humanity_mod
			duration = 10950
		}
	}
}

# 200 onwards: Edhardrachon Civil War
# Warning event 1 - Patrician infighting in Castonath
country_event = {
	id = flavor_castanor.200
	title = flavor_castanor.200.t
	desc = flavor_castanor.200.desc
	picture = CONSPIRACY_eventPicture
	
	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		OR = {
			has_reform = original_castanor_trials_reform
			has_reform = dynastic_castanor_trials_reform
		}
		NOT = { has_ruler = "(Castanorian Interregnum)" }
	}

	immediate = {
		hidden_effect = {
			set_variable = {
				which = castanLegitimacy
				value = 5
			}
		}
	}

	# Their infighting has nothing to do with us
	option = {
		name = flavor_castanor.200.a
		hidden_effect = {
			subtract_variable = {
				which = castanLegitimacy
				value = -1
			}
		}
	}

	# Give some discreet support to the supportive faction
	option = {
		name = flavor_castanor.200.b
		give_estate_land_share_medium = { estate = estate_castonath_patricians }
		add_years_of_income = -0.2
		add_estate_loyalty = {
			estate = estate_castonath_patricians
			loyalty = 5
		}
	}

	after = {
		hidden_effect = {
			country_event = {
				id = flavor_castanor.201
				days = 1825 random = 365
			}
		}
	}
}
# Start disaster ticking
country_event = {
	id = flavor_castanor.201
	title = flavor_castanor.201.t
	desc = flavor_castanor.201.desc
	picture = ROYAL_SOCIETY_eventPicture
	
	is_triggered_only = yes

	option = {
		name = flavor_castanor.201.a
		set_global_flag = castanor_succession_war_enabled
		833 = { add_province_modifier = { name = castanor_edhardrachon_unrest duration = -1 } }
		add_legitimacy = -10
		custom_tooltip = start_edhardrachon_ticking
	}

	after = {
		hidden_effect = {
			country_event = {
				id = flavor_castanor.202
				days = 730 random = 180
			}
			country_event = {
				id = flavor_castanor.203
				days = 730 random = 180
			}
		}
	}
}
# Warning event 2 (chance to delay) - a disturbance at the Trials
country_event = {
	id = flavor_castanor.202
	title = flavor_castanor.202.t
	desc = flavor_castanor.202.desc
	picture = MYSTIC_IN_PRAYER_eventPicture
	
	is_triggered_only = yes

	trigger = {
		NOT = { has_disaster = castanor_succession_war }
		has_disaster_progress = {
			disaster = castanor_succession_war
			value = 1
		}
	}

	# A guard for every single tree!
	option = {
		name = flavor_castanor.202.a
		add_disaster_progress = {
			disaster = castanor_succession_war
			value = -50
		}
		hidden_effect = {
			subtract_variable = {
				which = castanLegitimacy
				value = -0.5
			}
		}
		add_yearly_manpower = -0.5
	}
	# Do nothing to disturb the sanctity of the Trials
	option = {
		name = flavor_castanor.202.b
		add_stability_or_adm_power = yes
	}
}
# Warning event 3 (another chance to delay) - Death of a powerful Patrician dude, with no heirs
country_event = {
	id = flavor_castanor.203
	title = flavor_castanor.203.t
	desc = flavor_castanor.203.desc
	picture = DEATH_OF_HEIR_eventPicture
	
	is_triggered_only = yes

	trigger = {
		NOT = { has_disaster = castanor_succession_war }
		has_disaster_progress = {
			disaster = castanor_succession_war
			value = 1
		}
	}

	# Their land goes to us
	option = {
		name = flavor_castanor.203.a
		take_estate_land_share_small = { estate = estate_castonath_patricians }
		hidden_effect = {
			subtract_variable = {
				which = castanLegitimacy
				value = -0.5
			}
		}
		add_prestige_excess_to_splendour_effect = { VAL = 5 }
	}

	# Give it to them as a gesture of goodwill
	option = {
		name = flavor_castanor.203.b
		give_estate_land_share_massive = { estate = estate_castonath_patricians }
		add_years_of_income = 1
		hidden_effect = {
			subtract_variable = {
				which = castanLegitimacy
				value = 0.5
			}
		}
	}
}
# Disaster start (effects)
country_event = {
	id = flavor_castanor.204
	title = flavor_castanor.204.t
	desc = {
		trigger = { NOT = { tag = B61 } }
		desc = flavor_castanor.204.desc1
	}
	desc = flavor_castanor.204.desc2
	picture = FAILED_REVOLUTION_eventPicture
	
	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { tag = B61 } }
			hidden_effect = {
				castonath_area = {
					add_core = B61
				}
				trialmount_area = {
					limit = { country_or_non_sovereign_subject_holds = ROOT }
					add_core = B61
				}
				lower_nath_area = {
					limit = { country_or_non_sovereign_subject_holds = ROOT }
					add_core = B61
				}
				westgate_area = {
					limit = { country_or_non_sovereign_subject_holds = ROOT }
					add_core = B61
				}
				if = {
					limit = {
						estate_territory = {
							estate = estate_castonath_patricians
							territory = 5
						}
					}
					nortmere_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
					southgate_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
				}
				if = {
					limit = {
						estate_territory = {
							estate = estate_castonath_patricians
							territory = 10
						}
					}
					bradescker_area = { # Bradescker
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
					upper_nath_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
				}
				if = {
					limit = {
						estate_territory = {
							estate = estate_castonath_patricians
							territory = 15
						}
					}
					northyl_area = { # Northyl
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
					oldhaven_area = { # Oldhaven
						limit = { country_or_non_sovereign_subject_holds = ROOT }	
						add_core = B61
					}
				}
				if = {
					limit = {
						estate_territory = {
							estate = estate_castonath_patricians
							territory = 20
						}
					}
					steelhyl_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
					serpentsmarck_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
					coalwoud_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
					ardent_glade_area = {
						limit = { country_or_non_sovereign_subject_holds = ROOT }
						add_core = B61
					}
				}
				release_with_religion_and_culture = { tag = B61 religion = ROOT culture = castanorian }
				escann_superregion = { # Cannot be every_owned_province since that will not account for vassal shenanigans
					limit = { is_core = B61 }
					cede_province = B61
				}
				random_owned_province = {
					limit = {
						controlled_by = ROOT
						NOT = { num_of_units_in_province = { who = REB amount = 1 } }
					}
					spawn_rebels = {
						type = castanor_succession_war_rebels
						size = 4
						friend = B61
					}
				}
				random_owned_province = {
					limit = {
						controlled_by = ROOT
						NOT = { num_of_units_in_province = { who = REB amount = 1 } }
					}
					spawn_rebels = {
						type = castanor_succession_war_rebels
						size = 4
						friend = B61
					}
				}
				random_owned_province = {
					limit = {
						controlled_by = ROOT
						NOT = { num_of_units_in_province = { who = REB amount = 1 } }
					}
					spawn_rebels = {
						type = castanor_succession_war_rebels
						size = 3
						friend = B61
					}
				}
				random_owned_province = {
					limit = {
						controlled_by = ROOT
						NOT = { num_of_units_in_province = { who = REB amount = 1 } }
					}
					spawn_rebels = {
						type = castanor_succession_war_rebels
						size = 3
						friend = B61
					}
				}
				random_owned_province = {
					limit = {
						controlled_by = ROOT
						NOT = { num_of_units_in_province = { who = REB amount = 1 } }
					}
					spawn_rebels = {
						type = castanor_succession_war_rebels
						size = 2
						friend = B61
					}
				}
				random_owned_province = {
					limit = {
						controlled_by = ROOT
						NOT = { num_of_units_in_province = { who = REB amount = 1 } }
					}
					spawn_rebels = {
						type = castanor_succession_war_rebels
						size = 2
						friend = B61
					}
				}
				if = {
					limit = {
						estate_influence = {
							estate = estate_castonath_patricians
							influence = 80
						}
					}
					add_disaster_modifier = {
						name = castanor_succession_war_high_patrician_influence
						duration = 1825
						disaster = castanor_succession_war
					}
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = estate_castonath_patricians
							influence = 60
						}
					}
					add_disaster_modifier = {
						name = castanor_succession_war_medium_patrician_influence
						duration = 1825
						disaster = castanor_succession_war
					}
				}
				else_if = {
					limit = {
						estate_influence = {
							estate = estate_castonath_patricians
							influence = 40
						}
					}
					add_disaster_modifier = {
						name = castanor_succession_war_low_patrician_influence
						duration = 1825
						disaster = castanor_succession_war
					}
				}
				B61 = {
					add_country_modifier = {
						name = castanor_sucession_war_patrician_helper
						duration = -1
					}
					declare_war_with_cb = {
						who = ROOT
						casus_belli = cb_castanor_war_of_succession
					}
					random_list = {
						1 = {
							define_ruler = {
								name = "Castan"
								change_adm = 7 # Yes this works
								change_dip = 4
								change_mil = 4
								age = 30
								culture = castanorian
								religion = ROOT
							}
						}
						1 = {
							define_ruler = {
								name = "Castan"
								change_adm = 4
								change_dip = 7
								change_mil = 4
								age = 30
								culture = castanorian
								religion = ROOT
							}
						}
						1 = {
							define_ruler = {
								name = "Castan"
								change_adm = 4
								change_dip = 4
								change_mil = 7
								age = 30
								culture = castanorian
								religion = ROOT
							}
						}
					}
					set_ruler_flag = castanor_succession_war_rebel_castan
					define_ruler_to_general = {
						fire = 8
						shock = 3
						manuever = 5
						siege = 2
					}
					define_general = {
						name = "Gracos, the Leaden Breath"
						shock = 2
						fire = 6
						manuever = 2
						siege = 4
					}
					define_general = {
						name = "Erella, the Argent Claw"
						shock = 6
						fire = 2
						manuever = 6
						siege = 0
						female = yes
					}
					define_general = {
						name = "Elecast, the Burnished Wing"
						shock = 4
						fire = 4
						manuever = 4
						siege = 2
					}
					castonath_area = {
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						infantry = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						artillery = B61
						add_province_modifier = {
							name = castanor_fortress_castonath_solid
							duration = -1
						}
						if = {
							limit = { has_fort_building_trigger = no }
							if = {
								limit = { B61 = { mil_tech = 24 } }
								add_building = fort_18th
							}
							else_if = {
								limit = { B61 = { mil_tech = 19 } }
								add_building = fort_17th
							}
							else_if = {
								limit = { B61 = { mil_tech = 14 } }
								add_building = fort_16th
							}
							else = {
								add_building = fort_15th
							}
						}
					}
					add_treasury = 500
					add_prestige = 50
					set_country_flag = castonath_patricians_reinstated
					change_primary_culture = castanorian
					set_variable = {
						which = patricianCastanBattlesWon
						value = 0
					}
					swap_non_generic_missions = yes
				}
				reduce_stability_or_adm_power = yes
				reduce_stability_or_adm_power = yes
				add_legitimacy = -20
				set_variable = {
					which = battlesWonAgainstPatricianCastan
					value = 0
				}
				set_variable = {
					which = battlesWonAgainstElecast
					value = 0
				}
				set_variable = {
					which = battlesWonAgainstErella
					value = 0
				}
				set_variable = {
					which = battlesWonAgainstGracos
					value = 0
				}
				set_ruler_flag = castanor_succession_war_original_castan
			}
		}
	}

	# Ruh Roh
	option = {
		name = flavor_castanor.204.a
		trigger = { NOT = { tag = B61 } }
		custom_tooltip = castanor_unlock_disaster_missions
	}

	# Play as them
	option = {
		name = flavor_castanor.204.b
		trigger = { NOT = { tag = B61 } }
		switch_tag = B61
	}

	# OK
	option = {
		name = flavor_castanor.204.c
		trigger = { tag = B61 }
	}

	after = {
		B32 = { swap_non_generic_missions = yes }
		B61 = {
			add_disaster_progress = {
				value = 100
				disaster = castanor_succession_war
			}
			remove_country_modifier = restructuring_administration
			if = {
				limit = { ai = yes }
				add_treasury = 500
				add_stability_or_adm_power = yes
				add_yearly_manpower = 10
				if = {
					limit = { B32 = { land_forcelimit = 300 } }
					add_country_modifier = {
						name = castanor_succession_war_patrician_helper_landlimit_5
						duration = -1
					}
				}
				else_if = {
					limit = { B32 = { land_forcelimit = 250 } }
					add_country_modifier = {
						name = castanor_succession_war_patrician_helper_landlimit_4
						duration = -1
					}
				}
				else_if = {
					limit = { B32 = { land_forcelimit = 200 } }
					add_country_modifier = {
						name = castanor_succession_war_patrician_helper_landlimit_3
						duration = -1
					}
				}
				else_if = {
					limit = { B32 = { land_forcelimit = 160 } }
					add_country_modifier = {
						name = castanor_succession_war_patrician_helper_landlimit_2
						duration = -1
					}
				}
				else_if = {
					limit = { B32 = { land_forcelimit = 120 } }
					add_country_modifier = {
						name = castanor_succession_war_patrician_helper_landlimit_1
						duration = -1
					}
				}
				add_country_modifier = {
					name = castanor_sucession_war_patrician_helper
					duration = -1
				}
			}
			832 = {
				build_to_forcelimit = {
					infantry = 0.6
					cavalry = 0.1
					artillery = 0.3
				}
			}
		}
	}
}

# Disaster end
country_event = {
	id = flavor_castanor.205
	title = flavor_castanor.205.t
	desc = flavor_castanor.205.desc
	picture = NOBLE_ESTATE_DEMANDS_eventPicture
	
	is_triggered_only = yes
	# We don't need this as the end of the disaster is handled elsewhere
	hidden = yes

	option = {
		name = flavor_castanor.205.a
		
	}
}
# Disaster upkeep/maintenance event - fired from on_monthly in the disaster
country_event = {
	id = flavor_castanor.206
	title = flavor_castanor.206.t
	desc = flavor_castanor.206.desc
	picture = FORT_eventPicture
	
	is_triggered_only = yes
	hidden = yes

	option = {
		name = flavor_castanor.206.a
		castanor_succession_war_update_legitimacy_modifiers = yes
		if = {
			limit = {
				OR = {
					NOT = {
						check_variable = {
							which = castanLegitimacy
							value = 0
						}
					}
					check_variable = {
						which = castanLegitimacy
						value = 10
					}
				}
				ai = no
			}
			country_event = { id = flavor_castanor.213 }
		}
	}
}
# Peace option enforced
country_event = {
	id = flavor_castanor.207
	title = flavor_castanor.207.t
	desc = flavor_castanor.207.desc
	picture = NOBLE_ESTATE_DEMANDS_eventPicture
	
	is_triggered_only = yes
	hidden = yes

	option = {
		name = flavor_castanor.207.a
		# If its the Patrician Castanor enforcing
		if = {
			limit = { ROOT = { tag = B61 } }
			set_global_flag = edhar_castan_victory
		}
		# If its the origianl Castan enforcing
		else_if = {
			limit = { ROOT = { tag = B32 } }
			set_global_flag = original_castan_victory
		}
	}
	after = { country_event = { id = flavor_castanor.213 } }
}

# Deal with Gracos
country_event = {
	id = flavor_castanor.208
	title = flavor_castanor.208.t
	desc = flavor_castanor.208.desc
	picture = HORDE_ON_HORSEBACK_eventPicture
	
	is_triggered_only = yes
	fire_only_once = yes

	# Kill em'
	option = {
		name = flavor_castanor.208.a
		B61 = { kill_leader = { type =  "Gracos, the Leaden Breath" } }
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
	}

	# Give them an offer to switch sides
	option = {
		name = flavor_castanor.208.b
		random_list = {
			# Yes
			100 = {
				modifier = {
					factor = 5
					check_variable = {
						which = battlesWonAgainstGracos
						value = 5
					}
				}
				define_general = {
					name = "Gracos, the Leaden Breath"
					shock = 2
					fire = 6
					manuever = 2
					siege = 4
				}
				hidden_effect = { B61 = { kill_leader = { type =  "Gracos, the Leaden Breath" } } }
				set_country_flag = castanor_succession_war_gracos_defected
				castanor_succession_war_increase_castan_legitimacy_small = yes
			}
			# No
			100 = {
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_erella_defected
				}
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_elecast_defected
				}
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_gracos_defected
				}
				reduce_stability_or_adm_power = yes
				B61 = { kill_leader = { type =  "Gracos, the Leaden Breath" } }
			}
		}
	}
}

# Deal with Erella
country_event = {
	id = flavor_castanor.209
	title = flavor_castanor.209.t
	desc = flavor_castanor.209.desc
	picture = HORDE_ON_HORSEBACK_eventPicture
	
	is_triggered_only = yes
	fire_only_once = yes

	# Kill em'
	option = {
		name = flavor_castanor.208.a
		B61 = { kill_leader = { type =  "Erella, the Argent Claw" } }
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
	}

	# Give them an offer to switch sides
	option = {
		name = flavor_castanor.208.b
		random_list = {
			# Yes
			100 = {
				modifier = {
					factor = 5
					check_variable = {
						which = battlesWonAgainstErella
						value = 5
					}
				}
				define_general = {
					name = "Erella, the Argent Claw"
					shock = 6
					fire = 2
					manuever = 6
					siege = 0
					female = yes
				}
				hidden_effect = { B61 = { kill_leader = { type =  "Erella, the Argent Claw" } } }
				set_country_flag = castanor_succession_war_erella_defected
				castanor_succession_war_increase_castan_legitimacy_small = yes
			}
			# No
			100 = {
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_erella_defected
				}
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_elecast_defected
				}
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_gracos_defected
				}
				reduce_stability_or_adm_power = yes
				B61 = { kill_leader = { type =  "Erella, the Argent Claw" } }
			}
		}
	}
}

# Deal with Elecast
country_event = {
	id = flavor_castanor.210
	title = flavor_castanor.210.t
	desc = flavor_castanor.210.desc
	picture = HORDE_ON_HORSEBACK_eventPicture
	
	is_triggered_only = yes
	fire_only_once = yes

	# Kill em'
	option = {
		name = flavor_castanor.208.a
		B61 = { kill_leader = { type = "Elecast, the Burnished Wing" } }
		add_prestige_excess_to_splendour_effect = { VAL = 10 }
	}

	# Give them an offer to switch sides
	option = {
		name = flavor_castanor.208.b
		random_list = {
			# Yes
			100 = {
				modifier = {
					factor = 5
					check_variable = {
						which = battlesWonAgainstElecast
						value = 5
					}
				}
				define_general = {
					name = "Elecast, the Burnished Wing"
					shock = 4
					fire = 4
					manuever = 4
					siege = 2
				}
				hidden_effect = { B61 = { kill_leader = { type = "Elecast, the Burnished Wing" } } }
				set_country_flag = castanor_succession_war_elecast_defected
				castanor_succession_war_increase_castan_legitimacy_small = yes
			}
			# No
			100 = {
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_erella_defected
				}
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_elecast_defected
				}
				modifier = {
					factor = 5
					has_country_flag = castanor_succession_war_gracos_defected
				}
				reduce_stability_or_adm_power = yes
				B61 = { kill_leader = { type = "Elecast, the Burnished Wing" } }
			}
		}
	}
}

# Death of one of the Castans
country_event = {
	id = flavor_castanor.211
	title = flavor_castanor.211.t
	desc = flavor_castanor.211.desc
	
	picture = DEATH_OF_HEIR_eventPicture
	
	is_triggered_only = yes
	trigger = {
		OR = {
			has_ruler_flag = castanor_succession_war_original_castan
			has_ruler_flag = castanor_succession_war_rebel_castan
		}
		has_disaster = castanor_succession_war
	}

	# Damn
	option = {
		name = flavor_castanor.211.a
		if = {
			limit = { tag = B32 }
			castanor_succession_war_decrease_castan_legitimacy_massive = yes
			B61 = { country_event = { id = flavor_castanor.212 } }
		}
		else_if = {
			limit = { tag = B61 }
			castanor_succession_war_increase_castan_legitimacy_massive = yes
			B32 = { country_event = { id = flavor_castanor.212 } }
		}
	}
}

# Tell the other side
country_event = {
	id = flavor_castanor.212
	title = flavor_castanor.212.t
	desc = flavor_castanor.212.desc
	picture = DEATH_OF_HEIR_eventPicture
	
	is_triggered_only = yes

	# Our victory is assured
	option = {
		name = flavor_castanor.212.a
		add_stability_or_adm_power = yes
	}
}

# Deals with the end of the disaster - the Final Proclamation
# Yes I know this is an absolute mess pls don't kill me
country_event = {
	id = flavor_castanor.213
	title = flavor_castanor.213.t
	desc = {
		desc = flavor_castanor.213.descTreatyEdhardrachon
		trigger = {
			has_global_flag = edhar_castan_victory
		}
	}
	desc = {
		desc = flavor_castanor.213.descClaimEdhardrachon
		trigger = {
			B32 = {
				NOT = {
					check_variable = {
						which = castanLegitimacy
						value = 0
					}
				}
			}
		}
	}
	desc = {
		desc = flavor_castanor.213.descTreatyOriginal
		trigger = {
			has_global_flag = original_castan_victory
		}
	}
	desc = {
		desc = flavor_castanor.213.descClaimOriginal
		trigger = {
			B32 = {
				check_variable = {
					which = castanLegitimacy
					value = 10
				}
			}
		}
	}
	
	picture = NOBLE_ESTATE_DEMANDS_eventPicture
	
	is_triggered_only = yes

	immediate = {
		B32 = {
			clr_global_flag = castanor_succession_war_enabled
			end_disaster = castanor_succession_war
			disband_rebels = castanor_succession_war_rebels
		}
		B61 = { disband_rebels = castanor_succession_war_rebels }
	}

	# Edhar Castan victory
	option = {
		name = flavor_castanor.213.a
		trigger = {
			OR = {
				has_global_flag = edhar_castan_victory
				B32 = {
					NOT = {
						check_variable = {
							which = castanLegitimacy
							value = 0
						}
					}
				}
			}
		}
		if = {
			limit = { tag = B61 }
			exile_ruler_as = { name = new_castan }
			B32 = { set_country_flag = trials_of_castan_one_time_bypass } # I know this is bad code
			switch_tag = B32
			B32 = {
				set_ruler = new_castan
				add_dip_power = 100
				add_adm_power = 100
				add_mil_power = 100
			}
			custom_tooltip = edhardrachon_inherit_tt
		}
		else_if = {
			limit = { tag = B32 }
			reduce_stability_or_adm_power = yes
		}
		tooltip = {
			B32 = {
				set_country_flag = patrician_castanor
				add_government_reform = castanor_succession_war_reward_edhar_castan
				inherit = B61
				add_government_reform = original_castanor_trials_reform
			}
		}
	}

	# Original Castan victory
	option = {
		name = flavor_castanor.213.b
		trigger = {
			OR = {
				has_global_flag = original_castan_victory
				B32 = {
					check_variable = {
						which = castanLegitimacy
						value = 10
					}
				}
			}
		}
		if = {
			limit = { tag = B61 }
			switch_tag = B32
			B32 = { reduce_stability_or_adm_power = yes }
		}
		else_if = {
			limit = { tag = B32 }
			add_dip_power = 100
			add_adm_power = 100
			add_mil_power = 100
		}
		B32 = {
			add_government_reform = castanor_succession_war_reward_original_castan
			inherit = B61
		}
	}

	after = {
		country_event = { id = flavor_castanor.222 days = 60 }
		country_event = { id = flavor_castanor.21414 days = 1 }
		set_country_flag = castanor_culture_missions_unlocked
		B32 = {
			clr_country_flag = trials_of_castan_one_time_bypass
			hidden_effect = {
				remove_country_modifier = castanor_succession_war_favored
				remove_country_modifier = castanor_succession_war_most_favored
				remove_country_modifier = castanor_succession_war_even
			}
			if = {
				limit = { 840 = { has_province_modifier = castanor_north_citadel_capital } }
				840 = { move_capital_effect = yes }
			}
			else_if = {
				limit = { 834 = { has_province_modifier = castanor_south_citadel_capital } }
				834 = { move_capital_effect = yes }
			}
			else_if = {
				limit = { 833 = { has_province_modifier = castanor_castonath_capital } }
				833 = { move_capital_effect = yes }
			}
			else = { 840 = { move_capital_effect = yes } }
		}
		if = {
			limit = {
				OR = {
					has_global_flag = edhar_castan_victory
					B32 = {
						NOT = {
							check_variable = {
								which = castanLegitimacy
								value = 0
							}
						}
					}
				}
			}
			B32 = {
				set_country_flag = patrician_castanor
				add_government_reform = castanor_succession_war_reward_edhar_castan
				# inherit = B61 has to be done with a delay lest the game freak out and put you in game over screen
				add_government_reform = original_castanor_trials_reform
			}
		}
		B32 = { swap_non_generic_missions = yes }
		every_province = {
			clr_province_flag = castanor_stack_wipe
		}
	}
}
# Cleanup - so that the inherit works if you're enforcing as Edhardrachon
country_event = {
	id = flavor_castanor.21414
	title = flavor_castanor.214.t
	desc = flavor_castanor.214.desc
	picture = FORT_eventPicture
	
	is_triggered_only = yes
	hidden = yes

	option = {
		if = {
			limit = { exists = B61 }
			inherit = B61
		}
		hidden_effect = {
			castonath_area = {
				castonath_patricians_decrease_influence_effect = yes
				castonath_patricians_decrease_influence_effect = yes
				castonath_patricians_decrease_influence_effect = yes
			}
		}
	}
}

# Low Castan claim - big rebels arise
country_event = {
	id = flavor_castanor.214
	title = flavor_castanor.214.t
	desc = flavor_castanor.214.desc
	picture = MARCHING_PEASANTS_eventPicture
	
	is_triggered_only = yes
	trigger = {
		if = {
			limit = { tag = B61 }
			check_variable = {
				which = castanLegitimacy
				value = 6
			}
		}
		else = {
			NOT = {
				check_variable = {
					which = castanLegitimacy
					value = 4
				}
			}
		}
		ai = no
	}

	# Oh no
	option = {
		name = flavor_castanor.214.a
		random_owned_province = {
			limit = { controlled_by = ROOT }
			if = {
				limit = { owner = { tag = B32 } }
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 3
					friend = B61
					win = yes
					unrest = 4
				}
			}
			else = {
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 3
					friend = B32
					win = yes
					unrest = 4
				}
			}
			add_devastation = 10
		}
		random_owned_province = {
			limit = { controlled_by = ROOT }
			if = {
				limit = { owner = { tag = B32 } }
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 2
					friend = B61
					win = yes
					unrest = 4
				}
			}
			else = {
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 2
					friend = B32
					win = yes
					unrest = 4
				}
			}
			add_devastation = 10
		}
	}
}

# Low Castan claim - nobles + retinues flee to other Castan
country_event = {
	id = flavor_castanor.215
	title = flavor_castanor.215.t
	desc = flavor_castanor.215.desc
	picture = SMUGGLERS_eventPicture
	
	is_triggered_only = yes
	trigger = {
		if = {
			limit = { tag = B61 }
			check_variable = {
				which = castanLegitimacy
				value = 6
			}
		}
		else = {
			NOT = {
				check_variable = {
					which = castanLegitimacy
					value = 4
				}
			}
		}
		ai = no
	}

	# Let them go, sieze their holdings I guess
	option = {
		name = flavor_castanor.215.a
		take_estate_land_share_small = { estate = estate_nobles }
		add_prestige = -10
		add_manpower = -5
	}

	# Maybe we can convince them to stay?
	option = {
		name = flavor_castanor.215.b
		add_years_of_income = -0.2
		add_estate_loyalty = {
			estate = estate_nobles
			loyalty = 10
		}
	}
}

# Even Castan Legitimacy - two groups start fighting
country_event = {
	id = flavor_castanor.216
	title = flavor_castanor.216.t
	desc = flavor_castanor.216.desc
	picture = ITALIAN_wars_eventPicture
	
	is_triggered_only = yes
	trigger = {
		check_variable = {
			which = castanLegitimacy
			value = 3
		}
		NOT = {
			check_variable = {
				which = castanLegitimacy
				value = 7
			}
		}
		ai = no
	}

	immediate = {
		random_owned_province = {
			save_event_target_as = fightingProv
		}
	}

	# Let them fight it out
	option = {
		name = flavor_castanor.216.a
		random_list = {
			# Patrician side wins
			1 = {
				if = {
					limit = { tag = B61 }
					add_prestige = 10
					add_yearly_manpower = 0.5
				}
				else = {
					add_prestige = -5
					event_target:fightingProv = {
						add_base_tax = -1
					}
				}
			}
			# Original side wins
			1 = {
				if = {
					limit = { tag = B61 }
					add_prestige = -5
					event_target:fightingProv = {
						add_base_tax = -1
					}
				}
				else = {
					add_prestige = 10
					add_yearly_manpower = 0.5
				}
			}
			# Inconclusive
			1 = {
				event_target:fightingProv = {
					add_unrest = 10
					add_devastation = 20
				}
			}
		}
	}

	# Shut it all down
	option = {
		name = flavor_castanor.216.b
		add_mil_power = -33
	}
}

# High Castan Legitimacy - nonbelievers turned in
country_event = {
	id = flavor_castanor.217
	title = flavor_castanor.217.t
	desc = flavor_castanor.217.desc
	picture = GUILLOTINE_eventPicture
	
	is_triggered_only = yes
	trigger = {
		if = {
			limit = { tag = B61 }
			NOT = {
				check_variable = {
					which = castanLegitimacy
					value = 4
				}
			}
		}
		else = {
			check_variable = {
				which = castanLegitimacy
				value = 6
			}
		}
		ai = no
	}

	immediate = {
		random_owned_province = {
			save_event_target_as = nonbelieverProv
		}
	}

	# Show them mercy
	option = {
		name = flavor_castanor.217.a
		add_legitimacy = -10
		event_target:nonbelieverProv = { area = { add_unrest = -3 } }
	}

	# Can't allow them to spread their poison
	option = {
		name = flavor_castanor.217.b
		add_legitimacy = 10
		event_target:nonbelieverProv = { area = { add_unrest = 10 } }
	}
}

# High Castan Legitimacy - Prominent patrician who had been on other sides switches loyalty
country_event = {
	id = flavor_castanor.218
	title = flavor_castanor.218.t
	desc = flavor_castanor.218.desc
	picture = MERCHANTS_TALKING_eventPicture
	
	is_triggered_only = yes
	trigger = {
		if = {
			limit = { tag = B61 }
			NOT = {
				check_variable = {
					which = castanLegitimacy
					value = 4
				}
			}
		}
		else = {
			check_variable = {
				which = castanLegitimacy
				value = 6
			}
		}
		ai = no
	}

	# We don't suffer traitors, if they switch sides once, they will switch sides again
	option = {
		name = flavor_castanor.218.a
		if = {
			limit = { tag = B61 }
			add_estate_loyalty = {
				estate = estate_castonath_patricians
				loyalty = -5
			}
			add_prestige = 10
			add_dip_power = 50
		}
		else = {
			add_prestige = 10
			add_dip_power = 50
		}
	}
	# We'll take any support we can get
	option = {
		name = flavor_castanor.218.b
		give_estate_land_share_medium = { estate = estate_castonath_patricians }
		add_years_of_income = 1
		add_legitimacy = 10
		add_corruption = 1
	}
}

# Lower Castan Legitimacy - sell off some stuff
country_event = {
	id = flavor_castanor.219
	title = flavor_castanor.219.t
	desc = flavor_castanor.219.desc
	picture = IMPORTANT_STATUE_eventPicture
	
	is_triggered_only = yes
	trigger = {
		ai = no
	}

	# DO EEIT
	option = {
		name = flavor_castanor.219.a
		add_years_of_income = 0.666
		if = {
			limit = { tag = B61 }
			castanor_succession_war_increase_castan_legitimacy_small = yes
		}
		else = {
			castanor_succession_war_decrease_castan_legitimacy_small = yes
		}
	}
	# Nah no point
	option = {
		name = flavor_castanor.219.b
	}
}

# Raise Castan Legitimacy - send troops to pacify provinces
country_event = {
	id = flavor_castanor.220
	title = flavor_castanor.220.t
	desc = flavor_castanor.220.desc
	picture = PIRATES_CAPTURED_eventPicture
	
	is_triggered_only = yes
	trigger = {
		ai = no
	}

	# Send troops to propagandize
	option = {
		name = flavor_castanor.220.a
		add_yearly_manpower = -1
		if = {
			limit = { tag = B61 }
			castanor_succession_war_decrease_castan_legitimacy_small = yes
		}
		else = {
			castanor_succession_war_increase_castan_legitimacy_small = yes
		}
	}

	# Nah no point
	option = {
		name = flavor_castanor.220.b
	}
}

# Regularly size rebels arise
country_event = {
	id = flavor_castanor.221
	title = flavor_castanor.221.t
	desc = flavor_castanor.221.desc
	picture = ANGRY_MOB_eventPicture
	
	is_triggered_only = yes
	trigger = {
		ai = no
	}

	# Oh no
	option = {
		name = flavor_castanor.221.a
		random_owned_province = {
			limit = { controlled_by = ROOT }
			if = {
				limit = { owner = { tag = B32 } }
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 2
					friend = B61
				}
			}
			else = {
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 2
					friend = B32
				}
			}
		}
		random_owned_province = {
			limit = { controlled_by = ROOT }
			if = {
				limit = { owner = { tag = B32 } }
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 1
					friend = B61
				}
			}
			else = {
				spawn_rebels = {
					type = castanor_succession_war_rebels
					size = 1
					friend = B32
				}
			}
		}
	}
}

# Patrician Castanor victory: diplo stuff
country_event = {
	id = flavor_castanor.222
	title = flavor_castanor.222.t
	desc = flavor_castanor.222.desc
	picture = OVEREXTENSION_eventPicture
	
	is_triggered_only = yes
	trigger = {
		ai = no
		any_country = {
			OR = {
				has_country_flag = patrician_castanor_hostile_ally
				has_country_flag = patrician_castanor_rivalled_ally
				has_country_flag = patrician_castanor_threatened_ally
			}
		}
		has_country_flag = patrician_castanor
	}

	# Pay the piper
	option = {
		name = flavor_castanor.222.a
		every_country = {
			if = {
				limit = { has_country_flag = patrician_castanor_hostile_ally }
				ROOT = { add_manpower = -7.5 }
			}
			else_if = {
				limit = { has_country_flag = patrician_castanor_rivalled_ally }
				ROOT = { add_treasury = -750 }
			}
			else_if = {
				limit = { has_country_flag = patrician_castanor_threatened_ally }
				add_truce_with = ROOT
			}
		}
	}
	# Renege on your deals
	option = {
		name = flavor_castanor.222.b
		every_country = {
			limit = {
				OR = {
					has_country_flag = patrician_castanor_hostile_ally
					has_country_flag = patrician_castanor_rivalled_ally
					has_country_flag = patrician_castanor_threatened_ally
				}
			}
			add_opinion = {
				who = ROOT
				modifier = castanor_reneged_on_support
			}
		}
		add_country_modifier = {
			name = castanor_reneged_on_support_mod
			duration = 3650
		}
	}
}
