namespace = aw_goblins

#The Adventurers Wanted uses a strict ID system to make the system easier to author content for
#The IDs below 100 are core utility systems that are usually straight copies or modifications of how the AW system works, such as monsters being able to migrate and be defeated by adventurers.
#The IDs above 100 are more unique situations for the specific encounter, but they should correlate with the numbers from above: if ID 10s deal with migration, then ID 110s should be the unique events to do with migration - for example bribing a Thieves Guild to GTFO your country
#Crazy and more uniques ones that dont conform to the utilities should be ID 200

#USE THE anb_aw_goblins TO SEE A SIMPLE COPY-PASTABLE FORMAT IN ADDITION TO STUFF LIKE MIGRATION STYLES ETC
#Search for CHANGEABLE for the criteria you should change in that file and this one

#################################################################
# Welcome to the master file for the Adventurers Wanted System. In the comments below you'll see copy-pastable events for you to choose, different migration styles as well as prebuilt events to handle stuff like spawning rebellions
#################################################################

#0 - spawn in province
province_event = {
	id = aw_goblins.0
	title = aw_goblins.0.t
	desc = aw_goblins.0.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	#hidden = yes
	
	#yup thats happening
	option = {
		name = aw_basic.0.a
		ai_chance = { 
			factor = 1 
		}
		add_permanent_province_modifier  = {
			name = aw_goblins_1
			duration = -1  
		}

		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip
	}
}


#1 - event manager, called by on_actions. This happens ONCE per pulse. If you have 7 of these, it still only fires the manager once
country_event = {
	id = aw_goblins.1
	title = aw_goblins.1.t
	desc = aw_goblins.1.d
	picture = COMET_SIGHTED_eventPicture
	
	hidden = yes
	is_triggered_only = yes
	
	trigger = {
		any_owned_province = {
			OR = { 
				has_province_modifier = aw_goblins_1
				has_province_modifier = aw_goblins_2
				has_province_modifier = aw_goblins_3
			}
		}
	}

	mean_time_to_happen = {
		days = 1
		modifier = {
			factor = 2
			num_of_owned_provinces_with = {
				value = 3
				OR = { 
					has_province_modifier = aw_goblins_1
					has_province_modifier = aw_goblins_2
					has_province_modifier = aw_goblins_3
				}
			}
		}
	}

	immediate = {
		random_owned_province = {
			limit = {
				OR = { 
					has_province_modifier = aw_goblins_1
					has_province_modifier = aw_goblins_2
					has_province_modifier = aw_goblins_3
				}
			}
			save_event_target_as = aw_goblins_target
		}
	}
	
	
	option = {
		event_target:aw_goblins_target = {
			random_list = {
				#10 - Base migration
				5 = {
					province_event = { id = aw_goblins.10 }
				}
				#13 - Base propagation
				5 = {
					#Specific modifiers
					modifier = {
						factor = 2
						has_province_modifier = aw_goblins_3	#just to make it more likely
					}
					province_event = { id = aw_goblins.13 }
				}

				#15 - Migrate to non monstrous if monstrous nation is owner
				75 = {
					modifier = {
						#only want this to ever be part of the equation if you are monstrous
						factor = 0
						NOT = { owner = { has_country_modifier = monstrous_nation } }
					}
					province_event = { id = aw_goblins.15 }	#Migrate out of monstrous. high just so it jumps out of there sooner rather than later
				}

				#20 - natural removal
				7 = {
					province_event = { id = aw_goblins.20 }	#Natural removal
				}

				#21 - adventurer removal
				15 = {
					#Base modifiers

					#more likely if generous quest rewards/adverturer nation
					modifier = {
						factor = 2
						OR = {
							owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
							owner = { has_adventurer_reform = yes }
							owner = { has_estate_privilege = estate_ahati_support_south }
							owner = { has_estate_privilege = estate_ahati_support_brotherhoods }
						}
					}

					#more likely if loyal
					modifier = {
						factor = 2
						owner = {
							estate_loyalty = {
								estate = estate_adventurers
								loyalty = 60
							}
						}
					}

					#more likely if high influence
					modifier = {
						factor = 2
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 60
							}
						}
					}
					#small influence boost at 30
					modifier = {
						factor = 1.5
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 30
							}
						}
					}
					#adventurer type sponsorships
					modifier = {
						factor = 2
						owner = {
							has_estate_privilege = estate_adventurers_sponsor_sellswords
						}
					}
					province_event = { id = aw_goblins.21 }
				}

				#22 - natural tier down
				10 = {
					province_event = { id = aw_goblins.22 } 
				}

				#23 - adventurer tier down
				20 = {
					#Base modifiers

					#more likely if generous quest rewards/adverturer nation
					modifier = {
						factor = 2
						OR = {
							owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
							owner = { has_adventurer_reform = yes }
							owner = { has_estate_privilege = estate_ahati_support_south }
							owner = { has_estate_privilege = estate_ahati_support_brotherhoods }
						}
					}

					#more likely if loyal
					modifier = {
						factor = 2
						owner = {
							estate_loyalty = {
								estate = estate_adventurers
								loyalty = 60
							}
						}
					}

					#more likely if high influence
					modifier = {
						factor = 2
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 60
							}
						}
					}
					#small influence boost at 30
					modifier = {
						factor = 1.5
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 30
							}
						}
					}
					#adventurer type sponsorships
					modifier = {
						factor = 2
						owner = {
							has_estate_privilege = estate_adventurers_sponsor_sellswords
						}
					}
					province_event = { id = aw_goblins.23 }
				}

				#24 - monstrous nation removal
				50 = {
					modifier = {
						#only want this to ever be part of the equation if you are monstrous
						factor = 0
						NOT = { owner = { has_country_modifier = monstrous_nation } }
					}
					#Base modifiers
					province_event = { id = aw_goblins.24 }
				}

				#25 - monstrous natural tier down.
				50 = {
					#Base modifiers
					modifier = {
						#only want this to ever be part of the equation if you are monstrous
						factor = 0
						NOT = { owner = { has_country_modifier = monstrous_nation } }
					}
					province_event = { id = aw_goblins.25 }   
				}

				#30 - natural tier up. modified, was 10 made it higher as its goblins
				15 = {
					province_event = { id = aw_goblins.30 }   
				}

				#40 - convert to pop if tolerating
				2 = {
					modifier = {
						factor = 3
						owner = {
							medium_tolerance_goblin_race_trigger = yes
						}
					}
					modifier = {
						factor = 4
						owner = {
							high_tolerance_goblin_race_trigger = yes
						}
					}
					#adventurer type sponsorships
					modifier = {
						factor = 5
						owner = {
							has_estate_privilege = estate_adventurers_sponsor_do_gooders
						}
					}
					province_event = { id = aw_goblins.41 }  
				}

				#41 - convert to pop, monstrous subjugation
				33 = {
					modifier = {
						#only want this to ever be part of the equation if you are monstrous
						factor = 0
						NOT = { owner = { has_country_modifier = monstrous_nation } }
					}
					province_event = { id = aw_goblins.41 }  
				}

				#120 - goblins defeated by adventurers, but ask to be pops
				5 = {
					#Base modifiers

					#more likely if generous quest rewards/adverturer nation
					modifier = {
						factor = 2
						OR = {
							owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
							owner = { has_adventurer_reform = yes }
							owner = { has_estate_privilege = estate_ahati_support_south }
							owner = { has_estate_privilege = estate_ahati_support_brotherhoods }
						}
					}

					#more likely if loyal
					modifier = {
						factor = 2
						owner = {
							estate_loyalty = {
								estate = estate_adventurers
								loyalty = 60
							}
						}
					}

					#more likely if high influence
					modifier = {
						factor = 2
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 60
							}
						}
					}
					#small influence boost at 30
					modifier = {
						factor = 1.5
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 30
							}
						}
					}
					#adventurer type sponsorships
					modifier = {
						factor = 2
						owner = {
							has_estate_privilege = estate_adventurers_sponsor_do_gooders
						}
					}
					province_event = { id = aw_goblins.120 }   
				}

				#121 - goblins kill themselves in a runaway chain of backstabbing
				5 = {
					province_event = { id = aw_goblins.121 }   
				}

				#122 - goblins blow themselves up
				5 = {
					modifier = {
						factor = 1.5
						current_age = age_of_reformation
					}
					modifier = {
						factor = 2
						current_age = age_of_revolutions
					}
					province_event = { id = aw_goblins.122 }   
				}

				#123 - goblintide, goblins attack once they are large enough
				40 = { #a horde of goblins doesn't wait long
					owner = { country_event = { id = aw_goblins.123 } }
				}

				#124 - dwarven extreme prejudice
				20 = {
					modifier = {
						factor = 0
						owner = { 
							NOT = {
								has_country_modifier = dwarven_administration
								has_country_modifier = dwarven_military
							}
						}
					}

					#Base modifiers

					#more likely if generous quest rewards/adverturer nation
					modifier = {
						factor = 1.3
						OR = {
							owner = { has_estate_privilege = estate_adventurers_generous_quest_rewards }
							owner = { has_adventurer_reform = yes }
							owner = { has_estate_privilege = estate_ahati_support_south }
							owner = { has_estate_privilege = estate_ahati_support_brotherhoods }
						}
					}

					#more likely if loyal
					modifier = {
						factor = 1.3
						owner = {
							estate_loyalty = {
								estate = estate_adventurers
								loyalty = 60
							}
						}
					}

					#more likely if high influence
					modifier = {
						factor = 1.3
						owner = {
							estate_influence = {
								estate = estate_adventurers
								influence = 60
							}
						}
					}
					owner = { country_event = { id = aw_goblins.124 } }
				}

				#130 - goblin baby boom
				5 = { #shouldn't overlap with regular propogation too much
					province_event = { id = aw_goblins.130 }   
				}

				#131 - they're coming out of the walls!
				10 = { #dwarovar is tough
					#Specific modifiers
					modifier = {
						factor = 1.5
						has_province_modifier = aw_goblins_2	#just to make it more likely
					}
					province_event = { id = aw_goblins.131 }   
				}

				#200 - goblins dig up local farms
				10 = {
					province_event = { id = aw_goblins.200 }   
				}

				#201 - goblins cause small explosion
				10 = {
					province_event = { id = aw_goblins.201 }   
				}

				#202 - goblins find gems underground
				15 = {
					province_event = { id = aw_goblins.202 }   
				}

				#203 - villagers provoke goblins
				5 = {
					#Reverse base modifiers

					#more likely if NOT generous quest rewards/adverturer nation
					modifier = {
						factor = 1.3
						owner = { NOT = { has_estate_privilege = estate_adventurers_generous_quest_rewards } }
						owner = { NOT = { has_adventurer_reform = yes } }
						owner = { NOT = { has_estate_privilege = estate_ahati_support_south } }
						owner = { NOT = { has_estate_privilege = estate_ahati_support_brotherhoods } }
					}

					#more likely if near disloyal
					modifier = {
						factor = 1.3
						owner = {
							NOT = {
								estate_loyalty = {
									estate = estate_adventurers
									loyalty = 40
								}
							}
						}
					}

					#more likely if low influence
					modifier = {
						factor = 1.3
						owner = {
							NOT = {
								estate_influence = {
									estate = estate_adventurers
									influence = 40
								}
							}
						}
					}
					province_event = { id = aw_goblins.203 }   
				}

				#204 - goblins kill local family in raid
				7 = {
					province_event = { id = aw_goblins.204 }   
				}

				#205 - goblins cause cave in
				15 = {
					modifier = {
						factor = 1.3
						has_province_modifier = aw_goblins_2	#more likely if cave
					}
					province_event = { id = aw_goblins.205 }   
				}

				#206 - goblins ransack local brewery
				10 = {
					province_event = { id = aw_goblins.206 }   
				}

				#207 - goblin disrupt realm trade routes
				10 = {
					province_event = { id = aw_goblins.207 }   
				}

				#208 - Horde overruns countryside. incur negative modifier on countryside
				5 = {
					modifier = {
						factor = 2
						has_province_modifier = aw_goblins_3	#more likely if horde
					}
					province_event = { id = aw_goblins.208 }   
				}
			}
		}
	}
}


#2 - notification of advanturers wanted spawning

############## 10s - Migration and Propagation ###################

#10 - Base migration
province_event = {
	id = aw_goblins.10
	title = aw_goblins.10.t
	desc = aw_goblins.10.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		
		#MAKE SURE TO ADD A any_neighbor_province or relevant check - aka make sure that the immediate = { } effects can even occur before doing the event!
		any_neighbor_province = {
			is_city = yes
			owner = { NOT = { has_country_modifier = monstrous_nation } }
			
			NOT = { has_province_modifier = aw_goblins_1 }
			NOT = { has_province_modifier = aw_goblins_2 }
			NOT = { has_province_modifier = aw_goblins_3 }
			
			NOT = { has_any_goblin_pop_trigger = yes }
		}
	}
	
	immediate = {
		hidden_effect = {
			
			######################################################################
			#Here's a list of all migration types for you to copy and paste
			#Note: you may need to add something in the trigger = { } above, for example for random_neighbour_province, as you might want to check if this valid province even has a neighbour you can migrate to!
			######################################################################
			
			#CHANGEABLE - MIGRATION TYPE - Any adjacent province
			random_neighbor_province = {
				limit = {
					#Base Conditions
					is_city = yes
					
					NOT = { has_province_modifier = aw_goblins_1 }
					NOT = { has_province_modifier = aw_goblins_2 }
					NOT = { has_province_modifier = aw_goblins_3 }
					
					
					#Specific Conditions
					NOT = { has_any_goblin_pop_trigger = yes }
				   
				}
				save_event_target_as = aw_goblins_migration_target
			}
			owner = { save_event_target_as = aw_goblins_migration_origin_owner }
		}
	}
	
	#If migration is within country
	option = {  
		name = aw_goblins.10.a
		ai_chance = { factor = 100 }
		goto = aw_goblins_migration_target
		trigger = {
			event_target:aw_goblins_migration_target = {
				owned_by = event_target:aw_goblins_migration_origin_owner
			}
		}
		
		#It's migration, so remove modifier from previous province
		tooltip = { #this is fake. the real one happens below
			remove_province_modifier = aw_goblins_1
			remove_province_modifier = aw_goblins_2
			remove_province_modifier = aw_goblins_3
		}
		
		event_target:aw_goblins_migration_target = {
			# if = {
				# limit = {
					# owned_by = event_target:aw_goblins_migration_origin_owner #you need this as this is only for provinces you own. option 10.b is for others
				# }
				#CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target
				if = {
					limit = {
						ROOT = { has_province_modifier = aw_goblins_1 }
					}
					add_permanent_province_modifier = { 
						name = aw_goblins_1
						duration = -1
					}
				}
				else_if = {
					limit = {
						ROOT = { has_province_modifier = aw_goblins_2 }
					}
					add_permanent_province_modifier = { 
						name = aw_goblins_2
						duration = -1
					}
				}
				else_if = {
					limit = {
						ROOT = { has_province_modifier = aw_goblins_3 }
					}
					add_permanent_province_modifier = { 
						name = aw_goblins_3
						duration = -1
					}
				}
				#real removal. the other real one is in the called event in the else
				hidden_effect = {
					ROOT = {
						remove_province_modifier = aw_goblins_1
						remove_province_modifier = aw_goblins_2
						remove_province_modifier = aw_goblins_3
					}
				}
			# }
		}
	}

	#If migration is sent to OTHER country
	option = {  
		name = aw_goblins.10.b
		ai_chance = { factor = 100 }
		goto = aw_goblins_migration_target
		trigger = {
			event_target:aw_goblins_migration_target = {
				NOT = { owned_by = event_target:aw_goblins_migration_origin_owner }   #if the target isnt in your country, then send an event to them that notifies + adds it on their end
			}
		}

		#It's migration, so remove modifier from previous province
		tooltip = { #this is fake. the real one happens via the event
			remove_province_modifier = aw_goblins_1
			remove_province_modifier = aw_goblins_2
			remove_province_modifier = aw_goblins_3
		}
		
		custom_tooltip = aw_goblins_migrate_to_other_country_tt
		hidden_effect = {
			event_target:aw_goblins_migration_target = {
				province_event = {
					id = aw_goblins.11
				}
			}
		}
	}
}

#11 - migration target notification if it goes to other country
province_event = {
	id = aw_goblins.11
	title = aw_goblins.11.t
	desc = aw_goblins.11.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	option = {
		# deal with it ourselves
		name = aw_basic.0.a
		ai_chance = { 
			factor = 20 
		}
		
		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip
		
		owner = {
			add_opinion = {
				who = event_target:aw_goblins_migration_origin_owner
				modifier = aw_crossed_border
			}
		}
		
		#CHANGEABLE - SPREAD TYPE: Tier makes Tier of the same at target ---(NOTE: THIS USUALLY SHOULD BE THE SAME AS id.10 above)----
		if = {
			limit = {
				FROM = { has_province_modifier = aw_goblins_1 }
			}
			add_permanent_province_modifier = { 
				name = aw_goblins_1
				duration = -1
			}
		}
		else_if = {
			limit = {
				FROM = { has_province_modifier = aw_goblins_2 }
			}
			add_permanent_province_modifier = { 
				name = aw_goblins_2
				duration = -1
			}
		}
		else_if = {
			limit = {
				FROM = { has_province_modifier = aw_goblins_3 }
			}
			add_permanent_province_modifier = { 
				name = aw_goblins_3
				duration = -1
			}
		}
	}
	
	after = {
		FROM = {	#cleanup event to remove the modifiers from the original province
			remove_province_modifier = aw_goblins_1
			remove_province_modifier = aw_goblins_2
			remove_province_modifier = aw_goblins_3
		}
	}
}

#13 - Base propagation - SPECIAL: only level 3 can propagate. The Goblin Horde (level 3) splits up and makes a level 1 at an adjacent prov
province_event = {
	id = aw_goblins.13
	title = aw_goblins.13.t
	desc = aw_goblins.13.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		has_province_modifier = aw_goblins_3

		#MAKE SURE TO ADD A any_neighbor_province or relevant check - aka make sure that the immediate = { } effects can even occur before doing the event!
		any_neighbor_province = {
			is_city = yes
			owner = { NOT = { has_country_modifier = monstrous_nation } }

			NOT = { has_province_modifier = aw_goblins_1 }
			NOT = { has_province_modifier = aw_goblins_2 }
			NOT = { has_province_modifier = aw_goblins_3 }

			NOT = { has_any_goblin_pop_trigger = yes }
		}
	}
	
	immediate = {
		hidden_effect = {

			#See .10 for full copy-pastable examples

			#CHANGEABLE - MIGRATION TYPE - Any adjacent province
			random_neighbor_province = {
				limit = {
					#Base Conditions
					is_city = yes

					NOT = { has_province_modifier = aw_goblins_1 }
					NOT = { has_province_modifier = aw_goblins_2 }
					NOT = { has_province_modifier = aw_goblins_3 }


					#Specific Conditions
					NOT = { has_any_goblin_pop_trigger = yes }
				   
				}
				save_event_target_as = aw_goblins_migration_target
			}
			owner = { save_event_target_as = aw_goblins_migration_origin_owner }
		}
	}

	#If migration is within country
	option = {  
		name = aw_goblins.13.a
		ai_chance = { factor = 100 }
		goto = aw_goblins_migration_target
		trigger = {
			event_target:aw_goblins_migration_target = {
				owned_by = event_target:aw_goblins_migration_origin_owner
			}
		}

		#Special - downgrades tier 3 to 2 as goblin horde splits
		remove_province_modifier = aw_goblins_3
		add_permanent_province_modifier = { 
			name = aw_goblins_2
			duration = -1
		}

		event_target:aw_goblins_migration_target = {
			# if = {
				# limit = {
					# owned_by = ROOT
				# }

				#CHANGEABLE - SPREAD TYPE: Makes tier 1
				add_permanent_province_modifier = { 
					name = aw_goblins_1
					duration = -1
				}
			# }
		}
	}

	#If migration is sent to OTHER country
	option = {  
		name = aw_goblins.13.b
		ai_chance = { factor = 100 }
		goto = aw_goblins_migration_target
		trigger = {
			event_target:aw_goblins_migration_target = {
				NOT = { owned_by = event_target:aw_goblins_migration_origin_owner }   #if the target isnt in your country, then send an event to them that notifies + adds it on their end
			}
		}

		#Special - downgrades tier 3 to 2 as goblin horde splits
		remove_province_modifier = aw_goblins_3
		add_permanent_province_modifier = { 
			name = aw_goblins_2
			duration = -1
		}

		custom_tooltip = aw_goblins_migrate_to_other_country_tt
		hidden_effect = {
			event_target:aw_goblins_migration_target = {
				province_event = {
					id = aw_goblins.14
				}
			}
		}
	}
}

#14 - propagation target notification
province_event = {
	id = aw_goblins.14
	title = aw_goblins.14.t
	desc = aw_goblins.14.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	option = {
		# deal with it ourselves
		name = aw_basic.0.a
		ai_chance = { 
			factor = 20 
		}

		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip

		owner = {
			add_opinion = {
				who = event_target:aw_goblins_migration_origin_owner
				modifier = aw_crossed_border
			}
		}

		#CHANGEABLE - SPREAD TYPE: Only level 1
		add_permanent_province_modifier = { 
			name = aw_goblins_1
			duration = -1
		}

	}

}

#15 - Migrate to non monstrous if monstrous nation is owner (if its applicable to monsters, like wyverns etc, then this is fine to remove, else keep)
province_event = {
	id = aw_goblins.15
	title = aw_goblins.15.t
	desc = aw_goblins.15.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { has_country_modifier = monstrous_nation }
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}

		owner = {
			any_neighbor_country = {
				NOT = { has_country_modifier = monstrous_nation }
				any_owned_province = {
					#Base Conditions
					NOT = { province_id = ROOT }
					is_city = yes

					NOT = { has_province_modifier = aw_goblins_1 }
					NOT = { has_province_modifier = aw_goblins_2 }
					NOT = { has_province_modifier = aw_goblins_3 }


					#Specific Conditions
				}
			}
		}
	}
	
	immediate = {
		hidden_effect = {

			#Special one for this event, targeting a neighbouring country that isnt monstrous and any of their owned events

			#CHANGABLE - edit Specific Conditions to make sure it moves to that kind of province! (e.g. if its a thieves guild it will move to a city province)

			owner = {
				random_neighbor_country = {
					limit = {
						NOT = { has_country_modifier = monstrous_nation }
					}
					random_owned_province = {
						limit = {
							#Base Conditions
							NOT = { province_id = ROOT }
							is_city = yes
	
							NOT = { has_province_modifier = aw_goblins_1 }
							NOT = { has_province_modifier = aw_goblins_2 }
							NOT = { has_province_modifier = aw_goblins_3 }
	
	
							#Specific Conditions
						   
						}
						save_event_target_as = aw_goblins_migration_target
					}
				}
				save_event_target_as = aw_goblins_migration_origin_owner
			}
		}
	}


	#If migration is sent to OTHER country
	option = {  
		name = aw_goblins.10.b
		ai_chance = { factor = 100 }
		goto = aw_goblins_migration_target
		# trigger = {
			# event_target:aw_goblins_migration_target = {
				# NOT = { owned_by = ROOT }   #if the target isnt in your country, then send an event to them that notifies + adds it on their end
			# }
		# }

		#It's migration, so remove modifier from previous province
		tooltip = { #this is fake. the real one happens via the event
			remove_province_modifier = aw_goblins_1
			remove_province_modifier = aw_goblins_2
			remove_province_modifier = aw_goblins_3
		}

		custom_tooltip = aw_goblins_migrate_to_other_country_tt
		hidden_effect = {
			event_target:aw_goblins_migration_target = {
				province_event = {
					id = aw_goblins.11
				}
			}
		}
	}
}

############## 20s - Removal/Tier Down ###################

#20 - natural removal
province_event = {
	id = aw_goblins.20
	title = aw_goblins.20.t
	desc = aw_goblins.20.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}
	
	option = {
 
		name = aw_goblins.20.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3

	}
}

#21 - adventurer removal
province_event = {
	id = aw_goblins.21
	title = aw_goblins.21.t
	desc = aw_goblins.21.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { OR = { has_estate = estate_adventurers has_adventurer_reform = yes  } }
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}
	
	option = {
		# oh, thank goodness
		name = aw_goblins.21.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3

		owner = {
			if = {
				limit = { has_estate = estate_adventurers }
				add_estate_influence_modifier = {
					estate = estate_adventurers
					desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
					duration = 3650
					influence = 5
				}
			}
		}

		owner = { add_prestige_excess_to_splendour_effect = { VAL=3 } }

	}
}

#22 - natural tier down
province_event = {
	id = aw_goblins.22
	title = aw_goblins.22.t
	desc = aw_goblins.22.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = { 
			has_province_modifier = aw_goblins_1 
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}
	option = {
		name = aw_goblins.22.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_goblins_3 
			}
			remove_province_modifier = aw_goblins_3
			add_permanent_province_modifier  = {
				name = aw_goblins_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_2
			}
			remove_province_modifier = aw_goblins_2
			add_permanent_province_modifier  = {
				name = aw_goblins_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_1
			}
			remove_province_modifier = aw_goblins_1
		}
	}
}

#23 - adventurer tier down
province_event = {
	id = aw_goblins.23
	title = aw_goblins.23.t
	desc = aw_goblins.23.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { OR = { has_estate = estate_adventurers has_adventurer_reform = yes  } }
		OR = { 
			has_province_modifier = aw_goblins_1 
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}
	option = {
		name = aw_goblins.23.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_goblins_3 
			}
			remove_province_modifier = aw_goblins_3
			add_permanent_province_modifier  = {
				name = aw_goblins_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_2
			}
			remove_province_modifier = aw_goblins_2
			add_permanent_province_modifier  = {
				name = aw_goblins_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_1
			}
			remove_province_modifier = aw_goblins_1
			owner = { add_prestige_excess_to_splendour_effect = { VAL=3 } }
		}

		owner = {
			if = {
				limit = { has_estate = estate_adventurers }
				add_estate_influence_modifier = {
					estate = estate_adventurers
					desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
					duration = 3650
					influence = 5
				}
			}
		}
	}
}

#24 - monstrous nation removal
province_event = {
	id = aw_goblins.24
	title = aw_goblins.24.t
	desc = aw_goblins.24.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { has_country_modifier = monstrous_nation }

		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}
	
	option = {
 
		name = aw_goblins.20.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3

		owner = { add_prestige_excess_to_splendour_effect = { VAL=3 } }

	}
}

#25 - monstrous natural tier down. keep if you want, or just rely on removal
province_event = {
	id = aw_goblins.25
	title = aw_goblins.25.t
	desc = aw_goblins.25.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		owner = { has_country_modifier = monstrous_nation }

		OR = { 
			has_province_modifier = aw_goblins_1 
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}
	option = {
		name = aw_goblins.25.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_goblins_3 
			}
			remove_province_modifier = aw_goblins_3
			add_permanent_province_modifier  = {
				name = aw_goblins_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_2
			}
			remove_province_modifier = aw_goblins_2
			add_permanent_province_modifier  = {
				name = aw_goblins_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_1
			}
			remove_province_modifier = aw_goblins_1
			owner = { add_prestige_excess_to_splendour_effect = { VAL=3 } }
		}
	}
}

############## 30s - Tier Up ###################

#30 - natural tier up
province_event = {
	id = aw_goblins.30
	title = aw_goblins.30.t
	desc = aw_goblins.30.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = { 
			has_province_modifier = aw_goblins_1 
			has_province_modifier = aw_goblins_2
		}
	}
	option = {
		name = aw_goblins.30.a
		ai_chance = { factor = 100 }
		if = {
			limit = { 
				has_province_modifier = aw_goblins_1
			}
			remove_province_modifier = aw_goblins_1
			add_permanent_province_modifier  = {
				name = aw_goblins_2
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_2
			}
			remove_province_modifier = aw_goblins_2
			add_permanent_province_modifier  = {
				name = aw_goblins_3
				duration = -1  
			}
		}

		custom_tooltip = aw_how_to_get_more_adventurer_removal_chance_tooltip   #should be added for each increase of level
	}
}

############## 40s - Other Utility ###################

#40 - convert to pop if tolerating
province_event = {
	id = aw_goblins.40
	title = aw_goblins.40.t
	desc = aw_goblins.40.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {

		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}

		owner = { medium_tolerance_goblin_race_trigger = yes }  #obviously change this for the relevant. Note that you'll need some events that can increase tolerance for this to even fire

	}
	
	option = {
		name = aw_goblins.40.b
		ai_chance = { factor = 25 }

		owner = { large_decrease_of_goblin_tolerance_effect = yes }

	}

	option = {
		name = aw_goblins.40.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3

		add_goblin_minority_size_effect = yes

	}
}

#41 - convert to pop, monstrous subjugation
province_event = {
	id = aw_goblins.41
	title = aw_goblins.41.t
	desc = aw_goblins.41.d
	picture = COMET_SIGHTED_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {

		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}

		owner = { has_country_modifier = monstrous_nation }

	}
	option = {
		name = aw_goblins.41.a
		ai_chance = { factor = 100 }

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3

		add_goblin_minority_size_effect = yes

	}
	option = {
		name = aw_goblins.41.b
		ai_chance = { factor = 25 }

		owner = { add_prestige = 5 }

	}
}


############## 110s - Special Migration & Propagation ###################



############## 120s - Special Removal/Tier Down ###################

#120 - goblins defeated by adventurers, but ask to be pops
province_event = {
	id = aw_goblins.120
	title = aw_goblins.120.t
	desc = aw_goblins.120.d
	picture = CONQUEST_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		NOT = {
			owner = {
				OR = {
					has_country_modifier = dwarven_administration
					has_country_modifier = dwarven_military
				}
			}
		}
	}

	option = {
		name = aw_goblins.120.a
		ai_chance = { factor = 100 }

		owner = {
			if = {
				limit = { has_estate = estate_adventurers }
				add_estate_influence_modifier = {
					estate = estate_adventurers
					desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
					duration = 3650
					influence = 5
				}
			}
		}

		if = {
			limit = {
				OR = {
					has_province_modifier = aw_goblins_1
					has_province_modifier = aw_goblins_2
				}
			}
			add_goblin_minority_size_effect = yes
		}
		else_if = {
			limit = { has_province_modifier = aw_goblins_3 }
			add_goblin_minority_size_effect = yes
			add_goblin_minority_size_effect = yes
		}

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3
	}

	option = {
		name = aw_goblins.120.b
		ai_chance = { factor = 100 }

		owner = {
			if = {
				limit = { has_estate = estate_adventurers }
				add_estate_influence_modifier = {
					estate = estate_adventurers
					desc = EST_VAL_AW_RESOLVED_ADVENTURERS_WANTED_ENCOUNTER
					duration = 3650
					influence = 5
				}
			}
		}

		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3
		owner = { add_years_of_income = 0.5 }
	}
}

#121 - goblins kill themselves in a runaway chain of backstabbing
province_event = {
	id = aw_goblins.121
	title = aw_goblins.121.t
	desc = aw_goblins.121.d
	picture = MARAVI_FURNACE_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		NOT = { devastation = 81 }
	}
	option = {
		name = aw_goblins.121.a
		ai_chance = { factor = 100 }

		add_devastation = 20
		if = {
			limit = { 
				has_province_modifier = aw_goblins_2
			}
			remove_province_modifier = aw_goblins_2
			add_permanent_province_modifier  = {
				name = aw_goblins_1
				duration = -1  
			}
		}
		else_if = {
			limit = { 
				has_province_modifier = aw_goblins_3
			}
			remove_province_modifier = aw_goblins_3
			add_permanent_province_modifier  = {
				name = aw_goblins_2
				duration = -1  
			}
		}

	}
}

#122 - goblins blow themselves up
province_event = {
	id = aw_goblins.122
	title = aw_goblins.122.t
	desc = aw_goblins.122.d
	picture = VILLAGE_BURNING_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		NOT = { devastation = 21 }
		OR = {
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
		owner = { current_age = age_of_revolutions }
	}

	option = {
		name = aw_goblins.122.a
		ai_chance = { factor = 100 }

		add_devastation = 80
		remove_province_modifier = aw_goblins_1
		remove_province_modifier = aw_goblins_2
		remove_province_modifier = aw_goblins_3
	}
}

#123 - goblintide, goblins attack once they are large enough
country_event = {
	id = aw_goblins.123
	title = aw_goblins.123.t
	desc = aw_goblins.123.d
	picture = LAND_MILITARY_eventPicture

	
	is_triggered_only = yes
	
	trigger = {
		NOT = { stability = 2 }

		num_of_owned_provinces_with = {
			value = 7
			OR = {
				has_province_modifier = aw_goblins_1
				has_province_modifier = aw_goblins_2
				has_province_modifier = aw_goblins_3
			}
		}
	}

	option = {
		name = aw_goblins.123.a
		ai_chance = { factor = 100 }

		every_owned_province = { 
			limit = {
				OR = {
					has_province_modifier = aw_goblins_1
					has_province_modifier = aw_goblins_2
					has_province_modifier = aw_goblins_3
				}
			}
			
			spawn_rebels = {
				type = aw_goblins_rebels
				size = 1
			}

			remove_province_modifier = aw_goblins_1
			remove_province_modifier = aw_goblins_2
			remove_province_modifier = aw_goblins_3
		}

	}
}

#124 - dwarven extreme prejudice
country_event = {
	id = aw_goblins.124
	title = aw_goblins.124.t
	desc = aw_goblins.124.d
	picture = SUFFERING_CHINESE_VILLAGE_eventPicture
	
	
	is_triggered_only = yes
	
	trigger = {
		stability = -2

		num_of_owned_provinces_with = {
			value = 3
			OR = {
				has_province_modifier = aw_goblins_1
				has_province_modifier = aw_goblins_2
				has_province_modifier = aw_goblins_3
			}
		}
		OR = {
			has_country_modifier = dwarven_administration
			has_country_modifier = dwarven_military
		}

	}

	option = {
		name = aw_goblins.124.a
		ai_chance = { factor = 100 }

		add_adm_power = -75
		add_mil_power = -75
		every_owned_province = { 
			limit = {
				OR = {
					has_province_modifier = aw_goblins_1
					has_province_modifier = aw_goblins_2
					has_province_modifier = aw_goblins_3
				}
			}

			remove_province_modifier = aw_goblins_1
			remove_province_modifier = aw_goblins_2
			remove_province_modifier = aw_goblins_3
		}
	}

	option = {
		name = aw_goblins.124.b
		ai_chance = { factor = 100 }

		if = {
			limit = {
				num_of_owned_provinces_with = {
					value = 6
					OR = {
						has_province_modifier = aw_goblins_1
						has_province_modifier = aw_goblins_2
						has_province_modifier = aw_goblins_3
					}
				}
			}
			add_stability = -2
		}
		else = { add_stability = -1 }
	}
}


############## 130s - Special Tier Up ###################
#130 - goblin baby boom
province_event = {
	id = aw_goblins.130
	title = aw_goblins.130.t
	desc = aw_goblins.130.d
	picture = EUROPEAN_REFUGEES_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
		}
	}

	option = {
		name = aw_goblins.130.a
		ai_chance = { factor = 100 }
		trigger = { has_province_modifier = aw_goblins_1 }

		remove_province_modifier = aw_goblins_1
		add_permanent_province_modifier  = {
			name = aw_goblins_3
			duration = -1  
		}
	}

	option = {
		name = aw_goblins.130.b
		ai_chance = { factor = 100 }
		trigger = { has_province_modifier = aw_goblins_2 }

		remove_province_modifier = aw_goblins_2
		add_permanent_province_modifier  = {
			name = aw_goblins_3
			duration = -1  
		}

		spawn_rebels = {
			type = aw_goblins_rebels
			size = 1
		}
	}
}

#131 - they're coming out of the walls!
province_event = {
	id = aw_goblins.131
	title = aw_goblins.131.t
	desc = aw_goblins.131.d
	picture = EUROPEAN_REFUGEES_eventPicture
	goto = ROOT

	is_triggered_only = yes

	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
		}
		OR = {
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	}

	option = {
		name = aw_goblins.131.a
		ai_chance = { factor = 100 }
		if = {
			limit = { has_province_modifier = aw_goblins_1 }
			remove_province_modifier = aw_goblins_1
			add_permanent_province_modifier  = {
				name = aw_goblins_3
				duration = -1  
			}
		}
		else_if = {
			limit = { has_province_modifier = aw_goblins_2 }
			remove_province_modifier = aw_goblins_2
			add_permanent_province_modifier  = {
				name = aw_goblins_3
				duration = -1  
			}
			spawn_rebels = {
				type = aw_goblins_rebels
				size = 1
			}
		}
	}
}

############## 140s - Other Special Utility ###################




############## 200s - Special Flavour ###################
#200 goblins dig up local farms
province_event = {
	id = aw_goblins.200
	title = aw_goblins.200.t
	desc = aw_goblins.200.d
	picture = FARMING_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		NOT = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
				has_terrain = dwarven_road
				has_terrain = cavern
			}
		}
	}

	#determine if damage was done
	immediate = {
		hidden_effect = {
			random_list = {
				60 = {
					REB = { set_variable = { which = goblin_tax value = 0 } }
				}
				40 = {
					REB = { set_variable = { which = goblin_tax value = 1 } }
				}
			}
		}
	}

	#no real harm done
	option = {
		name = aw_goblins.200.a
		ai_chance = { factor = 100 }
		trigger = {
			OR = {
				NOT = { REB = { check_variable = { which = goblin_tax value = 1 } } }
				NOT = { base_tax = 2 }
			}
		}
		add_devastation = 5
	}

	#harm was done, how does player respond?
	option = {
		name = aw_goblins.200.b
		ai_chance = { factor = 80 }
		trigger = {
			REB = { check_variable = { which = goblin_tax value = 1 } }
			base_tax = 2
		}

		add_base_tax = -1
	}

	option = {
		name = aw_goblins.200.c
		ai_chance = { factor = 20 }
		trigger = {
			NOT = { REB = { check_variable = { which = goblin_tax value = 1 } } }
			NOT = { devastation = 71 }
			base_tax = 2
		}

		add_devastation = 30
	}
}

#201 - goblins cause small explosion
province_event = {
	id = aw_goblins.201
	title = aw_goblins.201.t
	desc = aw_goblins.201.d
	picture = VILLAGE_BURNING_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		NOT = { devastation = 51 }
	}

	option = {
		name = aw_goblins.201.a
		ai_chance = { factor = 100 }

		add_devastation = 50
	}
}

#202 - goblins find gems underground
province_event = {
	id = aw_goblins.202
	title = aw_goblins.202.t
	desc = aw_goblins.202.d
	picture = IMPORTANT_STATUE_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
		}
		OR = {
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	}

	option = {
		name = aw_goblins.202.a
		ai_chance = { factor = 30 }

		owner = {
			add_mil_power = -20
			add_years_of_income = 0.5
		}

		random = {
			chance = 25
			if = {
				limit = { 
					has_province_modifier = aw_goblins_3 
				}
				remove_province_modifier = aw_goblins_3
				add_permanent_province_modifier  = {
					name = aw_goblins_2
					duration = -1  
				}
			}
			else_if = {
				limit = { 
					has_province_modifier = aw_goblins_2
				}
				remove_province_modifier = aw_goblins_2
				add_permanent_province_modifier  = {
					name = aw_goblins_1
					duration = -1  
				}
			}
			else_if = {
				limit = { 
					has_province_modifier = aw_goblins_1
				}
				remove_province_modifier = aw_goblins_1
			}
		}
	}

	option = {
		name = aw_goblins.202.b
		ai_chance = { factor = 70 }

		owner = {
			add_prestige = -5
		}
	}
}

#203 - villagers provoke goblins
province_event = {
	id = aw_goblins.203
	title = aw_goblins.203.t
	desc = aw_goblins.203.d
	picture = ANGRY_MOB_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}

	option = {
		name = aw_goblins.203.a
		ai_chance = { factor = 100 }

		spawn_rebels = {
			type = aw_goblins_rebels
			size = 2
		}
	}
}

#204 - goblins kill local family in raid
province_event = {
	id = aw_goblins.204
	title = aw_goblins.204.t
	desc = aw_goblins.204.d
	picture = NOBLE_ESTATE_DEMANDS_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		NOT = {
			OR = {
				has_terrain = dwarven_hold
				has_terrain = dwarven_hold_surface
				has_terrain = dwarven_road
				has_terrain = cavern
			}
		}
		owner = { has_estate = estate_nobles }
	}

	option = {
		name = aw_goblins.204.a
		ai_chance = { factor = 100 }
		
		owner = { add_treasury = -100 }
		owner = {
			add_estate_loyalty = {
				estate = estate_nobles
				loyalty = 10
			}
		}
	}

	option = {
		name = aw_goblins.204.b
		ai_chance = { factor = 100 }

		owner = {
			add_legitimacy = -10
			add_estate_loyalty = {
				estate = estate_nobles
				loyalty = -10
			}
		}
	}
}

#205 - goblins cause cave in
province_event = {
	id = aw_goblins.205
	title = aw_goblins.205.t
	desc = aw_goblins.205.d
	picture = COUNTRY_COLLAPSE_eventPicture
	goto = ROOT

	is_triggered_only = yes

	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
		OR = {
			has_terrain = dwarven_hold
			has_terrain = dwarven_hold_surface
			has_terrain = dwarven_road
			has_terrain = cavern
		}
	}

	option = {
		name = aw_goblins.205.a
		ai_chance = { factor = 100 }

		owner = { add_yearly_manpower = -0.5 }
		if = {
			limit = { devastation = 61 }
			add_devastation = 40
		}
	}

	option = {
		name = aw_goblins.205.b
		ai_chance = { factor = 100 }

		owner = { add_years_of_income = -0.5 }
		if = {
			limit = { devastation = 61 }
			add_devastation = 40
		}
	}
}

#206 - goblins ransack local brewery
province_event = {
	id = aw_goblins.206
	title = aw_goblins.206.t
	desc = aw_goblins.206.d
	picture = not_disciplined_soldiers
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_1
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}

	option = {
		name = aw_goblins.206.a
		ai_chance = { factor = 100 }

		if = {
			limit = { devastation = 81 }
			add_devastation = 20
		}

		spawn_rebels = {
			type = aw_goblins_rebels
			size = 2
		}
	}
}

#207 - goblin disrupt realm trade routes
province_event = {
	id = aw_goblins.207
	title = aw_goblins.207.t
	desc = aw_goblins.207.d
	picture = BORDER_TENSION_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = {
		OR = {
			has_province_modifier = aw_goblins_2
			has_province_modifier = aw_goblins_3
		}
	}

	option = {
		name = aw_goblins.207.a
		ai_chance = { factor = 100 }

		owner = {
			add_country_modifier = {
				name = aw_goblins_trade_disruption
				duration = 1825
			}
		}
	}
}

#208 - Horde overruns countryside. incur negative modifier on countryside
province_event = {
	id = aw_goblins.208
	title = aw_goblins.208.t
	desc = aw_goblins.208.d
	picture = BORDER_TENSION_eventPicture
	goto = ROOT
	
	is_triggered_only = yes
	
	trigger = { has_province_modifier = aw_goblins_3 }

	option = {
		name = aw_goblins.208.a
		ai_chance = { factor = 100 }

		area = {
			add_permanent_province_modifier = {
				name = aw_goblins_overrun
				duration = 1825
			}
		}
	}
}
